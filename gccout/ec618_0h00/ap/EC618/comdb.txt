DbVersion
1943822670,100
<end>
BuildInfo
The current data file was built by the Application Ver. 2.1.60.136, Tue Nov 28 15:54:20 2023
<end>
EnumVals
0,2048,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasMainEntrance_1,P_ERROR,swLogPrintf("Incorrect ICS stage ( %d ) for new euArfcn arranged for ICS MEAS ");
0,6143,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasFrsContProc_1,P_INFO,swLogPrintf("ICS_STAGE_FRS_MEAS_CONN is continued without TASK_CFG ");
0,8191,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasLrsContProc_1,P_INFO,swLogPrintf("ICS_STAGE_LRS_MEAS_CONN is continued without TASK_CFG ");
0,10239,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasSssContProc_1,P_INFO,swLogPrintf("ICS_STAGE_SSS_MEAS is continued without TASK_CFG ");
0,10496,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasPostProc_1,P_INFO,swLogPrintf("cell delay ( %d ) of TDD intra cell ( PCI = %d ) is out of range ");
0,14335,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasPostProc_2,P_WARNING,swLogPrintf("skip post process of ICS MEAS because ICS_STAGE has been reset ");
0,16383,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasPssCandTimingRefine_1,P_INFO,swLogPrintf("Adjust PSS_POS to next half-frame ");
0,18431,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasIntProc_1,P_WARNING,swLogPrintf("ICS_STAGE_LRS_MEAS_CONN failed ");
0,18432,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDelAdjFreqAftMibDecoded_0,P_INFO,swLogPrintf("Delete EARFCN = %d ");
0,20480,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDelAdjFreqAftMibDecoded_1,P_INFO,swLogPrintf("Delete EARFCN = %d ");
0,23040,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyCellDetectedStore_0,P_INFO,swLogPrintf("New Cell ( %d , %d ) detected! cellNum = %d ");
0,26623,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyCellDetectedStore_1,P_WARNING,swLogPrintf("pCellDetected reached PHY_ICS_CELL_REPORTED_NUM! ");
0,26880,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyCellDetectedCheck_0,P_SIG,swLogPrintf("Cell ( %d , %d ) had beed reported , skip this time! ");
0,28928,0,0,PHY_ONLINE,PHY_ICS_MODULE,phyFreqListUpdt4DCXO,P_WARNING,swLogPrintf("DCXO used in extreme H / L temperature !!! , Current Temperature = %d , Cx Reliability = %d ");
0,31488,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMsgValidityCheck_0,P_ERROR,swLogPrintf("CellSearchReq message check fail! numOfFreq = %d , numOfBand = %d , workMode = %d , phyCellId = %d ");
0,34815,0,0,PHY_ONLINE,PHY_ICS_MODULE,phyIcsHwTaskAdd_0,P_INFO,swLogPrintf("Cancel RSC task when close to Paging occassion! ");
0,36863,0,0,PHY_ONLINE,PHY_ICS_MODULE,phyIcsHwTaskAdd_2,P_WARNING,swLogPrintf("Ics Stage error when add ICS task! ");
0,37633,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_0,P_SIG,swLogPrintf("Start Cell Search: %s , numOfFreq = %d , numOfBand = %d , firstFreq = %d ");
0,39168,0,0,PHY_ONLINE,PHY_ICS_MODULE,IcsMsgProcess_1,P_ERROR,swLogPrintf("Too Many Band requested! numOfBand = %d , Separated BandNum = %d ");
0,40960,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_1,P_SIG,swLogPrintf("Start Fast ICS for EARFCN = %d ");
0,43008,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_2,P_SIG,swLogPrintf("Start Band Scan , EARFCN = %d ");
0,45836,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_7,P_SIG,swLogPrintf("Cell ( %d %d ) Detected! cpType = %s , SNR Level = %s ");
0,47872,0,0,PHY_ONLINE,PHY_ICS_MODULE,FreqScanInScoreList_1,P_INFO,swLogPrintf("Continue Frequency Scan in Score List [ %d ] , Current EARFCN: %d , Score = %d , numOfFreq = %d ");
0,49664,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_4_0,P_INFO,swLogPrintf("Retry preferred EARFCN: %d ( index:%d ) , currFreqIndex = %d ");
0,51456,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_4,P_SIG,swLogPrintf("Skip BandScan from start EARFCN: %d , maxScore = %d ");
0,53504,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_5,P_SIG,swLogPrintf("Start Frequency Scan in Band , Current EARFCN: %d , maxScore = %d ");
0,57343,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_6,P_SIG,swLogPrintf("Frequency Scan in Band Finished!!! ");
0,57344,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsCalcInvSqrtVar_2,P_INFO,swLogPrintf("sumCov < = sumPeakPow in workMode %d , ");
0,59392,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsCalcInvSqrtVar_3,P_INFO,swLogPrintf("wrong: sumCov < = powerPeak0 in workMode %d ");
0,61440,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsCalcInvSqrtVar_1,P_INFO,swLogPrintf("meanNoisePow < = meanNoise^2 in workMode %d ");
0,63744,0,0,PHY_ONLINE,PHY_ICS_MODULE,RscFreqListReSort,P_INFO,swLogPrintf("Start Resort Score List by FRS after RSC , numOfFreq = %d , first EARFCN ( by RSC ) = %d ");
0,66048,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_3_0,P_SIG,swLogPrintf("Start Frequency Scan in Score List , First EARFCN: %d , Score = %d , numOfFreq = %d ");
0,68096,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_3,P_SIG,swLogPrintf("Start Frequency Scan in Score List , First EARFCN: %d , Score = %d , numOfFreq = %d ");
0,71679,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_8,P_SIG,swLogPrintf("ICS High Level Frequency Done! ");
0,73727,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_9,P_ERROR,swLogPrintf("ICS High Level Frequency Done Report for BPLMN! ");
0,75775,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsWaitTimerExpiredProc_0,P_SIG,swLogPrintf("Delay ICS when icsType is PHY_ICS_TYPE_REDIRECT_DELAY! ");
0,77823,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_0,P_WARNING,swLogPrintf("Unexpected DRX CS Req ");
0,79871,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_10,P_WARNING,swLogPrintf("PLMN Start with PCH task adding in advance ! ");
0,81919,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_11,P_WARNING,swLogPrintf("PLMN Start with PCH timer expired ! ");
0,83967,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_1,P_WARNING,swLogPrintf("PLMN Start signal received and handled when previous one is pending! ");
0,86015,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_2,P_WARNING,swLogPrintf("PLMN Start signal received and pended when previous one is pending! ");
0,88063,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxNextCsReqProcess_0,P_INFO,swLogPrintf("Start DRX Next Cell Search ");
0,90111,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxNextCsReqProcess_1,P_INFO,swLogPrintf("DRX Next Cell Search Pending ");
0,92159,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_3,P_SIG,swLogPrintf("Pending PLMN start after paging cycle! ");
0,94207,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_4,P_ERROR,swLogPrintf("drxNextCsFlag = = 1 when PLMN restarted after paging cycle! ");
0,96255,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_5,P_WARNING,swLogPrintf("PLMN STOP signal received when no PLMN is ongoing! ");
0,98303,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_6,P_SIG,swLogPrintf("PLMN STOP should wait for ICS INT! ");
0,100351,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_7,P_SIG,swLogPrintf("PLMN Stop signal handled! ");
0,102399,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_8,P_WARNING,swLogPrintf("Previous PLMN has not been started when STOPPED! ");
0,104447,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_9,P_WARNING,swLogPrintf("Pending PLMN start signal need to handle in next paging cycle! ");
0,104960,0,0,PHY_ONLINE,PHY_ICS_MODULE,phyRscScoring_0,P_INFO,swLogPrintf("centerEarfcn = %d , earfcnNum = %d , FeLoss = %d ");
1024,2099456,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_Sr,P_INFO,swLogPrintf("UL HARQ ( SchedulingRequest ) : SR activeTime = 0x%X , srCounter = %d ");
1024,2101760,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyRarTaCmd_0,P_WARNING,swLogPrintf("Invalid TA command received value = %d , counter = %d , currTA = %d ");
1024,2103296,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyRarTaCmd_1,P_WARNING,swLogPrintf("TA command received in RAR with large value ( %d ) ! ");
1024,2107391,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyAnCqiCollisionProcOverPucch1,P_INFO,swLogPrintf("AN_CQI Collision Proc ");
1024,2107392,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyAnRepTimesMaintain1,P_INFO,swLogPrintf("AN Rep Times Maintain , ackNackRepTimes = %d ");
1024,2109952,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxAprdCsiProc_0,P_ERROR,swLogPrintf("AprdCsi arrived later currTime ( hfnSfnSbn = 0x%X , spn = 0x%X ) , transTime = 0x%X ");
1024,2113535,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhySrsFindFirstUlSf_0,P_WARNING,swLogPrintf("The first SF should be UL when Prd > 5 ms ");
1024,2113536,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhySrsUeSpecificParamCheck_0,P_WARNING,swLogPrintf("No Available Sf For Configured SRS Subframe Offset , isPrdSrs = %d ");
1024,2115840,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhySrsFreqResAllocUpPts_0,P_INFO,swLogPrintf("SRS Symbol Flag Changed! , newSymFlag = 0x%x , symFlag = 0x%x ");
1024,2117632,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhySrsReqInfoInform_0,P_WARNING,swLogPrintf("No apSRS Configured , trigSource = %d ");
1024,2120192,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTaCheck_1,P_WARNING,swLogPrintf("Ta is out of range for TDD special subframe. dwPts = %d , ta = %d , init = %d ! ");
1024,2121984,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxHandleDlExtendRev_1,P_WARNING,swLogPrintf("Tx Tasks canceled due to Extended dwpts received. maxOsNum = %d , canceled Task = %d! ");
1024,2123776,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTtiBundingProc_1,P_WARNING,swLogPrintf("firstTxHarqId doesn ' t match schdHarqId ( %d ) ");
1024,2127106,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_Phich0,P_INFO,swLogPrintf("UL HARQ ( PHICH INFO ) : harqId = %d , HI = %s , mcs = %d , prb = %d , tbSizeInBytes = %d , currTxNb = %d ");
1024,2129154,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_Phich1,P_INFO,swLogPrintf("UL HARQ ( PHICH INFO ) : harqId = %d , HI = %s , mcs = %d , prb = %d , tbSizeInBytes = %d , currTxNb = %d ");
1024,2131967,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_DciGrantParse_0,P_WARNING,swLogPrintf("Csi Request but no APR CSI Para Configured ");
1024,2132992,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_DciInfo0,P_INFO,swLogPrintf("UL HARQ ( DCI0 Info ) : harqId = %d , mcs = %d , prb = %d , tbSizeInBytes = %d , transmissionType = %d ");
1024,2135040,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_DciInfo1,P_INFO,swLogPrintf("UL HARQ ( DCI0 Info ) : harqId = %d , mcs = %d , prb = %d , tbSizeInBytes = %d , transmissionType = %d ");
1024,2136832,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_DciInfo2,P_WARNING,swLogPrintf("UL DCI detection invalid!!! crnti = %e<PhyDci0DebugInfo> , spsrnti = %e<PhyDci0DebugInfo> , tmprnti = %e<PhyDci0DebugInfo> , bakcrnti = %e<PhyDci0DebugInfo> ");
1024,2140159,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxTpuTimer4Cfg_0,P_INFO,swLogPrintf("Stop TX RTN ");
1024,2142207,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxTpuTimer4Cfg_2,P_INFO,swLogPrintf("TX RTN is stopped , no need to stop again! ");
1024,2144255,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxTpuTimer4Cfg_1,P_INFO,swLogPrintf("Start TX RTN ");
1024,2146303,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxTpuTimer4Cfg_3,P_INFO,swLogPrintf("TX RTN is started , no need to start again! ");
1024,2147072,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyTxInfoCreate_0,P_ERROR,swLogPrintf("Tx Related Dynamic Data are not PNULL when IDLE2CONN , PhyDynMemBmpGet ( ) ->bmpVal = 0x%X , gpPhyUlStaticPara = 0x%X , gpPhyTxSchdInfo = 0x%X , gpPhyTxHwParam = 0x%X ");
1024,2148864,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyTxInfoCreate_1,P_ERROR,swLogPrintf("TX dynamic mem allocate fail! gpPhyUlStaticPara = 0x%X , gpPhyTxSchdInfo = 0x%X , gpPhyTxHwParam = 0x%X ");
1024,2151168,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyTxInfoRelease,P_ERROR,swLogPrintf("Tx Related Dynamic Data are PNULL when CONN2IDLE , PhyDynMemBmpGet ( ) ->bmpVal = 0x%X , gpPhyUlStaticPara = 0x%X , gpPhyTxSchdInfo = 0x%X , gpPhyTxHwParam = 0x%X ");
1024,2152448,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxScheduleWrapper_0,P_WARNING,swLogPrintf("TxScheduleWrapper re-trigger for hfnSfnSbn = 0x%X ");
1024,2154752,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxScheduleWrapper_1,P_ERROR,swLogPrintf("Miss calling of TxScheduleWrapper for txHfnSfnSbn = 0x%X , missed subframe num = %d ");
1024,2156800,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxScheduler_0,P_WARNING,swLogPrintf("chanMode = %d is cannceled due to large tailZeros = %d! ");
1024,2159616,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxPowerPrint_1,P_INFO,swLogPrintf("type = 0x%x ( Bit3:SRS , Bit2:PUCCH , Bit1:PUSCH , Bit0:PRACH ) , SrsPower = %d ( dBm ) , PucchPower = %d ( dBm ) , PuschPower = %d ( dBm ) , PrachPower = %d ( dBm ) ");
1024,2161664,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxPowerPrint_0,P_INFO,swLogPrintf("type = 0x%x ( Bit3:SRS , Bit2:PUCCH , Bit1:PUSCH , Bit0:PRACH ) , SrsPower = %d ( dBm ) , PucchPower = %d ( dBm ) , PuschPower = %d ( dBm ) , PrachPower = %d ( dBm ) ");
1024,2164735,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxCancelAll_0,P_INFO,swLogPrintf("PhyTxCancelAll! ");
2048,4196352,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,DcCheckError,P_ERROR,swLogPrintf("DC: max = %d ");
2048,4198400,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,DcCheckWarn,P_WARNING,swLogPrintf("DC: max = %d ");
2048,4200448,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,DcCheckSig,P_SIG,swLogPrintf("DC: max = %d ");
2048,4202496,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,DcCheckInfo,P_INFO,swLogPrintf("DC: max = %d ");
2048,4204544,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,WarnNDetSpurN0,P_WARNING,swLogPrintf("SpurEst: nDetSpur = %d @ PhyRxDFENotchPreCalc ( ) ");
2048,4206592,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,WarnNDetSpurN1,P_WARNING,swLogPrintf("SpurEst: nDetSpur = %d @ PhyRxDFENotchPreCalc ( ) ");
2048,4210687,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,PhyRxDFESpurEstProc_0,P_WARNING,swLogPrintf("skip RxDFE spur est. process ");
2048,4210688,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,PhyRxDFESpurEstProc_1,P_INFO,swLogPrintf("Add RxDFE algorithm para. reconfiguration with startTime of 0x%X ");
2048,4212736,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,WarnNDetSpurS0,P_WARNING,swLogPrintf("SpurEst: nDetSpur = %d @ PhyRxDFESpurEstProc ( ) ");
2048,4214784,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,RcCalibWarn,P_WARNING,swLogPrintf("RC Calib: finalErr = %d / 256 , which is too great. ");
3072,6295551,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeHwConfig_2,P_INFO,swLogPrintf("no CE registers need be configured in TASK CFG INT ");
3072,6297599,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcHoldRelease_1,P_INFO,swLogPrintf("AXC hold is released ");
3072,6299647,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeSpurEstProc_1,P_WARNING,swLogPrintf("skip spurEst process because spurAccuNum is 0 ");
3072,6301695,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeHwResultsRead_1,P_ERROR,swLogPrintf("unexpected axcHold4SwRead with value zero in CEAXC ISR ");
3072,6303743,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcPostEarlyReturnCheck_1,P_WARNING,swLogPrintf("skip CeAxc post process if mac reset process is ongoing ");
3072,6303744,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcPostEarlyReturnCheck_2,P_WARNING,swLogPrintf("skip CeAxc post process because that of previous ISR ( HFNSFNSBN = 0x%X ) has NOT been done ");
3072,6305792,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcPostEarlyReturnCheck_3,P_INFO,swLogPrintf("skip CeAxc post process because that of previous ISR ( HFNSFNSBN = 0x%X ) has just been done ");
3072,6309887,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcExtraProc4Cdrx_1,P_INFO,swLogPrintf("extra CEAXC process for CDRX will be triggered ");
4096,8390656,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiSwTrgConfig_1,P_INFO,swLogPrintf("CSI is triggered by SW with configured parameter 0x%X ");
4096,8394751,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiParaInit_1,P_INFO,swLogPrintf("skip CSI reconfiguration ");
4096,8395264,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiContCnfgProc_aprd,P_ERROR,swLogPrintf("Invalid aperiodic CSI in pending list when configuring continuous CSI calculation ( calcTime = 0x%X , ulTime = 0x%X , currTime = 0x%X ) ");
4096,8397312,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiContCnfgProc_prd,P_ERROR,swLogPrintf("Invalid periodic CSI in pending list when configuring continuous CSI calculation ( calcTime = 0x%X , ulTime = 0x%X , currTime = 0x%X ) ");
4096,8400895,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiTypeValidityCheck_0,P_WARNING,swLogPrintf("skip CSI INT during HO MIB process ");
4096,8401152,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiTypeValidityCheck_1,P_INFO,swLogPrintf("unexpected CSI HW results ( SW-%d , HW-%d ) ");
4096,8404991,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiIsr_1,P_INFO,swLogPrintf("txTime of PRD_CSI is from SW ");
4096,8404992,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiCqiFiltOnOffCtrl_1,P_INFO,swLogPrintf("CQI SW filter on-off status changed to %d ");
4096,8407296,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiDci0InfoGet_0,P_ERROR,swLogPrintf("invalid 2 -bit CSI request ( 0x%X ) of subframe set %d in DCI0 ");
4096,8409088,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiDci0InfoGet_3,P_WARNING,swLogPrintf("existed RAR CSI > new DCI0 CSI ( SET%d ) ");
4096,8413183,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiDci0InfoGet_4,P_WARNING,swLogPrintf("existed DCI0 CSI ( SET0 ) > new DCI0 CSI ( SET1 ) ");
4096,8415231,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiDci0InfoGet_5,P_WARNING,swLogPrintf("new DCI0 CSI ( SET0 ) > existed DCI0 CSI ( SET1 ) ");
4096,8417279,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiPeriodicCalcInsert_1,P_INFO,swLogPrintf("transmission time of Inserted periodic CSI conflicted with that of existed aperiodic one ");
4096,8419327,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiPeriodicCalcInsert_2,P_INFO,swLogPrintf("transmission time of Inserted periodic CSI conflicted with RX gap ");
4096,8421375,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRarInfoGet_1,P_WARNING,swLogPrintf("aperiodic CSI request was scheduled in RAR ");
4096,8423423,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRarInfoGet_4,P_WARNING,swLogPrintf("new RAR CSI > existed RAR CSI ");
4096,8423424,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRarInfoGet_5,P_WARNING,swLogPrintf("new RAR CSI > existed DCI0 CSI ( SET%d ) ");
4096,8427519,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRxGapCalcScan_1,P_WARNING,swLogPrintf("too many periodic CSI calculation in the pending list ");
4096,8429567,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRxGapCalcScan_2,P_WARNING,swLogPrintf("too many periodic CSI calculation in RX gap ");
4096,8429568,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRxGapCalcScan_3,P_INFO,swLogPrintf("%d periodic CSI calculation will be executed for RX gap ");
4096,8433663,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRxGapCalcScan_4,P_WARNING,swLogPrintf("pending list of periodic CSI calculation is full ");
5120,10487808,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDlHarqTypeInit1,P_WARNING,swLogPrintf("L2Buffer not process yet and harqId is %d ");
5120,10490112,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDlHarqTypeInit0,P_WARNING,swLogPrintf("dec Isr triggered and task not finished , harqId0 = %d and harqId1 = %d ");
5120,10493951,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhySaveNormalGrant2Harq_SPS,P_VALUE,swLogPrintf("invalid SPS retransmission or false DCI ");
5120,10494464,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DciInfo,P_INFO,swLogPrintf("DL HARQ ( Ack2Nack ) : harqId = %d , mcs = %d , prb = %d ");
5120,10498047,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DciInfo1,P_WARNING,swLogPrintf("URS PRBs collide with PBCH or SS , just skip decoding ");
5120,10500095,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDecDynamicConfig_OneCB,P_WARNING,swLogPrintf("oneCb codeRate > 94 % ");
5120,10502143,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDecDynamicConfig_NormalCB,P_WARNING,swLogPrintf("normal CB codeRate > 94 % ");
5120,10502400,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDecApplyL2Buffer,P_ERROR,swLogPrintf("No L2Buffer for DL data , harqId is %d and fail cnt is %d ");
5120,10505504,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DecInfo,P_INFO,swLogPrintf("DL HARQ ( DEC Info ) : harqId = %d , mcs = %d , prb = %d , retxCnt = %d , tbSizeInBytes = %d , crc = %s ");
6144,12585216,0,0,PHY_ONLINE,PHY_DCH_MODULE,demRegPrint,P_SIG,swLogPrintf("DEM status is 0x%X , 0x%X ");
6144,12589055,0,0,PHY_ONLINE,PHY_DCH_MODULE,PhySaveOneCbGrant2Harq,P_INFO,swLogPrintf("invalid oneCb , discard it ");
7168,14682368,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyTestCaseFor83128,P_WARNING,swLogPrintf("debug for CT case 8.300000 .1.28 with CchEna = %d , DchEna = %d ");
7168,14686207,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyCchBasicInfoGet,P_WARNING,swLogPrintf("ul BW larger than dl BW ");
7168,14688255,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyCchLlrFwlAdjust_1,P_INFO,swLogPrintf("adjust llr FWL of CCH ");
7168,14690303,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyPhichRemoveFwl_0,P_WARNING,swLogPrintf("PHICH0 hw result error! ");
7168,14692351,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyPhichRemoveFwl_1,P_WARNING,swLogPrintf("PHICH1 hw result error! ");
7168,14692608,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyCchTask_0,P_WARNING,swLogPrintf("Received PDCCH order when RA is ongoing! raCause = %d , raStage = %d ");
7168,14696447,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciCreditCheck,P_VALUE,swLogPrintf("snr change >6 dB , init credit value ");
7168,14698495,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_HW20,P_VALUE,swLogPrintf("scNcFlag error! ");
7168,14700543,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_HW00,P_WARNING,swLogPrintf("receive grant ( not SI / P ) in CDRX inactive! ");
7168,14700800,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_HW0,P_SIG,swLogPrintf("PDCCH ORDER detected , DCI is [ 0x%X , 0x%X ] ");
7168,14704639,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_SI1,P_INFO,swLogPrintf("SI received and not decode yet1 ");
7168,14706687,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_SI2,P_INFO,swLogPrintf("SI received and not decode yet2 ");
7168,14708735,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_HW1,P_WARNING,swLogPrintf("invalid tempCrnti DL / UL grant ");
7168,14710783,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_RA1,P_INFO,swLogPrintf("RAR received and not decode yet1 ");
7168,14712831,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_RA2,P_INFO,swLogPrintf("RAR received and not decode yet2 ");
7168,14714879,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_RA3,P_WARNING,swLogPrintf("Duplicated RAR Received! ");
7168,14716416,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciHwInfoGet,P_VALUE,swLogPrintf("DCI discard Hw info is [ 0 ] : 0x%X , [ 1 ] : 0x%X , [ 2 ] : 0x%X , creditValue = 0x%X , threshold = 0x%X , cbsizeType = %d , cceLvl = %d ");
7168,14718975,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyParseFormat3Info_0,P_ERROR,swLogPrintf("PUCCH TPC index error! ");
7168,14721023,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseSpsActive,P_SIG,swLogPrintf("SPS grant active ");
7168,14723071,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseSpsRelease,P_SIG,swLogPrintf("SPS grant release ");
7168,14725119,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciPadingDataCheck0,P_VALUE,swLogPrintf("pading not 0 , discard it ");
7168,14725376,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciPadingDataCheck1,P_VALUE,swLogPrintf("pading length < 0 , dciData = 0x%x , padinglength = %d ");
7168,14727424,0,0,PHY_ONLINE,PHY_CCH_MODULE,PHY_CCH_LOG_DCI_PARA_ERR1,P_WARNING,swLogPrintf("Cell parameter mismatch1 , data1 = 0x%X and data2 = 0x%X ");
7168,14731263,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1ASb,P_WARNING,swLogPrintf("distributed type2 resource PRB too large ( < 50 RB ) ");
7168,14733311,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1AWb,P_WARNING,swLogPrintf("distributed type2 resource PRB too large ( > = 50 RB ) ");
7168,14735359,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1BSb,P_WARNING,swLogPrintf("distributed type2 resource PRB too large ( < 50 RB ) ");
7168,14737407,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1BWb,P_WARNING,swLogPrintf("distributed type2 resource PRB too large ( > = 50 RB ) ");
7168,14739455,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2,P_WARNING,swLogPrintf("format2 two CW all enable or disable ");
7168,14741503,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt21,P_WARNING,swLogPrintf("pPhyDciParsdInfo->tpmiInfo error ");
7168,14743551,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2A,P_WARNING,swLogPrintf("format2 two CW all enable or disable ");
7168,14745599,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2A1,P_WARNING,swLogPrintf("pPhyDciParsdInfo->tpmiInfo error ");
7168,14747647,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2B,P_WARNING,swLogPrintf("format2 two CW all enable or disable ");
7168,14749695,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2C,P_WARNING,swLogPrintf("format2 two CW all enable or disable ");
7168,14751743,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyParseOneCbValidation,P_VALUE,swLogPrintf("special subframe ");
7168,14753791,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyParseOneCbValidation1,P_VALUE,swLogPrintf("mbsfn subframe ");
7168,14754048,0,0,PHY_ONLINE,PHY_CCH_MODULE,PHY_CCH_LOG_DCI_PARA_ERR,P_WARNING,swLogPrintf("Cell parameter mismatch , data1 = 0x%X and data2 = 0x%X ");
7168,14757887,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1AMcs,P_WARNING,swLogPrintf("oneCb grant with format1A too large ");
7168,14759935,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDlDciValidation_TBSIZE,P_WARNING,swLogPrintf("tbsize too large or false DCI ");
7168,14761983,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseDiscard_2,P_VALUE,swLogPrintf("discard a new grant with RV not 0 ");
7168,14764031,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseDiscard_0,P_VALUE,swLogPrintf("maybe DL grant of newTrans missed or false DCI detected ");
7168,14764032,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseDiscard_1,P_INFO,swLogPrintf("dci discard dueto 0x%X ");
7168,14768127,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyApiDumpTest,P_VALUE,swLogPrintf("start Api Dump test ");
9216,18876672,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAfcNormFactorCalc_1,P_ERROR,swLogPrintf("Unexpected numerator ( %d ) or denominator ( %d ) in AFC normalized factor calculation ");
9216,18880511,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAfcOffsetCalc_1,P_ERROR,swLogPrintf("Incorrect normFactor when calculating freqOffset ");
9216,18882559,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAfcAdjFreqOfstDeterm_1,P_ERROR,swLogPrintf("no valid raw result for determining freqOfstAdj of HST mode ");
9216,18882560,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcAdjustProc_0,P_WARNING,swLogPrintf("RxTimingAdjust while TxTiming do not adjust! rxAdjAcc = %d ");
9216,18884608,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcPostProc_1,P_WARNING,swLogPrintf("clear previous non-zero ATC adjusted info. ( 0x%X ) ");
9216,18888703,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcStatusGetInTaskCfg_11,P_WARNING,swLogPrintf("CE_BIT of ATC is delayed to RX_RESUME after 1 st inter PSS MEAS STEP1 ");
9216,18890751,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcStatusGetInTaskCfg_12,P_WARNING,swLogPrintf("CE_BIT of ATC is delayed to SCELL HW tasks in CDRX INACT duration ");
9216,18892799,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcStatusGetInTaskCfg_21,P_WARNING,swLogPrintf("timeOfstAdj of sys_RT has NOT been loaded when ICS flow starts to work ");
9216,18894847,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcStatusGetInTaskCfg_22,P_WARNING,swLogPrintf("only timeOfstAdj of CE has NOT been taken effect when ICS flow starts to work ");
9216,18896895,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAxcSpdEstDataStore_1,P_WARNING,swLogPrintf("new speed est. data is invalid ");
9216,18896896,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAxcSpdEstDataStore_2,P_WARNING,swLogPrintf("speed est. array overflow ( arrIdx = %d ) ");
9216,18898944,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAxcSpdLvlDeterm_1,P_WARNING,swLogPrintf("data array of speed estimation ( lastEstTime is 0x%X ) is full!!! ");
9216,18901248,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAxcSpdLvlDeterm_2,P_INFO,swLogPrintf("currSpdLvl = %d , nextSpdLvl = %d ");
9216,18903296,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyCeSnrLvlSet_1,P_INFO,swLogPrintf("currSnrLvl = %d , nextSnrLvl = %d ");
10240,20973568,0,0,PHY_ONLINE,PHY_RF_MODULE,RfUnitTest_1,P_SIG,swLogPrintf("data: 0x%x ");
10240,20976128,0,0,PHY_ONLINE,PHY_RF_MODULE,RfUnitTest_wr_rd_regs,P_SIG,swLogPrintf("regAddr = 0x%x , WrVal = 0x%x , RdVal = 0x%x ");
10240,20977920,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcRxOnOff1ms,P_SIG,swLogPrintf("freq100KHz = %d , rssi = %d ");
10240,20980736,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxSemiStaticCfg,P_WARNING,swLogPrintf("freqCfg Miss , scNcInd = %d , scFreqPreCalc = %d , scFreqCfg = %d , ncFreqPreCalc = %d , ncFreqCfg = %d ");
10240,20982272,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSwMipiRegsPrint_1,P_INFO,swLogPrintf("SwSend ECS Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,20984320,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSwMipiRegsPrint_2,P_INFO,swLogPrintf("SwSend ELCS Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,20986368,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSwMipiRegsPrint_3,P_INFO,swLogPrintf("SwSend Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,20988160,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSwMipiRegsPrint_4,P_INFO,swLogPrintf("SwSend Said = 0x%x , regsLenTotal = %d ");
10240,20990976,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_1,P_VALUE,swLogPrintf("fcVersion1 = 0x%x , fcVersion2 = 0x%x , fcVersion3 = 0x%x , hwInfo1 = 0x%x , hwInfo2 = 0x%x ");
10240,20993792,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_4,P_SIG,swLogPrintf("Rf Init FreqOfst = %d ( loFreq = %d ) , CBANK = %d ( %d ) , t0 = %d ( C ) , t0Code = %d , 32 KCap = %d ( %d ) ");
10240,20996095,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_6,P_ERROR,swLogPrintf("Need to do RF Calibration! ");
10240,20996352,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_2,P_VALUE,swLogPrintf("RxRc = 0x%x , TxRc = 0x%x ");
10240,20999680,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_3,P_VALUE,swLogPrintf("SarAdcOfstI0 / I1 = 0x%x / 0x%x , SarAdcOfstQ0 / Q1 = 0x%x / 0x%x , SarAdcGainI / Q = 0x%x / 0x%x , SarAdcskew = 0x%x ");
10240,21001472,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_5,P_SIG,swLogPrintf("Addr = 0x%x , 0x%x , 0x%x , 0x%x , 0x%x , 0x%x ");
10240,21003264,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxTpcCmd,P_INFO,swLogPrintf("Rf TxTpcCmd: txPowrOrg = %d , currTxPowr = %d , tpcDaIdx = %d , paIdx = %d , powerErr = %d ");
10240,21004800,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxFecParasCalc,P_WARNING,swLogPrintf("RxFront-End Paras Miss , bandPosIdx = 0x%x , oflValid = %d , bandnum = %d ");
10240,21006848,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxFecParasCalc_1,P_INFO,swLogPrintf("RxPath Config: bandNum = %d , freq100Hz = %d , rxPort = %e<rfRxPort> ");
10240,21009152,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxCaliParasCalc_0,P_WARNING,swLogPrintf("LTE Band RxCalibration Paras Miss , bandPosIdx = 0x%x , scValid = %d , fcValid = %d , bandnum = %d ");
10240,21011200,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxCaliParasCalc_1,P_WARNING,swLogPrintf("WIFI Band RxCalibration Paras Miss , bandPosIdx = 0x%x , scValid = %d , fcValid = %d , bandnum = %d ");
10240,21013504,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxFecParasCalc_1,P_INFO,swLogPrintf("freq100KHz = %d , freq100KHzEnd = %d , tmprtCmpstIdx = %d , cmpVal = %d , cmpVal2 = %d ");
10240,21015040,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxFecParasCalc,P_WARNING,swLogPrintf("TxFront-End Paras Miss , bandPosIdx = 0x%x , oflValid = %d , bandnum = %d ");
10240,21017600,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxFecParasCalc_2,P_INFO,swLogPrintf("TxPath Config: bandNum = %d , freq100Hz = %d , txPort = %e<rfTxPort> , paOnAdvTime = %d ( unit:30.72 cycles ) , paBiasNum = %d ");
10240,21019648,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_3,P_SIG,swLogPrintf("TxIqmResult , freq = %d , band:%d , cmd0 = 0x%x , cmd1 = 0x%x , Index = %d ");
10240,21021184,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_4,P_INFO,swLogPrintf("Band = %d , freqCompTmprt_high = %d , freqCompTmprt_low = %d ");
10240,21022720,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_1,P_WARNING,swLogPrintf("TxTpcTable Miss , bandNum = %d ");
10240,21025792,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_2,P_WARNING,swLogPrintf("TxCalibration Paras Miss , bandPosIdx1 = 0x%x , bandPosIdx2 = 0x%x , scValid = %d , fcValid = %d , bandNum = %d ");
10240,21027072,0,0,PHY_ONLINE,PHY_RF_MODULE,RfVbatCmpstValUpd,P_SIG,swLogPrintf("Rf Vbad Update:Vbad = %d , voltgCmpVal = %d ");
10240,21030146,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFecLogPrint_1,P_INFO,swLogPrintf("ActCfg: %e<RfFemFifoMap> %s , delay = %d us , gpioMask = 0x%x , gpioVal = 0x%x 0x%x ");
10240,21031680,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFecLogPrint_4,P_INFO,swLogPrintf("ActCfg: %e<RfFemFifoMap> ECS Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,21033728,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFecLogPrint_5,P_INFO,swLogPrintf("ActCfg: %e<RfFemFifoMap> ELCS Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,21035776,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFecLogPrint_3,P_INFO,swLogPrintf("ActCfg: %e<RfFemFifoMap> Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,21038594,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFecLogPrint_2,P_INFO,swLogPrintf("ActCfg: %e<RfFemFifoMap> %s , Said = 0x%x , delay = %d us , regsLenTotal = %d %d 0x%x ");
10240,21041151,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFctyCaliStart,P_SIG,swLogPrintf("Rf Calibration Start... ");
10240,21043199,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFctyCaliEnd,P_SIG,swLogPrintf("Rf Calibration End... ");
10240,21044992,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcComInfoCfg,P_VALUE,swLogPrintf("fcVersion1 = %d , fcVersion2 = %d , fcVersion3 = %d , hwInfo1 = %d , hwInfo2 = %d , bandNum = %d , bandList [ 0 ] = %d , rxAgcFelossAdj = %d ");
10240,21045504,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcAfcDataCfg,P_SIG,swLogPrintf("Band = %d , RxFreq = %d ");
10240,21047296,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcAfcStart,P_SIG,swLogPrintf("centFreq = %d ");
10240,21049344,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcRxAgcSeqCfg,P_SIG,swLogPrintf("SeqCount = %d ");
10240,21051648,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcRxIip2CaliRfModemSeqCfg,P_SIG,swLogPrintf("SelfCali-FddIp2 failure: Rxfreq = %d , bandNum = %d ");
10240,21053696,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcGapBeginInt_RxIp2_1,P_SIG,swLogPrintf("RxIp2 Cali BeforCode = 0x%x , Freq100KHz = %d ");
10240,21055744,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcGapBeginInt_RxIp2_2,P_SIG,swLogPrintf("RxIp2 Cali AfterCode = 0x%x , Freq100KHz = %d ");
10240,21059583,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_1,P_SIG,swLogPrintf("Rf Self-Calibration Start... ");
10240,21059584,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_2,P_SIG,swLogPrintf("step1... ScEventGet = 0x%X ");
10240,21061632,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_3,P_SIG,swLogPrintf("step2... ScEventGet = 0x%X ");
10240,21063680,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_4,P_SIG,swLogPrintf("step3... ScEventGet = 0x%X ");
10240,21065728,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_5,P_SIG,swLogPrintf("step4... ScEventGet = 0x%X ");
10240,21067776,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_6,P_SIG,swLogPrintf("step5... ScEventGet = 0x%X ");
10240,21069824,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_7,P_SIG,swLogPrintf("step6... ScEventGet = 0x%X ");
10240,21071872,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_8,P_SIG,swLogPrintf("step7... ScEventGet = 0x%X ");
10240,21073920,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_9,P_SIG,swLogPrintf("step8... ScEventGet = 0x%X ");
10240,21075968,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_10,P_SIG,swLogPrintf("step9... ScEventGet = 0x%X ");
10240,21078016,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_11,P_SIG,swLogPrintf("Rf Self-Calibration End...Result = 0x%X ");
10240,21080320,0,0,PHY_ONLINE,PHY_RF_MODULE,RfScDcocOneFreqEndInt,P_SIG,swLogPrintf("SelfCali-Dcoc failure: freq = %d , bandNum = %d ");
10240,21082368,0,0,PHY_ONLINE,PHY_RF_MODULE,RfScTxIqmCLRfModemSeqCfg,P_SIG,swLogPrintf("SelfCali-TxCarrierLeakage failure: freq = %d , bandNum = %d ");
10240,21084160,0,0,PHY_ONLINE,PHY_RF_MODULE,RfBandFecParasCalc,P_WARNING,swLogPrintf("band Front-End Paras Miss , bandnum = %d ");
10240,21086976,0,0,PHY_ONLINE,PHY_RF_MODULE,RfBandFecParasCalc_1,P_INFO,swLogPrintf("TxPath Config: bandNum = %d , txPort = %e<rfTxPort> , paOnAdvTime = %d ( unit:30.72 cycles ) , paBiasNum = %d ");
10240,21089024,0,0,PHY_ONLINE,PHY_RF_MODULE,RfNsmRxCwSnrTest,P_SIG,swLogPrintf("Rf RxCwTest , band = %d , freq = %d , bw = %d , flag = %d ");
11264,23071232,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyAtCmdSet,P_SIG,swLogPrintf("Phy AT Cmd Set! moduleValue = %d , data [ 0 ] = %d , data [ 1 ] = %d ");
11264,23074815,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyAtCmdSet_0,P_ERROR,swLogPrintf("Dump parameters error! valid input: data [ 0 ] < 4 , data [ 1 ] < 6 , data [ 2 ] < 20 , data [ 3 ] < 20 ");
11264,23076863,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyAtCmdSet_1,P_ERROR,swLogPrintf("PhyCfg Triggered Assert! ");
11264,23077380,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyMibTask,P_SIG,swLogPrintf("MIB decoded for Cell ( %d , %d ) ! BandWidth = %s ");
11264,23080959,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiDci0InfoGet_1,P_WARNING,swLogPrintf("no valid set for CSI request in DCI0 ");
11264,23083007,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiDci0InfoGet_2,P_WARNING,swLogPrintf("no valid reference subframe for CSI request in DCI0 ");
11264,23085055,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRarInfoGet_1,P_WARNING,swLogPrintf("no valid DL subframe for CSI request in RAR ");
11264,23087103,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRarInfoGet_2,P_WARNING,swLogPrintf("no valid set for CSI request in RAR ");
11264,23089151,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRarInfoGet_3,P_WARNING,swLogPrintf("no valid reference subframe for CSI request in RAR ");
11264,23091199,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDecPreProc_1,P_WARNING,swLogPrintf("no valid set for CSI Subframe config from seq ");
11264,23091456,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyStateTransit,P_ERROR,swLogPrintf("PhyStateTransit Error! current state = %d event = %d ");
11264,23093248,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyFreqOfstAfcAdj_1,P_WARNING,swLogPrintf("freqErrPPM with value of 0x%X overflow ");
11264,23097343,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyNCellTimeOfstUpdt_1,P_WARNING,swLogPrintf("BT_OFST with non-zero value existed ");
11264,23099391,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyTimeOfstUpdtAftAtc_1,P_INFO,swLogPrintf("BT adjustment is disabled in ATC ");
11264,23099392,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyTimeOfstUpdtLeaveConn_1,P_WARNING,swLogPrintf("new HFN value ( %d ) is taking effect when leaving CONN ");
11264,23103487,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibInfoUpdt_0,P_ERROR,swLogPrintf("dlBandwidth or antPortNum in mib was updated in PHY CONN state ");
11264,23105535,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibInfoUpdt_1,P_ERROR,swLogPrintf("phich parameters in mib were updated in PHY CONN state ");
11264,23107583,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibInfoUpdt_2,P_SIG,swLogPrintf("Rx Tx ReSchedule Due to MIB Time Updt in PHY CONN state ");
11264,23107840,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,MultiBandInfo,P_WARNING,swLogPrintf("EARFCN changed by Sib1Config , prev_EARFCN = %d new_EARFCN = %d ");
11264,23109888,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phySib1Updt,P_SIG,swLogPrintf("SIB1 configured! TddUlDlConfig = %d SSP = %d ");
11264,23111936,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyUlCommInfoUpdt,P_ERROR,swLogPrintf("duplexMode mismatch between UL&DL frequency! , dlEuArfcn = %d , ulEuArfcn = %d ");
11264,23115775,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyUlCommInfoUpdt_0,P_INFO,swLogPrintf("Re-Calc PUXCH / SRS parameters when system information updated in connected state ");
11264,23116544,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyHoCommInfoUpdt_0,P_SIG,swLogPrintf("TDD handover , used tdd configuration of original cell! tddConfigPresent = %d , ulDlConfig = %d , specialSbfrmPatterns = %d , tddSbfrmType = 0x%X ");
11264,23118848,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingInfoUpdt_0,P_SIG,swLogPrintf("pagingCycle is %d ( ms ) , PFPO = 0x%X , Edrx config: Edrx period is %d ( ms ) , Ptw Length is %d ( ms ) , Ptw StartSfn is %d ");
11264,23121919,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingInfoUpdt_1,P_WARNING,swLogPrintf("disable eDRX scheduling because HFN field is absent in SIB1 ");
11264,23122176,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingInfoUpdt_2,P_SIG,swLogPrintf("pagingCycle is %d ( ms ) , PFPO = 0x%X ");
11264,23126015,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySpsConfigUpdt_1,P_WARNING,swLogPrintf("SPS C-RNTI is released ");
11264,23128063,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_1,P_WARNING,swLogPrintf("antennaInfo of REL-8 and REL-10 is sent by NW together ");
11264,23130111,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_2,P_WARNING,swLogPrintf("codebookSubsetRestriction missed by NW for TM4 / 5 / 6 ");
11264,23132159,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_3,P_WARNING,swLogPrintf("unexpected codebookSubsetRestriction configuration of TM8 ");
11264,23134207,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_4,P_WARNING,swLogPrintf("previous antInfo is REL-8 and new one is REL-10 ");
11264,23136255,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_5,P_WARNING,swLogPrintf("unexpected codebookSubsetRestriction configuration of R10 ");
11264,23138303,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCqiRptConfigUpdt_1,P_WARNING,swLogPrintf("cqi-ReportConfig of REL-8 and REL-10 is sent by NW together ");
11264,23140351,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCqiRptConfigUpdt_2,P_WARNING,swLogPrintf("previous cqi-ReportConfig is REL-8 and new one is REL-10 ");
11264,23142399,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCqiRptConfigUpdt_3,P_WARNING,swLogPrintf("illegal aperiodic CSI mode for 1.400000 MHz bandwidth ");
11264,23144447,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCqiRptConfigUpdt_4,P_WARNING,swLogPrintf("illegal periodic CSI mode for 1.400000 MHz bandwidth ");
11264,23146495,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsNzpOsRePosDerive_1,P_WARNING,swLogPrintf("CSI-RS resourceConfig is illegal for normal subframe ");
11264,23148543,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsNzpOsRePosDerive_2,P_WARNING,swLogPrintf("CSI-RS resourceConfig is illegal for special subframe ");
11264,23150591,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsConfigUpdt_1,P_WARNING,swLogPrintf("CSI-RS is configured with 8 ports ");
11264,23152639,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsConfigUpdt_2,P_WARNING,swLogPrintf("zeroTxPowerCSI_RS2 is configured incorrectly ");
11264,23154687,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsConfigUpdt_3,P_WARNING,swLogPrintf("TM9 without CSI-RS configuration setup pmi-RI-Report ");
11264,23154944,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_1,P_WARNING,swLogPrintf("I_RI of SET%d is configured with reserved value %d ");
11264,23156992,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_2,P_WARNING,swLogPrintf("I_CQI / PMI of SET%d is configured with reserved value %d ");
11264,23159040,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_3,P_WARNING,swLogPrintf("I_CQI / PMI of SET%d is configured with reserved value %d ");
11264,23162879,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_4,P_WARNING,swLogPrintf("Periodic CQI reporting is disable due to invalid configuration of I_CQI / PMI ");
11264,23164927,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_5,P_WARNING,swLogPrintf("Periodic CQI reporting is disable due to invalid configuration of Npd ");
11264,23166975,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_6,P_WARNING,swLogPrintf("Periodic CQI reporting will be handled by FW , not SEQ ");
11264,23169023,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPuxchDediUpdt_1,P_WARNING,swLogPrintf("pusch_configDecicated of REL-8 and REL-13 is sent by NW together ");
11264,23171071,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPuxchDediUpdt_2,P_WARNING,swLogPrintf("pucch_configDecicated of REL-8 and REL-13 is sent by NW together ");
11264,23173119,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPuxchDediUpdt_3,P_WARNING,swLogPrintf("PUCCH FORMAT3 is Configured!!! ");
11264,23175167,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPuxchDediUpdt_4,P_WARNING,swLogPrintf("PUCCH 1 b Channel Selection is Configured!!! ");
11264,23177215,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyScMeasPatternConfigUpdt_1,P_WARNING,swLogPrintf("duplex mode between serving cell and configured measurement subframe pattern mismatched ");
11264,23179263,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyScMeasPatternConfigUpdt_2,P_WARNING,swLogPrintf("TDD ulDlConfig between serving cell and configured measurement subframe pattern mismatched ");
11264,23181311,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediInfoPostProc_0,P_WARNING,swLogPrintf("post process of dedicated info. updating running in CDRX inactive state ");
11264,23183359,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediInfoPostProc_1,P_WARNING,swLogPrintf("RxResumeTime ( DediCfg ) delayed 1 ms! ");
11264,23185407,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediAbsPatternInfoUpdt_1,P_WARNING,swLogPrintf("csi-MeasSubframeSets-r12 and measSubframePatternPCell-r10 were configured togother ");
11264,23187455,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediAbsPatternInfoUpdt_2,P_WARNING,swLogPrintf("measSubframePatternPCell-r10 is NOT sub-set of csi-MeasSubframeSet1-r10 or csi-MeasSubframeSet2-r10 ");
11264,23189503,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediAbsPatternInfoUpdt_3,P_WARNING,swLogPrintf("measSubframePatternPCell-r10 is configured without valid csi-MeasSubframeSet1-r10 or csi-MeasSubframeSet2-r10 ");
11264,23189763,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediInfoUpdt_1,P_SIG,swLogPrintf("UE downlink transmission mode changed ( %s-->%s ) ");
11264,23192320,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediInfoUpdt_2,P_INFO,swLogPrintf("PhyDediInfoUpdt running time , time1 = 0x%X , time2 = 0x%X , time3 = 0x%X , time4 = 0x%X ");
11264,23194112,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyNextRxTxSbfrmFind,P_ERROR,swLogPrintf("Find next subframe error , startTime = 0x%X , expectSbfrmType = %d , tddSbfrmType = 0x%X ");
11264,23197695,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnApSrsPending_0,P_INFO,swLogPrintf("ApSRS is Pending ");
11264,23197952,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrx2InactiveJudge_0,P_INFO,swLogPrintf("Keep CDRX Active , spsRxTime = 0x%x , spsTxTime = 0x%x ");
11264,23201791,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_0,P_INFO,swLogPrintf("SR is sent on PUCCH and is pending ");
11264,23203839,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_1,P_INFO,swLogPrintf("CRNTI Grant not Received after RAR For Contention-Free RA ");
11264,23205887,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_2,P_INFO,swLogPrintf("HARQ Buffer not empty and Wait for Retrans UL Grant ");
11264,23207935,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_3,P_INFO,swLogPrintf("Keep Active Since Short Cycle is too Small ");
11264,23209983,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_4,P_INFO,swLogPrintf("Keep Active Since time is Near to DRX Cycle Boundary or SPS Time ");
11264,23209984,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,DrxCmdReq,P_INFO,swLogPrintf("DRX Cmd Req , longDrxCmd = %d ");
11264,23214079,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxTimerExpiredProc_3,P_INFO,swLogPrintf("CDRX Schedule Stopped , Skip timer Expired Proc ");
11264,23216127,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxTimerExpiredProc_2,P_INFO,swLogPrintf("Bypass Old Cycle Timer Proc ");
11264,23216896,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiMeasGapCdrxSuspend_0,P_INFO,swLogPrintf("ECGI MEAS GAP CDRX SUSPEND! , measGapProc = %d , schdTime = [ %d , %d , %d ] ");
11264,23220223,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiMeasGapCdrxResume_0,P_INFO,swLogPrintf("ECGI MEAS GAP CDRX RESUME! ");
11264,23222271,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIcsGapLegalityCheck_0,P_WARNING,swLogPrintf("EMERGENCY GAP Length is not enough ");
11264,23222528,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIcsPostProc_1,P_INFO,swLogPrintf("cell delay ( %d ) of TDD intra cell ( PCI = %d ) is out of range ");
11264,23224576,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIntraMibTimeAdjust_0,P_INFO,swLogPrintf("Intra MIB Time Adjust: flag1 = %d , adjBmp = 0x%x ");
11264,23228415,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSiSchdGapProc_1,P_INFO,swLogPrintf("Mib Receive time delay to next 10 ms ");
11264,23230463,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSiSchdGapProc_0,P_INFO,swLogPrintf("Set Gap Start End Point When Ecgi Intra Mib ");
11264,23230464,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSchedule_0,P_INFO,swLogPrintf("ECGI is suspending , suspendBmp = 0x%x ");
11264,23234559,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiReqStart_0,P_WARNING,swLogPrintf("CELL not in Neighbour List during ECGI SIB1 process ");
11264,23236607,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiReqStart_2,P_WARNING,swLogPrintf("ECGI Emergency GAP used! ");
11264,23238655,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiReqStart_1,P_WARNING,swLogPrintf("Valid Gap Not Exist For ECGI ");
11264,23240703,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIntraMibTimeAdjInCdrxAct2Inact_0,P_INFO,swLogPrintf("Re-Trigger MIB time Update in CDRX ACT2INACT ");
11264,23240960,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIntraMibTimeAdjInCdrxAct2Inact_1,P_INFO,swLogPrintf("C-RNTI Del Time Re-Adjust in CDRX ACT2INACT , oldDelTime = 0x%x , newDelTime = 0x%x ");
11264,23242752,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSchdSuspend_0,P_SIG,swLogPrintf("Suspend Bmp Setting Delay , suspendBmp = 0x%x ");
11264,23244800,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiCancelByPendingSig_0,P_WARNING,swLogPrintf("ECGI cancelled by signal pending , waitTime = %d ");
11264,23247360,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiCrntiTimeAdjustByIntraMib_0,P_INFO,swLogPrintf("C-RNTI Time Adjust by Intra ECGI MIB , cRntiTime = %d , ncMibTime = %d , adjTime = %d ");
11264,23250943,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiCrntiTimeAdjustByIntraMib_1,P_INFO,swLogPrintf("Re-Trigger MIB time Update in CDRX INACT2ACT ");
11264,23251456,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyHwTaskCfgTimerSet,P_ERROR,swLogPrintf("PhyHwTaskCfgTimerSet error! miscTxTaskBitmap = 0x%X , rxTaskAddBitmap = 0x%X , rxTaskDelBitmap = 0x%X ");
11264,23255039,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskAdd_1,P_WARNING,swLogPrintf("skip adding HW tasks because of ongoing PS RESET process ");
11264,23255296,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,DelCurrRxBitmap,P_WARNING,swLogPrintf("Del Rx Event not existed! rxTaskBitmap = 0x%X , delEvent = %d ");
11264,23259135,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskProc4MeasGap_1,P_WARNING,swLogPrintf("delay 1 st meas. gap with one period because of confliction b / w meas. gap and auto gap ");
11264,23261183,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMiscEventTaskConfig_1,P_WARNING,swLogPrintf("RX_PAUSE for SIG pending happened when CRNTI has been just removed ");
11264,23263231,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMiscEventTaskConfig_2,P_WARNING,swLogPrintf("RX_RESUME for ECGI pending happened when CRNTI has been just removed ");
11264,23263232,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMiscEventTaskConfig_3,P_ERROR,swLogPrintf("Unexpected hwTask , miscBmp = 0x%X ");
11264,23267327,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_00,P_WARNING,swLogPrintf("rxAddBmp and rxDelBmp overlapped ");
11264,23269375,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_01,P_WARNING,swLogPrintf("rxAddBmp and currRxBmp overlapped ");
11264,23271423,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_02,P_WARNING,swLogPrintf("no valid scheduled bitmap for current RX HW TASK CFG ");
11264,23273471,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_03,P_WARNING,swLogPrintf("skip RxHwTaskConfig because no HW task is scheduled now ");
11264,23274240,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_10,P_INFO,swLogPrintf("RxPause simultaneous with RxAdd / RxDel! miscBmp = 0x%X , rxAddBmp = 0x%X , rxDelBmp = 0x%X , currRxBmp = 0x%X ");
11264,23277567,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_20,P_WARNING,swLogPrintf("Rx HwTask reStart after stopped 1 ms before! ");
11264,23279615,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskConfig_1,P_WARNING,swLogPrintf("HW task has been cancelled ");
11264,23281663,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskConfig_2,P_WARNING,swLogPrintf("No HW tasks need be configured ");
11264,23281664,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyHwHalt,P_INFO,swLogPrintf("PhyHwHalt! Reason = %e<PhyHwHaltReason> ");
11264,23285759,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskAssertResetSchd_1,P_ERROR,swLogPrintf("unexpected PHY ASSERT RESET process ");
11264,23287807,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPchTimerExpiredProc_0,P_INFO,swLogPrintf("Skip PCH Event Add Del Due to MAC Reset for Handover ");
11264,23289855,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingConfigReqHandle_1,P_WARNING,swLogPrintf("Get CephyPagingConfigReg in wrong state ");
11264,23289856,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPchDciDecPostProc_0,P_DEBUG,swLogPrintf("Paging received and reported to PS at 0x%X! ");
11264,23291904,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phySchdInit_ChipId,P_SIG,swLogPrintf("CHIPID = %d ! ");
11264,23293952,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phySchdInit,P_INFO,swLogPrintf("PhySchdInitEvent = %e<PhySchdInitEvent> ");
11264,23296000,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCerrcInitConfigReport_0,P_ERROR,swLogPrintf("RF calibration table error , bandNum in cali table is :%d ");
11264,23300095,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHandleDeactReq_1,P_WARNING,swLogPrintf("Pending DEACT_REQ because CEAXC post process has been started ");
11264,23302143,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHandleHandoverReq_1,P_WARNING,swLogPrintf("Cell is not in neighbour list during handover MIB process ");
11264,23304191,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxPauseStartTimeCalc_0,P_WARNING,swLogPrintf("Wait for other pending signal! ");
11264,23304960,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxPauseStartTimeCalc_1,P_WARNING,swLogPrintf("Signal pending overlap with measgap! RxPauseTime = 0x%X , RxResumeTime = 0x%X ; MeasGap: RxPauseTime = 0x%X , RxResumeTime = 0x%X ");
11264,23308287,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySib1ConfigProcess_0,P_SIG,swLogPrintf("SIB1 Config pending! ");
11264,23310335,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyComnCnfgProcess_0,P_SIG,swLogPrintf("CommonConfig pending! ");
11264,23312383,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediConfigProcess_00,P_ERROR,swLogPrintf("buffer of cephyDedicatedConfigReq overflow ");
11264,23314431,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediConfigProcess_01,P_WARNING,swLogPrintf("buffer new coming cephyDedicatedConfigReq because last one has NOT been parsed ");
11264,23314688,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyMeasBuffRel_0,P_ERROR,swLogPrintf("PhyMeasBuffRelease ( 0 :MIB , 1 :ICS , 2 :MEAS ) = %d , measBuffInUse = %d , error!!! ");
11264,23316736,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxGap4SigPendingInCdrxInact_0,P_WARNING,swLogPrintf("%d pending SIG encounter CDRX INACT state with signal pasring bitmap 0x%X ");
11264,23320575,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyTxStopPostProc_0,P_WARNING,swLogPrintf("mac data unready or c-rnti-config later ");
11264,23322623,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAuxAdcCnf_0,P_ERROR,swLogPrintf("invalid internal temperature ");
11264,23322624,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAuxAdcCnf_1,P_INFO,swLogPrintf("Current temperature = %d ");
11264,23324672,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySigParser_0,P_ERROR,swLogPrintf("Received SIG_CEPHY_NEXT_CELL_SEARCH_REQ under wrong PhyState: %e<PhyState> ");
11264,23326720,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySigParser,P_ERROR,swLogPrintf("Not defined signal recevied from PS , sigId = 0x%X ");
11264,23330815,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyAtCmdDataDumpProc,P_WARNING,swLogPrintf("Wait to send dump command in PHY IDLE or CONNECT state! ");
11264,23332863,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyRaStatisCntInc,P_WARNING,swLogPrintf("PhyRaStatisCntInc: Wrong type input! ");
11264,23334656,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRaStatisInfo_0,P_SIG,swLogPrintf("PhyRaStatisInfo: raSuccNum = %d , accessReqNum = %d , preambleTxNum = %d , rarRecvNum = %d , msg3TxNum = %d , msg4RecvNum = %d , rarTmrExpNum = %d , crTmrExpNum = %d ");
11264,23336959,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyStatisOperReq_0,P_VALUE,swLogPrintf("PS Request for start statis info report! ");
11264,23339007,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyStatisOperReq_1,P_VALUE,swLogPrintf("PS Request for stop statis info report! ");
11264,23339008,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,CephySetMaxTxPowerReq_0,P_SIG,swLogPrintf("PS Request for Max TxPower = %d ! ");
11264,23341056,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,CephySetMaxTxPowerReq_1,P_WARNING,swLogPrintf("PS Request for Max TxPower = %d is invalid!!! ");
11264,23343104,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySpecialCaseInfoUpdt_1,P_INFO,swLogPrintf("Special Case No = 0x%X ");
11264,23347199,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibStart_0,P_INFO,swLogPrintf("Schedule MIB with PCH task adding in advance ");
11264,23349247,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySib1Start_0,P_INFO,swLogPrintf("Schedule SIB1 with PCH task adding in advance ");
11264,23351295,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySibxStart_1,P_INFO,swLogPrintf("Receiving SYS_INFO_REQ ( SCELL SIBX ) while MEAS_TASK is ongoing ");
11264,23351808,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyScellSysInfoReq_0,P_INFO,swLogPrintf("MIB MODIFY REQ Received , schdTime = 0x%x , timeDiff = 0x%x , mibBoudary = 0x%x ");
11264,23355391,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyNcellSysInfoReq_1,P_WARNING,swLogPrintf("CELL MISS during cell reselection SIB1 process ");
11264,23357439,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoStop_0,P_SIG,swLogPrintf("PLMN STOP ");
11264,23359487,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoReport_1,P_WARNING,swLogPrintf("Skip Ncell MIB Reporting in Cell ReSelect ");
11264,23361535,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoReport_0,P_WARNING,swLogPrintf("Skip Ncell MIB Reporting in ECGI ");
11264,23362048,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoReport_2,P_WARNING,swLogPrintf("PhySysInfoReport: CRC fail! mibFlag = %d , siReqScell = %d , siReqNcell = %d ");
11264,23365631,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibMdfPrdTimeDiff,P_WARNING,swLogPrintf("Unxpected Modification Period Coeff in CAT1 mode ");
11264,23367679,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibDecPostProc_0,P_INFO,swLogPrintf("NC MIB Dec Result Skipped ");
11264,23369727,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySib1DciPostProc_0,P_INFO,swLogPrintf("NC SIB1 Dci Result Skipped ");
11264,23371775,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySib1DecPostProc_0,P_INFO,swLogPrintf("NC SIB1 Dec Result Skipped ");
11264,23372288,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySiRxPauseConflictProc_0,P_INFO,swLogPrintf("Si Rx Pause Conflict Proc: isAddBmp = %d , rxBitmap = 0x%X , CurrBitmap = 0x%X ");
11264,23375871,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySibxSchdAftPageHwHalt_0,P_INFO,swLogPrintf("SIBx Schedule After Page HwHalt ");
11264,23375872,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,MacTimerExpiredPostProc_0,P_ERROR,swLogPrintf("timeAlignmentTimer expired! , time value = %d ");
11264,23379967,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,MacTimerExpiredPostProc_1,P_INFO,swLogPrintf("SW timer expired without matched expiredTime! ");
11264,23380480,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMemoryCheck_0,P_SIG,swLogPrintf("PhyMemoryCheck , branchFlag = 0x%X , memAddr = 0x%X , expectContent = 0x%X ");
11264,23383296,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAssert_0,P_ERROR,swLogPrintf("PHY assert! Module = %e<UniLogPhyModuleIdType> , SubID = 0x%X , val1 = 0x%X , val2 = 0x%X , val3 = 0x%X , resetType = %d ");
11264,23386111,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAssert_3,P_WARNING,swLogPrintf("skip PS RESET process because previous one is ongoing ");
11264,23388159,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAssert_4,P_WARNING,swLogPrintf("start self-recovery for PHY_ASSERT ");
11264,23388416,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,OsaCreateFastSignal_0,P_WARNING,swLogPrintf("runSigNumber = %d , runBigSigNumber = %d ");
11264,23390208,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,EC618_CP_VERSION_0,P_WARNING,swLogPrintf("CP version = 0x%X ");
12288,25169919,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacApiInit_0,P_WARNING,swLogPrintf("gpPhyMacRaInfo is not NULL when IDLE2CONN! ");
12288,25171967,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacApiInit_1,P_WARNING,swLogPrintf("gpPhyMacApiCtrlInfo is not NULL when IDLE2CONN! ");
12288,25174015,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacApiInit_2,P_WARNING,swLogPrintf("gpPhyMacRaInfo is NULL when CONN2IDLE! ");
12288,25176063,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacApiInit_3,P_WARNING,swLogPrintf("gpPhyMacApiCtrlInfo is NULL when CONN2IDLE! ");
12288,25176576,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyAllocMacDlMem,P_ERROR,swLogPrintf("pdusize is %d , dlL2BuffBlockAddr is 0x%X , pCurBB is 0x%X ");
12288,25178112,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyAllocMacDlMem1,P_ERROR,swLogPrintf("pCurBB is 0x%X ");
12288,25180416,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacSendDlDataInd_0,P_WARNING,swLogPrintf("Discard Received Msg4 PDU : preambleTransCnt = %d DiscardNum = %d! ");
12288,25182208,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacSendSrTransMaxInd_0,P_WARNING,swLogPrintf("SR Trans max ind! srCounter = %d ");
12288,25185024,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacHandleStartTimerReq_0,P_INFO,swLogPrintf("PhyMacHandleStartTimerReq Received! userId = %d , timerId = %d , timerValue = %d , ulHarqId = %d ");
12288,25186816,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacHandleStartTimerReq_1,P_WARNING,swLogPrintf("Wrong TX time! grantTransTime = 0x%X , currTxTime = 0x%X , delayTime = %d ");
12288,25188352,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacSRReqProc_0,P_WARNING,swLogPrintf("Received SchedulingRequest when SR is pending! srCounter = %d ");
12288,25190912,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacHandleSRReq_0,P_INFO,swLogPrintf("Received SchedulingRequest when dedicatedConfig to be parsed! parseTime = [ 0x%X~0x%X ] , waitTime = %d ( ms ) ");
12288,25194495,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacHandleMacResetReq_1,P_INFO,swLogPrintf("Pending MAC_RESET_REQ because CEAXC post process has been started ");
12288,25195009,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarCrTimerExpireProc_0,P_WARNING,swLogPrintf("raStage = %s is error!!! , rarTimerState = %d , crTimerState = %d ");
12288,25196544,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarCrTimerExpireProc_1,P_SIG,swLogPrintf("RAR Window Timer Expired , preambleTransCnt = %d ");
12288,25198592,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarCrTimerExpireProc_2,P_SIG,swLogPrintf("Contention Resolution Timer Expired , preambleTransCnt = %d ");
12288,25200641,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyRaStageUpdt,P_SIG,swLogPrintf("Random Access: RaStage = %s ");
12288,25203457,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyRaStageUpdt_1,P_WARNING,swLogPrintf("Random Access: RaStage = %s , warningFlag = %d , rarTimerState = %d , crTimerState = %d ");
12288,25204992,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarMacPduParser_3,P_WARNING,swLogPrintf("Discard Received RAR : preambleTransCnt = %d DiscardNum = %d! ");
12288,25207552,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarMacPduParser_0,P_SIG,swLogPrintf("Received RAR ( rapid = %d ) with candidate rapid = %d , ta ( old ) = %d , ta ( new ) = %d ");
12288,25209600,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarMacPduParser_1,P_WARNING,swLogPrintf("Received RAR but Parse Error! rarResType = %d , pdu [ 0 |1|2|3 ] = %X , pdu [ 4 |5|6|7 ] = %X , pdu [ 8 |9|10|11 ] = %X ");
12288,25211392,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarMacPduParser_2,P_SIG,swLogPrintf("Received RAR! preambleIndex = %d , timingAdvanceCmd = %d , numOfRapid = %d ");
12288,25212929,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyPrachResourceSelect_1,P_WARNING,swLogPrintf("Number of fRa = 0 under TDD MODE! raStage = %s ");
12288,25217023,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyPreambleProc,P_ERROR,swLogPrintf("Cannot select a PRACH resource ! ");
12288,25217280,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyHandleRandomAccessReq_0,P_WARNING,swLogPrintf("Received RandomAccessReq when RA is ongoing , current RaCause = %d , Request RaCause = %d! ");
12288,25221119,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyHandleRandomAccessReq_1,P_WARNING,swLogPrintf("UL Data RA triggered when SR resource is existed! ");
12288,25223167,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacHandleCrntiConfigReq_0,P_SIG,swLogPrintf("Crnti Configured when raStage is SUCCESS , skipped by PHY! ");
12288,25223168,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacHandleCrntiConfigReq_1,P_SIG,swLogPrintf("Crnti Configured ( RA SUCC ) : cRnti = %d ");
12288,25225216,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyTaTaskProc_0,P_WARNING,swLogPrintf("taSpn = %d is out of range !!! ");
12288,25227264,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyTaTaskProc_1,P_WARNING,swLogPrintf("taSpn = %d is out of range !!! ");
12288,25229568,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyDataReq_0,P_ERROR,swLogPrintf("Mac Send TX Data Late! harqID = %d , expected transTime ( HFNSFNSBN ) = 0x%X ");
12288,25231360,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyTxDataReq_1,P_WARNING,swLogPrintf("data Status = %d is Invalid ");
12288,25233664,0,0,PHY_ONLINE,PHY_MAC_MODULE,macTimerStart,P_ERROR,swLogPrintf("Start a MacTimer with too short length! ( userID<<16 ) |timerID = 0x%x , length = %d ");
12288,25237503,0,0,PHY_ONLINE,PHY_MAC_MODULE,macTimerExpiredIsr,P_WARNING,swLogPrintf("NO Running Timer when SW timer Expired! ");
13312,27265280,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyCeParaReCnfgReq_1,P_INFO,swLogPrintf("Add CE / RxDFE / RxSEQ algorithm para. reconfiguration of trigger source 0x%X HW task with startTime of 0x%X ");
13312,27267072,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyIcsMeasConnCnfgParaGen_1,P_INFO,swLogPrintf("startTime of inter FRS_CONN need be adjusted to 0x%X ");
13312,27269120,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasNCellListMaintain_1,P_INFO,swLogPrintf("add PCI %d into NCELL list because expiredCnt has NOT reached to expired timer ");
13312,27271424,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasInterSchdInfoMaintain_1,P_WARNING,swLogPrintf("number of inter cell is %d , exceed the upper limit %d ");
13312,27273472,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellCePostProc_1,P_ERROR,swLogPrintf("unexpected rssiNum ( %d ) or rsrpNum ( %d ) of serving cell ");
13312,27277311,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasFakeNCellRemove_1,P_INFO,swLogPrintf("fake neighCell will be removed after NC_MEAS ");
13312,27279359,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSchdInit_HO,P_WARNING,swLogPrintf("neighCell measurement schdPhase is NOT INIT ");
13312,27281407,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSchdInit_IDLE2CONN,P_WARNING,swLogPrintf("neighCell measurement schdPhase is NOT INIT ");
13312,27283455,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSchdInit_CONN2IDLE,P_WARNING,swLogPrintf("neighCell measurement schdPhase is NOT INIT ");
13312,27285503,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSchdInit_1,P_WARNING,swLogPrintf("wakeup full image from SLEEP2 while MEAS task status is ongoing ");
13312,27285504,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIcsSib1RsrpRsrqRevise_0,P_VALUE,swLogPrintf("revised RSRP of ICS SIB1 with value of %d ");
13312,27289599,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSourceSCellInfoBackup_1,P_INFO,swLogPrintf("Backup valid source cell before cell reselection ");
13312,27291647,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIdleEventGenerator_1,P_WARNING,swLogPrintf("NCELL MEAS. process of previous DRX is not finished ");
13312,27293695,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIdleSchedule_1,P_WARNING,swLogPrintf("break out previous unfinished MEAS tasks due to pending measurement commands ");
13312,27295743,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIdleSchedule_2,P_WARNING,swLogPrintf("neighbor cell meas. scheduler should be only called after PCH in PHY IDLE ");
13312,27297791,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_1,P_WARNING,swLogPrintf("intra ICS / CRS MEAS is skipped because of suspension ");
13312,27299839,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_2,P_WARNING,swLogPrintf("inter ICS / CRS MEAS is skipped because of suspension ");
13312,27301887,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_3,P_WARNING,swLogPrintf("inter ICS / CRS MEAS is skipped because of confliction b / w measGap and RACH ");
13312,27303935,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_4,P_WARNING,swLogPrintf("inter ICS / CRS MEAS is skipped because of confliction b / w measGap and PCH ");
13312,27305983,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_5,P_WARNING,swLogPrintf("inter ICS / CRS MEAS is skipped because of confliction b / w measGap and SCELL_SI ");
13312,27308031,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_6,P_INFO,swLogPrintf("inter ICS / CRS MEAS is skipped because of confliction b / w measGap and CDRX timer ");
13312,27310079,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskReqHandler_1,P_WARNING,swLogPrintf("neighCell MEAS HW task is ongoing when CDRX ACT to INACT ");
13312,27312127,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEventGenerator_interIcs,P_WARNING,swLogPrintf("ICS MEAS of previous euArfcn has NOT been done ");
13312,27314175,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnNrmlSchedule_1,P_WARNING,swLogPrintf("skip period INT process because modem INT bitmap of CIRQ3 was cleared ");
13312,27316223,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnNrmlSchedule_2,P_INFO,swLogPrintf("skip period INT process if meas. is scheduled with CDRX method during inactive time ");
13312,27316480,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnDrxSchedule_1,P_INFO,swLogPrintf("CDRX cycle changed: %d ( ms ) -->%d ( ms ) ");
13312,27318272,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnSchdAbortPostProc_0,P_ERROR,swLogPrintf("Incorrect bitmap ( 0x%X ) indicated new msg. suspension ");
13312,27320320,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnSchdAbortPostProc_1,P_ERROR,swLogPrintf("Incorrect bitmap ( 0x%X ) indicated ECGI suspension ");
13312,27322624,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnSchdSuspend_1,P_WARNING,swLogPrintf("neighbor cell ( bitmap = 0x%X ) measurements is suspended with source = %d ");
13312,27324672,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnSchdResume_1,P_WARNING,swLogPrintf("neighbor cell ( bitmap = 0x%X ) measurements is resumed with source = %d ");
13312,27328511,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEarlyReportCheck_intra,P_INFO,swLogPrintf("early reporting of intra cell will be triggered ");
13312,27330559,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEarlyReportCheck_inter,P_INFO,swLogPrintf("early reporting of inter cell will be triggered ");
13312,27332607,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmProc_0,P_ERROR,swLogPrintf("unexpected accuNum of SNR with value of zero when starting new CDRX cycle ");
13312,27332608,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmProc_1,P_ERROR,swLogPrintf("accuNum ( %d ) of SNR for CDRX overflow ");
13312,27334656,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmAdvSbfrmNumCalc_1,P_INFO,swLogPrintf("advanced subframe number for RLM is %d ");
13312,27336960,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCmdPendingProc_1,P_WARNING,swLogPrintf("%d commands with the same type ( %d ) as new coming one has been already stored ");
13312,27340799,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIntraCellMeasCmdHandler_1,P_WARNING,swLogPrintf("ignore intra measurement command received during RA procedure ");
13312,27342847,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasInterCellMeasCmdHandler_1,P_WARNING,swLogPrintf("ignore inter measurement command received during RA procedure ");
13312,27342848,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasReqParse_0,P_SIG,swLogPrintf("receiving cell meas request ( bitmap = 0x%X ) ");
13312,27346943,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasReqParse_1,P_WARNING,swLogPrintf("neighbor cell meaurement is started within inappropriate PHY state ");
13312,27348991,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasReqParse_2,P_WARNING,swLogPrintf("intra measurement has already been started ");
13312,27351039,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasReqParse_3,P_WARNING,swLogPrintf("inter measurement with the same configuration has already been started ");
13312,27351040,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasStopReqParse_0,P_SIG,swLogPrintf("receiving cell meas stop request ( bitmap = 0x%X ) ");
13312,27355135,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasStopReqParse_1,P_WARNING,swLogPrintf("intra measurement has already been stopped ");
13312,27357183,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasStopReqParse_2,P_WARNING,swLogPrintf("inter measurement with the configured stopped bitmap has been stopped ");
13312,27359231,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnMeasGapConfigReqParse_1,P_WARNING,swLogPrintf("configuration of measurement gap is NOT changed ");
13312,27361279,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmInSyncCtrlReqParse_1,P_WARNING,swLogPrintf("Skip SIG_CEPHY_IN_SYNC_CTRL_REQ because schdEntity for CONN is PNULL ");
13312,27363327,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellIndFill_1,P_INFO,swLogPrintf("RSRP / RSSI of serving cell is measured with narrow bandwidth ");
13312,27365375,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellIndFill_2,P_INFO,swLogPrintf("force RSRP / RSRQ reported to RRC to min value because of unreliable serving cell and continuous failure of presync ");
13312,27367423,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellReport_1,P_WARNING,swLogPrintf("TA is negative value ");
14336,29364223,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyUpdateBtTimeOffset,P_WARNING,swLogPrintf("BT too large ");
14336,29364480,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyUpdateBtTimeOffset1,P_VALUE,swLogPrintf("update BT HFNSFNSBN = 0x%X , SPN = %d ");
14336,29368319,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPmuSCCalibrCancelRequest,P_SIG,swLogPrintf("cancel SC calibration! ");
14336,29368320,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPmuSCCalibrRequest_0,P_SIG,swLogPrintf("Request for SC calibration! trigType = %d ");
14336,29370368,0,0,PHY_ONLINE,PHY_PMU_MODULE,phyPmuSCCalibrResponse,P_SIG,swLogPrintf("Received IPC: A2C_SLOWCLOCK_CALIBR_CNF when slowClockCalibrStatus ( %d ) is not in request type! ");
14336,29374463,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyCpRTWakeupIsr_0,P_INFO,swLogPrintf("CP wakeup by CP RT IRQ! ");
14336,29376511,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyCpSWWakeupIsr_0,P_INFO,swLogPrintf("CP wakeup by SW INT! ");
14336,29377024,0,0,PHY_ONLINE,PHY_PMU_MODULE,phyCpmuConfig_0,P_VALUE,swLogPrintf("CP vote sleep! sleepTime = %d , sleepType = %e<CPSleepState> , IsScRc32K = %d ");
14336,29379072,0,0,PHY_ONLINE,PHY_PMU_MODULE,phyCpmuConfig_1,P_INFO,swLogPrintf("CP vote sleep! wkupSrc|hwTaskWkupTime = 0x%X , flashUpdtBmp = 0x%X , presyncMode = %d ");
14336,29382655,0,0,PHY_ONLINE,PHY_PMU_MODULE,phyCpmuConfig_2,P_INFO,swLogPrintf("meas exist and MSMB need retention! ");
14336,29384703,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPmuModeCtrl_00,P_WARNING,swLogPrintf("CP sleep long in Non-CpOff state! ");
14336,29384704,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyWakeFullImage,P_VALUE,swLogPrintf("CP need transfer to full image due to wkupSrc %d ");
14336,29386752,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyGetTimingAdjValue_0,P_VALUE,swLogPrintf("Timing Adj of PreSync is %d ");
14336,29388800,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyGetTimingAdjValue_1,P_VALUE,swLogPrintf("Timing Adj of ATC is %d ");
14336,29392895,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyCancelDueToATCMD,P_SIG,swLogPrintf("All task canceled due to IPC INT received! ");
15360,31461375,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyDbgAlgoParamPresync,P_SIG,swLogPrintf("enter presync debug mode! ");
15360,31463423,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncTimingAdjXrs,P_WARNING,swLogPrintf("timing offset is too large in sleep0 LRS ");
15360,31463424,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyCpGetSleepSrc,P_VALUE,swLogPrintf("SET sleep SRC to %d ( 0 is 32 K and 1 is 40 K ) ");
15360,31467519,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPreSyncTaskSchd_1,P_SIG,swLogPrintf("sss offline presync try next candidate ");
15360,31469567,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPreSyncTaskSchd_2,P_SIG,swLogPrintf("sss online presync try next candidate ");
15360,31469824,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPreSyncTaskAdd0,P_INFO,swLogPrintf("UE maybe wakup earlier than scheduled time: schedule time is 0x%X and currTime is 0x%X ");
15360,31471616,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncTimingAdjForMib,P_WARNING,swLogPrintf("PRESYNC MIB adjust , need check further and ofst is %d ");
15360,31473664,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyIcsPresyncIntPostProc_AfcAdj1,P_VALUE,swLogPrintf("presync Adjust AFC %d ");
15360,31475968,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyIcsPresyncIntPostProc_AfcAdj2,P_VALUE,swLogPrintf("change AFC value from %d to %d ");
15360,31477760,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyIcsPresyncIntPostProc,P_SIG,swLogPrintf("presync fail and sync flag is %d ");
15360,31480832,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PAPR,P_VALUE,swLogPrintf("accuNum = %d , papr [ 0 \1 \2 \3 ] = %d|%d|%d|%d ");
15360,31481856,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,ICS_STAGE_SSS_OFFLINE_SYNC,P_VALUE,swLogPrintf("NID1 in candidate [ %d ] ! ");
15360,31483904,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncCmdPending0,P_WARNING,swLogPrintf("IPC pending too many cmd , pending number is %d ");
15360,31485952,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncCmdPending,P_INFO,swLogPrintf("IPC pending duto presync , pending number is %d ");
15360,31490047,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncCmdProc_0,P_WARNING,swLogPrintf("presync pending IPC proc nested and skip it ");
15360,31490048,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncCmdProc_1,P_INFO,swLogPrintf("process pending IPC , pending number is %d ");
17408,35655679,0,0,PHY_ONLINE,PHY_TMU_MODULE,SeqHwIcsStopRtnTimeAdjust_1,P_WARNING,swLogPrintf("ICS SCHD RTN and ICS STOP RTN overlapped ");
17408,35657727,0,0,PHY_ONLINE,PHY_TMU_MODULE,SeqHwIcsStopRtnTimeAdjust_2,P_INFO,swLogPrintf("ICS SCHD RTN and ICS STOP RTN overlapped ");
18432,37750784,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyDbgAlgoParamMibLlrFwlSet0,P_WARNING,swLogPrintf("AT debug: Set MIB LLR FWL to %d ");
18432,37752832,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyDbgAlgoParamMibLlrFwlSet1,P_WARNING,swLogPrintf("AT debug: Set PHICH LLR FWL to %d ");
18432,37754880,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyDbgAlgoParamMibLlrFwlSet2,P_WARNING,swLogPrintf("AT debug: Set CCH PDCCH FWL to %d ");
18432,37758975,0,0,PHY_ONLINE,PHY_COMM_MODULE,phyMXicDummyIsr,P_ERROR,swLogPrintf("Unexpected MXIC INT happened!!! ");
18432,37761023,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyMXicLogGrpErrSqIsr_0,P_INFO,swLogPrintf("PHY_MXIC_LOGGRP_SQ_ERROR happened! ");
18432,37761024,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyBBDMAIsr_1,P_WARNING,swLogPrintf("BB DMA TimeOut warnings status = %x ");
18432,37763328,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyBBDMAIsr_2,P_INFO,swLogPrintf("BB DMA finish! irqStatus = 0x%X , status0 = 0x%X ");
18432,37766144,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyBBDMAIsr_3,P_SIG,swLogPrintf("PHY Data Dump Done! dump Address = 0x%X , tempData [ 0 ] = 0x%X , tempData [ 1 ] = 0x%X , tempData [ 2 ] = 0x%X , tempData [ 3 ] = 0x%X ");
18432,37767936,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyDMADumpCfg_0,P_ERROR,swLogPrintf("PHY Data Dump Configured Error! dumpMode = %d , sampleRate = %d , numOfTti = %d , skipTti = %d ");
18432,37770752,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyDMADumpCfg_1,P_SIG,swLogPrintf("PHY Data Dump Configured! dump Address = 0x%X , availableMemSize = %d , dumpDataLength = %d , tempData [ 0 ] = 0x%X , tempData [ 1 ] = 0x%X , tempData [ 2 ] = 0x%X , tempData [ 3 ] = 0x%X ");
18432,37771264,0,0,PHY_ONLINE,PHY_COMM_MODULE,PhyDMADumpLostIsr_1,P_WARNING,swLogPrintf("Dump DMA Lost warnings status = %x ");
19456,39847936,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyGraphState_0,P_INFO,swLogPrintf("PhyCommGraphInfo: phyStateId = %d ");
19456,39849984,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyGraphState_1,P_INFO,swLogPrintf("PhyCommGraphInfo: phyStateId = %d ");
19456,39852288,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyCellInfo_0,P_INFO,swLogPrintf("PhyCommGraphInfo: carrierFreq = %d , phyCellId = %d ");
19456,39854080,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyGraphState_2,P_INFO,swLogPrintf("CDRX state change active --> inactive:PhyCommGraphInfo: phyStateId = %d ");
19456,39856128,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyGraphState_3,P_INFO,swLogPrintf("CDRX state change inactive --> active: PhyCommGraphInfo: phyStateId = %d ");
19456,39858688,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyMeaScellInfo_0,P_INFO,swLogPrintf("PhyCommGraphInfo: avgSnr = %d , avgRssi = %d , avgRsrp = %d ");
19456,39860480,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyCellInfo_1,P_INFO,swLogPrintf("PhyCommGraphInfo: carrierFreq = %d , phyCellId = %d ");
19456,39862528,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyCellInfo_2,P_INFO,swLogPrintf("PhyCommGraphInfo: carrierFreq = %d , phyCellId = %d ");
19456,39866112,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyRxStatisInfo_0,P_SIG,swLogPrintf("PhyRxStatisInfo: grantNum = %d , bler = %d% , wbCqi = %d , snr = %d , avgPrb = %d , avgMcs = %d , avgTBS = %d , ack2Nack = %d ");
19456,39868160,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyTxStatisInfo_0,P_SIG,swLogPrintf("PhyTxStatisInfo: grantNum = %d , bler = %d% , avgPrb = %d , avgMcs = %d , avgTBS = %d , ulPower = %d , ta = %d , ack2Dtx|nack2Ack = 0x%X ");
20480,41945344,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOFTBuffUpdateReq_1,P_SIG,swLogPrintf("PHY request to update DCXO NVM file! , stored temprature = %d , freqPPM = %d ");
20480,41947136,0,0,PHY_ONLINE,PHY_DCXO_MODULE,FreqErrOvfl,P_ERROR,swLogPrintf("gpPhySCellInfo->baseInfo.freqErrPPM = %d ( wl = 17 , fwl = 10 ) overflows ");
20480,41949184,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOInvalid,P_SIG,swLogPrintf("DCXO ( sync%d ) : curve invalid ");
20480,41952000,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOAddSmp,P_SIG,swLogPrintf("DCXO ( sync%d ) : add Smp = ( %ddgr , %dppm ) addreason = %d ");
20480,41953280,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXODiscardSmp,P_SIG,swLogPrintf("DCXO ( sync%d ) : discard the current Smp ");
20480,41955844,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOInitFreqErrGet_0,P_SIG,swLogPrintf("currTempr = %d , initFreqOfst = %d , initFreqType = %s ");
20480,41959423,0,0,PHY_ONLINE,PHY_DCXO_MODULE,PhyDCXOCInfoRst_0,P_WARNING,swLogPrintf("PhyDCXOCInfoRst called! ");
20480,41961471,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOFTBuffUpdateReq_0,P_ERROR,swLogPrintf("Request to update DCXO NVM before last request has not been confirmed by AP! ");
20480,41963519,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOFTBuffUpdateCnf_0,P_ERROR,swLogPrintf("DCXO NVM update confirm received when request flag has been cleared! ");
20480,41963520,0,0,PHY_ONLINE,PHY_DCXO_MODULE,PhyDCXOFTBufAfcBU,P_WARNING,swLogPrintf("PhyDCXOFTBufPUCheck called! sizeof ( afc ) = %dbyte has changed from 5 words!!! ");
20480,41965568,0,0,PHY_ONLINE,PHY_DCXO_MODULE,PhyDCXOFTBufErase_0,P_WARNING,swLogPrintf("DCXOFTBufErase called! Cause = %d ");
21504,44044287,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyBeaconSyncIsr_0,P_INFO,swLogPrintf("WIFI SYNC isr confirm ");
21504,44046335,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyBeaconSyncIsr_1,P_INFO,swLogPrintf("WIFI SYNC isr abort ");
21504,44048383,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyBeaconSfdMissErrorIsr_0,P_INFO,swLogPrintf("WIFI SYNC isr miss ");
21504,44050431,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyBeaconSyncCmdFifoErrorIsr_0,P_INFO,swLogPrintf("WIFI SYNC cmd Fifo error ");
21504,44052479,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyRakeReset_0,P_INFO,swLogPrintf("WIFI RAKE RESET ");
21504,44054527,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyRakeReset_1,P_INFO,swLogPrintf("WIFI RAKE ABORT ");
21504,44056575,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyRakeSoftDiffDemap_0,P_INFO,swLogPrintf("WIFI RAKE PSDU OK ( Beacon Frame ) . ");
21504,44058623,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyRakeSoftDiffDemap_1,P_INFO,swLogPrintf("WIFI RAKE PSDU OK ( None Beacon Frame ) . ");
21504,44060671,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyRakeSoftDiffDemap_2,P_INFO,swLogPrintf("WIFI RAKE BSSID OK BUT PSDU NOK. ");
21504,44062719,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyRakeTask_0,P_INFO,swLogPrintf("WIFI RAKE SHORT PSDU ");
21504,44064767,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiScanRsltReport_0,P_WARNING,swLogPrintf("Skip WIFI SCAN Result Reporting To RRC in Phy Debug Mode ");
21504,44065280,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiScanReqProcess_0,P_SIG,swLogPrintf("WIFI SCAN REQ: schdEn = %d , maxBssidNum = %d , channelGroupId = %d ");
21504,44068863,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiHwConfig_0,P_INFO,swLogPrintf("WIFI SCAN HW CONFIG ");
21504,44068864,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiRfParaGen_0,P_INFO,swLogPrintf("WIFI SCAN Start , Freq = %d ( MHz ) ");
21504,44072959,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiAbortConfig_0,P_INFO,swLogPrintf("WIFI SCAN Abort Config Give Up ");
21504,44072960,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiAbortPostProc_0,P_SIG,swLogPrintf("WIFI SCAN STOP , Freq = %d ( MHz ) ");
21504,44076288,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiAbortPostProc_1,P_SIG,swLogPrintf("WIFI SCAN BSSID: %x:%x , RSSI: %d.%d , Channel: %d , ssidLen: %d ");
21504,44078848,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiAbortPostProc_2,P_SIG,swLogPrintf("WIFI SCAN SSID: %x-%x-%x-%x-%x-%x-%x-%x ");
21504,44079104,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiAbortPostProc_3,P_SIG,swLogPrintf("WIFI SCAN SSID Length is 0 , ssidExist = %d ");
21504,44083199,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiSchedule_0,P_INFO,swLogPrintf("Time is not enough for WIFI SCAN ");
21504,44085247,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiSchedule_1,P_INFO,swLogPrintf("WIFI SCAN Schedule ");
21504,44085248,0,0,PHY_ONLINE,PHY_WIFI_MODULE,PhyWifiFreqOfstAfcAdj_0,P_INFO,swLogPrintf("WIFI SCAN AFC Adjust , freqEst = %d ");
262144,536875007,0,0,PLAT_AP,SIG_DUMP,DUMP_FULL_SIGNAL,P_INFO,swLogDumpPolling("Sig = > ");
262144,536877055,0,0,PLAT_AP,PS_DUMP,NetMgrLinkUp_8,P_SIG,swLogDump("Net manager , link up , IPV6 PCO DNS addr: ");
262144,536879103,0,0,PLAT_AP,PS_DUMP,NetMgrLinkUp_9,P_ERROR,swLogPrintf("Net manager , link up , get adpt DNS CFG fail ");
263168,538970113,0,0,PLAT_AP,PLA_STRING,slpManApplyPlatVoteHandle_2,P_VALUE,swLogPrintf("%s ");
263168,538972161,0,0,PLAT_AP,PLA_STRING,slpManGivebackPlatVoteHandle_4,P_VALUE,swLogPrintf("%s ");
263168,538974209,0,0,PLAT_AP,PLA_STRING,OsaFopen_1,P_WARNING,swLogPrintf("Can ' t open NVM file , as not support mode: %s ");
263168,538976257,0,0,PLAT_AP,PLA_STRING,get_log_version_1,P_ERROR,swLogPrintf("%s ");
263168,538978305,0,0,PLAT_AP,PLA_STRING,StackOverflow,P_ERROR,swLogPrintf("\r \n!!!error!!!..task:%s..stack.over.flow!!! \r \n ");
263168,538980353,0,0,PLAT_AP,PLA_STRING,build_info,P_SIG,swLogPrintf("%s ");
263168,538982400,0,0,PLAT_AP,PLA_STRING,build_info_1,P_SIG,swLogPrintf("fuse dev 0x%x ");
264192,541071359,0,0,PLAT_AP,PLA_INTERNAL_CMD,EC_READY,P_INFO,swLogPrintf("EC Ready! ");
264192,541067265,0,0,PLAT_AP,PLA_INTERNAL_CMD,get_log_version,P_SIG,swLogPrintf("LOGVERSION:%s ");
264192,541073407,0,0,PLAT_AP,PLA_INTERNAL_CMD,ecDumpHandshakeProc,P_ERROR,swLogPrintf("enter dump handshake mode ");
264192,541075455,0,0,PLAT_AP,PLA_INTERNAL_CMD,ecDumpUsbHandshakeProc,P_ERROR,swLogPrintf("enter USB dump handshake mode ");
265216,543164928,0,0,PLAT_AP,PLA_DRIVER,vTaskStepTick_1,P_VALUE,swLogPrintf("vTaskStepTick-%x , %x , %x ");
265216,543166464,0,0,PLAT_AP,PLA_DRIVER,vTaskStepTick_2,P_VALUE,swLogPrintf("New xTicksToJump = %d ");
265216,543168512,0,0,PLAT_AP,PLA_DRIVER,vTaskStepTick_3,P_VALUE,swLogPrintf("xTicksToJump has error = %d ");
265216,543171072,0,0,PLAT_AP,PLA_DRIVER,vECTaskStepTick_1,P_WARNING,swLogPrintf("vTaskStepTick-%x , %x , %x ");
265216,543172608,0,0,PLAT_AP,PLA_DRIVER,Enter_Active_1,P_VALUE,swLogPrintf("EC618 Active SmallImg-from = %e<APBootFlag_e> ");
265216,543176703,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_1,P_VALUE,swLogPrintf("EC Main Branch: AP unschd wakeup ");
265216,543178751,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_2,P_VALUE,swLogPrintf("EC Main Branch: CP sleep before ap wfi ");
265216,543180799,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_3,P_VALUE,swLogPrintf("EC Main Branch: AP receive wakeup pending ");
265216,543182847,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_4,P_VALUE,swLogPrintf("EC Main Branch: AP hib timer is near ");
265216,543184895,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_5,P_VALUE,swLogPrintf("EC Main Branch: Ps need wakeup fullimage ");
265216,543186943,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_6,P_VALUE,swLogPrintf("EC Main Branch: CP sleeped , AP wakeup from wfi ");
265216,543188991,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_7,P_VALUE,swLogPrintf("EC Main Branch: AP hib counter wrap ");
265216,543191039,0,0,PLAT_AP,PLA_DRIVER,ec_main_1,P_ERROR,swLogPrintf("sleep should not run to here ");
265216,543191808,0,0,PLAT_AP,PLA_DRIVER,adc_efuse_read,P_INFO,swLogPrintf("adc efuse trim value , code500: 0x%x , code900: 0x%x , tcode: 0x%x , t0: 0x%x ");
265216,543193856,0,0,PLAT_AP,PLA_DRIVER,ec_main_0,P_WARNING,swLogPrintf("BC Ld Assert: bcldCfg = 0x%x , wkupCfg = 0x%x , BCWaitStart = %d , BCWaitEnd = %d ");
265216,543195136,0,0,PLAT_AP,PLA_DRIVER,BSP_QSPI_Erase_Safe_1,P_VALUE,swLogPrintf("Erase Safe. primask = %d ");
265216,543197184,0,0,PLAT_AP,PLA_DRIVER,pmuGetMinSleepMode_1,P_VALUE,swLogPrintf("Unable to Sleep because of driver = 0x%x ");
265216,543201279,0,0,PLAT_AP,PLA_DRIVER,PmuHasHibTimertoWakeup_1,P_VALUE,swLogPrintf("Hib Timer nearly trigger , Start AP ");
265216,543201536,0,0,PLAT_AP,PLA_DRIVER,apmuVoteToSleep1State_1,P_VALUE,swLogPrintf("Vote Sleep:apSdkSleep1VoteFlag = 0x%x-%d \n ");
265216,543203584,0,0,PLAT_AP,PLA_DRIVER,apmuVoteToSleep2State_1,P_VALUE,swLogPrintf("Vote Sleep2:apSdkSleep2VoteFlag = 0x%x-%d \n ");
265216,543205632,0,0,PLAT_AP,PLA_DRIVER,apmuVoteToHibState_1,P_VALUE,swLogPrintf("Vote Hibernate:apSdkHibernateVoteFlag = 0x%x-%d \n ");
265216,543207680,0,0,PLAT_AP,PLA_DRIVER,pmuPreDeepSlpCbRegister_1,P_VALUE,swLogPrintf("Registe pre deepsleep callback = 0x%x , 0x%x ");
265216,543209728,0,0,PLAT_AP,PLA_DRIVER,pmuPostDeepSlpCbRegister_1,P_VALUE,swLogPrintf("Registe post deepsleep callback = 0x%x , 0x%x ");
265216,543213567,0,0,PLAT_AP,PLA_DRIVER,pmuPreDeepSlpCbExcute_1,P_SIG,swLogPrintf("PS DeepSleep Callback Excute ");
265216,543215615,0,0,PLAT_AP,PLA_DRIVER,pmuPostDeepSlpCbExcute_1,P_VALUE,swLogPrintf("Excute PostDeepSlp Callbacks ");
265216,543215616,0,0,PLAT_AP,PLA_DRIVER,pmuSetDeepestSleepMode_1,P_VALUE,swLogPrintf("Deepest sleep mode = %e<APSleepState> ");
265216,543217664,0,0,PLAT_AP,PLA_DRIVER,apmuSetUsim1LatchFlag_1,P_VALUE,swLogPrintf("AONIO apmuSetUsim1LatchFlag = %d ");
265216,543219712,0,0,PLAT_AP,PLA_DRIVER,apmuSetAONIOLatchFlag_1,P_VALUE,swLogPrintf("AONIO apmuSetAONIOLatchFlag = %d ");
265216,543222016,0,0,PLAT_AP,PLA_DRIVER,apmuAONIOLatchRelease_1,P_VALUE,swLogPrintf("AONIO Release , usim1Latch = %d , userAonioLatch = %d ");
265216,543224064,0,0,PLAT_AP,PLA_DRIVER,apmuAONIOLatchApply_1,P_VALUE,swLogPrintf("AONIO Need Latch , usim1Latch = %d , userAonioLatch = %d ");
265216,543226624,0,0,PLAT_AP,PLA_DRIVER,pmuLpuartPreSleepProcess_lpuart_status,P_WARNING,swLogPrintf("lpuart status , iir: 0x%x , fcsr: 0x%x , tcr: 0x%x , tsr: 0x%x ");
265216,543229951,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_0,P_VALUE,swLogPrintf("Enter ASMB+MSMB mode ");
265216,543231999,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_1,P_VALUE,swLogPrintf("Enter ASMB+MSMB+CSMB mode ");
265216,543232000,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_2,P_VALUE,swLogPrintf("CP State < = CP_STATE_IDLE ( %d ) ");
265216,543236095,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_3,P_VALUE,swLogPrintf("Sleep1 Failed there is pending interrupt ");
265216,543236352,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_4,P_VALUE,swLogPrintf("NVIC ISPR 0x%x ICSR 0x%x \r \n ");
265216,543238912,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_5,P_VALUE,swLogPrintf("XIC0 0x%x XIC1 0x%x XIC2 0x%x XIC3 0x%x \r \n ");
265216,543242239,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_6,P_SIG,swLogPrintf("AP allow to enter hib but enter sleep2 because of cp ");
265216,543244287,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_7,P_VALUE,swLogPrintf("Enter ASMB+CSMB mode ");
265216,543246335,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_8,P_VALUE,swLogPrintf("Enter ASMB mode ");
265216,543248383,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_9,P_VALUE,swLogPrintf("Enter ASMB mode ");
265216,543248384,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_10,P_VALUE,swLogPrintf("CP State < = CP_STATE_CS1 ( %d ) ");
265216,543252479,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_11,P_VALUE,swLogPrintf("Sleep2 Failed there is pending interrupt ");
265216,543252736,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_12,P_VALUE,swLogPrintf("NVIC ISPR 0x%x ICSR 0x%x \r \n ");
265216,543255296,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_13,P_VALUE,swLogPrintf("XIC0 0x%x XIC1 0x%x XIC2 0x%x XIC3 0x%x \r \n ");
265216,543258623,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_14,P_VALUE,swLogPrintf("Enter None Ret mode ");
265216,543258624,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_15,P_VALUE,swLogPrintf("CP State < = CP_STATE_CS2 ( %d ) ");
265216,543262719,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_19,P_SIG,swLogPrintf("Change Fullimage boot flag to hibernate ");
265216,543264767,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_16,P_VALUE,swLogPrintf("Hibernate Failed there is pending interrupt ");
265216,543265024,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_17,P_VALUE,swLogPrintf("NVIC ISPR 0x%x ICSR 0x%x \r \n ");
265216,543267584,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_18,P_VALUE,swLogPrintf("XIC0 0x%x XIC1 0x%x XIC2 0x%x XIC3 0x%x \r \n ");
265216,543270400,0,0,PLAT_AP,PLA_DRIVER,apmuPrintBootTimeStamp_0,P_VALUE,swLogPrintf("BootTime Print: Pre Paging SlowCnt = %d , %d , %d , %d , %d , %d , %d ");
265216,543272448,0,0,PLAT_AP,PLA_DRIVER,apmuPrintBootTimeStamp_1,P_VALUE,swLogPrintf("BootTime Print: Post Paging SlowCnt = %d , %d , %d , %d , %d , %d , %d ");
265216,543273216,0,0,PLAT_AP,PLA_DRIVER,apmuPrintBootTimeStamp_2,P_VALUE,swLogPrintf("Last Sc Ratio = %d , slowCnt when ratio change = %d ");
265216,543277055,0,0,PLAT_AP,PLA_DRIVER,atwait_expired_1,P_VALUE,swLogPrintf("Wait AT Timer Expired ");
265216,543277056,0,0,PLAT_AP,PLA_DRIVER,at_wait_start_1,P_VALUE,swLogPrintf("Wait AT Timer Start-%u ");
265216,543281151,0,0,PLAT_AP,PLA_DRIVER,at_wait_start_2,P_VALUE,swLogPrintf("Wait AT Timer New Timer ");
265216,543281152,0,0,PLAT_AP,PLA_DRIVER,at_wait_start_3,P_WARNING,swLogPrintf("Timer Handle Error-0x%x ");
265216,543283200,0,0,PLAT_AP,PLA_DRIVER,pmuUsrAddSlpDelay_0,P_VALUE,swLogPrintf("User Change Sleep Delay-value = %d ");
265216,543285248,0,0,PLAT_AP,PLA_DRIVER,pmuUsrAddSlpDelay_1,P_VALUE,swLogPrintf("User Add Sleep Delay-value = %d ");
265216,543289343,0,0,PLAT_AP,PLA_DRIVER,pmuUsrAddSlpDelay_2,P_VALUE,swLogPrintf("User Create New Sleep Delay ");
265216,543289344,0,0,PLAT_AP,PLA_DRIVER,pmuUsrAddSlpDelay_3,P_WARNING,swLogPrintf("User Add Delay Error-0x%x ");
265216,543291392,0,0,PLAT_AP,PLA_DRIVER,apmuCPStartCheck_1,P_VALUE,swLogPrintf("Time to CP Wakeup = 0x%x ms ");
265216,543295487,0,0,PLAT_AP,PLA_DRIVER,apmuCPStartCheck_2,P_VALUE,swLogPrintf("create modem timer ");
265216,543296000,0,0,PLAT_AP,PLA_DRIVER,apmuIntInit_1,P_VALUE,swLogPrintf("Wakeup SW Sc = %d , BTMsCnt = %d , Current SC = %d ");
265216,543298560,0,0,PLAT_AP,PLA_DRIVER,apmuGetPMUSettings_1,P_VALUE,swLogPrintf("PmuEnMagic = 0x%x , slpdepth = %d , defaultState = %d , voteMask = %d , FullImgReason = %e<toFullImageBranch> \n ");
265216,543299584,0,0,PLAT_AP,PLA_DRIVER,pmuRegisterUsrSlpModeCb_1,P_VALUE,swLogPrintf("User Sleep Mode Control Callback = 0x%x ");
265216,543301632,0,0,PLAT_AP,PLA_DRIVER,pmuHasNearHibtimer_2,P_VALUE,swLogPrintf("DeepSlp Timer Can Sleep: Next DeepSleep Timer = %u ms ");
265216,543303680,0,0,PLAT_AP,PLA_DRIVER,pmuHasNearHibtimer_1,P_VALUE,swLogPrintf("DeepSlp Timer Can not Sleep: Near DeepSleep Timer = %u ms ");
265216,543305728,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeConsiderCPSlpMode_0,P_VALUE,swLogPrintf("CP need copy measure code = %d ");
265216,543307776,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeConsiderCPSlpMode_2,P_VALUE,swLogPrintf("CP need copy measure code = %d ");
265216,543310080,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeConsiderCPSlpMode_1,P_VALUE,swLogPrintf("Caculate CP Sleep Time , Old = %u New = %u ");
265216,543311872,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeBeforeCPWakeup_2,P_VALUE,swLogPrintf("CP need copy measure code = %d ");
265216,543314176,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeBeforeCPWakeup_1,P_VALUE,swLogPrintf("Caculate CP Sleep Time Before CP Start , Old = %u New = %u ");
265216,543315968,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_0,P_VALUE,swLogPrintf("Paging deepest sleep mode = %d ");
265216,543320063,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_1,P_VALUE,swLogPrintf("Paging deepsleep failed , go to PagingSlp1 ");
265216,543320320,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_2,P_VALUE,swLogPrintf("CP SleepTime = %u ms AP nearHibTime = %u ms \n ");
265216,543324159,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_3,P_WARNING,swLogPrintf("Flash Write Error , need erase and rewrite again ");
265216,543324160,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_4,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543327232,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_5,P_SIG,swLogPrintf("Enter Paging Hibernate %u ms PreSlp = %u ms minTimeL1 = %u Wakeup SC = %u CurrentSC = %u ");
265216,543329280,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_6,P_SIG,swLogPrintf("Enter Paging Sleep2 %u ms PreSlp = %u ms minTimeL1 = %u Wakeup SC = %u CurrentSC = %u ");
265216,543330304,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_7,P_SIG,swLogPrintf("Failed to enter DeepSlp , there is pending interrupt , lowPowerState = %d ");
265216,543334399,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_0,P_SIG,swLogPrintf("Vote change in Paging Sleep1 ");
265216,543334656,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_1,P_VALUE,swLogPrintf("CP SleepTime = %u ms AP nearHibTime = %u ms \n ");
265216,543336448,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_3,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543339520,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_2,P_SIG,swLogPrintf("Enter Paging Sleep1 %u ms PreSlp = %u ms minTimeL1 = %u Wakeup SC = %u CurrentSC = %u ");
265216,543340544,0,0,PLAT_AP,PLA_DRIVER,pmuTryHibernate_0,P_VALUE,swLogPrintf("sleep time < usb sleep thd ( %d ) ");
265216,543342848,0,0,PLAT_AP,PLA_DRIVER,pmuTryHibernate_1,P_VALUE,swLogPrintf("MinTime is L1 = %u MinTime %u ms \n ");
265216,543345152,0,0,PLAT_AP,PLA_DRIVER,pmuTryHibernate_2,P_VALUE,swLogPrintf("Hibernate Time Not Enough %u , %u ms , flash_write_time = %d \n ");
265216,543348735,0,0,PLAT_AP,PLA_DRIVER,pmuTryHibernate_3,P_VALUE,swLogPrintf("abort sleep , interrupt make a task unblock \n ");
265216,543350783,0,0,PLAT_AP,PLA_DRIVER,pmuTryHibernate_4,P_WARNING,swLogPrintf("Flash Write Error , need erase and rewrite again ");
265216,543350784,0,0,PLAT_AP,PLA_DRIVER,pmuTryHibernate_5,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543353856,0,0,PLAT_AP,PLA_DRIVER,Enter_Hibernate,P_SIG,swLogPrintf("Enter Hibernate %u ms PreSlp = %u ms Wakeup SC = %u minTimeL1 = %u , CurrentSC = %u ");
265216,543356927,0,0,PLAT_AP,PLA_DRIVER,Exit_Hibernate,P_SIG,swLogPrintf("Failed to enter hibernate , there is pending interrupt ");
265216,543356928,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_0,P_VALUE,swLogPrintf("sleep time < usb sleep thd ( %d ) ");
265216,543359232,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_1,P_VALUE,swLogPrintf("MinTime is L1 = %u MinTime %u ms \n ");
265216,543361536,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_2,P_VALUE,swLogPrintf("Sleep2 Time Not Enough , cpWakeupMs = %ums , apWakeup = %ums , flash_write_time = %d \n ");
265216,543365119,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_3,P_SIG,swLogPrintf("abort sleep , interrupt make a task unblock \n ");
265216,543367167,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_4,P_WARNING,swLogPrintf("Flash Write Error , need erase and rewrite again ");
265216,543367168,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_5,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543370240,0,0,PLAT_AP,PLA_DRIVER,Enter_Sleep2,P_SIG,swLogPrintf("Enter Sleep2 %u ms PreSlp = %u ms Wakeup SC = %u minTimeL1 = %u , CurrentSC = %u ");
265216,543373311,0,0,PLAT_AP,PLA_DRIVER,Exit_Sleep2,P_SIG,swLogPrintf("Failed to enter Sleep2 , there is pending interrupt ");
265216,543375359,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_000,P_WARNING,swLogPrintf("Detect Hib Timer Change , retry DeepSleep ");
265216,543375360,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_00,P_VALUE,swLogPrintf("sleep time < usb sleep thd ( %d ) ");
265216,543379455,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_0,P_VALUE,swLogPrintf("worth sleep ");
265216,543381503,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_2,P_VALUE,swLogPrintf("task unblock , abort sleep ");
265216,543381504,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_10,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543384576,0,0,PLAT_AP,PLA_DRIVER,Enter_Sleep1,P_VALUE,swLogPrintf("Enter Sleep1: %u ms PreSlp = %u ms Wakeup SC = %u minTimeL1 = %u , Current SC = %u ");
265216,543386112,0,0,PLAT_AP,PLA_DRIVER,Enter_Active_3,P_VALUE,swLogPrintf("EC618 Active Sleep1 @ SwWakeupSc = %u , SlowCnt after sleep1 Callback = %u , Cur HibCnt = %u ");
265216,543387648,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_81,P_VALUE,swLogPrintf("Sleep1 Wakeup , Time to CP Wakeup = 0x%x ms ");
265216,543391743,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_810,P_VALUE,swLogPrintf("create modem timer ");
265216,543391744,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_91,P_VALUE,swLogPrintf("Sleep1 Failed-%u ");
265216,543395839,0,0,PLAT_AP,PLA_DRIVER,apmuCheckHibTimeNeedUpdate_1,P_SIG,swLogPrintf("Cp PreSync Down , Set BT Precise Flag ");
265216,543395840,0,0,PLAT_AP,PLA_DRIVER,pmuEnterTickless_81,P_SIG,swLogPrintf("Hibernate Failed reason = %u ");
265216,543397888,0,0,PLAT_AP,PLA_DRIVER,pmuEnterTickless_82,P_SIG,swLogPrintf("Sleep2 Failed reason = %u ");
265216,543399936,0,0,PLAT_AP,PLA_DRIVER,pmuEnterTickless_83,P_VALUE,swLogPrintf("Sleep1 result = %u ");
265216,543402496,0,0,PLAT_AP,PLA_DRIVER,apmuCPSwPowerOn_2,P_VALUE,swLogPrintf("CP Power On: cpState = %d , apLLBootFlag = %d , csmbOn = %d ");
265216,543404032,0,0,PLAT_AP,PLA_DRIVER,apmuCPSwPowerOn_3,P_VALUE,swLogPrintf("CP Power On flow cost %d cycles ");
265216,543406592,0,0,PLAT_AP,PLA_DRIVER,apmuCaculateCpSleepMs_0,P_VALUE,swLogPrintf("curr hfnsfnsbn is 0x%X , cp wakeup hfnsfnsbn is 0x%X delta = %d ms ");
265216,543409408,0,0,PLAT_AP,PLA_DRIVER,apmuGetDefaultTimingCfg_1,P_VALUE,swLogPrintf("PmuTiming CodeRunTime , Pre = %d , %d , %d , Post = %d , %d , %d ");
265216,543410944,0,0,PLAT_AP,PLA_DRIVER,apmuGetDefaultTimingCfg_2,P_VALUE,swLogPrintf("PmuTiming FlashWrTime = %d , WorthTime = %d , %d , %d ");
265216,543413504,0,0,PLAT_AP,PLA_DRIVER,apmuSetTimingCfg_1,P_VALUE,swLogPrintf("PmuTiming CodeRunTime , Pre = %d , %d , %d , Post = %d , %d , %d ");
265216,543415040,0,0,PLAT_AP,PLA_DRIVER,apmuSetTimingCfg_2,P_VALUE,swLogPrintf("PmuTiming FlashWrTime = %d , WorthTime = %d , %d , %d ");
265216,543416832,0,0,PLAT_AP,PLA_DRIVER,pmuCheckCodeRunTimeEnd_1,P_ERROR,swLogPrintf("!!!!!!! PMU Run Time Checker %d OverRange , %d>%d !!!!!!!!! ");
265216,543418880,0,0,PLAT_AP,PLA_DRIVER,pmuCheckCodeRunTimeEnd_2,P_VALUE,swLogPrintf("!!!!!!! PMU Run Time Checker %d Too Long , %d<<%d !!!!!!!!! ");
265216,543420416,0,0,PLAT_AP,PLA_DRIVER,timerListAonAdd_0,P_VALUE,swLogPrintf("HibTimer: Aontimer %d add to list ");
265216,543422464,0,0,PLAT_AP,PLA_DRIVER,timerListAonDel_0,P_VALUE,swLogPrintf("HibTimer: Aontimer %d delete from list ");
265216,543424512,0,0,PLAT_AP,PLA_DRIVER,hibTimerAdd_0,P_WARNING,swLogPrintf("HibTimer: TimerList full ID = %d ");
265216,543426560,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrAdd_0,P_WARNING,swLogPrintf("HibTimer: User TimerList full ID = %d ");
265216,543428864,0,0,PLAT_AP,PLA_DRIVER,hibTimerDelete_0,P_VALUE,swLogPrintf("HibTimer: hibtimer delete success ID = %d index = %d ");
265216,543430656,0,0,PLAT_AP,PLA_DRIVER,hibTimerDelete_1,P_WARNING,swLogPrintf("HibTimer: hibtimer delete failed ID = %d ");
265216,543432960,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrDelete_0,P_VALUE,swLogPrintf("HibTimer: Usr hibtimer delete success ID = %d index = %d ");
265216,543434752,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrDelete_1,P_WARNING,swLogPrintf("HibTimer: User hibtimer delete failed ID = %d ");
265216,543437568,0,0,PLAT_AP,PLA_DRIVER,hibTimerCalculateTargetHibCnt_0,P_VALUE,swLogPrintf("HibTimer: Timer ID = %d , Handle = 0x%x , TargetValue = 0x%x , i = %d ");
265216,543439616,0,0,PLAT_AP,PLA_DRIVER,hibTimerCalculateTargetHibCnt_1,P_VALUE,swLogPrintf("HibTimer: User Timer ID = %d , Handle = 0x%x , TargetValue = 0x%x , i = %d ");
265216,543441408,0,0,PLAT_AP,PLA_DRIVER,hibTimerCalculateTargetHibCnt_2,P_VALUE,swLogPrintf("HibTimer: Aon Timer ID = %d , Handle = 0x%x , TargetValue = 0x%x ");
265216,543443200,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrGetRemainMs_0,P_VALUE,swLogPrintf("HibTimer: User Timer ID = %d , Remain Time = %d ms ");
265216,543445248,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrGetRemainMs_1,P_VALUE,swLogPrintf("HibTimer: User Timer ID = %d , Remain Time = %d ms ");
265216,543447040,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrGetRemainMs_2,P_VALUE,swLogPrintf("HibTimer: User Timer not exist , timerId = %d ");
265216,543451135,0,0,PLAT_AP,PLA_DRIVER,hibTimerCheckFlashUpdate_0,P_VALUE,swLogPrintf("HibTimer: DeepSleep Timer Need Update Flash ");
265216,543451392,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_1,P_VALUE,swLogPrintf("HibTimer: Timer Exceed ID = %d , Exceed HibCnt = %d ");
265216,543453440,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_2,P_VALUE,swLogPrintf("HibTimer: Timer In Advance ID = %d , In Advance HibCnt = %d ");
265216,543455744,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_3,P_VALUE,swLogPrintf("HibTimer: Start Timer ID = %d , Remain HibCnt = %d , Remain ms = %d \n ");
265216,543457536,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_4,P_VALUE,swLogPrintf("HibTimer: User Timer Exceed ID = %d , Exceed HibCnt = %d ");
265216,543459584,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_5,P_VALUE,swLogPrintf("HibTimer: User Timer In Advance ID = %d , In Advance HibCnt = %d ");
265216,543461888,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_6,P_VALUE,swLogPrintf("HibTimer: Start User Timer ID = %d , Remain HibCnt = %d , Remain ms = %d \n ");
265216,543463936,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_7,P_VALUE,swLogPrintf("HibTimer: Aon Timer After Slp , curHibCnt = 0x%x , targetCnt = 0x%x , remainMs = %d ");
265216,543466496,0,0,PLAT_AP,PLA_DRIVER,hibTimerBTCompensate_1,P_SIG,swLogPrintf("HibTimer BT Compensate: Timer ID = %d , remain_ms = %u to %u , CurHibCnt = %u , TarHibCnt = %u ");
265216,543468544,0,0,PLAT_AP,PLA_DRIVER,hibTimerBTCompensate_2,P_SIG,swLogPrintf("User HibTimer BT Compensate: Timer ID = %d , remain_ms = %u to %u , CurHibCnt = %u , TarHibCnt = %u ");
265216,543470592,0,0,PLAT_AP,PLA_DRIVER,hibTimerBTCompensate_3,P_SIG,swLogPrintf("Aon HibTimer BT Compensate: Timer ID = %d , remain_ms = %u to %u , CurHibCnt = %u , TarHibCnt = %u ");
265216,543471872,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_1,P_VALUE,swLogPrintf("HibTimer: Timer Exceed ID = %d , Exceed HibCnt = %d ");
265216,543473920,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_2,P_VALUE,swLogPrintf("HibTimer: Timer In Advance ID = %d , Remain HibCnt = %d ");
265216,543476480,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_3,P_VALUE,swLogPrintf("HibTimer: Check Wakeup Timer Id = %d , %d , Remain HibCnt = %d about %d ms \n ");
265216,543478016,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_4,P_VALUE,swLogPrintf("HibTimer: Timer Nearly trigger , Id = %d remain = %d ms ");
265216,543480064,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_5,P_VALUE,swLogPrintf("HibTimer: sw cnt id = %d , target = %d ");
265216,543482112,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_7,P_VALUE,swLogPrintf("HibTimer: User Timer Exceed ID = %d , Exceed HibCnt = %d ");
265216,543484160,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_8,P_VALUE,swLogPrintf("HibTimer: User Timer In Advance ID = %d , Remain HibCnt = %d ");
265216,543486720,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_9,P_VALUE,swLogPrintf("HibTimer: Check Wakeup Timer User Id = %d , %d , HibCnt = %d about %d ms \n ");
265216,543488256,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_10,P_VALUE,swLogPrintf("HibTimer: User Timer Nearly trigger , Id = %d remain = %d ms ");
265216,543490304,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_11,P_VALUE,swLogPrintf("HibTimer: Aon Timer %d need wakeup remain = %d ms ");
265216,543492352,0,0,PLAT_AP,PLA_DRIVER,hibTimerGetNearestMs_0,P_VALUE,swLogPrintf("HibTimer: Remain HibCnt = %d , ID = %d ");
265216,543494400,0,0,PLAT_AP,PLA_DRIVER,hibTimerGetNearestMs_1,P_VALUE,swLogPrintf("User HibTimer: Remain HibCnt = %d , ID = %d ");
265216,543496448,0,0,PLAT_AP,PLA_DRIVER,hibTimerGetNearestMs_2,P_VALUE,swLogPrintf("Aon HibTimer: Aon Timer %d , remain %d hibCnt ");
265216,543498752,0,0,PLAT_AP,PLA_DRIVER,apmuSdkFlashWrReq_1,P_VALUE,swLogPrintf("Flash Write Request ID = %d , Write Flag = 0x%x , apFlashWrBm = 0x%x ");
265216,543500288,0,0,PLAT_AP,PLA_DRIVER,apmuSdkFlashBlockBeWr_1,P_WARNING,swLogPrintf("Check whether Flash block need Write , request ID = %d not valid , return FALSE ");
265216,543502336,0,0,PLAT_AP,PLA_DRIVER,apmuTestFlashWrReq_1,P_WARNING,swLogPrintf("Test Flash Wr Flag = 0x%x ");
265216,543505152,0,0,PLAT_AP,PLA_DRIVER,apmuTestPrintFlashFlag_1,P_WARNING,swLogPrintf("Print Flash Wr Flag = 0x%x , Clr Flag = 0x%x APBitmap = 0x%x , CPBitmap = 0x%x ");
265216,543508479,0,0,PLAT_AP,PLA_DRIVER,apmuGetPhyFlashWrReq_0,P_VALUE,swLogPrintf("apmuGetPhyFlashWrReq , cp no need to write flash ");
265216,543508480,0,0,PLAT_AP,PLA_DRIVER,apmuGetPhyFlashWrReq_1,P_VALUE,swLogPrintf("apmuGetPhyFlashWrReq , cpFlashWr_bm = 0x%x ");
265216,543512575,0,0,PLAT_AP,PLA_DRIVER,apmuRawFlashRGCntWrite_1,P_ERROR,swLogPrintf("Erase Flash Error!!! ");
265216,543514623,0,0,PLAT_AP,PLA_DRIVER,apmuRawFlashRGCntWrite_2,P_ERROR,swLogPrintf("Write Flash Cnt Error!!! ");
265216,543516671,0,0,PLAT_AP,PLA_DRIVER,apmuRawFlashRGCntWrite_3,P_ERROR,swLogPrintf("Erase Flash Error in Paging Image!!! ");
265216,543518719,0,0,PLAT_AP,PLA_DRIVER,apmuRawFlashRGCntWrite_4,P_ERROR,swLogPrintf("Write Flash Cnt Error in Paging Image!!! ");
265216,543519232,0,0,PLAT_AP,PLA_DRIVER,apmuRawFlashRGCntWrite_5,P_VALUE,swLogPrintf("Flash RG Cnt update time1 = %d , time2 = %d , time3 = %d ");
265216,543521280,0,0,PLAT_AP,PLA_DRIVER,pmuRawFlashRGIntegrityCheck_0,P_VALUE,swLogPrintf("Raw Flash Integrity Check Failed , Item = %d BlockNum = %d WriteCnt = 0x%x ");
265216,543524352,0,0,PLAT_AP,PLA_DRIVER,apmuRawFlashInitCheck_1,P_VALUE,swLogPrintf("CopyNum = %d Raw Flash PlatPs = 0x%x , 0x%x , 0x%x , 0x%x , Phy = 0x%x , 0x%x ");
265216,543525120,0,0,PLAT_AP,PLA_DRIVER,apmuRawFlashInitCheck_2,P_VALUE,swLogPrintf("Invalid Flash Sector , CopyNum = %d , Item = %d ");
265216,543528448,0,0,PLAT_AP,PLA_DRIVER,apmuRawFlashInitCheck_3,P_VALUE,swLogPrintf("CopyNum = %d Raw Flash PlatPs = 0x%x , 0x%x , 0x%x , 0x%x , Phy = 0x%x , 0x%x ");
265216,543529216,0,0,PLAT_AP,PLA_DRIVER,apmuCheckAndEraseFlash_0,P_SIG,swLogPrintf("cpflashWrMap = 0x%x , gSdkFlashOperate.cpFlashWr_bm = 0x%x ");
265216,543531520,0,0,PLAT_AP,PLA_DRIVER,apmuCheckAndEraseFlash_1,P_SIG,swLogPrintf("Start Erase Item = %d , Erase Cnt = %x , Region = %d ");
265216,543535103,0,0,PLAT_AP,PLA_DRIVER,apmuCheckAndEraseFlash_2,P_ERROR,swLogPrintf("Write Flash Cnt Error ");
265216,543536384,0,0,PLAT_AP,PLA_DRIVER,apmuGetCurRegionInfo_0,P_INFO,swLogPrintf("Raw flash Region Info , PlatPs = %d , %d , %d , %d , Phy = %d , %d ");
265216,543538432,0,0,PLAT_AP,PLA_DRIVER,apmuGetCurRegionInfo_1,P_INFO,swLogPrintf("CopyNum = 0 Raw flash Region Info , PlatPs = 0x%x , 0x%x , 0x%x , 0x%x , Phy = 0x%x , 0x%x ");
265216,543540480,0,0,PLAT_AP,PLA_DRIVER,apmuGetCurRegionInfo_2,P_INFO,swLogPrintf("CopyNum = 1 Raw flash Region Info , PlatPs = 0x%x , 0x%x , 0x%x , 0x%x , Phy = 0x%x , 0x%x ");
265216,543542528,0,0,PLAT_AP,PLA_DRIVER,apmuGetCurRegionInfo_3,P_INFO,swLogPrintf("CopyNum = 2 Raw flash Region Info , PlatPs = 0x%x , 0x%x , 0x%x , 0x%x , Phy = 0x%x , 0x%x ");
265216,543544576,0,0,PLAT_AP,PLA_DRIVER,apmuGetCurRegionInfo_4,P_INFO,swLogPrintf("CopyNum = 3 Raw flash Region Info , PlatPs = 0x%x , 0x%x , 0x%x , 0x%x , Phy = 0x%x , 0x%x ");
265216,543545344,0,0,PLAT_AP,PLA_DRIVER,apmuCpFlashBmNeedUpdate_0,P_SIG,swLogPrintf("cpFlashBm Need Update , cpFlashWrBm = 0x%x ");
265216,543549439,0,0,PLAT_AP,PLA_DRIVER,apmuApFlashMemRestore_1,P_VALUE,swLogPrintf("AP Flash Memory Restore ");
265216,543551487,0,0,PLAT_AP,PLA_DRIVER,apmuUpdateFlash_0,P_ERROR,swLogPrintf("Raw flash write phy sector error ");
265216,543551488,0,0,PLAT_AP,PLA_DRIVER,apmuUpdateFlash_1,P_INFO,swLogPrintf("Raw flash readback phy sector Success , i = %d ");
265216,543554304,0,0,PLAT_AP,PLA_DRIVER,apmuUpdateFlash_2,P_ERROR,swLogPrintf("Raw flash readback phy sector Failed , i = %d , j = %d , WriteValue = 0x%x ReadBack = 0x%x ");
265216,543555840,0,0,PLAT_AP,PLA_DRIVER,apmuUpdateFlash_3,P_VALUE,swLogPrintf("Raw flash update for phy , cost time = %d cycles , gCPAonMsmbCopyValid = %d ");
265216,543559679,0,0,PLAT_AP,PLA_DRIVER,PmuUpdateFlash_4,P_ERROR,swLogPrintf("Raw flash write platps sector error ");
265216,543559680,0,0,PLAT_AP,PLA_DRIVER,apmuUpdateFlash_5,P_INFO,swLogPrintf("Raw flash readback platps sector Success , i = %d ");
265216,543562496,0,0,PLAT_AP,PLA_DRIVER,apmuUpdateFlash_6,P_INFO,swLogPrintf("Raw flash readback platps sector Failed , i = %d , j = %d , WriteValue = 0x%x ReadBack = 0x%x ");
265216,543563776,0,0,PLAT_AP,PLA_DRIVER,apmuUpdateFlash_7,P_VALUE,swLogPrintf("Raw flash update for platps , cost time = %d cycles ");
265216,543567871,0,0,PLAT_AP,PLA_DRIVER,apmuRecoverCPPmuMemory_2,P_VALUE,swLogPrintf("CP Never request to write flash ");
265216,543569919,0,0,PLAT_AP,PLA_DRIVER,apmuRecoverCPPmuMemory_0,P_VALUE,swLogPrintf("Recover CP AonMem From MSMB ");
265216,543571967,0,0,PLAT_AP,PLA_DRIVER,apmuRecoverCPPmuMemory_1,P_VALUE,swLogPrintf("Recover CP AonMem From AP Flash ");
265216,543574015,0,0,PLAT_AP,PLA_DRIVER,slpManApplyPlatVoteHandle_0,P_WARNING,swLogPrintf("V-Apy with no name ");
265216,543576063,0,0,PLAT_AP,PLA_DRIVER,slpManApplyPlatVoteHandle_1,P_WARNING,swLogPrintf("V-Apy with invalid name ");
265216,543578111,0,0,PLAT_AP,PLA_DRIVER,slpManApplyPlatVoteHandle_3,P_WARNING,swLogPrintf("V-Apy Vote Handle Full ");
265216,543580159,0,0,PLAT_AP,PLA_DRIVER,slpManApplyPlatVoteHandle_4,P_WARNING,swLogPrintf("V-Apy Unknow ERROR ");
265216,543580416,0,0,PLAT_AP,PLA_DRIVER,slpManGivebackPlatVoteHandle_0,P_WARNING,swLogPrintf("V-Gbk Failed Invalid Handle = 0x%x , handle = %d ");
265216,543582464,0,0,PLAT_AP,PLA_DRIVER,slpManGivebackPlatVoteHandle_1,P_WARNING,swLogPrintf("V-Gbk Failed Sleep1 bitmap not Clear = 0x%x , handle = %d ");
265216,543584512,0,0,PLAT_AP,PLA_DRIVER,slpManGivebackPlatVoteHandle_2,P_WARNING,swLogPrintf("V-Gbk Failed Sleep2 bitmap not Clear = 0x%x , handle = %d ");
265216,543586560,0,0,PLAT_AP,PLA_DRIVER,slpManGivebackPlatVoteHandle_3,P_WARNING,swLogPrintf("V-Gbk Failed hib bitmap not Clear = 0x%x , handle = %d ");
265216,543588864,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteDisableSleep_0,P_WARNING,swLogPrintf("Platform Vote Invalid Handle = 0x%x <- %d , status = %d ");
265216,543591424,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteDisableSleep_1,P_VALUE,swLogPrintf("Platform Vote Result = 0x%x , 0x%x , 0x%x Handle = 0x%x , Return = %d ");
265216,543592960,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteEnableSleep_0,P_WARNING,swLogPrintf("Platform Vote Invalid Handle = 0x%x <- %d , status = %d ");
265216,543595520,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteEnableSleep_1,P_VALUE,swLogPrintf("Platform Vote Result = 0x%x , 0x%x , 0x%x Handle = 0x%x , Return = %d ");
265216,543596800,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteForceEnableSleep_0,P_WARNING,swLogPrintf("Platform Vote Invalid Handle = 0x x% <- %d , status = %d ");
265216,543599616,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteForceEnableSleep_1,P_VALUE,swLogPrintf("Platform Vote Result = 0x%x , 0x%x , 0x%x , Force Sleep Handle = %u , Return = %d ");
265216,543600640,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Expired,P_VALUE,swLogPrintf("User Deep Sleep Timer Expired ID = %d ");
265216,543602688,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_RegisterCb_0,P_ERROR,swLogPrintf("User HibTimer Callback is NULL , TimerID = %d ");
265216,543604992,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_RegisterCb_1,P_VALUE,swLogPrintf("User Register a Deep Sleep Timer Callback = 0x%x to TimerID = %d ");
265216,543606784,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_0,P_ERROR,swLogPrintf("User HibTimer timeout = 0 , TimerID = %d ");
265216,543609088,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_1,P_SIG,swLogPrintf("User DeepSleep Timer Renew ID = %d , ticks = %d ");
265216,543611136,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_2,P_SIG,swLogPrintf("User DeepSleep Timer Change Period ID = %d , ticks = %d ");
265216,543613184,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_3,P_SIG,swLogPrintf("Wakeup From User DeepSleep , Timer Restart ID = %d , ticks = %d ");
265216,543615232,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_4,P_SIG,swLogPrintf("User DeepSleep Timer New ID = %d , ticks = %d ");
265216,543617024,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Del_0,P_VALUE,swLogPrintf("Delete DeepSleep Timer of User ID = %d ");
265216,543619328,0,0,PLAT_AP,PLA_DRIVER,slpManGetWakeupSrc_1,P_VALUE,swLogPrintf("slpMan WakeupBm = 0x%x , GetWakeupSrc = %e<slpManWakeSrc_e> ");
265216,543621120,0,0,PLAT_AP,PLA_DRIVER,SlowCounter32KFreqSave_1,P_VALUE,swLogPrintf("32 KT Calibration Result = 0x%x ");
265216,543625215,0,0,PLAT_AP,PLA_DRIVER,SlowCounter32KTFreqGet_1,P_VALUE,swLogPrintf("32 K Calibration Result Invalid , use 32768 ");
265216,543625216,0,0,PLAT_AP,PLA_DRIVER,SlowCounter32KFreqReal_1,P_VALUE,swLogPrintf("32 K SlowCounter32KFreqReal = %u ");
265216,543629311,0,0,PLAT_AP,PLA_DRIVER,SlowCounterToSysTick_1,P_ERROR,swLogPrintf("Debug Assert: tmpSystick>0xffffffff ");
265216,543631359,0,0,PLAT_AP,PLA_DRIVER,SlowCounterToMs_1,P_ERROR,swLogPrintf("Debug Assert: tmpSc>0xffffffff ");
265216,543633407,0,0,PLAT_AP,PLA_DRIVER,SysTickToSlowCounter_1,P_ERROR,swLogPrintf("Debug Assert: tmpSc>0xffffffff ");
265216,543634432,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_e_1,P_ERROR,swLogPrintf("SCT ERROR! ErrStatus.masterErr: %d , ErrStatus.mgrErr: %d , ErrStatus.descErr: %d , RDErrMem: 0x%x , WTErrMem: 0x%x ");
265216,543637503,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_1,P_ERROR,swLogDump("SCT ERROR , SCT_RNDIS_PPP_CFG_REG: ");
265216,543639551,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_2,P_ERROR,swLogDump("SCT ERROR , SCT_COMM_CFG_REG: ");
265216,543641599,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_3,P_ERROR,swLogDump("SCT ERROR , SCT_CHANNELS_CFG_REG: ");
265216,543643647,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_4,P_ERROR,swLogDump("SCT ERROR , SCT_MEM_GUARD_CFG_REG: ");
265216,543645695,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_5,P_ERROR,swLogDump("SCT ERROR , SCT_CHS_STATE_REG: ");
265216,543647743,0,0,PLAT_AP,PLA_DRIVER,uldpUsbClrCmpltFlg_0,P_SIG,swLogPrintf("uldp help to clr xic in usb int context! ");
265216,543647744,0,0,PLAT_AP,PLA_DRIVER,vcom0_earlyinit_finish_1,P_WARNING,swLogPrintf("dlyalloc ret %d ");
265216,543649792,0,0,PLAT_AP,PLA_DRIVER,vcom1_earlyinit_finish_1,P_WARNING,swLogPrintf("dlyalloc ret %d ");
265216,543651840,0,0,PLAT_AP,PLA_DRIVER,vcom2_earlyinit_finish_1,P_WARNING,swLogPrintf("dlyalloc ret %d ");
265216,543653888,0,0,PLAT_AP,PLA_DRIVER,vcom3_earlyinit_finish_1,P_WARNING,swLogPrintf("dlyalloc ret %d ");
265216,543657983,0,0,PLAT_AP,PLA_DRIVER,ecm_func_hostdet_update_1,P_SIG,swLogPrintf("ecm host detect ");
265216,543660031,0,0,PLAT_AP,PLA_DRIVER,usb_ecm_ctrl_xfer_comp_1,P_INFO,swLogPrintf("");
265216,543660288,0,0,PLAT_AP,PLA_DRIVER,usb_ecm_ext_xfer_1,P_INFO,swLogPrintf("notify tx stat %d , xfer_cur_stat %d ");
265216,543662080,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_func_setup_1,P_DEBUG,swLogPrintf("dtoh , ext buf len %x ");
265216,543664128,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_func_setup_2,P_DEBUG,swLogPrintf("dtoh , int listbuf len %x ");
265216,543666176,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_func_setup_3,P_DEBUG,swLogPrintf("dtoh , intern enbuf len %x ");
265216,543668224,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_func_setup_4,P_DEBUG,swLogPrintf("htod , reqlen %x ");
265216,543670272,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_ep0_dout_stage_comp_1,P_DEBUG,swLogPrintf("MsgType %x ");
265216,543674367,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_ep0_dout_stage_comp_2,P_DEBUG,swLogDump("encap buf data: ");
265216,543676415,0,0,PLAT_AP,PLA_DRIVER,rndis_func_datain_1,P_DEBUG,swLogPrintf("notify xfer comp ");
265216,543678463,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_diep_xfer_cond_1,P_WARNING,swLogPrintf("ext xfer ignored ");
265216,543678464,0,0,PLAT_AP,PLA_DRIVER,rndis_diep_ext_xfer_req_1,P_DEBUG,swLogPrintf("xfer conn stat %d ");
265216,543680512,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_diep_xfer_finish_1,P_DEBUG,swLogPrintf("poll mode detected val %d ");
265216,543684607,0,0,PLAT_AP,PLA_DRIVER,rndis_func_gen_xfer_mux_src_1,P_DEBUG,swLogPrintf("internal encbuf overlap ");
265216,543686655,0,0,PLAT_AP,PLA_DRIVER,rndis_func_gen_xfer_mux_src_2,P_DEBUG,swLogPrintf("exernal encbuf overlap ");
265216,543686912,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_int_encbuf_xfer_1,P_DEBUG,swLogPrintf("notify tx stat %d , xfer_cur_stat %d ");
265216,543688960,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_int_listbuf_xfer_1,P_DEBUG,swLogPrintf("notify tx stat %d , xfer_cur_stat %d ");
265216,543691008,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_ext_xfer_1,P_DEBUG,swLogPrintf("notify tx stat %d , xfer_cur_stat %d ");
265216,543692800,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_auto_next_notify_1,P_DEBUG,swLogPrintf("ext_buf|int_encbuf|int_listbuf 0x%x ");
265216,543694848,0,0,PLAT_AP,PLA_DRIVER,vcom_tplfunc_setup_1,P_WARNING,swLogPrintf("rxtransfer wLength %d ");
265216,543696896,0,0,PLAT_AP,PLA_DRIVER,vcom_tplfunc_try_notify_xfer_1,P_INFO,swLogPrintf("notify tx stat %d ");
265216,543699200,0,0,PLAT_AP,PLA_DRIVER,t_usbd_multi_ep_record_1,P_WARNING,swLogPrintf("ep_idx %d , max_pktsz %d ");
265216,543700992,0,0,PLAT_AP,PLA_DRIVER,t_usbd_multi_ep_record_2,P_WARNING,swLogPrintf("inep mps 8 / 512 [ high / low 16 bits ] map 0x%x ");
265216,543705087,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_1,P_ERROR,swLogPrintf("pfunc_mtd->func_desc_get_cfginfo = = NULL ");
265216,543705088,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_2,P_ERROR,swLogPrintf("cfginfo.epin_num %d ");
265216,543707136,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_3,P_ERROR,swLogPrintf("cfginfo.epout_num %d ");
265216,543709440,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_4,P_ERROR,swLogPrintf("func_elem_idx %d , arr cnt %d ");
265216,543713279,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_5,P_ERROR,swLogPrintf("func_desc_get_clstype ");
265216,543713280,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_6,P_ERROR,swLogPrintf("cls_type %d ");
265216,543715584,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_8_1,P_ERROR,swLogPrintf("loop_idx %d , ep_idx %d ");
265216,543717632,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_8_2,P_ERROR,swLogPrintf("loop_idx %d , ep_idx %d , valid already ");
265216,543719936,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_8_5,P_WARNING,swLogPrintf("ep_idx %d , loop_idx %d , attr %d ");
265216,543721472,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_9_1,P_ERROR,swLogPrintf("ep_idx %d ");
265216,543723776,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_9_2,P_ERROR,swLogPrintf("ep_idx %d , arr_cnt %d ");
265216,543727615,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_9_3,P_ERROR,swLogPrintf("ep mapped already ");
265216,543728128,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_9_6,P_WARNING,swLogPrintf("ep_idx %d , loop_idx %d , attr %d ");
265216,543729664,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_10,P_WARNING,swLogPrintf("func_info_result32 0x%x ");
265216,543731968,0,0,PLAT_AP,PLA_DRIVER,usb_multi_ep0_dout_stage_comp_1,P_ERROR,swLogPrintf("p_usb_func %d , intf_idx %d ");
265216,543733760,0,0,PLAT_AP,PLA_DRIVER,usb_multi_ep0_dout_stage_comp_2,P_ERROR,swLogPrintf("intf_idx %d , bind_flag NULL ");
265216,543735808,0,0,PLAT_AP,PLA_DRIVER,usb_multi_ep0_dout_stage_comp_3,P_ERROR,swLogPrintf("intf_idx %d , pfunc_mtd NULL ");
265216,543737856,0,0,PLAT_AP,PLA_DRIVER,usb_multi_ep0_dout_stage_comp_4,P_ERROR,swLogPrintf("intf_idx %d , func_ep0_dout_stage_comp NULL ");
265216,543739904,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_1,P_ERROR,swLogPrintf("p_multidev_load->load_cnt %d error ");
265216,543742208,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_2_0,P_ERROR,swLogPrintf("load_idx %d , map_res_idx %d ");
265216,543744256,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_2_1,P_ERROR,swLogPrintf("usbd_mutli_func_tbl [ %d ] = = NULL , map_res_idx %d ");
265216,543746304,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_3,P_ERROR,swLogPrintf("usbd_mutli_bind_pfn_tbl [ %d ] = = NULL , map_res_idx %d ");
265216,543748610,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_4,P_WARNING,swLogPrintf("[ %d ] = %s , type = %d ");
265216,543750144,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_ccinst_fill_1,P_ERROR,swLogPrintf("p_multidev_load->load_cnt %d ");
265216,543752192,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_ccinst_fill_2_1,P_ERROR,swLogPrintf("usbd_mutli_func_tbl [ %d ] = = NULL ");
265216,543754752,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_ccinst_fill_2_2,P_ERROR,swLogPrintf("clstype %d , inst_id , maintp %d , subtp %d , ");
265216,543758335,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_ccinst_fill_3,P_WARNING,swLogPrintf("success ");
265216,543760383,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_1,P_ERROR,swLogPrintf("p_multidev_custom_org = = NULL ");
265216,543760384,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_2,P_WARNING,swLogPrintf("p_dev_name = = NULL , cust_idx %d ");
265216,543762432,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_3,P_WARNING,swLogPrintf("rndis filter , cust_idx %d ");
265216,543764480,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_4,P_WARNING,swLogPrintf("ecm filter , cust_idx %d ");
265216,543766528,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_5,P_WARNING,swLogPrintf("p_multidev_custom_filter->elem_cnt %d ");
265216,543768576,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_1,P_ERROR,swLogPrintf("p_multidev_load->load_stat %d ");
265216,543770624,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_3,P_ERROR,swLogPrintf("p_multidev_custom_filter->elem_cnt %d ");
265216,543772672,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_4_2,P_ERROR,swLogPrintf("elem_update_stat %d ");
265216,543774720,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_5,P_ERROR,swLogPrintf("cust_idx %d ");
265216,543776768,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_8,P_WARNING,swLogPrintf("finded result 0x%x after filter ");
265216,543778816,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_end_1,P_ERROR,swLogPrintf("fail %d ");
265216,543782911,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_end_2,P_ERROR,swLogPrintf("ccinst fill fail ");
265216,543782912,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_end_3,P_ERROR,swLogPrintf("fail %d ");
265216,543784960,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_1,P_ERROR,swLogPrintf("p_multidev_load->load_cnt %d ");
265216,543787264,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_2_1,P_ERROR,swLogPrintf("clstype_result32 0x%x , map_res_result32 = 0x%x ");
265216,543789056,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_2_2,P_ERROR,swLogPrintf("usbd_mutli_bind_pfn_tbl [ %d ] = = NULL ");
265216,543791360,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_3_1,P_ERROR,swLogPrintf("clstype_result32 0x%x , map_res_result32 = 0x%x ");
265216,543795199,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_3_2,P_ERROR,swLogPrintf("p_clsdev_base = = NULL ");
265216,543795712,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_5,P_WARNING,swLogPrintf("map_res_result32 = 0x%x , clstype_result32 0x%x , ulog_cls_entry 0x%x ");
265216,543799295,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_bind_update_1,P_ERROR,swLogPrintf("clstype fill fail ");
265216,543799296,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_usrcfg_global_init_1,P_ERROR,swLogPrintf("fail loc %d ");
265216,543803391,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_usrcfg_update_bind_1,P_ERROR,swLogPrintf("fail ");
265216,543804160,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_get_func_clstype_1,P_INFO,swLogPrintf("load_stat %x , func_idx %d , cls_type %d , ret%d ");
265216,543807487,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_libcall_cmndesc_1,P_ERROR,swLogPrintf("fail ");
265216,543807488,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_dev_extmsg_1,P_ERROR,swLogPrintf("usbd_mutli_bind_pfn_tbl [ %d ] = = NULL ");
265216,543809792,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_dev_extmsg_2,P_ERROR,swLogPrintf("%d , %d ");
265216,543813631,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_dev_extmsg_3,P_ERROR,swLogPrintf("para error ");
265216,543813888,0,0,PLAT_AP,PLA_DRIVER,ep_cfg_dump_1,P_ERROR,swLogPrintf("ep_idx %d , mps %d ");
265216,543815680,0,0,PLAT_AP,PLA_DRIVER,cfg_fifo_2,P_ERROR,swLogPrintf("totalused %x ");
265216,543817728,0,0,PLAT_AP,PLA_DRIVER,retwkups2_bkfifo_cfg_1,P_ERROR,swLogPrintf("totalused %x ");
265216,543820032,0,0,PLAT_AP,PLA_DRIVER,usbc_ctrl_epin_activate_1,P_WARNING,swLogPrintf("bkup_inep_dpid %x , epx %d ");
265216,543822080,0,0,PLAT_AP,PLA_DRIVER,usbc_ctrl_epout_activate_1,P_WARNING,swLogPrintf("bkup_oep_dpid %x , epx %d ");
265216,543823872,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_wkup_intr_00,P_WARNING,swLogPrintf("gintr_status.d32:%x ");
265216,543825920,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_resume_intr_00,P_WARNING,swLogPrintf("gpwrdn:%x ");
265216,543827968,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_reset_intr_1,P_WARNING,swLogPrintf("retval:%d ");
265216,543830016,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_reset_intr_00,P_WARNING,swLogPrintf("hibwkgpwrdn:%x ");
265216,543832320,0,0,PLAT_AP,PLA_DRIVER,usbc_backup_essregs_1_0,P_WARNING,swLogPrintf("pcgcctl :%x , dcfg 0x%x ");
265216,543834368,0,0,PLAT_AP,PLA_DRIVER,usbc_backup_essregs_1_1,P_WARNING,swLogPrintf("bkup_inep_dpid :%x , bkup_oep_dpid%x ");
265216,543836416,0,0,PLAT_AP,PLA_DRIVER,usbc_restore_ess_regs_1,P_WARNING,swLogPrintf("pcgcctl :%x , dcfg 0x%x ");
265216,543840255,0,0,PLAT_AP,PLA_DRIVER,usbc_restore_wait_restoredone_1,P_WARNING,swLogPrintf("restoredone timeout ");
265216,543840768,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_restore_1,P_WARNING,swLogPrintf("pcgcctl 0x%x , dcfg 0x%x , dctl :0x%x ");
265216,543842304,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_resume_intr_1,P_WARNING,swLogPrintf("dev stat:%x ");
265216,543846399,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_suspend_intr_0,P_WARNING,swLogPrintf("noret_hib_suspend already ");
265216,543846656,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_suspend_intr_1,P_WARNING,swLogPrintf("low_power %d , real_suspend:%d ");
265216,543850495,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_susp2hib_0,P_ERROR,swLogPrintf("real_suspend not match ");
265216,543852543,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_susp2hib_1,P_ERROR,swLogPrintf("susp_res_pair_need not match ");
265216,543852544,0,0,PLAT_AP,PLA_DRIVER,usb_trace_step_1,P_WARNING,swLogPrintf("step:%d ");
265216,543854848,0,0,PLAT_AP,PLA_DRIVER,usb_trace_step_2,P_WARNING,swLogPrintf("step:%d , gintsts = 0x%x ");
265216,543857408,0,0,PLAT_AP,PLA_DRIVER,usb_trace_iep_1,P_WARNING,swLogPrintf("or_intsts %x , iepctl %x , iepsz %x , stage_or_txfsts %x ");
265216,543858688,0,0,PLAT_AP,PLA_DRIVER,usb_trace_oep_type_1,P_WARNING,swLogPrintf("iep_or_oep = %d ");
265216,543861248,0,0,PLAT_AP,PLA_DRIVER,usb_trace_oep_1,P_WARNING,swLogPrintf("or_intsts %x , oepctl %x , oepsz %x ");
265216,543863040,0,0,PLAT_AP,PLA_DRIVER,usb_iep_trace_wrtxfifo_1,P_WARNING,swLogPrintf("wr start , epnum %x , txf_sts %x ");
265216,543865344,0,0,PLAT_AP,PLA_DRIVER,usb_iep_trace_wrtxfifo_2,P_WARNING,swLogPrintf("epnum %x , wr len %x , txf_sts %x ");
265216,543868927,0,0,PLAT_AP,PLA_DRIVER,usb_trace_setup_1,P_WARNING,swLogDump("setup data: ");
265216,543868928,0,0,PLAT_AP,PLA_DRIVER,usb_iep0_start_xfer_1,P_WARNING,swLogPrintf("xfer_len_or_size %x ");
265216,543871232,0,0,PLAT_AP,PLA_DRIVER,dataout_handler_1,P_WARNING,swLogPrintf("stg %x , remainlen %x ");
265216,543873024,0,0,PLAT_AP,PLA_DRIVER,usb_uldp_oep0_start_xfer_1,P_WARNING,swLogPrintf("xfer_len %x ");
265216,543877119,0,0,PLAT_AP,PLA_DRIVER,usbd_trace_ep0_setup_breakstage_1,P_WARNING,swLogPrintf("");
265216,543877120,0,0,PLAT_AP,PLA_DRIVER,usblpw_check_gpwrdn_lnstchg_1,P_WARNING,swLogPrintf("gpwrdn.b.linestate%d ");
265216,543879424,0,0,PLAT_AP,PLA_DRIVER,usblpw_noret_remote_wkup_1,P_SIG,swLogPrintf("pwr state %d , remote_wkup_en %d ");
265216,543881216,0,0,PLAT_AP,PLA_DRIVER,usblpw_noret_remote_wkup_2,P_WARNING,swLogPrintf("dev stat:%x ");
265216,543885311,0,0,PLAT_AP,PLA_DRIVER,usblpw_enable_lpusbwkup_src_1,P_VALUE,swLogPrintf("NVIC_GetPendingIRQ LpusbWakeup_IRQn true ");
265216,543885312,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_normal_0_1,P_VALUE,swLogPrintf("force_cfg_pwr_down %d ");
265216,543887360,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_normal_0_2,P_VALUE,swLogPrintf("force_cfg_pwr_down %d ");
265216,543889408,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_normal_1,P_VALUE,swLogPrintf("cur_pwr_state %d ");
265216,543891456,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_wkmon_0_1,P_VALUE,swLogPrintf("force_cfg_pwr_down 0x%x ");
265216,543893504,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_wkmon_0_2,P_VALUE,swLogPrintf("cur_pwr_state 0x%x ");
265216,543895552,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_wkmon_1,P_VALUE,swLogPrintf("cur_pwr_state 0x%x ");
265216,543897600,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_0_0,P_VALUE,swLogPrintf("ISER %x ");
265216,543899648,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_0_1,P_VALUE,swLogPrintf("force_cfg_pwr_down 0x%x ");
265216,543901696,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_0_2,P_VALUE,swLogPrintf("cur_pwr_state 0x%x ");
265216,543904000,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_abort_proc_wkmon_1,P_VALUE,swLogPrintf("wkmon_ll_enter_ctx %d , wkmon_lpusbwkup_flag %d ");
265216,543906304,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_break_1,P_VALUE,swLogPrintf("gpwr_cur %x , gpwr_prev %x , hold cnt %d reset ");
265216,543908608,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_break_2,P_VALUE,swLogPrintf("gpwr_cur %x , gpwr_prev %x , hold cnt %d reset , break2_cnt %d ");
265216,543910144,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_break_3,P_VALUE,swLogPrintf("break_cnt %x , break2_cnt %x ");
265216,543912192,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_match_2,P_VALUE,swLogPrintf("stage %d , detect gpwr ( 0x%x ) timeout ");
265216,543914496,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_match_3,P_VALUE,swLogPrintf("detect cnt %x , gpwr_cur %x , detect gpwr ( 0x%x ) ");
265216,543916032,0,0,PLAT_AP,PLA_DRIVER,usblpw_pre_restore_1,P_VALUE,swLogPrintf("detect gpwr 0x%x ");
265216,543918080,0,0,PLAT_AP,PLA_DRIVER,usblpw_pre_restore_2,P_VALUE,swLogPrintf("usblpw_get_cur_pwr_state %d ");
265216,543922175,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_hibslp2_try_stack_rest_1,P_WARNING,swLogPrintf("usblpw_retothwk_stackrest_chk_illegal ");
265216,543924223,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_hibslp2_try_stack_rest_2,P_WARNING,swLogPrintf("usblpw_retothwk_hibslp2_stack_restore fail ");
265216,543926271,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_slp1_try_stack_rest_1,P_WARNING,swLogPrintf("usblpw_retothwk_stackrest_chk_illegal ");
265216,543928319,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_slp1_try_stack_rest_2,P_WARNING,swLogPrintf("usblpw_retwkup_slp1_stack_restore fail ");
265216,543928320,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_wkmon_actv_proc_1,P_WARNING,swLogPrintf("retothwk wkmon stage %d not match ");
265216,543930368,0,0,PLAT_AP,PLA_DRIVER,usb_lpwkup_step_show_1,P_VALUE,swLogPrintf("usb_lpwkup_step 0x%x ");
265216,543934463,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_1,P_VALUE,swLogPrintf("reset ");
265216,543934464,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_4,P_VALUE,swLogPrintf("permit %d ");
265216,543936512,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_3,P_VALUE,swLogPrintf("dlychk %d ");
265216,543938560,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_5,P_VALUE,swLogPrintf("usbc_proc_susp2hib %d ");
265216,543940608,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_6,P_VALUE,swLogPrintf("premit_proc %d ");
265216,543944703,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_1_0,P_WARNING,swLogPrintf("guard none ");
265216,543944704,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_2_1,P_WARNING,swLogPrintf("invalid guard status %d ");
265216,543946752,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_2_2,P_VALUE,swLogPrintf("start %d ");
265216,543948800,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_4,P_VALUE,swLogPrintf("permit %d ");
265216,543950848,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_3,P_VALUE,swLogPrintf("dlychk %d ");
265216,543952896,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_5_1,P_VALUE,swLogPrintf("premit_proc %d ");
265216,543954944,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_5_2,P_VALUE,swLogPrintf("clear unexpect %d ");
265216,543956992,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_6,P_VALUE,swLogPrintf("unexpected guard state%d ");
265216,543961087,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_pre_recovery_0,P_WARNING,swLogPrintf("Disable LpusbWakeup_IRQn ");
265216,543961344,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_pre_recovery_1,P_VALUE,swLogPrintf("vbus_nvic rec %d , vbus_pad %d ");
265216,543963392,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_gint_regs,P_WARNING,swLogPrintf("gintsts 0x%x , gintmsk 0x%x ");
265216,543967231,0,0,PLAT_AP,PLA_DRIVER,usblpw_is_retothwks2_slp1_start_2,P_WARNING,swLogPrintf("Disable LpusbWakeup_IRQn ");
265216,543969279,0,0,PLAT_AP,PLA_DRIVER,usblpw_is_retothwks2_slp1_start_3,P_WARNING,swLogPrintf("usblpw_innophy_susp_chk_patch ");
265216,543969280,0,0,PLAT_AP,PLA_DRIVER,usblpw_is_retothwks2_slp1_start_4,P_WARNING,swLogPrintf("reg ctxstat %d unmatch ");
265216,543971584,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_1,P_VALUE,swLogPrintf("ctx state ( %d ) is not none , vbus_nvic rec %d , wkup hard restore skip ");
265216,543973632,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_2,P_VALUE,swLogPrintf("prev ctx state ( %d ) before slp1 not success , vbus [ 2 ] or pad [ 1 ] or vbus_nvic_r [ 0 ] 0x%x , wkup hard restore skip ");
265216,543975680,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_3,P_VALUE,swLogPrintf("vbus_nvic rec %d , vbus_pad %d ");
265216,543979519,0,0,PLAT_AP,PLA_DRIVER,usblpw_sleep1_later_recovery_2,P_ERROR,swLogPrintf("vbus_mode_en and vbus pad nvic enabled , conflict stat ");
265216,543980032,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_4,P_VALUE,swLogPrintf("hard_rest_warning or case 0x%x , usbslpmsk_en 0x%x , reg_retwkup_ctxstat 0x%x ");
265216,543982336,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_6,P_VALUE,swLogPrintf("pwr state 0x%x , bootstat 0x%x , lastwkup 0x%x , inimod 0x%x ");
265216,543983616,0,0,PLAT_AP,PLA_DRIVER,usblpw_sleep1_later_recovery_nvic,P_VALUE,swLogPrintf("NVIC 0x%x ");
265216,543986176,0,0,PLAT_AP,PLA_DRIVER,usblpw_sleep1_later_recovery_1,P_VALUE,swLogPrintf("pwr state 0x%x , bootstat 0x%x , lastwkup 0x%x ");
265216,543989759,0,0,PLAT_AP,PLA_DRIVER,usbpcd_retwkup_stack_restore_1,P_ERROR,swLogPrintf("early init fail ");
265216,543991807,0,0,PLAT_AP,PLA_DRIVER,usbpcd_retwkup_stack_restore_2,P_ERROR,swLogPrintf("early load fail ");
265216,543993855,0,0,PLAT_AP,PLA_DRIVER,usbpcd_retwkup_stack_restore_3,P_ERROR,swLogPrintf("retwkup restore fail ");
265216,543995903,0,0,PLAT_AP,PLA_DRIVER,usbpcd_init_pre_1,P_WARNING,swLogPrintf("clk ungated ");
265216,543997951,0,0,PLAT_AP,PLA_DRIVER,usbpcd_init_1,P_ERROR,swLogPrintf("early init fail ");
265216,543999999,0,0,PLAT_AP,PLA_DRIVER,usbpcd_init_2,P_ERROR,swLogPrintf("early load fail ");
265216,544002047,0,0,PLAT_AP,PLA_DRIVER,usbpcd_init_3,P_ERROR,swLogPrintf("dev init fail ");
265216,544004095,0,0,PLAT_AP,PLA_DRIVER,usbpcd_proc_sim_cfgreq_1,P_VALUE,swLogPrintf("sim usb init start ");
265216,544004352,0,0,PLAT_AP,PLA_DRIVER,adcProxyVBatCallback_1,P_VALUE,swLogPrintf("raw_result = 0x%x , vbat = 0x%x ");
265216,544006400,0,0,PLAT_AP,PLA_DRIVER,adcProxyThermalCallback_1,P_VALUE,swLogPrintf("rawResult = 0x%x , Thermal = 0x%x ");
265216,544008448,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Start_0,P_SIG,swLogPrintf("DeepSleep Timer Renew ID = %d , ticks = %d ");
265216,544010496,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Start_1,P_SIG,swLogPrintf("DeepSleep Timer Change Period ID = %d , ticks = %d ");
265216,544012544,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Start_2,P_SIG,swLogPrintf("Wakeup From DeepSleep , Timer Restart ID = %d , ticks = %d ");
265216,544014592,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Start_3,P_SIG,swLogPrintf("DeepSleep Timer New ID = %d , ticks = %d ");
265216,544016384,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Del_1,P_SIG,swLogPrintf("DeepSleep Timer Delete ID = %d ");
265216,544020479,0,0,PLAT_AP,PLA_DRIVER,OsaGetFlashValue_1,P_INFO,swLogPrintf("get cclk time value , file not exist , create default one ");
265216,544022527,0,0,PLAT_AP,PLA_DRIVER,OsaGetFlashValue_2,P_INFO,swLogPrintf("get cclk time value , file header error , create default one ");
265216,544024575,0,0,PLAT_AP,PLA_DRIVER,OsaGetFlashValue_3,P_INFO,swLogPrintf("cclk time value file read sucess ");
265216,544026623,0,0,PLAT_AP,PLA_DRIVER,OsaSetFlashValue_1,P_INFO,swLogPrintf("set cclk time value , file not exist , create default one ");
265216,544028671,0,0,PLAT_AP,PLA_DRIVER,OsaSetFlashValue_2,P_INFO,swLogPrintf("cclk time value file write sucess ");
265216,544029187,0,0,PLAT_AP,PLA_DRIVER,assert_func_1,P_ERROR,swLogPrintf("Assert , expr:%s , file: %s , line: %d \r \n ");
265216,544032767,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_1,P_ERROR,swLogPrintf("Can ' t open ' plat_config ' file , use the defult value ");
265216,544034815,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_2,P_ERROR,swLogPrintf("Can ' t read ' plat_config ' file header , use the defult value ");
265216,544034816,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_5,P_ERROR,swLogPrintf("' plat_config ' version:%d not right , use the defult value ");
265216,544037376,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_3,P_ERROR,swLogPrintf("' plat_config ' version:%d file body size not right: ( %u / %u ) , use the defult value ");
265216,544039424,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_4,P_ERROR,swLogPrintf("Can ' t read ' plat_config ' version:%d file body , or body not right , ( %u / %u ) , use the defult value ");
265216,544043007,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfig_1,P_ERROR,swLogPrintf("Can ' t open / create ' plat_config ' file , save plat_config failed ");
265216,544045055,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfig_2,P_ERROR,swLogPrintf("Write ' plat_config ' file header failed ");
265216,544047103,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfig_3,P_ERROR,swLogPrintf("Write ' plat_config ' file body failed ");
265216,544049151,0,0,PLAT_AP,PLA_DRIVER,BSP_SetFSAssertCount_0,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544051199,0,0,PLAT_AP,PLA_DRIVER,BSP_SetFSAssertCount_1,P_ERROR,swLogPrintf("Update fsAssertCount value error!!! ");
265216,544053247,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfigToRawFlash_1,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544055295,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfigToRawFlash_2,P_ERROR,swLogPrintf("Save plat config to raw flash error!!! ");
265216,544057343,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfigToRawFlash_3,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544059391,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfigToRawFlash_4,P_ERROR,swLogPrintf("Save plat config to raw flash error!!! ");
265216,544061439,0,0,PLAT_AP,PLA_DRIVER,BSP_WriteToRawFlash_1,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544063487,0,0,PLAT_AP,PLA_DRIVER,BSP_WriteToRawFlash_2,P_ERROR,swLogPrintf("Save plat config to raw flash error!!! ");
265216,544065535,0,0,PLAT_AP,PLA_DRIVER,BSP_WriteToRawFlash_3,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544067583,0,0,PLAT_AP,PLA_DRIVER,BSP_WriteToRawFlash_4,P_ERROR,swLogPrintf("Save plat config to raw flash error!!! ");
265216,544067840,0,0,PLAT_AP,PLA_DRIVER,BSP_GET_PLAT_CFG_3,P_WARNING,swLogPrintf("non-identical baud between fs ( %d ) & raw ( %d ) ! ");
265216,544070400,0,0,PLAT_AP,PLA_DRIVER,CLOCK_Trace_1,P_WARNING,swLogPrintf("Clock Trace , id = 0x%x isEnable = %d counter = %d , funcPtr = %x ");
265216,544072192,0,0,PLAT_AP,PLA_DRIVER,CLOCK_Trace_2,P_WARNING,swLogPrintf("Clock Trace , id = 0x%x counter = %d may overflow , funcPtr = %x ");
265216,544073984,0,0,PLAT_AP,PLA_DRIVER,CLOCK_clockEnable_1,P_WARNING,swLogPrintf("Clock Enable Failed , id = 0x%x counter = %d ");
265216,544075776,0,0,PLAT_AP,PLA_DRIVER,CLOCK_clockDisable_0,P_WARNING,swLogPrintf("Clock Disable check failed , id = 0x%x ");
265216,544078080,0,0,PLAT_AP,PLA_DRIVER,TIMER_netlightPWM_1,P_SIG,swLogPrintf("Netlight mode = %u Instance = %d ");
265216,544079872,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_init_1,P_WARNING,swLogPrintf("usb_wkup_pad_idx %d ");
265216,544082176,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_1_1,P_WARNING,swLogPrintf("filter reset detect evt %x , vbus %d ");
265216,544084224,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_1_2,P_WARNING,swLogPrintf("filter reset ( to ) evt %x , vbus %d ");
265216,544086272,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_1,P_WARNING,swLogPrintf("port filtered unstable evt %x , vbus %d ");
265216,544088320,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_2,P_WARNING,swLogPrintf("port vbus filter unstable level vbus last %d , vbus cur = %d ");
265216,544090112,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_3,P_WARNING,swLogPrintf("port filtered type2 ( to ) invalid vbus , evt %x , vbus 0 ");
265216,544092160,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_4,P_WARNING,swLogPrintf("port filtered type3 ( to ) invalid vbus , evt %x , vbus 1 ");
265216,544094464,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_5,P_WARNING,swLogPrintf("port vbus trigger warning , ctx stat not valid %x , vbus %d ");
265216,544096512,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_6,P_INFO,swLogPrintf("port vbus trigger , evt %x , vbus %d ");
265216,544100351,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_1,P_WARNING,swLogPrintf("BSP_UsbDeInit ");
265216,544102399,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_2,P_ERROR,swLogPrintf("BSP_UsbDeInit , ctx stat not match ");
265216,544104447,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_3,P_WARNING,swLogPrintf("BSP_UsbInit ");
265216,544106495,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_4,P_ERROR,swLogPrintf("BSP_UsbInit , ctx stat not match ");
265216,544106752,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_5,P_WARNING,swLogPrintf("port vbus last %d , vbus cur = %d ");
265216,544110591,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_4_1,P_WARNING,swLogPrintf("port stable wait evt change ");
265216,544110592,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_4_2,P_WARNING,swLogPrintf("port stable detect evt %x ");
265216,544112640,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_intr_cb_1,P_INFO,swLogPrintf("wkup_val:0x%x ");
265216,544115456,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_ccinfo_map_1,P_ERROR,swLogPrintf("clstype %d , inst_id %d , maintp %d , subtp %d ");
265216,544117504,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_ccinfo_map_2,P_ERROR,swLogPrintf("clstype %d , inst_id %d , maintp %d , subtp %d ");
265216,544118784,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_cfg_end_1,P_ERROR,swLogPrintf("p_multidev_load->load_cnt %x ");
265216,544121612,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidevstr_desc_1,P_DEBUG,swLogPrintf("cls_type %d , inst_id 0x%x , name %s , intf string %s ");
265216,544123649,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_cmndesc_1,P_DEBUG,swLogPrintf("name %s , cls = 0x%x , subcls 0x%x , protocol 0x%x ");
265216,544125700,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_ctrl_proc_1,P_DEBUG,swLogPrintf("cls_type = %d , inst_id %d , name %s , req 0x%x ");
265216,544127744,0,0,PLAT_AP,PLA_DRIVER,lpuart_recv_0,P_DEBUG,swLogPrintf("lpuart recv enter , iir: 0x%x , fcsr: 0x%x , tcr: 0x%x , tsr: 0x%x ");
265216,544129792,0,0,PLAT_AP,PLA_DRIVER,lpuart_recv_1,P_DEBUG,swLogPrintf("lpuart recv exit , iir: 0x%x , fcsr: 0x%x , tcr: 0x%x , tsr: 0x%x ");
265216,544131328,0,0,PLAT_AP,PLA_DRIVER,lpuart_wakeup_irq_1,P_SIG,swLogPrintf("LPUART->IIR:0x%x , LPUART->FCSR:0x%x ");
265216,544134144,0,0,PLAT_AP,PLA_DRIVER,lpuart_irq_0,P_DEBUG,swLogPrintf("Enter lpuart irq , iir: 0x%x , fcsr: 0x%x , tcr: 0x%x , tsr: 0x%x , rx_cnt:%d , ");
265216,544135168,0,0,PLAT_AP,PLA_DRIVER,lpuart_irq_3,P_DEBUG,swLogPrintf("CPU will transfer: %d ");
265216,544137216,0,0,PLAT_AP,PLA_DRIVER,lpuart_irq_2,P_DEBUG,swLogPrintf("DMA will transfer: %d ");
265216,544139264,0,0,PLAT_AP,PLA_DRIVER,lpuart_irq_4,P_DEBUG,swLogPrintf("Time out , CPU will transfer: %d ");
265216,544141824,0,0,PLAT_AP,PLA_DRIVER,CO_USART_IRQHandler_0,P_DEBUG,swLogPrintf("Enter co_uart irq , isr: 0x%x , fcnr: 0x%x , rx_cnt:%d ");
265216,544143360,0,0,PLAT_AP,PLA_DRIVER,CO_USART_IRQHandler_1,P_DEBUG,swLogPrintf("dma transfer done , cnt:%d ");
265216,544145664,0,0,PLAT_AP,PLA_DRIVER,CO_USART_DmaRxEvent_0,P_DEBUG,swLogPrintf("uart dma rx event , fcnr:%x , cnt:%d ");
265216,544149503,0,0,PLAT_AP,PLA_DRIVER,CO_USART_DmaRxEvent_1,P_DEBUG,swLogPrintf("uart dma rx complete ");
265216,544150016,0,0,PLAT_AP,PLA_DRIVER,USART_IRQHandler_0,P_DEBUG,swLogPrintf("isr:0x%x , fcnr_reg:0x%x , rx_cnt:%d ");
265216,544151552,0,0,PLAT_AP,PLA_DRIVER,USART_IRQHandler_1,P_INFO,swLogPrintf("dma transfer done , cnt:%d ");
265216,544153856,0,0,PLAT_AP,PLA_DRIVER,USART_DmaRxEvent_0,P_INFO,swLogPrintf("uart dma rx event , fcnr:%x , cnt:%d ");
265216,544157695,0,0,PLAT_AP,PLA_DRIVER,USART_DmaRxEvent_1,P_INFO,swLogPrintf("uart dma rx complete ");
265216,544159743,0,0,PLAT_AP,PLA_DRIVER,SoftSimInit_0,P_INFO,swLogPrintf("Softsim task has already been created ");
265216,544160768,0,0,PLAT_AP,PLA_DRIVER,ALM_exitLowPowerStateRestore_1,P_VALUE,swLogPrintf("Alarm Func Init: %d , %e<alarmVoltThd> - %d , %e<alarmThmThd> , %e<alarmHysteresisRange> ");
265216,544163839,0,0,PLAT_AP,PLA_DRIVER,thmHigh_interruptHandler_0,P_WARNING,swLogPrintf("Thm Interrupt Enter: Temperature too high ");
265216,544165887,0,0,PLAT_AP,PLA_DRIVER,thmHigh_interruptHandler_1,P_VALUE,swLogPrintf("Thm Interrupt Enter: Temperature below threshold ");
265216,544167935,0,0,PLAT_AP,PLA_DRIVER,thmHigh_interruptHandler_2,P_VALUE,swLogPrintf("Alarm message send in isr error ");
265216,544169983,0,0,PLAT_AP,PLA_DRIVER,thmHigh_interruptHandler_3,P_VALUE,swLogPrintf("Alarm message queue not ready in isr ");
265216,544172031,0,0,PLAT_AP,PLA_DRIVER,vbatLow_interruptHandler_0,P_WARNING,swLogPrintf("Vbat Interrupt Enter: Bat volatage too low ");
265216,544174079,0,0,PLAT_AP,PLA_DRIVER,vbatLow_interruptHandler_1,P_VALUE,swLogPrintf("Vbat Interrupt Enter: Bat volatage above threshold ");
265216,544176127,0,0,PLAT_AP,PLA_DRIVER,vbatLow_interruptHandler_2,P_VALUE,swLogPrintf("Alarm message send in isr error ");
265216,544178175,0,0,PLAT_AP,PLA_DRIVER,vbatLow_interruptHandler_3,P_VALUE,swLogPrintf("Alarm message queue not ready in isr ");
265216,544178432,0,0,PLAT_AP,PLA_DRIVER,alarmTask_1,P_VALUE,swLogPrintf("alarmTask: type = %d , info = %d ");
265216,544182271,0,0,PLAT_AP,PLA_DRIVER,alarmThreadInit_1,P_VALUE,swLogPrintf("Alarm task queue init error ");
265216,544183296,0,0,PLAT_AP,PLA_DRIVER,alarmFuncInit_1,P_VALUE,swLogPrintf("Alarm Func Init: %d , %e<alarmVoltThd> - %d , %e<alarmThmThd> , %e<alarmHysteresisRange> ");
265216,544184320,0,0,PLAT_AP,PLA_DRIVER,atApplAlarmProcCmsInd_1,P_WARNING,swLogPrintf("primId = %d ");
265216,544188415,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtInit_1,P_VALUE,swLogPrintf("Log above print through uart ");
265216,544190463,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtInit_2,P_VALUE,swLogPrintf("Log below print through usb ");
265216,544192511,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtInit_4,P_VALUE,swLogPrintf("Log below print through usb ");
265216,544192512,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtInit_5,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtInit Process Time = %d ");
265216,544194560,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtDinit_1,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtDinit Process Time = %d ");
265216,544196608,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtReset_1,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtReset Process Time = %d ");
265216,544200703,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtSuspend_1,P_VALUE,swLogPrintf("Log above print through usb ");
265216,544202751,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtSuspend_3,P_VALUE,swLogPrintf("Log below print through uart ");
265216,544202752,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtSuspend_4,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtSuspend Process Time = %d ");
265216,544206847,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtResume_1,P_VALUE,swLogPrintf("Log above print through uart ");
265216,544208895,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtResume_2,P_VALUE,swLogPrintf("Low below print through usb ");
265216,544210943,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtResume_3,P_VALUE,swLogPrintf("Low below print through usb ");
265216,544210944,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtResume_4,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtResume Process Time = %d ");
265216,544213504,0,0,PLAT_AP,PLA_DRIVER,npiLoadNvmConfig_4,P_ERROR,swLogPrintf("Can ' t read ' npiconfig.nvm ' version:%d file body , or body not right , ( %u / %u ) , use the defult value ");
265216,544215040,0,0,PLAT_AP,PLA_DRIVER,npiLoadNvmConfig_5,P_ERROR,swLogPrintf("' npiconfig.nvm ' version:%d not right , use the defult value ");
265216,544217600,0,0,PLAT_AP,PLA_DRIVER,xTimerGenericCommand_1,P_WARNING,swLogPrintf("OsTimer Operation in ISR , msgId = %u , value = %d , pTimer = 0x%x ");
265216,544219392,0,0,PLAT_AP,PLA_DRIVER,srvWakeupOut_1,P_SIG,swLogPrintf("wake up out %d / %d ");
266240,545261568,0,0,PLAT_AP,PLA_HAL,ApmuHandleScCalibrCancel,P_INFO,swLogPrintf("ApmuHandleScCalibration Cancelled! and timer status is %d ");
266240,545265663,0,0,PLAT_AP,PLA_HAL,ApmuScCalibrTimerExpired_0,P_INFO,swLogPrintf("ApmuScCalibrTimerExpired! ");
266240,545267711,0,0,PLAT_AP,PLA_HAL,ApmuHandleScCalibrReq_0,P_INFO,swLogPrintf("ApmuHandleScCalibrReq! ");
266240,545267712,0,0,PLAT_AP,PLA_HAL,SctPmuLowPowerExitCallBack_w_1,P_WARNING,swLogPrintf("SCT , callback should be only called before exit sleep1 , not: %d ");
266240,545269760,0,0,PLAT_AP,PLA_HAL,utfcEpnClear_w_1,P_WARNING,swLogPrintf("UTFC , clear EP: %d , failed !!!! ");
266240,545272064,0,0,PLAT_AP,PLA_HAL,SctAesShaChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , AES SHA channel Info: %d / %d ");
266240,545273856,0,0,PLAT_AP,PLA_HAL,SctAesShaChanlErrIsr_idx_w_2,P_WARNING,swLogPrintf("SCT ERROR ISR , AES SHA channel , FIFO idx: %d ");
266240,545277951,0,0,PLAT_AP,PLA_HAL,SctAesShaChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , AES SHA FIFO DESC DUMP: ");
266240,545279999,0,0,PLAT_AP,PLA_HAL,SctAesShaChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , AES SHA channel DESC DUMP: ");
266240,545282047,0,0,PLAT_AP,PLA_HAL,SctAesShaInit_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , can ' t create mutex ");
266240,545284095,0,0,PLAT_AP,PLA_HAL,SctAesShaInit_w_2,P_WARNING,swLogPrintf("SCT AES / SHA , can ' t create semaphore ");
266240,545286143,0,0,PLAT_AP,PLA_HAL,SctAesShaPollTrigger_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , polling calc / triger failed ");
266240,545286144,0,0,PLAT_AP,PLA_HAL,SctAesShaOsTrigger_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , wait for semphore failed: %d ");
266240,545288192,0,0,PLAT_AP,PLA_HAL,SctShaSegStart_addr_1,P_WARNING,swLogPrintf("SCT SHA , SHA HDR: 0x%x , can ' t be accessed by SCT ");
266240,545292287,0,0,PLAT_AP,PLA_HAL,SctShaSegStart_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , busy , can ' t be started ");
266240,545294335,0,0,PLAT_AP,PLA_HAL,SctShaSegStart_w_2,P_WARNING,swLogPrintf("SCT SHA , can ' t be called in ISR ");
266240,545296383,0,0,PLAT_AP,PLA_HAL,SctShaSegStart_w_4,P_WARNING,swLogPrintf("SCT SHA , can ' t lock the mutex ");
266240,545296896,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_e_1,P_ERROR,swLogPrintf("SCT SHA , append input not right , shaMode: %d , pInput: %d , inputLen: %d ");
266240,545298432,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_addr_1,P_WARNING,swLogPrintf("SCT SHA , SHA input: 0x%x , can ' t be accessed by SCT ");
266240,545301248,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_w_1,P_WARNING,swLogPrintf("SCT SHA , channel state not right , init: %d , start: %d , shaMode: %d / %d ");
266240,545303296,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_w_2,P_WARNING,swLogPrintf("SCT SHA , channel state not right , init: %d , start: %d , mutexId: %d , semId: %d ");
266240,545304832,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_w_3,P_WARNING,swLogPrintf("SCT SHA , mutex locked by taskId: 0x%x , not curtaskId: 0x%x , ERROR! ");
266240,545308671,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_calc_w_1,P_ERROR,swLogPrintf("SCT SHA , SHA calc failed !!! ");
266240,545310719,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_calc_w_2,P_ERROR,swLogPrintf("SCT SHA , SHA calc backup data failed !!! ");
266240,545312767,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_calc_w_3,P_ERROR,swLogPrintf("SCT SHA , SHA calc input data failed !!! ");
266240,545312768,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_addr_1,P_WARNING,swLogPrintf("SCT SHA , SHA output: 0x%x , can ' t be accessed by SCT ");
266240,545315584,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_w_1,P_WARNING,swLogPrintf("SCT SHA , SHA END , channel state not right , init: %d , start: %d , shaMode: %d / %d ");
266240,545317632,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_w_2,P_WARNING,swLogPrintf("SCT SHA , SHA END , channel state not right , init: %d , start: %d , mutexId: %d , semId: %d ");
266240,545319168,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_w_3,P_WARNING,swLogPrintf("SCT SHA , SHA END , mutex locked by taskId: 0x%x , not curtaskId: 0x%x , ERROR! ");
266240,545323007,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_w_4,P_WARNING,swLogPrintf("SCT SHA , SHA END , no input data before , ERROR ");
266240,545325055,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_calc_w_1,P_ERROR,swLogPrintf("SCT SHA , SHA END , SHA calc failed !!! ");
266240,545327103,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_calc_done_1,P_INFO,swLogPrintf("SCT SHA , SHA END , SHA calc done ");
266240,545327616,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_input_1,P_WARNING,swLogPrintf("SCT SHA , input not right , pInput: 0x%x , inputLen: %d , shaOutput: 0x%x ");
266240,545329408,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_input_2,P_WARNING,swLogPrintf("SCT SHA , input not right , shaHdr: 0x%x , shaHdrByteLen: %d ");
266240,545333247,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , busy , can ' t calc SHA ");
266240,545335295,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_2,P_WARNING,swLogPrintf("SCT SHA , can ' t be called in ISR ");
266240,545337343,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_4,P_WARNING,swLogPrintf("SCT SHA , busy , can ' t lock the mutex ");
266240,545337344,0,0,PLAT_AP,PLA_HAL,SctShaCala_allc_w_1,P_ERROR,swLogPrintf("SCT SHA , can ' t alloc buf in heap , size: %d ");
266240,545341439,0,0,PLAT_AP,PLA_HAL,SctShaCala_calc_w_1,P_ERROR,swLogPrintf("SCT SHA , SHA calc failed !!! ");
266240,545343487,0,0,PLAT_AP,PLA_HAL,SctShaCala_calc_done_1,P_INFO,swLogPrintf("SCT SHA , SHA calc done ");
266240,545345535,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_1,P_WARNING,swLogPrintf("SCT AES , no input !!! ");
266240,545346048,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_2,P_WARNING,swLogPrintf("SCT AES , invalid input , inputByteLen: %d , pInput: 0x%x , pOutput: 0x%x ");
266240,545347584,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_3,P_WARNING,swLogPrintf("SCT AES , invalid input , CK from input , but input CK is NULL , or not 4 bytes aligned: 0x%x ");
266240,545349632,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_4,P_WARNING,swLogPrintf("SCT AES , CBC / CTR mode , invalid input , IV is NULL , or not 4 bytes aligned: 0x%x ");
266240,545353727,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_5,P_WARNING,swLogPrintf("SCT AES , CK from EFUSE , but not support AES_256 , only support AES_128 / AES_192 ");
266240,545355775,0,0,PLAT_AP,PLA_HAL,SctAesCalc_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , busy , can ' t calc AES ");
266240,545357823,0,0,PLAT_AP,PLA_HAL,SctAesCalc_w_2,P_WARNING,swLogPrintf("SCT AES , can ' t be called in ISR ");
266240,545359871,0,0,PLAT_AP,PLA_HAL,SctAesCalc_w_4,P_WARNING,swLogPrintf("SCT AES , busy , can ' t lock the mutex ");
266240,545361919,0,0,PLAT_AP,PLA_HAL,SctAesCalc_calc_w_1,P_ERROR,swLogPrintf("SCT AES , AES calc failed !!! ");
266240,545363967,0,0,PLAT_AP,PLA_HAL,SctAesCalc_calc_done_1,P_INFO,swLogPrintf("SCT AES , AES calc done ");
266240,545363968,0,0,PLAT_AP,PLA_HAL,SctNasChanlIsr_e_1,P_WARNING,swLogPrintf("SCT ISR , NAS channel , ChanState: 0x%x , but no ISR FUNC !!! ");
266240,545366272,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , NAS channel Info: %d / %d ");
266240,545368064,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_idx_w_2,P_WARNING,swLogPrintf("SCT ERROR ISR , NAS channel , FIFO idx: %d ");
266240,545372159,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , NAS FIFO DESC DUMP: ");
266240,545374207,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , NAS channel DESC DUMP: ");
266240,545376255,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , no NAS ISR callback !!! ");
266240,545376256,0,0,PLAT_AP,PLA_HAL,SctUpChanlIsr_e_1,P_WARNING,swLogPrintf("SCT ISR , UP channel , ChanState: 0x%x , but no ISR FUNC !!! ");
266240,545378560,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , UP channel Info: %d / %d ");
266240,545380352,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_idx_w_2,P_WARNING,swLogPrintf("SCT ERROR ISR , UP channel , FIFO idx: %d ");
266240,545384447,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , UP FIFO DESC DUMP: ");
266240,545386495,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , UP channel DESC DUMP: ");
266240,545388543,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , no UP ISR callback !!! ");
266240,545388544,0,0,PLAT_AP,PLA_HAL,SctNasChanlReset_w_1,P_WARNING,swLogPrintf("SCT NAS channel , can ' t waiting for reset done , chanlState: 0x%x ");
266240,545390592,0,0,PLAT_AP,PLA_HAL,SctUpChanlReset_w_1,P_WARNING,swLogPrintf("SCT UP channel , can ' t waiting for reset done , chanlState: 0x%x ");
266240,545394687,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , sctCh2PppCrcCBA DUMP: ");
266240,545394944,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , PPP channel , cfgIdx: %d , doneIdx: %d ");
266240,545398783,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , PPP FIFO DESC DUMP: ");
266240,545400831,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlCheck_w_1,P_WARNING,swLogPrintf("SCT PPP CRC , API can ' t be called in ISR ");
266240,545400832,0,0,PLAT_AP,PLA_HAL,SctPppEscapeStatic_s_1,P_VALUE,swLogPrintf("SCT PPP , escape done , pkgNum: %d ");
266240,545403136,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_w_1,P_WARNING,swLogPrintf("SCT PPP , deescape , invalid input , two bytes 0x7E , validOffset: %d , length: %d ");
266240,545406975,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_7E_w_2,P_WARNING,swLogDump("SCT PPP , deescape error , input: ");
266240,545409023,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_7E_w_3,P_WARNING,swLogDump("SCT PPP , deescape error , only one 7 E , input: ");
266240,545409280,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_w_nopkg_1,P_WARNING,swLogPrintf("SCT PPP , deescape , no valid escaped PKG input , foundPppStart: %d , foundRawPkg: %d ");
266240,545413119,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_w_nopkg_2,P_WARNING,swLogPrintf("SCT PPP , deescape , all input escaped pkg invalid ");
266240,545414400,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_crc_nok,P_WARNING,swLogPrintf("SCT PPP , deescape , pkgIdx: %d / pkgNum: %d , crc not right: 0x%x , 0x%x , 0x%x , 0x%x ");
266240,545415680,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_len_nok,P_WARNING,swLogPrintf("SCT PPP , deescape , pkgIdx: %d / pkgNum: %d , deescape len: %d abnormal , should at least 2 bytes ");
266240,545417216,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_s_1,P_VALUE,swLogPrintf("SCT PPP , deescape done , pkgNum: %d ");
266240,545420032,0,0,PLAT_AP,PLA_HAL,SctPppEscapeCalcSize_w_1,P_WARNING,swLogPrintf("SCT PPP , calc size , invalid input: : pHead: 0x%x , pOutList: 0x%x , listSize: %d , pRetNext: 0x%x ");
266240,545421568,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlCheck_full_1,P_ERROR,swLogPrintf("SCT PPP , channel full , can ' t calc PPP len , SCT cfgId: %d , doneIdx: %d , abnormal!!! ");
266240,545423360,0,0,PLAT_AP,PLA_HAL,SctPppEscapeCalcSize_s_1,P_SIG,swLogPrintf("SCT PPP , escape calc size done , pkgNum: %d ");
266240,545425664,0,0,PLAT_AP,PLA_HAL,SctPppEscape_full_1,P_ERROR,swLogPrintf("SCT PPP , channel full , can ' t escape , SCT cfgId: %d , doneIdx: %d , abnormal!!! ");
266240,545427712,0,0,PLAT_AP,PLA_HAL,SctPppDeEscape_full_1,P_ERROR,swLogPrintf("SCT PPP , channel full , can ' t deescape , SCT cfgId: %d , doneIdx: %d , abnormal!!! ");
266240,545429504,0,0,PLAT_AP,PLA_HAL,SctPppTest_e_1,P_ERROR,swLogPrintf("PPP TEST , calc escape size error: %d ");
266240,545431552,0,0,PLAT_AP,PLA_HAL,SctPppTest_e_2,P_ERROR,swLogPrintf("PPP TEST , PKG escape error: %d ");
266240,545433600,0,0,PLAT_AP,PLA_HAL,SctPppTest_e_3,P_ERROR,swLogPrintf("PPP TEST , PKG deescape error: %d ");
266240,545436160,0,0,PLAT_AP,PLA_HAL,SctPppTest_de_1,P_ERROR,swLogPrintf("PPP TEST , PKG deescape crcNok: %d , or len: %d ! = %d , not right ");
266240,545439743,0,0,PLAT_AP,PLA_HAL,SctPppTest_de_dl_1,P_ERROR,swLogDump("PPP TEST , DL PKG: ");
266240,545441791,0,0,PLAT_AP,PLA_HAL,SctPppTest_de_ul_1,P_ERROR,swLogDump("PPP TEST , UL PKG: ");
266240,545441792,0,0,PLAT_AP,PLA_HAL,SctPppTest_s_e_1,P_SIG,swLogPrintf("PPP TEST , escape & descape SUCC , pkgNum: %d ");
266240,545443840,0,0,PLAT_AP,PLA_HAL,SctUsbChanlIsr_timeout_1,P_WARNING,swLogPrintf("SCT USB , timeout warning ISR , current ongoing chain index: %d !!! ");
266240,545447935,0,0,PLAT_AP,PLA_HAL,SctUsbChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , sctUsbChanlInfo DUMP: ");
266240,545449983,0,0,PLAT_AP,PLA_HAL,SctUsbChanlErrIsr_dump_w_2,P_WARNING,swLogDump("SCT ERROR ISR , sctUsbChainBasicInfoList DUMP: ");
266240,545450496,0,0,PLAT_AP,PLA_HAL,SctUsbChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , USB channel , cfgIdx: %d , doneIdx: %d , procIdx: %d ");
266240,545452032,0,0,PLAT_AP,PLA_HAL,SctUsbChanlErrIsr_idx_w_2,P_WARNING,swLogPrintf("SCT ERROR ISR , USB channel , FIFO idx: %d ");
266240,545456127,0,0,PLAT_AP,PLA_HAL,SctUsbChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , USB FIFO DESC DUMP: ");
266240,545458175,0,0,PLAT_AP,PLA_HAL,SctUsbChanlErrIsr_dump_desc_w_2,P_WARNING,swLogDump("SCT ERROR ISR , sctCh5UsbTx DESC DUMP: ");
266240,545458176,0,0,PLAT_AP,PLA_HAL,SctUsbFlushEp_w_1,P_WARNING,swLogPrintf("SCT USB , not support to flush EP: %d ");
266240,545460224,0,0,PLAT_AP,PLA_HAL,SctUsbFlushEp_w_2,P_WARNING,swLogPrintf("SCT USB , USB is reseting , don ' t need reflush EP: %d ");
266240,545462272,0,0,PLAT_AP,PLA_HAL,SctUsbProcPppCalcLenChain_w_1,P_WARNING,swLogPrintf("SCT USB , USB reset , can ' t tigger SCT to USB EP: %d ");
266240,545464576,0,0,PLAT_AP,PLA_HAL,SctUsbProcPppToRamChain_s_sent_1,P_VALUE,swLogPrintf("SCT USB , PPP len: %d , sent to USB EP: %d ");
266240,545466368,0,0,PLAT_AP,PLA_HAL,SctUsbProcPppToRamChain_w_1,P_WARNING,swLogPrintf("SCT USB , USB reset , can ' t tigger SCT to USB EP: %d ");
266240,545468928,0,0,PLAT_AP,PLA_HAL,SctUsbDiscardChain_w_1,P_WARNING,swLogPrintf("SCT USB , discard chain index: %d , for EP: %d , xferSize: %d ");
266240,545471232,0,0,PLAT_AP,PLA_HAL,SctUsbDiscardChain_w_2,P_WARNING,swLogPrintf("SCT USB , discard chain index: %d , for EP: %d , PPP step: %d , PPP Orig Size: %d ");
266240,545472768,0,0,PLAT_AP,PLA_HAL,SctUsbDiscardChain_w_3,P_WARNING,swLogPrintf("SCT USB , discard chain index: %d , for EP: %d ");
266240,545476607,0,0,PLAT_AP,PLA_HAL,SctUsbRollbackChain_usbNok_1,P_WARNING,swLogPrintf("SCT USB , USB is NOK , can ' t rollback chain ");
266240,545478655,0,0,PLAT_AP,PLA_HAL,SctUsbRollbackChain_w_1,P_WARNING,swLogPrintf("SCT USB , USB reset , can ' t rollback data to USB EP ");
266240,545478656,0,0,PLAT_AP,PLA_HAL,SctUsbDiscardEpBackupInfo_s_1,P_SIG,swLogPrintf("SCT USB , discard EP: %d all backup Tx info ");
266240,545481728,0,0,PLAT_AP,PLA_HAL,SctUsbEpBackupChain_full_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , backup info full: %d / %d / %d / %d , abnormal , discard all old backup info ");
266240,545483008,0,0,PLAT_AP,PLA_HAL,SctUsbEpStartRetryTimer_s_1,P_SIG,swLogPrintf("SCT USB , EP: %d , start retry timer: %d ms ");
266240,545485312,0,0,PLAT_AP,PLA_HAL,SctUsbEpStartRetryTimer_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , retry timer start failed: %d , discard all backup info , and EP block: %d ms ");
266240,545487360,0,0,PLAT_AP,PLA_HAL,SctUsbEpIsTxFifoEmpty_s_1,P_SIG,swLogPrintf("SCT USB , EP: %d , DIEPTXFI: 0x%x , TxFIFOSize: %d ");
266240,545489408,0,0,PLAT_AP,PLA_HAL,SctUsbEpIsTxFifoEmpty_s_2,P_SIG,swLogPrintf("SCT USB , EP: %d , DTXFSTSI: 0x%x , TxFIFOAvail: %d ");
266240,545491456,0,0,PLAT_AP,PLA_HAL,SctUsbEpIsPreTxDone_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , TxFIFO empty: %d , but UTFC state: %d , seems still not right ");
266240,545493504,0,0,PLAT_AP,PLA_HAL,SctUsbEpIsPreTxDone_s_1,P_SIG,swLogPrintf("SCT USB , EP: %d , still busy , TxFIFO empty: %d , UTFC state: %d ");
266240,545496064,0,0,PLAT_AP,PLA_HAL,SctUsbProcChanlTimeOut_timeout_1,P_WARNING,swLogPrintf("SCT USB , cfgId: %d , doneIdx: %d , procIdx: %d , Tx EP: %d timeout times: %d ");
266240,545497088,0,0,PLAT_AP,PLA_HAL,SctUsbProcChanlTimeOut_mem_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d Tx timeout , but no mem left to backup info ");
266240,545499904,0,0,PLAT_AP,PLA_HAL,SctUsbProcChanlTimeOut_rty_e_1,P_ERROR,swLogPrintf("SCT USB , EP: %d , Tx timeout time: %d > Max: %d , discard backup and block %d ms... ");
266240,545501184,0,0,PLAT_AP,PLA_HAL,SctUsbProcChanlTimeOut_uta_w_1,P_WARNING,swLogPrintf("SCT USB channel , SCT not release UTA: 0x%x ");
266240,545503232,0,0,PLAT_AP,PLA_HAL,SctUsbProcChanlTimeOut_w_1,P_WARNING,swLogPrintf("SCT USB channel , can ' t waiting for reset done , chanlState: 0x%x ");
266240,545505536,0,0,PLAT_AP,PLA_HAL,SctUsbProcChanlTimeOut_ok_1,P_SIG,swLogPrintf("SCT USB , timeout , but EP: %d Tx OK , after try: %d times ");
266240,545507840,0,0,PLAT_AP,PLA_HAL,SctUsbProcSctError_err_1,P_ERROR,swLogPrintf("SCT USB , cfgId: %d , doneIdx: %d , procIdx: %d , SCT ERROR !!!! ");
266240,545510144,0,0,PLAT_AP,PLA_HAL,SctUsbTcpWSProcess_add_ws_1,P_DEBUG,swLogPrintf("SCT USB TCP , DL TCP SYN , ipType: %d , hostPort: %d , rmtPort: %d , ws: %d , try add into list ");
266240,545512192,0,0,PLAT_AP,PLA_HAL,SctUsbTcpWSProcess_disable_ws_1,P_VALUE,swLogPrintf("SCT USB TCP , ipType: %d , hostPort: %d , rmtPort: %d , dlScaled: %d , list full , disable WS option ");
266240,545513984,0,0,PLAT_AP,PLA_HAL,SctUsbTcpWSProcess_no_ws_1,P_DEBUG,swLogPrintf("SCT USB TCP , DL TCP SYN , ipType: %d , hostPort: %d , rmtPort: %d , no WS option , try RM from list ");
266240,545516544,0,0,PLAT_AP,PLA_HAL,SctUsbTcpWSProcess_win_1,P_INFO,swLogPrintf("SCT USB TCP WIN ADPT , hostPort: %d , free ul buffer %u , old win %u , new win %u , scaling value %u ");
266240,545519615,0,0,PLAT_AP,PLA_HAL,SctUsbChanlExitSleepCallback_1,P_INFO,swLogPrintf("SCT USB , wake up from sleep1 , do nothing , wait USB init / reset ");
266240,545519616,0,0,PLAT_AP,PLA_HAL,SctUsbTxRawDataStatic_epck_1,P_WARNING,swLogPrintf("SCT USB , can ' t Tx to EP: %d , not support ");
266240,545521664,0,0,PLAT_AP,PLA_HAL,SctUsbTxRawDataStatic_usbnok_1,P_WARNING,swLogPrintf("SCT USB , USB is NOK now , can ' t Tx to EP: %d ");
266240,545524224,0,0,PLAT_AP,PLA_HAL,SctUsbTxRawDataStatic_full_1,P_WARNING,swLogPrintf("SCT USB , channel full , can ' t Tx anymore , SCT cfgId: %d , doneIdx: %d , procIdx: %d ");
266240,545526016,0,0,PLAT_AP,PLA_HAL,SctUsbTxRawDataStatic_full_2,P_WARNING,swLogPrintf("SCT USB , TX info full , can ' t Tx anymore , TX info list cfgId: %d , procIdx: %d ");
266240,545528064,0,0,PLAT_AP,PLA_HAL,SctUsbTxRawDataStatic_full_3,P_WARNING,swLogPrintf("SCT USB , first pkg size: %d > availSize: %d , can ' t Tx anymore , busy ");
266240,545530624,0,0,PLAT_AP,PLA_HAL,SctUsbTxRawDataStatic_trig_1,P_INFO,swLogPrintf("SCT USB , EP: %d , SCT tigger: %d times , total transfer size: %d , availSize: %d ");
266240,545531904,0,0,PLAT_AP,PLA_HAL,SctUsbTxRawDataStatic_w_1,P_WARNING,swLogPrintf("SCT USB , USB reset , SCT can ' t send RAW data to USB EP: %d ");
266240,545533952,0,0,PLAT_AP,PLA_HAL,SctUsbTxRawDataStatic_sec_1,P_SIG,swLogPrintf("SCT USB , current transfer size: %d , but still more data , TX retry ");
266240,545536000,0,0,PLAT_AP,PLA_HAL,SctUsbTxPppDataStatic_epck_1,P_WARNING,swLogPrintf("SCT USB , can ' t Tx PPP to EP: %d , not support ");
266240,545538048,0,0,PLAT_AP,PLA_HAL,SctUsbTxPppDataStatic_nok_1,P_WARNING,swLogPrintf("SCT USB , USB is NOK now , can ' t Tx PPP to EP: %d ");
266240,545540608,0,0,PLAT_AP,PLA_HAL,SctUsbTxPppDataStatic_full_1,P_WARNING,swLogPrintf("SCT USB , channel full , can ' t Tx PPP anymore , cfgId: %d , doneIdx: %d , procIdx: %d ");
266240,545542144,0,0,PLAT_AP,PLA_HAL,SctUsbTxPppDataStatic_highwater_1,P_WARNING,swLogPrintf("SCT USB , PPP Tx pending / ongoing len: %d , highwater , return pending ");
266240,545544448,0,0,PLAT_AP,PLA_HAL,SctUsbTxPppDataStatic_full_2,P_WARNING,swLogPrintf("SCT USB , PPP Tx info full , can ' t Tx anymore , TX info list cfgId: %d , procIdx: %d ");
266240,545546240,0,0,PLAT_AP,PLA_HAL,SctUsbTxPppDataStatic_w_1,P_WARNING,swLogPrintf("SCT USB , USB reset , SCT can ' t send PPP data to USB EP: %d ");
266240,545548288,0,0,PLAT_AP,PLA_HAL,SctUsbTxPppDataStatic_sec_1,P_SIG,swLogPrintf("SCT USB , current PPP escape size: %d , but still more data , TX retry ");
266240,545550336,0,0,PLAT_AP,PLA_HAL,SctUsbEpTxBackupInfo_usbnok_1,P_WARNING,swLogPrintf("SCT USB , USB is NOK now , can ' t Tx to EP: %d , discard all backup data ");
266240,545553664,0,0,PLAT_AP,PLA_HAL,SctUsbEpTxBackupInfo_full_1,P_WARNING,swLogPrintf("SCT USB , channel busy , sctCfgIdx: %d , sctProcIdx: %d , sctDoneIdx: %d , txInfoCfgIdx: %d , txInfoProcIdx: %d , can ' t Tx EP: %d backup data ");
266240,545555456,0,0,PLAT_AP,PLA_HAL,SctUsbEpTxBackupInfo_trig_1,P_SIG,swLogPrintf("SCT USB , EP: %d , Tx backup data , SCT tigger: %d times , cfgIdx: %d , doneIdx: %d , procIdx: %d ");
266240,545556480,0,0,PLAT_AP,PLA_HAL,SctUsbEpTxBackupInfo_reset_w_1,P_WARNING,swLogPrintf("SCT USB , USB reset , can ' t Tx backup data to USB EP: %d ");
266240,545558528,0,0,PLAT_AP,PLA_HAL,SctUsbEpTxBackupInfo_all_s_1,P_SIG,swLogPrintf("SCT USB , EP: %d , all backup data Tx to channel ");
266240,545560832,0,0,PLAT_AP,PLA_HAL,SctUsbEpTxBackupInfo_pend_w_1,P_WARNING,swLogPrintf("SCT USB , can ' t Tx backup pending data to USB EP: %d , failed ret: %d ");
266240,545562624,0,0,PLAT_AP,PLA_HAL,SctUsbEpTxBackupInfo_pend_s_1,P_SIG,swLogPrintf("SCT USB , EP: %d , all backup / pending data Tx to channel , free backup info ");
266240,545564672,0,0,PLAT_AP,PLA_HAL,SctUsbEpTxPendingData_no_mem_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , non mem left for backup info ");
266240,545566976,0,0,PLAT_AP,PLA_HAL,SctUsbTxData_epck_1,P_WARNING,swLogPrintf("SCT USB , Tx MAX EPID: %d , can ' t Tx to EP: %d , discard all Tx data ");
266240,545568768,0,0,PLAT_AP,PLA_HAL,SctUsbTxData_usbnok_1,P_WARNING,swLogPrintf("SCT USB , USB is NOK now , can ' t Tx to EP: %d , discard all Tx data ");
266240,545571328,0,0,PLAT_AP,PLA_HAL,SctUsbTxData_retry_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , retry / pending timer is runing , retryCount: %d , epState: %d , backup Tx data ");
266240,545572864,0,0,PLAT_AP,PLA_HAL,SctUsbTxData_unblocked_1,P_SIG,swLogPrintf("SCT USB , EP: %d , unblock now ");
266240,545575424,0,0,PLAT_AP,PLA_HAL,SctUsbTxData_blocked_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , is blocked untill sysTick: 0x%x , curTick: 0x%x , discard all Tx data ");
266240,545576960,0,0,PLAT_AP,PLA_HAL,SctUsbTxData_cts_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , CTS is not allow , discard all Tx data ");
266240,545579520,0,0,PLAT_AP,PLA_HAL,SctUsbTxDatae_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , bPPP: %d , Tx data , failed ret: %d , discard ");
266240,545581568,0,0,PLAT_AP,PLA_HAL,SctUsbTxDatae_f_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , bPPP: %d , not all tx , ret: %d , need backup ");
266240,545583104,0,0,PLAT_AP,PLA_HAL,SctUsbEpProcRetryTimerExpiry_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , retry / pending time expiry , but no backup info ");
266240,545585152,0,0,PLAT_AP,PLA_HAL,SctUsbEpProcRetryTimerExpiry_w_2,P_WARNING,swLogPrintf("SCT USB , EP: %d , retry / pending time expiry , but time is NULL ");
266240,545587200,0,0,PLAT_AP,PLA_HAL,SctUsbEpProcRetryTimerExpiry_cts_w_2,P_WARNING,swLogPrintf("SCT USB , EP: %d , CTS pending time expiry , but CTS still not allow Tx , discard all pending Tx data ");
266240,545589248,0,0,PLAT_AP,PLA_HAL,SctUsbEpProcRetryTimerExpiry_done_1,P_SIG,swLogPrintf("SCT USB , EP: %d , pervious data all Tx , Tx backup data ");
266240,545592064,0,0,PLAT_AP,PLA_HAL,SctUsbEpProcRetryTimerExpiry_rty_e_1,P_ERROR,swLogPrintf("SCT USB , EP: %d , retry timeout , tryCount: %d > Max: %d , discard backup and block %d ms... ");
266240,545593600,0,0,PLAT_AP,PLA_HAL,SctUsbChanlInitConfig_new_1,P_SIG,swLogPrintf("SCT USB , num of Tx ep: %d , epbitmap: 0x%x ");
266240,545597439,0,0,PLAT_AP,PLA_HAL,SctUsbChanlInitConfig_w_1,P_WARNING,swLogPrintf("SCT USB , USB reset / deinit , can ' t config utfcSetZLForSct ");
266240,545597696,0,0,PLAT_AP,PLA_HAL,SctUsbChanlInitConfig_utfc_w_1,P_WARNING,swLogPrintf("SCT USB , Ep: %d , config utfcSetZLForSct , return NOK ( %d ) , USB / UTFC must reset / deinit ");
266240,545599744,0,0,PLAT_AP,PLA_HAL,SctUsbProcDoneChainInfo_raw_ok_1,P_SIG,swLogPrintf("SCT USB , EP: %d Tx OK , after try: %d times ");
266240,545601792,0,0,PLAT_AP,PLA_HAL,SctUsbProcDoneChainInfo_ppp_ok_1,P_SIG,swLogPrintf("SCT USB , PPP EP: %d Tx OK , after try: %d times ");
266240,545604096,0,0,PLAT_AP,PLA_HAL,SctUsbProcDoneChainInfo_full_1,P_WARNING,swLogPrintf("SCT USB , channel still full , can ' t Tx anymore , cfgId: %d , doneIdx: %d , procIdx: %d ");
266240,545605888,0,0,PLAT_AP,PLA_HAL,SctUsbProcDoneChainInfo_full_2,P_WARNING,swLogPrintf("SCT USB , Tx info list full , can ' t Tx anymore , txCfgId: %d , txProcIdx: %d ");
266240,545609727,0,0,PLAT_AP,PLA_HAL,SctUsbProcUsbEvent_reset_1,P_WARNING,swLogPrintf("SCT USB is RESET , discard all ongoing chain / txInfo ");
266240,545611775,0,0,PLAT_AP,PLA_HAL,SctUsbProcUsbEvent_init_1,P_SIG,swLogPrintf("SCT USB is INIT , OK for SCT ");
266240,545613823,0,0,PLAT_AP,PLA_HAL,SctUsbProcUsbEvent_full_s_1,P_SIG,swLogPrintf("SCT USB full speed version , MPS set to 64 ");
266240,545615871,0,0,PLAT_AP,PLA_HAL,SctUsbProcUsbEvent_high_s_1,P_SIG,swLogPrintf("SCT USB high speed version , MPS set to 512 ");
266240,545616384,0,0,PLAT_AP,PLA_HAL,SctUsbProcEpUnblock_w_1,P_WARNING,swLogPrintf("SCT USB , recv unblock sig , but invalid input / state , EP: %d , backupInfo: 0x%x , epState: %d ");
266240,545617920,0,0,PLAT_AP,PLA_HAL,SctUsbProcEpUnblock_s_1,P_SIG,swLogPrintf("SCT USB , EP: %d , recv unblock sig ");
266240,545620224,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_w_1,P_WARNING,swLogPrintf("SCT USB , invalid EP: %d , CTS bAllow Tx: %d ");
266240,545622016,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_allow_1,P_SIG,swLogPrintf("SCT USB , EP: %d , CTS Allow Tx ");
266240,545624064,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_allow_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , CTS Allow Tx , but no backup / pending info ");
266240,545626368,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_allow_w_2,P_WARNING,swLogPrintf("SCT USB , EP: %d , CTS Allow Tx , but epState: %d , seems not right , anyway try Tx pending data ");
266240,545628160,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_allow_w_3,P_WARNING,swLogPrintf("SCT USB , EP: %d , CTS Allow Tx , but old data in USB FIFO not Tx , flush USB FIFO anyway ");
266240,545630208,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_not_allow_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , CTS not Allow Tx , pending 10 sec ");
266240,545632256,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_no_mem_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , CTS not allow , but non mem left for backup info ");
266240,545634560,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_tr_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , CTS not allow , epState: %d , retry / pending timer is running , need to stop it , then start CTS pending timer ");
266240,545636608,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_t_1,P_SIG,swLogPrintf("SCT USB , EP: %d , CTS not allow Tx , start pending timer: %d sec ");
266240,545638656,0,0,PLAT_AP,PLA_HAL,SctUsbCtsBeAllowSend_t_w_1,P_WARNING,swLogPrintf("SCT USB , EP: %d , pending timer start failed: %d , discard all backup data ");
266240,545640448,0,0,PLAT_AP,PLA_HAL,SctUsbStateEventInIsr_1,P_SIG,swLogPrintf("SCT USB state change to: %d , ( 0 -DEINT , 1 -INIT , 2 -RESET ) ");
266240,545644543,0,0,PLAT_AP,PLA_HAL,SctUsbStateEventInIsr_reset_1,P_WARNING,swLogPrintf("SCT USB is RESET / Deinit... ");
266240,545644544,0,0,PLAT_AP,PLA_HAL,SctUsbStateEventInIsr_uta_w_1,P_WARNING,swLogPrintf("SCT USB channel , SCT not release UTA: 0x%x ");
266240,545646592,0,0,PLAT_AP,PLA_HAL,SctUsbStateEventInIsr_w_1,P_WARNING,swLogPrintf("SCT USB channel , can ' t waiting for reset done , chanlState: 0x%x ");
266240,545648640,0,0,PLAT_AP,PLA_HAL,ACIpcAlone0Isr_00,P_VALUE,swLogPrintf("IPC0 Msg = 0x%x ");
266240,545650688,0,0,PLAT_AP,PLA_HAL,ACIpcAlone0Isr_1,P_ERROR,swLogPrintf("CP Dump , AP is in ImageType = %d , ( 0 ) AP Paging ( 1 ) AP FullImage ");
266240,545653248,0,0,PLAT_AP,PLA_HAL,ACIpcAlone1Isr_info_1,P_INFO,swLogPrintf("AP RECV IPC ID: 0x%x , msgLen: %d , bFast: %d ");
266240,545654784,0,0,PLAT_AP,PLA_HAL,A2CSendFastIpcMsg_sig_1,P_SIG,swLogPrintf("AP SEND fast IPC ID: 0x%x , to start / wakeup CP... ");
266240,545657088,0,0,PLAT_AP,PLA_HAL,A2CSendIpcMsg_info_1,P_INFO,swLogPrintf("AP SEND IPC ID: 0x%x , msgLen: %d ");
266240,545658880,0,0,PLAT_AP,PLA_HAL,A2CSendIpcMsg_sig_1,P_SIG,swLogPrintf("AP SEND IPC ID: 0x%x , to start / wakeup CP... ");
266240,545660928,0,0,PLAT_AP,PLA_HAL,A2CSendIpcMsg_info_3,P_INFO,swLogPrintf("AP SEND IPC Finish: gA2CNextWriteAddr_ap_rw = 0x%X ");
266240,545662976,0,0,PLAT_AP,PLA_HAL,A2CSendExceptionMsg_1,P_WARNING,swLogExcep("Warning , Last IPC0 Message not pop out , last msg = 0x%x ");
266240,545665024,0,0,PLAT_AP,PLA_HAL,A2CSendExceptionMsg_2,P_WARNING,swLogExcep("AP exception happens , wakeup cp to dead loop msgLen: %d ");
266240,545667328,0,0,PLAT_AP,PLA_HAL,halPhySetDebugCfgInfo_w_1,P_WARNING,swLogPrintf("HAL PHY , phyModId: %d , incorrect paramNum: %d ");
267264,547358720,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonWriteCP_0,P_VALUE,swLogExcep("Write CP Reset Flag = 0x%x ");
267264,547360768,0,0,PLAT_AP,EXCEP_PRINT,cpNVIC_SystemReset_0,P_VALUE,swLogPrintf("CP NVIC Reset , CFG = 0x%x ");
267264,547362816,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonWriteAP_0,P_VALUE,swLogExcep("Write AP Reset Flag = 0x%x ");
267264,547364864,0,0,PLAT_AP,EXCEP_PRINT,ResetStartPorReset_1,P_WARNING,swLogPrintf("Write Por Reset flag to flash = %e<ResetReason_e> ");
267264,547367168,0,0,PLAT_AP,EXCEP_PRINT,ResetStartPorReset_3,P_WARNING,swLogPrintf("Write Por Reset flag failed , reason = %e<ResetReason_e> readback = 0x%x ");
267264,547371007,0,0,PLAT_AP,EXCEP_PRINT,ResetStartPorReset_2,P_WARNING,swLogPrintf("Write Por Reset flag Failed , do por reset directly ");
267264,547371008,0,0,PLAT_AP,EXCEP_PRINT,ResetClrPorResetFlag_0,P_WARNING,swLogPrintf("Flash Por Reset Flag = 0x%x ");
267264,547375103,0,0,PLAT_AP,EXCEP_PRINT,ResetClrPorResetFlag_1,P_WARNING,swLogPrintf("Clear Por Reset Flag failed ");
267264,547375104,0,0,PLAT_AP,EXCEP_PRINT,ResetCheckCpNeedPorReset_1,P_WARNING,swLogPrintf("CP unexpected reset , reset reason = %e<CpRstSource_e> ");
267264,547377408,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_0,P_VALUE,swLogPrintf("Reset Value AP = 0x%x , CP = 0x%x ");
267264,547379200,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_21,P_WARNING,swLogPrintf("Reset: SW POR Reset , porReason = %e<ResetReason_e> ");
267264,547383295,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_20,P_WARNING,swLogPrintf("Reset: Fota Reset ");
267264,547385343,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_1,P_WARNING,swLogPrintf("Reset: Aon Watchdog Reset ");
267264,547387391,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_2,P_WARNING,swLogPrintf("AP Reset: Software Active Reset ");
267264,547389439,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_3,P_WARNING,swLogPrintf("AP Reset Trigger in HardFault ");
267264,547391487,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_4,P_WARNING,swLogPrintf("AP Reset Trigger in Assert ");
267264,547393535,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_5,P_WARNING,swLogPrintf("AP Reset Trigger in NMI ( Watch Dog ) ");
267264,547395583,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_6,P_WARNING,swLogPrintf("AP Reset Trigger in Battery Low Int ");
267264,547397631,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_7,P_WARNING,swLogPrintf("AP Reset Trigger in Temperature High Int ");
267264,547397632,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_8,P_VALUE,swLogPrintf("AP Reset Magic = 0x%x ");
267264,547401727,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_9,P_WARNING,swLogPrintf("AP Reset: AP watch dog force reset ");
267264,547403775,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_10,P_WARNING,swLogPrintf("AP Reset: AP lockup reset ");
267264,547405823,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_11,P_VALUE,swLogPrintf("AP Reset: AP Reset Source None ");
267264,547407871,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_12,P_WARNING,swLogPrintf("CP Reset: Software Active Reset ");
267264,547409919,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_13,P_WARNING,swLogPrintf("CP Reset Trigger in HardFault ");
267264,547411967,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_14,P_WARNING,swLogPrintf("CP Reset Trigger in Assert ");
267264,547414015,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_15,P_WARNING,swLogPrintf("CP Reset Trigger in NMI ( Watch Dog ) ");
267264,547414016,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_16,P_VALUE,swLogPrintf("CP Reset Magic = 0x%x ");
267264,547418111,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_17,P_WARNING,swLogPrintf("Reset: CP watch dog force reset ");
267264,547420159,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_18,P_WARNING,swLogPrintf("Reset: CP lockup force reset ");
267264,547422207,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonInit_19,P_VALUE,swLogPrintf("Reset: CP Reset Source None ");
267264,547424255,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_0,P_WARNING,swLogPrintf("CP Reset: Software Active Reset ");
267264,547426303,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_1,P_WARNING,swLogPrintf("CP Reset Trigger in HardFault ");
267264,547428351,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_2,P_WARNING,swLogPrintf("CP Reset Trigger in Assert ");
267264,547430399,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_3,P_WARNING,swLogPrintf("CP Reset Trigger in NMI ( Watch Dog ) ");
267264,547432447,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_4,P_WARNING,swLogPrintf("Reset: CP watch dog force reset ");
267264,547434495,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_5,P_WARNING,swLogPrintf("Reset: CP lockup force reset ");
267264,547436543,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_6,P_ERROR,swLogPrintf("Reset: CP Reset Source None ");
267264,547438591,0,0,PLAT_AP,EXCEP_PRINT,check_excep_func_call_1,P_ERROR,swLogExcep("try to parse exception call stack by address compare! ");
267264,547438592,0,0,PLAT_AP,EXCEP_PRINT,check_excep_func_call_2,P_ERROR,swLogExcep("maybe function address @ 0x%x ");
267264,547442687,0,0,PLAT_AP,EXCEP_PRINT,dump_ram_to_flash_0,P_ERROR,swLogExcep("4 M Flash , no flash dump area ");
267264,547444735,0,0,PLAT_AP,EXCEP_PRINT,dump_ram_to_flash_1,P_ERROR,swLogExcep("start dump ram to flash! ");
267264,547446783,0,0,PLAT_AP,EXCEP_PRINT,dump_ram_to_flash_2,P_ERROR,swLogExcep("Finsh dump ram to flash! ");
267264,547448831,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_0,P_ERROR,swLogExcep("RNDIS HALT FAILED ");
267264,547448832,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_1,P_ERROR,swLogExcep("CP Dump , AP help to dump , reason = %e<ACIPC0MSGID> ");
267264,547451136,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_2,P_ERROR,swLogExcep("CP hardFault triggered!!exceptionStore = 0x%x , 0x%x ");
267264,547452929,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_3,P_ERROR,swLogExcep("hardFault in: %s ");
267264,547454976,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_4,P_ERROR,swLogExcep("dump latest %d words stack start ");
267264,547457792,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_5,P_ERROR,swLogExcep("dump stack frame: 0x%x 0x%x 0x%x 0x%x ");
267264,547461119,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_6,P_ERROR,swLogExcep("CP assert triggered!! ");
267264,547461121,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_7,P_ERROR,swLogExcep("Assert INFO : %s ");
267264,547463169,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_8,P_ERROR,swLogExcep("assert in: %s ");
267264,547465216,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_9,P_ERROR,swLogExcep("dump latest %d words stack start ");
267264,547468032,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_10,P_ERROR,swLogExcep("dump stack frame: 0x%x 0x%x 0x%x 0x%x ");
267264,547469312,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_11,P_ERROR,swLogExcep("Current exception action:%d ");
267264,547473407,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_12,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547475455,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_13,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547477503,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_14,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547479551,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_15,P_ERROR,swLogExcep("cp exception occurs , the system will reset ");
267264,547481599,0,0,PLAT_AP,EXCEP_PRINT,excepCheckFaultType_1,P_ERROR,swLogExcep("hardfault: casued by vector fetch error! ");
267264,547483647,0,0,PLAT_AP,EXCEP_PRINT,excepCheckFaultType_2,P_ERROR,swLogExcep("hardfault: casued by debug event! ");
267264,547485695,0,0,PLAT_AP,EXCEP_PRINT,mmfault_1,P_ERROR,swLogExcep("mem fault: instruction access violatio ");
267264,547487743,0,0,PLAT_AP,EXCEP_PRINT,mmfault_2,P_ERROR,swLogExcep("mem fault: data access violation ");
267264,547489791,0,0,PLAT_AP,EXCEP_PRINT,mmfault_3,P_ERROR,swLogExcep("mem fault: unstacking error ");
267264,547491839,0,0,PLAT_AP,EXCEP_PRINT,mmfault_4,P_ERROR,swLogExcep("mem fault: stacking error ");
267264,547491840,0,0,PLAT_AP,EXCEP_PRINT,mmfault_5,P_ERROR,swLogExcep("memory manage fault address @ 0x%x ");
267264,547495935,0,0,PLAT_AP,EXCEP_PRINT,busfault_1,P_ERROR,swLogExcep("bus fault: instrunction acess error ");
267264,547497983,0,0,PLAT_AP,EXCEP_PRINT,busfault_2,P_ERROR,swLogExcep("bus fault: precise data acess error ");
267264,547500031,0,0,PLAT_AP,EXCEP_PRINT,busfault_3,P_ERROR,swLogExcep("bus fault: imprecise data acess error ");
267264,547502079,0,0,PLAT_AP,EXCEP_PRINT,busfault_4,P_ERROR,swLogExcep("bus fault: unstacking error ");
267264,547504127,0,0,PLAT_AP,EXCEP_PRINT,busfault_5,P_ERROR,swLogExcep("bus fault: stacking error ");
267264,547504128,0,0,PLAT_AP,EXCEP_PRINT,busfault_6,P_ERROR,swLogExcep("bus fault address @ 0x%x ");
267264,547508223,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_1,P_ERROR,swLogExcep("usage fault: try to execute undefined instruction ");
267264,547510271,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_2,P_ERROR,swLogExcep("usage fault: try to switch to wrong state ( ARM ) ");
267264,547512319,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_3,P_ERROR,swLogExcep("usage fault: execute EXC_RETURN error ");
267264,547514367,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_4,P_ERROR,swLogExcep("usage fault: try to execute coprocessor instruction ");
267264,547516415,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_5,P_ERROR,swLogExcep("usage fault: unaligned access ");
267264,547518463,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_6,P_ERROR,swLogExcep("usage fault: divide by zero ");
267264,547520511,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_1,P_ERROR,swLogExcep("dump regs start: ");
267264,547520512,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_2,P_ERROR,swLogExcep("dump reg: r0: 0x%x ! ");
267264,547522560,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_3,P_ERROR,swLogExcep("dump reg: r1: 0x%x ! ");
267264,547524608,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_4,P_ERROR,swLogExcep("dump reg: r2: 0x%x ! ");
267264,547526656,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_5,P_ERROR,swLogExcep("dump reg: r3: 0x%x ! ");
267264,547528704,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_6,P_ERROR,swLogExcep("dump reg: r4: 0x%x ! ");
267264,547530752,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_7,P_ERROR,swLogExcep("dump reg: r5: 0x%x ! ");
267264,547532800,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_8,P_ERROR,swLogExcep("dump reg: r6: 0x%x ! ");
267264,547534848,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_9,P_ERROR,swLogExcep("dump reg: r7: 0x%x ! ");
267264,547536896,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_10,P_ERROR,swLogExcep("dump reg: r8: 0x%x ! ");
267264,547538944,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_11,P_ERROR,swLogExcep("dump reg: r9: 0x%x ! ");
267264,547540992,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_12,P_ERROR,swLogExcep("dump reg: r10: 0x%x ! ");
267264,547543040,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_13,P_ERROR,swLogExcep("dump reg: r11: 0x%x ! ");
267264,547545088,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_14,P_ERROR,swLogExcep("dump reg: r12: 0x%x ! ");
267264,547547136,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_15,P_ERROR,swLogExcep("dump reg: sp: 0x%x ! ");
267264,547549184,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_16,P_ERROR,swLogExcep("dump reg: msp: 0x%x ! ");
267264,547551232,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_17,P_ERROR,swLogExcep("dump reg: psp: 0x%x ! ");
267264,547553280,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_18,P_ERROR,swLogExcep("dump reg: lr: 0x%x ! ");
267264,547555328,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_19,P_ERROR,swLogExcep("dump reg: exception pc: 0x%x ! ");
267264,547557376,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_20,P_ERROR,swLogExcep("dump reg: psr: 0x%x ! ");
267264,547559424,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_21,P_ERROR,swLogExcep("dump reg: exc_return: 0x%x ! ");
267264,547561472,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_22,P_ERROR,swLogExcep("dump reg BASEPRI: 0x%x ! ");
267264,547563520,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_23,P_ERROR,swLogExcep("dump reg PRIMASK: 0x%x ! ");
267264,547565568,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_24,P_ERROR,swLogExcep("dump reg FAULTMASK: 0x%x ! ");
267264,547567616,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_25,P_ERROR,swLogExcep("dump reg CONTROL: 0x%x ! ");
267264,547569920,0,0,PLAT_AP,EXCEP_PRINT,excepHardFaultHandler_1,P_WARNING,swLogExcep("AP: Min of max free block in histroy: [ %d , %d ) ");
267264,547572224,0,0,PLAT_AP,EXCEP_PRINT,excepHardFaultHandler_2,P_WARNING,swLogExcep("AP: Current max free block size: %d in [ %d , %d ) ");
267264,547573761,0,0,PLAT_AP,EXCEP_PRINT,exception_task0,P_ERROR,swLogExcep("hardfault task: %s ");
267264,547575808,0,0,PLAT_AP,EXCEP_PRINT,hardfault_1,P_ERROR,swLogExcep("Current fault action:%d ");
267264,547579903,0,0,PLAT_AP,EXCEP_PRINT,hardfault_rndis,P_ERROR,swLogExcep("RNDIS HALT FAILED ");
267264,547581951,0,0,PLAT_AP,EXCEP_PRINT,hardfault_enter0,P_ERROR,swLogExcep("AP hard fault triggered!! ");
267264,547581952,0,0,PLAT_AP,EXCEP_PRINT,stack_dump_1,P_ERROR,swLogExcep("dump latest %d words stack start ");
267264,547584768,0,0,PLAT_AP,EXCEP_PRINT,stack_dump_2,P_ERROR,swLogExcep("dump stack frame: 0x%x 0x%x 0x%x 0x%x ");
267264,547586049,0,0,PLAT_AP,EXCEP_PRINT,exception_task,P_ERROR,swLogExcep("hardfault task: %s ");
267264,547590143,0,0,PLAT_AP,EXCEP_PRINT,hardfault_yrcp_0,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547592191,0,0,PLAT_AP,EXCEP_PRINT,hardfault_yrcp_1,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547594239,0,0,PLAT_AP,EXCEP_PRINT,hardfault_yrcp_2,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547596287,0,0,PLAT_AP,EXCEP_PRINT,hardfault_2,P_ERROR,swLogExcep("hardfault occurs , the system will reset ");
267264,547596289,0,0,PLAT_AP,EXCEP_PRINT,unilogAssertInfo_1,P_ERROR,swLogExcep("ASSERT , FUNC: %s ");
267264,547598337,0,0,PLAT_AP,EXCEP_PRINT,unilogAssertInfo_2,P_ERROR,swLogExcep("ASSERT , FILE : %s ");
267264,547601152,0,0,PLAT_AP,EXCEP_PRINT,unilogAssertInfo_3,P_ERROR,swLogExcep("ASSERT line: %d , val is 0x%x , 0x%x , 0x%x ");
267264,547602688,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_001,P_WARNING,swLogExcep("AP: Min of max free block in histroy: [ %d , %d ) ");
267264,547604992,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_002,P_WARNING,swLogExcep("AP: Current max free block size: %d in [ %d , %d ) ");
267264,547606529,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_00,P_ERROR,swLogExcep("Assert INFO : %s ");
267264,547608577,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_01,P_ERROR,swLogExcep("assert in task: %s ");
267264,547610625,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_02,P_ERROR,swLogExcep("assert in: %s ");
267264,547612673,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_03,P_ERROR,swLogExcep("assert in: %s ");
267264,547614720,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_7,P_ERROR,swLogExcep("Current exception action:%d ");
267264,547617280,0,0,PLAT_AP,EXCEP_PRINT,ecAssert_enter_0,P_ERROR,swLogExcep("AP assert triggered!!SP = 0x%x , PSP = 0x%x , MSP = 0x%x ");
267264,547620863,0,0,PLAT_AP,EXCEP_PRINT,assert_rndis,P_ERROR,swLogExcep("RNDIS HALT FAILED ");
267264,547620865,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_0,P_ERROR,swLogExcep("Assert INFO : %s ");
267264,547622912,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_1,P_ERROR,swLogExcep("dump latest %d words stack start ");
267264,547625728,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_2,P_ERROR,swLogExcep("dump stack frame: 0x%x 0x%x 0x%x 0x%x ");
267264,547627009,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_3,P_ERROR,swLogExcep("assert in task: %s ");
267264,547629057,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_4,P_ERROR,swLogExcep("assert in: %s ");
267264,547631105,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_5,P_ERROR,swLogExcep("assert in: %s ");
267264,547635199,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_8,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547637247,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_9,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547639295,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_10,P_ERROR,swLogExcep("...yrcp_init..fail ");
267264,547641343,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_11,P_ERROR,swLogExcep("assert occurs , the system will reset ");
267264,547641344,0,0,PLAT_AP,EXCEP_PRINT,LFS_DaemonTaskEntry_e_1,P_ERROR,swLogPrintf("LFS deamon , can ' t proc reqType: %d ");
267264,547643648,0,0,PLAT_AP,EXCEP_PRINT,LFS_Init_0,P_ERROR,swLogPrintf("FS region reformat threshold: %d , Current FS assert count:%d ");
267264,547647487,0,0,PLAT_AP,EXCEP_PRINT,LFS_Init_1,P_ERROR,swLogPrintf("FS region reformat failed!!! ");
268288,549456897,0,0,PLAT_AP,OSA,OsaCheckDebugFalse_e_1,P_ERROR,swLogPrintf("Debug Error , func: %s , line: %d , ( 0x%x , 0x%x , 0x%x ) ");
268288,549458688,0,0,PLAT_AP,OSA,OsaCfgNvmRemoveParam_e_1,P_ERROR,swLogPrintf("OSA CFG NVM , filesize: %d , remove size: %d + %d , can ' t remove paramId: %d , discard whole cfg file ");
268288,549460480,0,0,PLAT_AP,OSA,OsaCfgNvmGetParam_e_1,P_ERROR,swLogPrintf("OSA CFG NVN , can ' t get paramId: %d , file overflow , pCfgParse: 0x%x , pCfgEnd: 0x%x , reset whole config file ");
268288,549462784,0,0,PLAT_AP,OSA,OsaCfgNvmGetNextParam_e_1,P_ERROR,swLogPrintf("OSA CFG NVM , parse file erro , paramId: %d , type: %d , endlen: %d , but filesize only: %d , discard whole cfg file ");
268288,549465088,0,0,PLAT_AP,OSA,OsaCfgNvmAddParam_input_w_1,P_WARNING,swLogPrintf("OSA CFG NVN , can ' t add param , invalid input: paramId: %d , cfgType: %d , len: %d , paramAddr: 0x%x , NVMBody: 0x%x ");
268288,549466624,0,0,PLAT_AP,OSA,OsaCfgNvmAddParam_input_w_2,P_WARNING,swLogPrintf("OSA CFG NVN , cfgType: %d , but size: %d > 2 , can ' t add param: %d ");
268288,549468672,0,0,PLAT_AP,OSA,OsaCfgNvmAddParam_size_w_1,P_ERROR,swLogPrintf("OSA CFG NVN , cfg file size: %d , new added size: %d , already > 4 KB , can ' t add paramId: %d ");
268288,549471232,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_input_w_1,P_WARNING,swLogPrintf("OSA CFG NVN , can ' t update param , invalid input: paramId: %d , cfgType: %d , len: %d , paramAddr: 0x%x , NVMBody: 0x%x ");
268288,549472768,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_input_w_2,P_WARNING,swLogPrintf("OSA CFG NVN , cfgType: %d , but size: %d > 2 , can ' t update param: %d ");
268288,549474304,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_null_1,P_VALUE,swLogPrintf("OSA CFG NVN , paramId: %d , not found in NVM , can ' t update , should add new into NVM ");
268288,549477120,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_replace_e_1,P_ERROR,swLogPrintf("OSA CFG NVM , paramId: %d , type: %d , paramLen not right , new: %d , old: %d ");
268288,549478912,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_replace_e_2,P_ERROR,swLogPrintf("OSA CFG NVM , paramId: %d , type: %d not the same as old: %d ");
268288,549481216,0,0,PLAT_AP,OSA,OsaMemPoolIdAlloc_w_1,P_WARNING,swLogPrintf("OSA POOL MEM , can ' t alloc size: %d > etySize: %d , from poolId: %d , request by: %d ");
268288,549483264,0,0,PLAT_AP,OSA,OsaMemPoolIdAlloc_null_1,P_WARNING,swLogPrintf("OSA POOL MEM , PoolId: %d , allocated Num: %d , no left , can ' t alloc size: %d , request by: %d ");
268288,549484800,0,0,PLAT_AP,OSA,OsaMemPoolAlloc_warning_1,P_WARNING,swLogPrintf("OSA POOL MEM , no pool is suitable for wantedSize: %d , callerId: %d ");
268288,549487105,0,0,PLAT_AP,OSA,OsaNvmDaemonTaskRead_e_2,P_ERROR,swLogPrintf("OSA NVM , file: %s , can ' t read header , readLen: %d , wanted: %d , remove it ");
268288,549489153,0,0,PLAT_AP,OSA,OsaNvmDaemonTaskRead_e_3,P_ERROR,swLogPrintf("OSA NVM , file: %s , invalid file size: %d > %d , not support , remove it ");
268288,549491201,0,0,PLAT_AP,OSA,OsaNvmDaemonTaskRead_e_4,P_ERROR,swLogPrintf("OSA NVM , file: %s , can ' t read body , readLen: %d , wantedSize: %d , remove it ");
268288,549493249,0,0,PLAT_AP,OSA,OsaNvmDaemonTaskWrite_e_1,P_ERROR,swLogPrintf("OSA NVM , file: %s , can ' t write file , wrSize: %d > MAX: %d ");
268288,549495296,0,0,PLAT_AP,OSA,OsaNvmRead_w_1,P_WARNING,swLogPrintf("OSA NVM , read NVM , invalid input , fileName: 0x%x , bodyInfo: 0x%x , bodyInfo.pbuf: 0x%x ");
268288,549497345,0,0,PLAT_AP,OSA,OsaNvmRead_w_2,P_WARNING,swLogPrintf("OSA NVM , file: %s , nameLen: %d > %d , or 0 , invalid , can ' t read file ");
268288,549499137,0,0,PLAT_AP,OSA,OsaNvmRead_lfs_w_1,P_WARNING,swLogPrintf("OSA NVM , can ' t read NVM file: %s , ret: %d ");
268288,549501187,0,0,PLAT_AP,OSA,OsaNvmRead_filename_w_1,P_WARNING,swLogPrintf("OSA NVM , read file: %s , but the filename header is: %s , not valid file , remove file ");
268288,549503745,0,0,PLAT_AP,OSA,OsaNvmRead_cks_w_1,P_WARNING,swLogPrintf("OSA NVM , read file: %s , len: %d , checksum not right , calc: 0x%x , want: 0x%x , remove file ");
268288,549505536,0,0,PLAT_AP,OSA,OsaNvmWrite_input_w_1,P_WARNING,swLogPrintf("OSA NVM , write file , invalid input , fileNameAddr: 0x%x , pData: 0x%x , size: %d , should < 4096 ");
268288,549507585,0,0,PLAT_AP,OSA,OsaNvmWrite_filename_w_1,P_WARNING,swLogPrintf("OSA NVM , file: %s , nameLen: %d > %d , or 0 , invalid , can ' t write file ");
268288,549509377,0,0,PLAT_AP,OSA,OsaNvmWrite_lfs_w_1,P_WARNING,swLogPrintf("OSA NVM , can ' t write NVM file: %s , ret: %d ");
268288,549511168,0,0,PLAT_AP,OSA,OsaHibTimerExpiryCallback_1,P_SIG,swLogPrintf("HIB Timer Expired , ID: %e<OsaHibTimerId> ");
268288,549513728,0,0,PLAT_AP,OSA,osa_timeSync1,P_INFO,swLogPrintf("new---NITZ , year-mon-day:0x%x , hour-min-sec-tz:0x%x , sec from 1970 is 0x%x ");
268288,549515264,0,0,PLAT_AP,OSA,osa_timeSync3,P_INFO,swLogPrintf("SNTP secs since 1970 :0x%x ");
268288,549517312,0,0,PLAT_AP,OSA,osa_timeSync4,P_INFO,swLogPrintf("curr---ctTimerCurr:0x%x ");
268288,549519872,0,0,PLAT_AP,OSA,osa_timeSync5,P_INFO,swLogPrintf("update time info to flash utc:0x%x , ct:0x%x , zone:0x%x ");
268288,549522176,0,0,PLAT_AP,OSA,osa_timeSync6,P_INFO,swLogPrintf("update time info to flash again utc:0x%x , ct:0x%x , zone:0x%x , ret = %d ");
268288,549523456,0,0,PLAT_AP,OSA,osa_timeSync7,P_INFO,swLogPrintf("utcSeconds from flash:0x%x ");
268288,549525504,0,0,PLAT_AP,OSA,osa_timeSync8,P_INFO,swLogPrintf("old---CTtimer:0x%x ");
268288,549527808,0,0,PLAT_AP,OSA,osa_timeSync9,P_INFO,swLogPrintf("utcRang:0x%x , ctTimerRang:0x%x ");
268288,549530112,0,0,PLAT_AP,OSA,osa_timeSync10,P_INFO,swLogPrintf("update time info to flash utc:0x%x , ct:0x%x , zone:0x%x ");
268288,549532416,0,0,PLAT_AP,OSA,osa_timeSync11,P_INFO,swLogPrintf("update time info to flash again utc:0x%x , ct:0x%x , zone:0x%x , ret = %d ");
268288,549534208,0,0,PLAT_AP,OSA,osa_timeSync12,P_INFO,swLogPrintf("update time info to flash utc:0x%x , ct:0x%x , zone:0x%x ");
268288,549536512,0,0,PLAT_AP,OSA,osa_timeSync13,P_INFO,swLogPrintf("update time info to flash again utc:0x%x , ct:0x%x , zone:0x%x , ret = %d ");
268288,549539839,0,0,PLAT_AP,OSA,osa_time9,P_INFO,swLogPrintf("NO time sync triggered , use the default time 2000.100000 .1 ");
268288,549540096,0,0,PLAT_AP,OSA,osa_time10_0,P_INFO,swLogPrintf("read UTC flash maybe err , ctTimerCurr 0x%x , CTtimer 0x%x ");
268288,549542144,0,0,PLAT_AP,OSA,osa_time10,P_INFO,swLogPrintf("read sec flash utc is 0x%x , ct period is 0x%x ");
268288,549545983,0,0,PLAT_AP,OSA,osa_time110,P_INFO,swLogPrintf("use default time seting , senice 2000 ");
268288,549546240,0,0,PLAT_AP,OSA,osa_time12_0,P_INFO,swLogPrintf("read UTC flash maybe err , ctTimerCurr 0x%x , CTtimer 0x%x ");
268288,549548288,0,0,PLAT_AP,OSA,osa_time12,P_INFO,swLogPrintf("read UTC flash utc is 0x%x , ct period is 0x%x ");
268288,549551105,0,0,PLAT_AP,OSA,PsOsCreateTask_1,P_ERROR,swLogPrintf("PS Task: %s , id: %d , create Failed - %u , %u , %u ");
268288,549554175,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_1,P_SIG,swLogPrintf("Create CMS task... ");
268288,549556223,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_w_1,P_WARNING,swLogPrintf("CMS Task already created , not need to create again ");
268288,549556483,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_name_e_1,P_ERROR,swLogPrintf("CMS Task already created , but task name not right: %s , must be: %s ");
268288,549558528,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_pri_e_1,P_ERROR,swLogPrintf("CMS Task already created , but task priority not right: %d , must be: %d ");
268288,549560832,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_task_e_1,P_ERROR,swLogPrintf("CMS Task Create Failed - %u , %u , %u ");
268288,549562880,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_queue_e_1,P_ERROR,swLogPrintf("CMS Task queue Create Failed - %u , %u , %u ");
268288,549564416,0,0,PLAT_AP,OSA,PsInitialiseTasks_1,P_SIG,swLogPrintf("Create PS tasks... , PS tasks created before: %d ");
268288,549566720,0,0,PLAT_AP,OSA,EC_HEAP,P_INFO,swLogPrintf("EC heap size is %d , start addr is 0x%x! ");
268288,549569280,0,0,PLAT_AP,OSA,OSA_ULFC_ALLOC,P_SIG,swLogPrintf("UlfcMem ( %d ) : alerting water! usedSize ( %d ) , alertThres ( %d / %d%% ) ");
268288,549571848,0,0,PLAT_AP,OSA,OSA_ULFC_SET_CONF,P_SIG,swLogPrintf("UlfcMem ( %d ) : set task ( %d / 0x%x ) to %s mode ( %d ) , latest ref ( %d ) ! ");
268288,549573376,0,0,PLAT_AP,OSA,OSA_ULFC_UNSET_CONF_1,P_SIG,swLogPrintf("UlfcMem ( %d ) : unset task ( %d / 0x%x ) , latest ref ( %d ) ! ");
268288,549574656,0,0,PLAT_AP,OSA,OSA_ULFC_UNSET_CONF_2,P_SIG,swLogPrintf("UlfcMem ( %d ) : create unset timer! ");
268288,549577730,0,0,PLAT_AP,OSA,OSA_ULFC_EVT_NOTIF,P_SIG,swLogPrintf("UlfcMem ( %d ) : %s water ( %d ) , usedSize ( %d ) , @bmTaskId ( 0x%x ) ! ");
269312,551553024,0,0,PLAT_AP,PMU,ec_main_2,P_VALUE,swLogPrintf("Current BT1MsCnt = %d ");
269312,551555328,0,0,PLAT_AP,PMU,fpgaCaliStart,P_SIG,swLogPrintf("fcStart = %d , scStart = %d ");
269312,551557376,0,0,PLAT_AP,PMU,fpgaCaliStop,P_SIG,swLogPrintf("fcStop = %d , scStop = %d ");
269312,551559168,0,0,PLAT_AP,PMU,fpgaCaliRslt,P_SIG,swLogPrintf("calibration result is %d ");
269312,551561472,0,0,PLAT_AP,PMU,BcLdRslt,P_SIG,swLogPrintf("wakeup:bcValueHigh = 0x%X , bcValueLow = 0x%X ");
269312,551565311,0,0,PLAT_AP,PMU,waitIdle2,P_SIG,swLogPrintf("wait for 10 seconds ");
269312,551567359,0,0,PLAT_AP,PMU,RtcIsr,P_SIG,swLogPrintf("Rtc Isr triggered ");
269312,551568640,0,0,PLAT_AP,PMU,fpgaLatch,P_SIG,swLogPrintf("latch fail fcCnt0 = %d , fcCnt = %d , fcCnt1 = %d , scCnt0 = %d , scCnt = %d , scCnt1 = %d ");
269312,551570688,0,0,PLAT_AP,PMU,fpgaLatch_1,P_SIG,swLogPrintf("latch fail fcCnt0 = %d , fcCnt = %d , fcCnt1 = %d , scCnt0 = %d , scCnt = %d , scCnt1 = %d ");
269312,551571456,0,0,PLAT_AP,PMU,DivTest00,P_SIG,swLogPrintf("Original ratio is %d ");
269312,551573504,0,0,PLAT_AP,PMU,DivTest01,P_SIG,swLogPrintf("new ratio is %d ");
269312,551577599,0,0,PLAT_AP,PMU,waitIdle0,P_SIG,swLogPrintf("wait for 8 seconds ");
269312,551577600,0,0,PLAT_AP,PMU,ratioAfterSleep0,P_SIG,swLogPrintf("ratio after sleep is %d ");
269312,551579648,0,0,PLAT_AP,PMU,DivTest02,P_SIG,swLogPrintf("set divide ratio to original %d ");
269312,551583743,0,0,PLAT_AP,PMU,DivTest03,P_SIG,swLogPrintf("* * * * * * * * * * * * * * * * * * * * * * * * * * * * * Sw divide ratio config done * * * * * * * * * * * * * * * * * * * * * * * * * * ");
269312,551583744,0,0,PLAT_AP,PMU,DivTest10,P_SIG,swLogPrintf("Original ratio is %d ");
269312,551585792,0,0,PLAT_AP,PMU,DivTest11,P_SIG,swLogPrintf("new ratio is %d ");
269312,551589887,0,0,PLAT_AP,PMU,waitIdle1,P_SIG,swLogPrintf("wait for 16 seconds ");
269312,551589888,0,0,PLAT_AP,PMU,ratioAfterSleep1,P_SIG,swLogPrintf("ratio after sleep is %d ");
269312,551593983,0,0,PLAT_AP,PMU,DivTest13,P_SIG,swLogPrintf("* * * * * * * * * * * * * * * * * * * * * * * * * * * * * latch tirgger divide ratio config done * * * * * * * * * * * * * * * * * * * * * * * * * * ");
269312,551594496,0,0,PLAT_AP,PMU,PhyFpgaWakeUpCfg_0,P_SIG,swLogPrintf("currTime: bcValueHigh = 0x%X , bcValueLow = 0x%X and sc is %d ");
269312,551596544,0,0,PLAT_AP,PMU,PhyFpgaWakeUpCfg_1,P_SIG,swLogPrintf("wakeup:bcValueHigh = 0x%X , bcValueLow = 0x%X and sc is %d ");
269312,551600127,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_0,P_SIG,swLogPrintf("Boot From Power On \r \n ");
269312,551600128,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_11,P_SIG,swLogPrintf("curr SC = %d ");
269312,551602432,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_12,P_SIG,swLogPrintf("wakeup:bcValueHigh = 0x%X , bcValueLow = 0x%X ");
269312,551606271,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_2,P_SIG,swLogPrintf("wakeup form sleep1 ");
269312,551608319,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_3,P_SIG,swLogPrintf("undefined \r \n ");
269312,551610367,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_4,P_SIG,swLogPrintf("boot form sleep1 \r \n ");
269312,551612415,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_5,P_SIG,swLogPrintf("boot form sleep2 \r \n ");
269312,551614463,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_51,P_SIG,swLogPrintf("wakeup form sleep2 ");
269312,551616511,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_6,P_SIG,swLogPrintf("boot form hibernate \r \n ");
269312,551616512,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_61,P_SIG,swLogPrintf("hibernate curr SC = %d ");
269312,551618816,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_62,P_SIG,swLogPrintf("hibernate wakeup:bcValueHigh = 0x%X , bcValueLow = 0x%X ");
269312,551622655,0,0,PLAT_AP,PMU,ApFpgaPmuTestMain_7,P_SIG,swLogPrintf("boot form ao \r \n ");
269312,551624703,0,0,PLAT_AP,PMU,apmuSendCmsCpStartSig_0,P_VALUE,swLogPrintf("Unexpected weak function enter ");
269312,551626751,0,0,PLAT_AP,PMU,apmuWakeupPsNoneBlock_0,P_VALUE,swLogPrintf("Unexpected weak function enter ");
269312,551628799,0,0,PLAT_AP,PMU,ApSmallImageWFITimer_0,P_VALUE,swLogPrintf("ApSmallImageWFITimer Isr Enter ");
269312,551630847,0,0,PLAT_AP,PMU,apmuStartPowerOff_0,P_SIG,swLogPrintf("Power Off Failed , try again ");
269312,551631104,0,0,PLAT_AP,PMU,apmuGetAPWakeupSrc,P_VALUE,swLogPrintf("APmu: padWakeup = 0x%x , rtcWakeup = 0x%x ");
269312,551634943,0,0,PLAT_AP,PMU,apmuSetWakeupPadCfg_1,P_WARNING,swLogPrintf("apmuSetWakeupPadCfg: Pad Num should < = WAKEUP_PAD_5 ");
269312,551636991,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_2,P_VALUE,swLogPrintf("APMU CpSleepEnd: CP Vote for sleep1 ");
269312,551639039,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_3,P_VALUE,swLogPrintf("APMU CpSleepEnd: CP Vote for sleep2 ");
269312,551641087,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_4,P_VALUE,swLogPrintf("APMU CpSleepEnd: CP Vote for hibernate ");
269312,551643135,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_5,P_VALUE,swLogPrintf("APMU CpSleepEnd: CP Vote for sleep0 ");
269312,551645183,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_1,P_WARNING,swLogPrintf("APMU CpSleepEnd: Unknow sleep type! ");
269312,551647231,0,0,PLAT_AP,PMU,apmuCPWakeupEndIntHandler_1,P_VALUE,swLogPrintf("APMU CpWakeupEnd: CP Wakeup! ");
269312,551649279,0,0,PLAT_AP,PMU,apmuCPAssistReqIntHandler_1,P_VALUE,swLogPrintf("AP: Int Enter->CP Assist Req ");
269312,551651327,0,0,PLAT_AP,PMU,apmuCPRstReqIntHandler_1,P_VALUE,swLogPrintf("AP: Int Enter->CP Reset Req ");
269312,551651584,0,0,PLAT_AP,PMU,apmuNeedFlashErase_0,P_VALUE,swLogPrintf("Need Flash Erase , FlashClrFlag = 0x%x , FlashWrFlag = 0x%x ");
269312,551653888,0,0,PLAT_AP,PMU,apmuCreateNearHibTimer_0,P_ERROR,swLogPrintf("clkRet1 = %d , clkRet2 = %d , CLKDIV = 0x%x ");
269312,551655424,0,0,PLAT_AP,PMU,apmuCreateNearHibTimer_1,P_VALUE,swLogPrintf("apmuCreateNearHibTimer set to %u ms ");
269312,551658240,0,0,PLAT_AP,PMU,apmuCheckLdoBeforeSlp_1,P_VALUE,swLogPrintf("Ldo state , aonio = %d , sim = %d , aio = %d , usbMode = %d ");
269312,551661567,0,0,PLAT_AP,PMU,apmuStartCPTimerExp_0,P_VALUE,swLogPrintf("apmuStartCPTimer Expired ");
269312,551663615,0,0,PLAT_AP,PMU,apmuStartCPTimerExp_1,P_VALUE,swLogPrintf("Still not time to start cp , start modem timer again ");
269312,551664128,0,0,PLAT_AP,PMU,apmuCreateModemStartTimer_000,P_ERROR,swLogPrintf("clkRet1 = %d , clkRet2 = %d , CLKDIV = 0x%x ");
269312,551665664,0,0,PLAT_AP,PMU,apmuCreateModemStartTimer_0,P_VALUE,swLogPrintf("apmuCreateModemStartTimer set to %u ms ");
269312,551669759,0,0,PLAT_AP,PMU,apmuSetCPFastBoot_1,P_WARNING,swLogPrintf("Warning: CP Code in invalid , skip cp fast boot config ");
269312,551669760,0,0,PLAT_AP,PMU,apmuTrgCPPowerOn_0,P_SIG,swLogPrintf("Error: CP is already power on. Last WakeupSrc = 0x%x ");
269312,551673855,0,0,PLAT_AP,PMU,apmuCPSwPowerOn_0,P_VALUE,swLogPrintf("CP is powered off. Start CP Power on flow ");
269312,551674112,0,0,PLAT_AP,PMU,apmuCPSwPowerOn_00,P_VALUE,swLogPrintf("ap share:0x%x , len:0x%x ");
269312,551677951,0,0,PLAT_AP,PMU,apmuCPSwPowerOn_1,P_SIG,swLogPrintf("Cp Auto Power On After setting assist boot ");
269312,551679999,0,0,PLAT_AP,PMU,apmuSetCPFastBoot_00,P_WARNING,swLogPrintf("Warning: CP Code in invalid , No code in CP Flash ");
269312,551682047,0,0,PLAT_AP,PMU,funcTestAPSleep1_1,P_SIG,swLogPrintf("funcTestAPSleep1 Test ");
269312,551684095,0,0,PLAT_AP,PMU,funcTestAPSleep1_2,P_SIG,swLogPrintf("Ap go sleep1 ");
269312,551686143,0,0,PLAT_AP,PMU,funcTestAPSleep1_3,P_SIG,swLogPrintf("funcTestAPSleep1 sleep failed ");
269312,551688191,0,0,PLAT_AP,PMU,funcTestAPSleep1_4,P_SIG,swLogPrintf("funcTestAPSleep1 sleep success ");
269312,551690239,0,0,PLAT_AP,PMU,apmuSlpTestExtWakeupSleep2_1,P_SIG,swLogPrintf("SleepDeep Test ");
269312,551690496,0,0,PLAT_AP,PMU,apmuSlpTestExtWakeupSleep2_2,P_SIG,swLogPrintf("DeepSleep Test: bootFlg = %d , slpMode = %d ");
269312,551694335,0,0,PLAT_AP,PMU,apmuSlpTestExtWakeupSleep2_3,P_SIG,swLogPrintf("Deep Sleep failed ");
269312,551696383,0,0,PLAT_AP,PMU,apmuGetBT10MsCnt_1,P_SIG,swLogPrintf("hibCnt Wrap in small image , should go fullimage to write timeoffset ");
269312,551698431,0,0,PLAT_AP,PMU,apmuGetBT10MsCnt_2,P_SIG,swLogPrintf("hibCnt Wrap in full image , should write flash ");
269312,551700479,0,0,PLAT_AP,PMU,ApmuAonRegWR_0,P_INFO,swLogPrintf("ApmuAonRegWR! ");
269312,551702527,0,0,PLAT_AP,PMU,ApmuAonRegRecovery_0,P_SIG,swLogPrintf("ApmuAonRegRecovery! ");
269312,551704575,0,0,PLAT_AP,PMU,ApmuScDivDisable,P_SIG,swLogPrintf("set sc div ratio to 0 by sw! ");
269312,551705600,0,0,PLAT_AP,PMU,ApmuGetSleepLength_0,P_VALUE,swLogPrintf("startSc is %d , wakeupSc is %d , diviRatio is %d , load 0x%X|%d ");
269312,551706880,0,0,PLAT_AP,PMU,ApmuGetSleepLength_1,P_VALUE,swLogPrintf("sleepLength is %d , totalSleepLength is %d ( unit is ms ) ");
269312,551708672,0,0,PLAT_AP,PMU,ApmuWaitBcLdComplete,P_VALUE,swLogPrintf("BcLd triggered and curSc is %d ");
269312,551710720,0,0,PLAT_AP,PMU,ApmuFeedWtdg_1,P_VALUE,swLogPrintf("Feed Aon Watchdog , current sc = %d ");
269312,551713792,0,0,PLAT_AP,PMU,ApmuF2sRatioAtcUpdt_0,P_VALUE,swLogPrintf("old ratio is 0x%X , new one is 0x%X , sleepLength is %d , atcAdj is %d , ApSleepLength = %d ( / 32 ) ");
269312,551715328,0,0,PLAT_AP,PMU,ApmuBfLtchPreProc_0,P_VALUE,swLogPrintf("sleepLength is %d , f2sRatio is 0x%X , scCnt is %d ");
269312,551718144,0,0,PLAT_AP,PMU,ApmuBfLtchPreProc_1,P_VALUE,swLogPrintf("scDiv is %d , scMask is 0x%X , deltaBc 0x%X|%d , btSysTime 0x%X|%d ");
269312,551719168,0,0,PLAT_AP,PMU,ApmuUnschdWakeupProc_1,P_WARNING,swLogPrintf("illegal! scOfstNew2Start is %d , maxSleepLen is %d ");
269312,551720960,0,0,PLAT_AP,PMU,ApmuUnschdWakeupProc_2,P_WARNING,swLogPrintf("bcLd very near or past! scOfstNew2Bcld is %d ");
269312,551723776,0,0,PLAT_AP,PMU,ApmuUnschdWakeupProc_3,P_VALUE,swLogPrintf("currSc is %d , scDiff = %d , bcLd 0x%X|%d ");
269312,551725312,0,0,PLAT_AP,PMU,ApmuUnschdWakeupProc_4,P_WARNING,swLogPrintf("illegal! RTC wakeup missed! currSc is %d , newWakeupSc is %d ");
269312,551727360,0,0,PLAT_AP,PMU,apmuScSyncDoneProc_1,P_VALUE,swLogPrintf("f2s ratio fast clock result start = %d , stop = %d ");
269312,551729920,0,0,PLAT_AP,PMU,apmuScSyncDoneProc,P_SIG,swLogPrintf("SlowClock Calibration Finished! , f2sRatio = 0x%X , fcDiff = %d , scDiff = %d , 32 K freq = %d ");
269312,551731968,0,0,PLAT_AP,PMU,SC_SYNC_REQ_SLEEP_PREPROC_0,P_VALUE,swLogPrintf("startSc is %d , wakeupSc is %d , bcLd 0x%X|%d ");
269312,551734016,0,0,PLAT_AP,PMU,ApmuSniffProc,P_VALUE,swLogPrintf("newRatio is 0x%X , f2sRatio is 0x%X , sleepLength is %d , timingShift is %d ");
269312,551735808,0,0,PLAT_AP,PMU,GetsleepLength,P_VALUE,swLogPrintf("CPSleepLengthTotal is %d , ApSleepLength = %d ( / 32 ) , sleepLengthAdj = %d ");
269312,551739391,0,0,PLAT_AP,PMU,ApmuSleepFailPostProc,P_SIG,swLogPrintf("sleep fail prcoess enter! ");
269312,551739648,0,0,PLAT_AP,PMU,funcTestCPAssistReq_0,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551741696,0,0,PLAT_AP,PMU,funcTestCPAssistReq_1,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551743744,0,0,PLAT_AP,PMU,funcTestCPAssistReq_2,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551745792,0,0,PLAT_AP,PMU,funcTestCPAssistReq_3,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551749631,0,0,PLAT_AP,PMU,funcTestCPAssistReq_4,P_SIG,swLogPrintf("Flush out ");
269312,551749888,0,0,PLAT_AP,PMU,funcTestCPAssistReq_5,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551753727,0,0,PLAT_AP,PMU,apmuPadWakeupTest_00,P_SIG,swLogPrintf("AP Pad Wakeup Test , 6 Pad , pwrkey , charge Negetive , 10 second RTC ");
269312,551753984,0,0,PLAT_AP,PMU,apmuPadWakeupTest_1,P_SIG,swLogPrintf("pad wakeup test-%d , target Sc = %d ");
269312,551757823,0,0,PLAT_AP,PMU,apmuPadWakeupTest_2,P_SIG,swLogPrintf("funcTestPadWakeupTest sleep failed ");
269312,551759871,0,0,PLAT_AP,PMU,funcTestAONDeepSlpLatch_0,P_SIG,swLogPrintf("funcTestAONDeepSlpLatch Test , default set high ");
269312,551761919,0,0,PLAT_AP,PMU,funcTestAONDeepSlpLatch_1,P_SIG,swLogPrintf("Test AON IO Level , Pad can wakeup ");
269312,551763967,0,0,PLAT_AP,PMU,funcTestAONDeepSlpLatch_2,P_SIG,swLogPrintf("funcTestPadWakeupTest sleep failed ");
269312,551766015,0,0,PLAT_AP,PMU,funcTestCacheBypass_0,P_SIG,swLogPrintf("funcTestCacheBypass , do not bypass cache ");
269312,551768063,0,0,PLAT_AP,PMU,funcTestCacheBypass_1,P_SIG,swLogPrintf("funcTestCacheBypass , cache bypass ");
269312,551770111,0,0,PLAT_AP,PMU,funcTestCacheBypass_2,P_SIG,swLogPrintf("funcTestCacheBypass , Recover , do not bypass ");
269312,551772159,0,0,PLAT_AP,PMU,funcTestHardfault_0,P_WARNING,swLogPrintf("funcTestHardfault , trigger a hardfault ");
269312,551772160,0,0,PLAT_AP,PMU,funcTestWatchDog_0,P_WARNING,swLogPrintf("funcTestWatchDog , a while loop at last , rstReason = %d ");
269312,551776255,0,0,PLAT_AP,PMU,funcTestWatchDog_1,P_WARNING,swLogPrintf("should add while loop in nmi handler ");
269312,551776512,0,0,PLAT_AP,PMU,funcTestWatchDog_2,P_WARNING,swLogPrintf("aonreg15 = 0x%x , apTimer = 0x%x , cptimer = 0 ");
269312,551780351,0,0,PLAT_AP,PMU,funcTestForceDeepSlpWithCP_0,P_SIG,swLogPrintf("AP Force deepsleep , if cp allow ");
269312,551782399,0,0,PLAT_AP,PMU,funcTestForceDeepSlpWithCP_1,P_SIG,swLogPrintf("CP do not allow ap deep sleep ");
269312,551784447,0,0,PLAT_AP,PMU,funcTestForceDeepSlpWithCP_2,P_SIG,swLogPrintf("CP allow ap deep sleep ");
269312,551786495,0,0,PLAT_AP,PMU,funcTestForceDeepSlpWithCP_3,P_SIG,swLogPrintf("funcTestForceDeepSlpWithCP sleep failed ");
269312,551788543,0,0,PLAT_AP,PMU,funcTestSysMon_1,P_SIG,swLogPrintf("AP SysMon Test ");
269312,551790591,0,0,PLAT_AP,PMU,funcPllBypass_0,P_SIG,swLogPrintf("funcTestAPSleep1 Test ");
269312,551792639,0,0,PLAT_AP,PMU,funcPllBypass_1,P_ERROR,swLogPrintf("iso clk ref incorrect ");
269312,551794687,0,0,PLAT_AP,PMU,funcPllBypass_2,P_ERROR,swLogPrintf("iso clk pll incorrect ");
269312,551796735,0,0,PLAT_AP,PMU,funcPllBypass_3,P_SIG,swLogPrintf("Ap go sleep1 ");
269312,551798783,0,0,PLAT_AP,PMU,funcPllBypass_12,P_SIG,swLogPrintf("clk Status correct-in mcu mode ");
269312,551800831,0,0,PLAT_AP,PMU,funcPllBypass_13,P_SIG,swLogPrintf("clk Status not correct-in mcu mode ");
269312,551802879,0,0,PLAT_AP,PMU,funcPllBypass_121,P_SIG,swLogPrintf("clk Status correct-in normal mode ");
269312,551804927,0,0,PLAT_AP,PMU,funcPllBypass_131,P_SIG,swLogPrintf("clk Status not correct-in normal mode ");
269312,551806975,0,0,PLAT_AP,PMU,funcPllBypass_4,P_SIG,swLogPrintf("funcTestAPSleep1 sleep failed ");
269312,551809023,0,0,PLAT_AP,PMU,funcPllBypass_5,P_SIG,swLogPrintf("funcTestAPSleep1 sleep success ");
269312,551811071,0,0,PLAT_AP,PMU,funcPllBypass_6,P_VALUE,swLogPrintf("enter mcu mode correct ");
269312,551813119,0,0,PLAT_AP,PMU,funcPllBypass_61,P_ERROR,swLogPrintf("enter mcu mode incorrect ");
269312,551815167,0,0,PLAT_AP,PMU,funcPllBypass_62,P_VALUE,swLogPrintf("wakeup in normal mode correct ");
269312,551817215,0,0,PLAT_AP,PMU,funcPllBypass_63,P_ERROR,swLogPrintf("wakeup in normal mode incorrect ");
269312,551819263,0,0,PLAT_AP,PMU,funcPllBypass_7,P_VALUE,swLogPrintf("enter mcu mode correct ");
269312,551821311,0,0,PLAT_AP,PMU,funcPllBypass_8,P_VALUE,swLogPrintf("ison valid ");
269312,551823359,0,0,PLAT_AP,PMU,funcPllBypass_9,P_VALUE,swLogPrintf("ison invalid ");
269312,551825407,0,0,PLAT_AP,PMU,funcPllBypass_10,P_VALUE,swLogPrintf("pll force on failed ");
269312,551827455,0,0,PLAT_AP,PMU,funcPllBypass_11,P_VALUE,swLogPrintf("pll force on success ");
269312,551829503,0,0,PLAT_AP,PMU,funcPllBypass_14,P_SIG,swLogPrintf("clk Status correct after mcu mode force on pll ");
269312,551831551,0,0,PLAT_AP,PMU,funcPllBypass_15,P_SIG,swLogPrintf("clk Status not correct after mcu mode force on pll ");
269312,551831552,0,0,PLAT_AP,PMU,funcTestDFCTest_0,P_WARNING,swLogPrintf("DeltaTime when not vote = %d ");
269312,551833600,0,0,PLAT_AP,PMU,funcTestDFCTest_1,P_WARNING,swLogPrintf("DeltaTime when not vote = %d ");
269312,551837695,0,0,PLAT_AP,PMU,funcTestDFCTest_2,P_VALUE,swLogPrintf("ap clk change to 26 M ");
269312,551839743,0,0,PLAT_AP,PMU,funcTestDFCTest_3,P_VALUE,swLogPrintf("Err: ap clk not change to 26 M ");
269312,551841791,0,0,PLAT_AP,PMU,funcTestDFCTest_4,P_VALUE,swLogPrintf("cp clk change to 26 M ");
269312,551843839,0,0,PLAT_AP,PMU,funcTestDFCTest_5,P_VALUE,swLogPrintf("Err: cp clk not change to 26 M ");
269312,551845887,0,0,PLAT_AP,PMU,funcTestAonReadWrite_0,P_WARNING,swLogPrintf("funcTestAonReadWrite Read and write ");
269312,551847935,0,0,PLAT_AP,PMU,funcTestAonReadWrite_1,P_WARNING,swLogPrintf("funcTestAonReadWrite Test Failed ");
269312,551849983,0,0,PLAT_AP,PMU,funcTestSlowCnt_3,P_WARNING,swLogPrintf("funcTestSlowCnt Read ");
269312,551849984,0,0,PLAT_AP,PMU,funcTestSlowCnt_0,P_VALUE,swLogPrintf("slow cnt 0 = %d ");
269312,551852032,0,0,PLAT_AP,PMU,funcTestSlowCnt_1,P_VALUE,swLogPrintf("slow cnt 1 = %d ");
269312,551854080,0,0,PLAT_AP,PMU,funcTestSlowCnt_2,P_VALUE,swLogPrintf("slow cnt 2 = %d ");
269312,551858175,0,0,PLAT_AP,PMU,funcTestSlowCnt_4,P_VALUE,swLogPrintf("funcTestSlowCnt Test failed ");
269312,551860223,0,0,PLAT_AP,PMU,funcTestWakeupPinValue_0,P_WARNING,swLogPrintf("Test AP Wakeup Pin Value ");
269312,551860224,0,0,PLAT_AP,PMU,funcTestWakeupPinValue_1,P_SIG,swLogPrintf("PinValue = 0x%x ");
269312,551864319,0,0,PLAT_AP,PMU,funcTestAPCPDapWakeup_0,P_SIG,swLogPrintf("funcTestAPCPDapWakeup Test ");
269312,551866367,0,0,PLAT_AP,PMU,funcTestAPCPDapWakeup_1,P_SIG,swLogPrintf("Error: CP is already power on ");
269312,551868415,0,0,PLAT_AP,PMU,funcTestCPDapWakeup_2,P_SIG,swLogPrintf("CP Dap Wakeup Enable , connect AP Jlink to wakeup cp ");
269312,551870463,0,0,PLAT_AP,PMU,funcTestCPCPDapWakeup_0,P_SIG,swLogPrintf("funcTestCPCPDapWakeup Test ");
269312,551872511,0,0,PLAT_AP,PMU,funcTestCPCPDapWakeup_1,P_SIG,swLogPrintf("Error: CP is already power on ");
269312,551874559,0,0,PLAT_AP,PMU,funcTestCPCPDapWakeup_2,P_SIG,swLogPrintf("CP Dap Wakeup Enable , connect CP Jlink to wakeup cp ");
269312,551874560,0,0,PLAT_AP,PMU,funcTestAPSysReset_1,P_SIG,swLogPrintf("AP Arm Reset Test , rstReason = %d ");
269312,551876608,0,0,PLAT_AP,PMU,funcTestAPSysReset_3,P_SIG,swLogPrintf("Aon Reset Reason = 0x%x ");
269312,551878912,0,0,PLAT_AP,PMU,funcTestAPSysReset_4,P_WARNING,swLogPrintf("aonreg15 = 0x%x , apTimer = 0x%x ");
269312,551882751,0,0,PLAT_AP,PMU,funcTestAPSysReset_2,P_SIG,swLogPrintf("AP Arm Reseting...... ");
269312,551884799,0,0,PLAT_AP,PMU,funcTestBootOnCPFlash_0,P_SIG,swLogPrintf("funcTestBootOnCPFlash Test , CP XIP Init By AP ");
269312,551886847,0,0,PLAT_AP,PMU,funcTestBootOnCPFlash_1,P_SIG,swLogPrintf("Error: CP is already power on ");
269312,551888895,0,0,PLAT_AP,PMU,funcTestBootOnCPFlash_2,P_SIG,swLogPrintf("Wait CP Power On ");
269312,551890943,0,0,PLAT_AP,PMU,funcTestBootOnCPFlash_3,P_SIG,swLogPrintf("CP Power On Finish , connet CP Jlink to comfirm ");
269312,551892991,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_0,P_SIG,swLogPrintf("funcTestBootCPOnCSMB Test , by copy code to csmb and assist boot ");
269312,551895039,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_1,P_SIG,swLogPrintf("Error: CP is already power on ");
269312,551897087,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_2,P_SIG,swLogPrintf("Wait CP Power On ");
269312,551899135,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_3,P_SIG,swLogPrintf("CP Power On Finish ");
269312,551899392,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_4,P_SIG,swLogPrintf("Vector Read Back Error = 0x%x , 0x%x ");
269312,551901184,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_5,P_SIG,swLogPrintf("Code Write Err @ %d ");
269312,551903232,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_6,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551907327,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_7,P_SIG,swLogPrintf("Case pass , CP Code Run Success ");
269312,551909375,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_8,P_SIG,swLogPrintf("Case funcTestBootCPOnCSMB Fail ");
269312,551911423,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_0,P_SIG,swLogPrintf("funcTestBootCPOnCSMB Test , by copy code to csmb and assist boot ");
269312,551913471,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_1,P_SIG,swLogPrintf("Error: CP is already power on ");
269312,551913728,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_4,P_SIG,swLogPrintf("Vector Read Back Error = 0x%x , 0x%x ");
269312,551915520,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_5,P_SIG,swLogPrintf("Code Write Err @ %d ");
269312,551917568,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_6,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551921663,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_7,P_SIG,swLogPrintf("Case pass , CP Code Run Success ");
269312,551923711,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_8,P_SIG,swLogPrintf("Case funcTestBootCPOnMSMB Fail ");
269312,551925759,0,0,PLAT_AP,PMU,funcTestCPStatusRead_0,P_SIG,swLogPrintf("funcTestCPStatusRead , CP running to change state , AP read ");
269312,551925760,0,0,PLAT_AP,PMU,funcTestCPStatusRead_1,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551927808,0,0,PLAT_AP,PMU,funcTestCPStatusRead_2,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551930368,0,0,PLAT_AP,PMU,funcTestCPStatusRead_3,P_SIG,swLogPrintf("0x4d030064 = %x 0x4d030068 = %x 0x4d03006C = %x ");
269312,551932416,0,0,PLAT_AP,PMU,funcTestCPStatusRead_4,P_SIG,swLogPrintf("0x4d030070 = %x 0x4d030074 = %x 0x4d030078 = %x ");
269312,551935999,0,0,PLAT_AP,PMU,funcTestBootCPIPC_0,P_SIG,swLogPrintf("funcTestBootCPIPC , power on cp using ipc ");
269312,551938047,0,0,PLAT_AP,PMU,funcTestBootCPIPC_1,P_SIG,swLogPrintf("Error: CP is already power on ");
269312,551938048,0,0,PLAT_AP,PMU,funcTestBootCPIPC_2,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551940096,0,0,PLAT_AP,PMU,funcTestBootCPIPC_3,P_SIG,swLogPrintf("CP Power On Finish , CPmuStatus = 0x%x ");
269312,551942144,0,0,PLAT_AP,PMU,funcTestAonWatchdog_00,P_SIG,swLogPrintf("Aon Reset Reason = 0x%x ");
269312,551944704,0,0,PLAT_AP,PMU,funcTestAonWatchdog_1,P_SIG,swLogPrintf("funcTestAonWatchdog , current = %d , target = %d , changed = %d ");
269312,551946240,0,0,PLAT_AP,PMU,funcTestLockupTest_1,P_SIG,swLogPrintf("funcTestLockupTest , rstReason = %d ");
269312,551948544,0,0,PLAT_AP,PMU,funcTestLockupTest_2,P_WARNING,swLogPrintf("aonreg15 = 0x%x , apTimer = 0x%x , cptimer = 0 ");
269312,551950336,0,0,PLAT_AP,PMU,funcTestSIPCTest_1,P_WARNING,swLogPrintf("AP SIPC Lock Result = %d ");
269312,551952384,0,0,PLAT_AP,PMU,funcTestSIPCTest_3,P_WARNING,swLogPrintf("Ier = 0x%x ");
269312,551956479,0,0,PLAT_AP,PMU,funcTestSIPCTest_2,P_WARNING,swLogPrintf("AP SIPC Release ");
269312,551956736,0,0,PLAT_AP,PMU,CpStatusTask_1,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551960575,0,0,PLAT_AP,PMU,funcTestCPAPBReset_1,P_SIG,swLogPrintf("AP funcTestCPAPBReset ");
269312,551960576,0,0,PLAT_AP,PMU,funcTestCPAPBReset_2,P_SIG,swLogPrintf("Start Wait CP Set Wdt , but not start , wdtReg = 0x%x ");
269312,551962624,0,0,PLAT_AP,PMU,funcTestCPAPBReset_3,P_SIG,swLogPrintf("CP Set Wdt , Reg = 0x%x ");
269312,551966719,0,0,PLAT_AP,PMU,funcTestCPAPBReset_4,P_SIG,swLogPrintf("AP Arm Reseting...... ");
269312,551968767,0,0,PLAT_AP,PMU,RegTimeRead_0,P_VALUE,swLogPrintf("AonReg Read Err ");
269312,551968768,0,0,PLAT_AP,PMU,RegTimeRead_1,P_VALUE,swLogPrintf("AonRegRead 5000 time = 0x%x ");
269312,551970816,0,0,PLAT_AP,PMU,RegTimeRead_2,P_VALUE,swLogPrintf("mpGPRRegRead 5000 time = 0x%x ");
269312,551972864,0,0,PLAT_AP,PMU,RegTimeRead_3,P_VALUE,swLogPrintf("rmiGPRRegRead 5000 time = 0x%x ");
269312,551974912,0,0,PLAT_AP,PMU,RegTimeRead_4,P_VALUE,swLogPrintf("cpWdtRegRead 5000 time = 0x%x ");
269312,551976960,0,0,PLAT_AP,PMU,RegTimeRead_40,P_VALUE,swLogPrintf("apWdtRegRead 5000 time = 0x%x ");
269312,551979008,0,0,PLAT_AP,PMU,RegTimeRead_5,P_VALUE,swLogPrintf("msmbRegRead 5000 time = 0x%x ");
269312,551981056,0,0,PLAT_AP,PMU,RegTimeRead_6,P_VALUE,swLogPrintf("csmbRegRead 5000 time = 0x%x ");
269312,551983104,0,0,PLAT_AP,PMU,RegTimeRead_7,P_VALUE,swLogPrintf("asmbRegRead 5000 time = 0x%x ");
269312,551987199,0,0,PLAT_AP,PMU,funcHWTestSleepMode_1,P_VALUE,swLogPrintf("Start Sleep1 Test...... \r \n ");
269312,551989247,0,0,PLAT_AP,PMU,funcHWTestSleepMode_2,P_VALUE,swLogPrintf("Start Sleep2 With ASMB+CSMB Retention Test...... \r \n ");
269312,551991295,0,0,PLAT_AP,PMU,funcHWTestSleepMode_3,P_VALUE,swLogPrintf("Test Failed: Failed to Enter Sleep2 With ASMB+CSMB Retention \r \n ");
269312,551993343,0,0,PLAT_AP,PMU,funcHWTestSleepMode_4,P_VALUE,swLogPrintf("Start Sleep2 With ASMB Retention Test...... \r \n ");
269312,551995391,0,0,PLAT_AP,PMU,funcHWTestSleepMode_5,P_VALUE,swLogPrintf("Test Failed: Failed to Enter Sleep2 With ASMB Retention. \r \n ");
269312,551997439,0,0,PLAT_AP,PMU,funcHWTestSleepMode_6,P_VALUE,swLogPrintf("Start Sleep2 With ASMB+MSMB Retention Test...... \r \n ");
269312,551999487,0,0,PLAT_AP,PMU,funcHWTestSleepMode_7,P_VALUE,swLogPrintf("Test Failed: Failed to Enter Sleep2 With ASMB+MSMB Retention. \r \n ");
269312,552001535,0,0,PLAT_AP,PMU,funcHWTestSleepMode_8,P_VALUE,swLogPrintf("Start Hibernate with no retention Test...... \r \n ");
269312,552003583,0,0,PLAT_AP,PMU,funcHWTestSleepMode_9,P_VALUE,swLogPrintf("Test Failed: Failed to Enter Hibernate with no retention. \r \n ");
269312,552005631,0,0,PLAT_AP,PMU,funcHWTestSleepMode_10,P_VALUE,swLogPrintf("Start Off Test...... \r \n ");
269312,552007679,0,0,PLAT_AP,PMU,funcHWTestSleepMode_11,P_VALUE,swLogPrintf("Test Failed: Failed to Enter Off State. \r \n ");
269312,552009727,0,0,PLAT_AP,PMU,funcHWTestSleepMode_12,P_VALUE,swLogPrintf("WFI Normal IO On \r \n ");
269312,552011775,0,0,PLAT_AP,PMU,funcHWTestSleepMode_13,P_VALUE,swLogPrintf("WFI Normal IO Off \r \n ");
269312,552013823,0,0,PLAT_AP,PMU,funcHWTestSleepMode_14,P_VALUE,swLogPrintf("WFI 26 M \r \n ");
269312,552015871,0,0,PLAT_AP,PMU,funcHWTestSleepMode_15,P_VALUE,swLogPrintf("WFI Mcu Mode \r \n ");
269312,552015872,0,0,PLAT_AP,PMU,AONIO_ISR_1,P_VALUE,swLogPrintf("AONIO_ISR Enter Counter = %d ");
269312,552019967,0,0,PLAT_AP,PMU,apmuSwitch2McuMode_0,P_SIG,swLogPrintf("Already in mcu mode ");
269312,552022015,0,0,PLAT_AP,PMU,mcuSwitch2CommMode_0,P_SIG,swLogPrintf("Already in comm mode ");
269312,552024063,0,0,PLAT_AP,PMU,mcuModeInit_0,P_SIG,swLogPrintf("Mcu Mode: Switch to Mcu Mode ");
269312,552026111,0,0,PLAT_AP,PMU,mcuModeInit_1,P_SIG,swLogPrintf("Mcu Mode: Switch to Comm Mode ");
269312,552028159,0,0,PLAT_AP,PMU,slpManStartPowerOff_0,P_SIG,swLogPrintf("Power Off Start ");
269312,552028416,0,0,PLAT_AP,PMU,dcxoRestore,P_INFO,swLogPrintf("DCXO restore! temprPreAttach = %d , freqPPMPreAttach = %d ");
269312,552032255,0,0,PLAT_AP,PMU,cmsProcSignal_Utc,P_ERROR,swLogPrintf("SIG_CMS_UTC_TIME_REQ UTC Read Error! ");
269312,552032512,0,0,PLAT_AP,PMU,mainTask_1,P_VALUE,swLogPrintf("APHL BootFlag = %e<APBootFlag_e> , APLL BootFlag = %e<APBootFlag_e> ");
269312,552034560,0,0,PLAT_AP,PMU,IPC0_Check,P_VALUE,swLogPrintf("XIC0 Latch = 0x%x , NVIC = 0x%x ");
269312,552036352,0,0,PLAT_AP,PMU,chargeIntHandler_1,P_VALUE,swLogPrintf("Charger Int Enter , Status Update = %d ");
269312,552038400,0,0,PLAT_AP,PMU,chargeDetectInit_1,P_VALUE,swLogPrintf("Charger Detect Init , Status Update = %d ");
269312,552042495,0,0,PLAT_AP,PMU,pwrKeySendKeyStatus_1,P_VALUE,swLogPrintf("Power Key message send error ");
269312,552044543,0,0,PLAT_AP,PMU,pwrKeySendKeyStatus_2,P_VALUE,swLogPrintf("Power Key queue not ready ");
269312,552046591,0,0,PLAT_AP,PMU,pwrKeySendKeyStatusInIsr_1,P_VALUE,swLogPrintf("Power Key message send in isr error ");
269312,552048639,0,0,PLAT_AP,PMU,pwrKeySendKeyStatusInIsr_2,P_VALUE,swLogPrintf("Power Key queue not ready in isr ");
269312,552050687,0,0,PLAT_AP,PMU,pwrKeyTask_1,P_VALUE,swLogPrintf("Power Key task queue init error ");
269312,552052735,0,0,PLAT_AP,PMU,cmsProcSignal_1,P_VALUE,swLogPrintf("cmsProcSignal CP start ind ");
269312,552052736,0,0,PLAT_AP,PMU,chargeStatusCb_1,P_VALUE,swLogPrintf("Charge Status update = %d ");
269312,552054784,0,0,PLAT_AP,PMU,powerKeyStatusUpdate_1,P_VALUE,swLogPrintf("PowerKey Status update to = %d ");
269312,552058879,0,0,PLAT_AP,PMU,powerKeyStatusUpdate_2,P_WARNING,swLogPrintf("PowerKey Start Power Off ");
269312,552058880,0,0,PLAT_AP,PMU,usblpw_wkup_or_init_pre_0,P_WARNING,swLogPrintf("ctx stat reg %d ");
269312,552061696,0,0,PLAT_AP,PMU,usblpw_wkup_or_init_0,P_VALUE,swLogPrintf("pwr state 0x%x , bootstat 0x%x , lastwkup 0x%x , othwk stg 0x%x ");
269312,552063744,0,0,PLAT_AP,PMU,usblpw_wkup_or_init_1,P_VALUE,swLogPrintf("pwr state 0x%x , bootstat 0x%x , lastwkup 0x%x , inimod 0x%x ");
269312,552065280,0,0,PLAT_AP,PMU,usblpw_wkup_or_init_2,P_VALUE,swLogPrintf("othwk stg 0x%x , proc_stat 0x%x ");
269312,552069119,0,0,PLAT_AP,PMU,Pad0_WakeupIntHandler_1,P_VALUE,swLogPrintf("Pad0 Wakeup ");
269312,552071167,0,0,PLAT_AP,PMU,Pad1_WakeupIntHandler_1,P_VALUE,swLogPrintf("Pad1 Wakeup ");
269312,552073215,0,0,PLAT_AP,PMU,Pad2_WakeupIntHandler_1,P_VALUE,swLogPrintf("SIM Detect interrupt occurred ");
269312,552075263,0,0,PLAT_AP,PMU,Pad3_WakeupIntHandler_1,P_VALUE,swLogPrintf("Pad3 Wakeup ");
269312,552077311,0,0,PLAT_AP,PMU,Pad4_WakeupIntHandler_1,P_VALUE,swLogPrintf("Pad4 Wakeup ");
269312,552079359,0,0,PLAT_AP,PMU,Pad5_WakeupIntHandler_1,P_VALUE,swLogPrintf("Pad5 Wakeup ");
269312,552081407,0,0,PLAT_AP,PMU,PwrKey_WakeupIntHandler_1,P_VALUE,swLogPrintf("Pwr key Wakeup ");
269312,552083455,0,0,PLAT_AP,PMU,ChrgPad_WakeupIntHandler_1,P_VALUE,swLogPrintf("charge Wakeup ");
270336,553650432,0,0,PLAT_AP,CCIO,ADD_DEV_1,P_INFO,swLogPrintf("device ( 0x%x / %d ) is added! ");
270336,553652224,0,0,PLAT_AP,CCIO,DEL_DEV_0,P_INFO,swLogPrintf("device ( 0x%x ) is deleted! ");
270336,553656319,0,0,PLAT_AP,CCIO,DEL_DEV_1,P_SIG,swLogPrintf("no devices in the list! ");
270336,553656320,0,0,PLAT_AP,CCIO,FIND_DEV_1,P_SIG,swLogPrintf("device ( 0x%x ) is not registered! ");
270336,553658368,0,0,PLAT_AP,CCIO,FIND_DEV_2,P_SIG,swLogPrintf("device ( 0x%x ) is not found! ");
270336,553662463,0,0,PLAT_AP,CCIO,FIND_DEV_BY_TYPES_1,P_SIG,swLogPrintf("no device in the list! ");
270336,553662720,0,0,PLAT_AP,CCIO,FIND_DEV_BY_TYPES_2,P_SIG,swLogPrintf("device ( %d / %d ) is not found! ");
270336,553666559,0,0,PLAT_AP,CCIO,ASGN_DEV_BY_TYPES,P_SIG,swLogPrintf("no avail device to be assigned! ");
270336,553666816,0,0,PLAT_AP,CCIO,ASGN_DEV_BY_TYPES_1,P_SIG,swLogPrintf("%d / %d device can be assigned ");
270336,553670655,0,0,PLAT_AP,CCIO,ASGN_DEV_BY_TYPE,P_SIG,swLogPrintf("no avail device to be assigned! ");
270336,553670912,0,0,PLAT_AP,CCIO,ASGN_DEV_BY_TYPE_1,P_INFO,swLogPrintf("%d / %d device can be assigned ");
270336,553674751,0,0,PLAT_AP,CCIO,TRAVERSE_DEV_BY_HT,P_SIG,swLogPrintf("no device in the list! ");
270336,553675520,0,0,PLAT_AP,CCIO,SET_DEV_WORK_STATE,P_SIG,swLogPrintf("device ( 0x%x ) wkState: old ( %d ) --> new ( %d ) , hwAcm ( %d ) ! ");
270336,553676800,0,0,PLAT_AP,CCIO,ADD_ENTITY_1,P_SIG,swLogPrintf("entity has been assigned with devices ( 0x%x ) ? ");
270336,553678848,0,0,PLAT_AP,CCIO,ADD_ENTITY_2,P_SIG,swLogPrintf("warning! a device has already been assigned to entity ( %d ) ? ");
270336,553682943,0,0,PLAT_AP,CCIO,DEL_ENTITY_0,P_SIG,swLogPrintf("no entity in the list! ");
270336,553682944,0,0,PLAT_AP,CCIO,FIND_ENTITY_1,P_SIG,swLogPrintf("warning! no device is assigned to entity ( %d ) ? ");
270336,553685248,0,0,PLAT_AP,CCIO,TRY_ASGN_DEV_0,P_SIG,swLogPrintf("try assign device to entity ( %d / %d ) ... ");
270336,553687040,0,0,PLAT_AP,CCIO,TRY_ASGN_DEV_1,P_INFO,swLogPrintf("succ! device ( 0x%x ) is assigned! ");
270336,553691135,0,0,PLAT_AP,CCIO,TRY_ASGN_DEV_2,P_SIG,swLogPrintf("failed! try again later... ");
270336,553692160,0,0,PLAT_AP,CCIO,RBUF_ADJUST_NPT_RW_ZONE,P_SIG,swLogPrintf("rbuf ( %d ) : adjust rw zone , rdi ( %d --> %d ) , sti ( %d --> %d ) ");
270336,553693696,0,0,PLAT_AP,CCIO,RBUF_GET_XBATCH_1,P_WARNING,swLogPrintf("rbuf ( %d ) : RxWinSz ( %d ) < minSz ( %d ) ! wait ulfc event... ");
270336,553696512,0,0,PLAT_AP,CCIO,RBUF_GET_XBATCH_2,P_INFO,swLogPrintf("rbuf ( %d ) : batchCnt ( %d / %d ) @sti ( %d ) , wri ( %d --> %d ) ");
270336,553698304,0,0,PLAT_AP,CCIO,RBUF_MAPPING_NPT,P_INFO,swLogPrintf("rbuf ( %d ) : xferCnt ( %d ) , range [ %d , %d ] , aligned ( %d ) ");
270336,553699328,0,0,PLAT_AP,CCIO,RBUF_DLVR_XBATCH,P_SIG,swLogPrintf("rbuf ( %d ) : deliver zero bytes? ");
270336,553702144,0,0,PLAT_AP,CCIO,RBUF_IS_LAST_RDI,P_INFO,swLogPrintf("rbuf ( %d ) : vmode ( %d ) free @sti ( %d ) , rdi ( %d ) ");
270336,553703940,0,0,PLAT_AP,CCIO,RBUF_IS_NEXT_NPT_FREE,P_INFO,swLogPrintf("rbuf ( %d ) : next @sti ( %d ) %s free ");
270336,553705728,0,0,PLAT_AP,CCIO,RBUF_GET,P_SIG,swLogPrintf("%d / %d rbuf node ( s ) have been used! ");
270336,553707520,0,0,PLAT_AP,CCIO,RBUF_UNGET,P_SIG,swLogPrintf("%d rbuf nodes have been used! ");
270336,553709824,0,0,PLAT_AP,CCIO,RBUF_UNGET_ULPCB,P_WARNING,swLogPrintf("rbuf ( %d ) : pcb ( 0x%x ) is a global variable? ");
270336,553711616,0,0,PLAT_AP,CCIO,RBUF_QUEUE_1,P_INFO,swLogPrintf("rbuf ( %d ) : zero batch , all handled before? ");
270336,553713664,0,0,PLAT_AP,CCIO,RBUF_QUEUE_2,P_SIG,swLogPrintf("rbuf ( %d ) : more xbatch on the way? ");
270336,553716480,0,0,PLAT_AP,CCIO,RBUF_QUEUE_3,P_INFO,swLogPrintf("rbuf ( %d ) : next batch @sti ( %d ) / wri ( %d ) / rdi ( %d ) ");
270336,553718016,0,0,PLAT_AP,CCIO,RBUF_DEQUEUE_1,P_WARNING,swLogPrintf("rbuf ( %d ) : ulpdu ( %p ) cannot be freed! chanEnt may be deleted? ");
270336,553719808,0,0,PLAT_AP,CCIO,RBUF_DEQUEUE_2,P_INFO,swLogPrintf("rbuf ( %d ) : zero xfer? just free PT pcb node? ");
270336,553722368,0,0,PLAT_AP,CCIO,RBUF_DEQUEUE_3,P_INFO,swLogPrintf("rbuf ( %d ) : rdi up ( %d --> %d ) ");
270336,553724416,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_0,P_SIG,swLogPrintf("rbuf ( %d ) : flush %d bytes @sti ( %d ) ? ");
270336,553725952,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_1,P_SIG,swLogPrintf("rbuf ( %d ) : zero batch , all handled before? ");
270336,553728000,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_2,P_INFO,swLogPrintf("rbuf ( %d ) : no xfer to be flushed? ");
270336,553730560,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_3,P_INFO,swLogPrintf("rbuf ( %d ) : next batch @wri ( %d ) / rdi ( %d ) ");
270336,553732864,0,0,PLAT_AP,CCIO,RBUF_START_RECV_XFER,P_SIG,swLogPrintf("rbuf ( %d ) : start batch recv @sti ( %d ) / wri ( %d ) / rdi ( %d ) ");
270336,553735680,0,0,PLAT_AP,CCIO,RBUF_SET_WKSTATE_1,P_SIG,swLogPrintf("rbuf ( %d ) : bmMode ( 0x%x-->0x%x ) , cctSize ( %d-->%d ) , alignVal ( %d-->%d ) ! ");
270336,553736192,0,0,PLAT_AP,CCIO,RBUF_SET_WKSTATE_2,P_WARNING,swLogPrintf("rbuf ( %d ) : set data conf err , device pulled out? ");
270336,553738240,0,0,PLAT_AP,CCIO,TFC_CONV_TO_PID,P_ERROR,swLogPrintf("unknown TFC obj media type ( %d ) ! ");
270336,553741056,0,0,PLAT_AP,CCIO,TFC_CREATE_1,P_INFO,swLogPrintf("device ( 0x%x: %d / %d / %d ) dont need TFC! ");
270336,553742592,0,0,PLAT_AP,CCIO,TFC_CREATE_2,P_SIG,swLogPrintf("TFC Obj ( %d ) already registered in TOIM ( 0x%x ) ! ");
270336,553745152,0,0,PLAT_AP,CCIO,TFC_CREATE_3,P_SIG,swLogPrintf("TFC Pid ( %d: %d / %d , 0x%x ) already created! ");
270336,553746432,0,0,PLAT_AP,CCIO,TFC_DELETE_1,P_SIG,swLogPrintf("TFC Pid ( %d ) already deleted! ");
270336,553748736,0,0,PLAT_AP,CCIO,TFC_DELETE_2,P_SIG,swLogPrintf("TFC Obj ( %d ) not registered in TOIM ( 0x%x ) ! ");
270336,553751552,0,0,PLAT_AP,CCIO,TFC_DELETE_3,P_INFO,swLogPrintf("TFC Pid ( %d: %d / %d ) still refered by others ( 0x%x / %d ) ! ");
270336,553753088,0,0,PLAT_AP,CCIO,CEIO_INPUT_ENT,P_WARNING,swLogPrintf("ecm ( 0x%x ) : state ( %d ) is not connected! discard it ( 0x%p ) ! ");
270336,553754624,0,0,PLAT_AP,CCIO,CEIO_RBUF_INIT,P_INFO,swLogPrintf("rbuf ( 0x%x ) has already inited! ");
270336,553756672,0,0,PLAT_AP,CCIO,ECM_DEV_PWON_0,P_SIG,swLogPrintf("ecm dev ( 0x%x ) power on! ");
270336,553760767,0,0,PLAT_AP,CCIO,ECM_DEV_PWON_1,P_WARNING,swLogPrintf("chentStatusCb is not inited? ");
270336,553760768,0,0,PLAT_AP,CCIO,ECM_DEV_PWOFF_0,P_SIG,swLogPrintf("ecm dev ( 0x%x ) power off! ");
270336,553762816,0,0,PLAT_AP,CCIO,EUTRA_DEV_PWON,P_SIG,swLogPrintf("eutra dev ( 0x%x ) power on! ");
270336,553764864,0,0,PLAT_AP,CCIO,EUTRA_DEV_PWOFF,P_SIG,swLogPrintf("eutra dev ( 0x%x ) power off! ");
270336,553767424,0,0,PLAT_AP,CCIO,CRIO_INPUT_ENT,P_WARNING,swLogPrintf("rndis ( 0x%x ) : state ( %d ) is not connected! discard it ( 0x%p ) ! ");
270336,553768960,0,0,PLAT_AP,CCIO,CRIO_RBUF_INIT,P_INFO,swLogPrintf("rbuf ( 0x%x ) has already inited! ");
270336,553771008,0,0,PLAT_AP,CCIO,RNDIS_DEV_PWON_0,P_SIG,swLogPrintf("rndis dev ( 0x%x ) power on! ");
270336,553775103,0,0,PLAT_AP,CCIO,RNDIS_DEV_PWON_1,P_WARNING,swLogPrintf("chentStatusCb is not inited? ");
270336,553775104,0,0,PLAT_AP,CCIO,RNDIS_DEV_PWOFF_0,P_SIG,swLogPrintf("rndis dev ( 0x%x ) power off! ");
270336,553777152,0,0,PLAT_AP,CCIO,CLEAR_PPP_REMAINS,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : clear ppp remainings! ");
270336,553779200,0,0,PLAT_AP,CCIO,AT_ENT_INPUT,P_WARNING,swLogPrintf("serlEnt ( 0x%x ) : unblock sct usb ep failure! ");
270336,553782016,0,0,PLAT_AP,CCIO,PPPENT_INPUT_UNESC,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : fcs ( 0x%x ) error! drop %d / %d bytes! ");
270336,553784320,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_END_1,P_SIG,swLogPrintf("pppEnt ( %d ) : concat rbuf ( 0x%x / %d , 0x%x / %d ) ! ");
270336,553785856,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_END_2,P_WARNING,swLogPrintf("pppEnt ( %d ) : length ( %d ) overflows! dropping it ( 0x%x ) ! ");
270336,553787648,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_1,P_INFO,swLogPrintf("pppEnt ( %d ) : alloc ( %d ) failure! waiting ulfc evt... ");
270336,553789696,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_2,P_ERROR,swLogPrintf("pppEnt ( %d ) : dropping bad fcs packet ( 0x%x ) ! ");
270336,553792000,0,0,PLAT_AP,CCIO,PPPENT_INPUT_1,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : disconnected ( %d ) ! discard all ( 0x%p ) ! ");
270336,553793536,0,0,PLAT_AP,CCIO,PPPENT_INPUT_2,P_SIG,swLogPrintf("pppEnt ( 0x%x ) : special pattern ( +++ ) ! ");
270336,553796352,0,0,PLAT_AP,CCIO,PPPENT_OUTPUT_1,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : not in data mode ( %d / 0x%x ) ! discard it ( 0x%p ) ... ");
270336,553797888,0,0,PLAT_AP,CCIO,SERL_INPUT_DIAG_ENT,P_WARNING,swLogPrintf("diagEnt ( 0x%x ) : data len ( %d ) overflows! ");
270336,553799680,0,0,PLAT_AP,CCIO,OPAQ_ENT_INPUT,P_WARNING,swLogPrintf("serlEnt ( 0x%x ) : unblock sct usb ep failure! ");
270336,553801984,0,0,PLAT_AP,CCIO,SERL_DEV_PWON_0,P_SIG,swLogPrintf("serv ( %d ) dev ( 0x%x ) power on! ");
270336,553805823,0,0,PLAT_AP,CCIO,SERL_DEV_PWON_1,P_WARNING,swLogPrintf("chentStatusCb is not inited? ");
270336,553806080,0,0,PLAT_AP,CCIO,SERL_DEV_PWOFF_0,P_SIG,swLogPrintf("serv ( %d ) dev ( 0x%x ) power off! ");
270336,553807872,0,0,PLAT_AP,CCIO,SET_PPP_SCT_RRCM,P_SIG,swLogPrintf("ppp latest sct rrcm is: 0x%x ");
270336,553811967,0,0,PLAT_AP,CCIO,INIT_AT_ENTITY,P_SIG,swLogPrintf("at entity has been already inited! ");
270336,553814015,0,0,PLAT_AP,CCIO,INIT_PPP_ENTITY_0,P_SIG,swLogPrintf("ppp entity already exists! ");
270336,553816063,0,0,PLAT_AP,CCIO,INIT_PPP_ENTITY_1,P_SIG,swLogPrintf("fatal error! ppp entity malloc failed! ");
270336,553816832,0,0,PLAT_AP,CCIO,SET_CHAN_MODE,P_INFO,swLogPrintf("serial ( 0x%x / %d ) chanMode: %d --> %d ");
270336,553818112,0,0,PLAT_AP,CCIO,usbUldpEehInit_1,P_SIG,swLogPrintf("dump outep num %d ");
270336,553820160,0,0,PLAT_AP,CCIO,eehDumpMediaPollingEp0_1,P_INFO,swLogPrintf("eehDumpMediaPollingEp0:avoid host suspend %d ");
270336,553822208,0,0,PLAT_AP,CCIO,eehDumpMediaPollingRndisHalt_0,P_INFO,swLogPrintf("eehDumpMediaPollingRndisHalt0:avoid host suspend %d ");
270336,553824256,0,0,PLAT_AP,CCIO,eehDumpMediaPollingRndisHalt_1,P_INFO,swLogPrintf("eehDumpMediaPollingRndisHalt1:avoid host suspend %d ");
270336,553828351,0,0,PLAT_AP,CCIO,INIT_CUST_TXTASK,P_INFO,swLogPrintf("create cust Tx task... ");
270336,553830399,0,0,PLAT_AP,CCIO,DEINIT_CUST_TXTASK,P_INFO,swLogPrintf("destroy cust Tx task... ");
270336,553830400,0,0,PLAT_AP,CCIO,SENDTO_CUST_TXTASK,P_INFO,swLogPrintf("send msg ( 0x%x ) to cust Tx task... ");
270336,553832448,0,0,PLAT_AP,CCIO,USBD_EXEC_CUST_INSTR_1,P_INFO,swLogPrintf("recv usb cust instr ( 0x%x ) ! ");
270336,553834496,0,0,PLAT_AP,CCIO,USBD_EXEC_CUST_INSTR_2,P_ERROR,swLogPrintf("warning! unknown usb exec cust instr ( 0x%x ) ! ");
270336,553836544,0,0,PLAT_AP,CCIO,UARTD_EXEC_CUST_INSTR_1,P_INFO,swLogPrintf("recv uart cust instr ( 0x%x ) ! ");
270336,553838592,0,0,PLAT_AP,CCIO,UARTD_EXEC_CUST_INSTR_2,P_ERROR,swLogPrintf("warning! unknown uart exec cust instr ( 0x%x ) ! ");
270336,553840640,0,0,PLAT_AP,CCIO,RADIOD_EXEC_CUST_INSTR_1,P_INFO,swLogPrintf("recv radio cust instr ( 0x%x ) ! ");
270336,553842688,0,0,PLAT_AP,CCIO,RADIOD_EXEC_CUST_INSTR_2,P_ERROR,swLogPrintf("warning! unknown radio exec cust instr ( 0x%x ) ! ");
270336,553844736,0,0,PLAT_AP,CCIO,HANDLE_CUST_DEV_STATUS_1,P_INFO,swLogPrintf("handle cust DS ( 0x%x ) ! ");
270336,553846784,0,0,PLAT_AP,CCIO,HANDLE_CUST_DEV_STATUS_2,P_SIG,swLogPrintf("err! unknown cust dsFlags ( 0x%x ) ! ");
270336,553848832,0,0,PLAT_AP,CCIO,HANDLE_CUST_ENT_STATUS_1,P_INFO,swLogPrintf("handle cust ES ( 0x%x ) ! ");
270336,553850880,0,0,PLAT_AP,CCIO,HANDLE_CUST_ENT_STATUS_2,P_SIG,swLogPrintf("err! unknown cust esFlags ( 0x%x ) ! ");
270336,553852928,0,0,PLAT_AP,CCIO,HANDLE_CUST_CHAN_MSG_1,P_INFO,swLogPrintf("handle cust chanMsg ( 0x%x ) ! ");
270336,553855488,0,0,PLAT_AP,CCIO,HANDLE_DEV_ADD_0,P_SIG,swLogPrintf("device ( %d / %d / %d ) is added! ");
270336,553857024,0,0,PLAT_AP,CCIO,HANDLE_DEV_ADD_1,P_ERROR,swLogPrintf("undef device type ( %d ) ! ");
270336,553859840,0,0,PLAT_AP,CCIO,HANDLE_DEV_DEL_0,P_SIG,swLogPrintf("device ( 0x%x: %d / %d / %d ) is deleted! ");
270336,553861376,0,0,PLAT_AP,CCIO,HANDLE_RBUF_FLUSH,P_WARNING,swLogPrintf("device ( 0x%x ) : flush rbuf for flag ( 0x%x ) ... ");
270336,553863680,0,0,PLAT_AP,CCIO,HANDLE_CTS_CHG_1,P_WARNING,swLogPrintf("device ( 0x%x ) : ignore cts ( %d ) by hwType ( %d ) ");
270336,553865472,0,0,PLAT_AP,CCIO,HANDLE_DTR_CHG_1,P_WARNING,swLogPrintf("serlEnt ( 0x%x ) : ignore dtr @AT&D ( %d ) ");
270336,553867264,0,0,PLAT_AP,CCIO,HANDLE_DTR_CHG_2,P_SIG,swLogPrintf("pppEnt ( 0x%x ) : recv dtr @AT&D1 ");
270336,553869312,0,0,PLAT_AP,CCIO,HANDLE_DTR_CHG_3,P_SIG,swLogPrintf("pppEnt ( 0x%x ) : recv dtr @AT&D2 ");
270336,553871872,0,0,PLAT_AP,CCIO,HANDLE_DTR_CHG_4,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : not in data mode ( %d ) or connected state ( %d ) ! ");
270336,553873664,0,0,PLAT_AP,CCIO,HANDLE_SERL_STATE_1,P_WARNING,swLogPrintf("device ( 0x%x ) : unknown serial state ( %d ) ! ");
270336,553875968,0,0,PLAT_AP,CCIO,HANDLE_AUTO_BAUD_1,P_INFO,swLogPrintf("device ( 0x%x ) detected baud: %d , config: %d ");
270336,553878273,0,0,PLAT_AP,CCIO,SET_ETHER_LAN_MEDIA,P_SIG,swLogPrintf("%s ( %d ) lan state: %d --> %d ");
270336,553881599,0,0,PLAT_AP,CCIO,ETHER_LAN_INIT,P_SIG,swLogPrintf("warining! fast path is not avail! ");
270336,553882112,0,0,PLAT_AP,CCIO,START_PPP_SESSN,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : set DlfcMemThres ( %d --> %d ) ! \n ");
270336,553884160,0,0,PLAT_AP,CCIO,STOP_PPP_SESSN,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : restore DlfcMemThres ( %d --> %d ) ! \n ");
270336,553886209,0,0,PLAT_AP,CCIO,HANDLE_USB_STATE,P_SIG,swLogPrintf("usb is %s ( %d / %d ) for i / o! ");
270336,553889791,0,0,PLAT_AP,CCIO,HANDLE_SCT_TXDONE,P_WARNING,swLogPrintf("warning! sct is still not avail!!! ");
270336,553891839,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_1,P_SIG,swLogPrintf("ppp_sessn_status: Connected! \n ");
270336,553891841,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_2,P_INFO,swLogPrintf("our_ipaddr = %s \n ");
270336,553893889,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_3,P_INFO,swLogPrintf("his_ipaddr = %s \n ");
270336,553895937,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_4,P_INFO,swLogPrintf("netmask = %s \n ");
270336,553897985,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_5,P_INFO,swLogPrintf("dns1 = %s \n ");
270336,553900033,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_6,P_INFO,swLogPrintf("dns2 = %s \n ");
270336,553902081,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_7,P_INFO,swLogPrintf("our6_ipaddr = %s \n ");
270336,553906175,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_8,P_ERROR,swLogPrintf("ppp_sessn_status: Invalid parameter \n ");
270336,553908223,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_9,P_ERROR,swLogPrintf("ppp_sessn_status: Unable to open PPP session \n ");
270336,553910271,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_10,P_ERROR,swLogPrintf("ppp_sessn_status: Invalid I / O device for PPP \n ");
270336,553912319,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_11,P_ERROR,swLogPrintf("ppp_sessn_status: Unable to allocate resources \n ");
270336,553914367,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_12,P_WARNING,swLogPrintf("ppp_sessn_status: User interrupt \n ");
270336,553916415,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_13,P_WARNING,swLogPrintf("ppp_sessn_status: Connection lost \n ");
270336,553918463,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_14,P_ERROR,swLogPrintf("ppp_sessn_status: Failed authentication challenge \n ");
270336,553920511,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_15,P_ERROR,swLogPrintf("ppp_sessn_status: Failed to meet protocol \n ");
270336,553922559,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_16,P_ERROR,swLogPrintf("ppp_sessn_status: Connection timeout \n ");
270336,553924607,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_17,P_ERROR,swLogPrintf("ppp_sessn_status: Idle Timeout \n ");
270336,553926655,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_18,P_ERROR,swLogPrintf("ppp_sessn_status: Max connect time reached \n ");
270336,553928703,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_19,P_ERROR,swLogPrintf("ppp_sessn_status: Loopback detected \n ");
270336,553928960,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_20,P_SIG,swLogPrintf("ppp_sessn_status: set pdp ( 0x%x ) auth ( %d ) ... \n ");
270336,553930752,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_21,P_SIG,swLogPrintf("ppp_sessn_status: act network ( 0x%x ) ... \n ");
270336,553932800,0,0,PLAT_AP,CCIO,NOTIFY_PPP_STATUS_22,P_ERROR,swLogPrintf("ppp_sessn_status: Unknown error code %d \n ");
270336,553936136,0,0,PLAT_AP,CCIO,HANDLE_WAN_NOTIF_1,P_SIG,swLogPrintf("handle wan ( 0x%x , 0x%x ) / %d notif to %s @lanstate ( e%d , p%d ) ");
270336,553937664,0,0,PLAT_AP,CCIO,HANDLE_WAN_NOTIF_2,P_WARNING,swLogPrintf("non-identical wan ( 0x%x , 0x%x ) , local ( 0x%x , 0x%x ) ");
270336,553939712,0,0,PLAT_AP,CCIO,HANDLE_WAN_NOTIF_3,P_WARNING,swLogPrintf("non-identical wan ( 0x%x , 0x%x ) , local ( 0x%x , 0x%x ) ");
270336,553941760,0,0,PLAT_AP,CCIO,HANDLE_PPP_START_0,P_SIG,swLogPrintf("atCid ( %d ) : start ppp sessn @pdpCid ( 0x%x , 0x%x ) / %d ... ");
270336,553943040,0,0,PLAT_AP,CCIO,HANDLE_PPP_START_1,P_ERROR,swLogPrintf("atCid ( %d ) : init ppp entity failure! ");
270336,553945088,0,0,PLAT_AP,CCIO,HANDLE_PPP_START_2,P_ERROR,swLogPrintf("atCid ( %d ) : create pppos failure! ");
270336,553947904,0,0,PLAT_AP,CCIO,HANDLE_PPP_START_3,P_ERROR,swLogPrintf("atCid ( %d ) : pdpCid ( 0x%x , 0x%x ) / %d not connected!!! ");
270336,553951231,0,0,PLAT_AP,CCIO,HANDLE_RBUF_EBNA,P_SIG,swLogPrintf("warning! recv rbuf bna message... ");
270336,553953279,0,0,PLAT_AP,CCIO,HANDLE_USB_ESTATUS,P_SIG,swLogPrintf("warning! recv usb status err message... ");
270336,553955327,0,0,PLAT_AP,CCIO,HANDLE_AHB_EADDR,P_SIG,swLogPrintf("warning! recv ahb addr err message... ");
270336,553955328,0,0,PLAT_AP,CCIO,HANDLE_CMSG_0,P_SIG,swLogPrintf("err! unknown msgId ( 0x%x ) ! ");
270336,553957376,0,0,PLAT_AP,CCIO,HANDLE_CMSG_1,P_SIG,swLogPrintf("err! unsupported msgId ( 0x%x ) ! ");
270336,553959424,0,0,PLAT_AP,CCIO,HANDLE_CMSG_2,P_SIG,swLogPrintf("err! unmatched msgId ( 0x%x ) ! ");
270336,553961729,0,0,PLAT_AP,CCIO,HANDLE_CMSG_3,P_INFO,swLogPrintf("handle chan message ( %s: 0x%x ) ... ");
270336,553963521,0,0,PLAT_AP,CCIO,INIT_CHAN_TASK_1,P_SIG,swLogPrintf("create %s task... ");
270336,553965568,0,0,PLAT_AP,CCIO,INIT_CHAN_TASK_2,P_INFO,swLogPrintf("And succ! tid ( 0x%x ) ");
270336,553967616,0,0,PLAT_AP,CCIO,DEINIT_CHAN_TASK_1,P_SIG,swLogPrintf("tid ( 0x%x ) terminated succ! ");
270336,553971711,0,0,PLAT_AP,CCIO,SEND_TO_RXTASK_0,P_WARNING,swLogPrintf("CcioRxTask is not running! ");
270336,553971968,0,0,PLAT_AP,CCIO,SEND_TO_RXTASK_1,P_INFO,swLogPrintf("send message ( 0x%x ) to Rx ( %d ) task! ");
270336,553973761,0,0,PLAT_AP,CCIO,SEND_TO_TXTASK_0,P_WARNING,swLogPrintf("%s is not running yet! ");
270336,553976064,0,0,PLAT_AP,CCIO,SEND_TO_TXTASK_1,P_WARNING,swLogPrintf("discard Tx ( %d ) message ( 0x%x ) ! ");
270336,553978112,0,0,PLAT_AP,CCIO,SEND_TO_TXTASK_2,P_INFO,swLogPrintf("send message ( 0x%x ) to Tx ( %d ) task! ");
270336,553981951,0,0,PLAT_AP,CCIO,CHAN_RX_TASK_1,P_SIG,swLogPrintf("rx msgq ( 1 ) is pending!!! ");
270336,553983999,0,0,PLAT_AP,CCIO,CHAN_RX_TASK_2,P_SIG,swLogPrintf("rx msgq ( 2 ) is pending!!! ");
270336,553984256,0,0,PLAT_AP,CCIO,WAIT_TX_CMPLT,P_INFO,swLogPrintf("device ( 0x%x ) : waiting for txHandle ( %d ) ... ");
270336,553986304,0,0,PLAT_AP,CCIO,SET_TX_CMPLT,P_INFO,swLogPrintf("device ( 0x%x ) : set txHandle ( %d ) done! ");
270336,553988096,0,0,PLAT_AP,CCIO,SET_WAN_ENT,P_INFO,swLogPrintf("set wan entity ( %d ) ");
270336,553990144,0,0,PLAT_AP,CCIO,UNSET_WAN_ENT,P_INFO,swLogPrintf("unset wan entity ( %d ) ");
270336,553992448,0,0,PLAT_AP,CCIO,SET_LAN_ENT_1,P_INFO,swLogPrintf("set lan ( %d ) entity ( 0x%x ) ");
270336,553994496,0,0,PLAT_AP,CCIO,SET_LAN_ENT_2,P_SIG,swLogPrintf("rndisEnt ( %p ) already exists! lanEntType ( 0x%x ) ");
270336,553996544,0,0,PLAT_AP,CCIO,SET_LAN_ENT_3,P_SIG,swLogPrintf("ecmEnt ( %p ) already exists! lanEntType ( 0x%x ) ");
270336,553998592,0,0,PLAT_AP,CCIO,SET_LAN_ENT_4,P_SIG,swLogPrintf("pppEnt ( %p ) already exists! lanEntType ( 0x%x ) ");
270336,554000384,0,0,PLAT_AP,CCIO,UNSET_LAN_ENT_1,P_INFO,swLogPrintf("unset lan ( %d ) entity ");
270336,554002688,0,0,PLAT_AP,CCIO,SET_DIAG_ENT,P_INFO,swLogPrintf("set diagEnt ( 0x%x ) , latest rdcm ( 0x%x ) ");
270336,554004736,0,0,PLAT_AP,CCIO,UNSET_DIAG_ENT,P_INFO,swLogPrintf("unset diagEnt ( 0x%x ) , latest rdcm ( 0x%x ) ");
270336,554006529,0,0,PLAT_AP,CCIO,GET_RX_FC_STATE,P_SIG,swLogPrintf("Rx flow ctrl: %s ");
270336,554008576,0,0,PLAT_AP,CCIO,SETUP_CHANS_1,P_SIG,swLogPrintf("err! invalid chanType ( %d ) ! ");
270336,554010624,0,0,PLAT_AP,CCIO,SETUP_CHANS_2,P_INFO,swLogPrintf("set up channel ( %d ) ... ");
270336,554012672,0,0,PLAT_AP,CCIO,PULLDOWN_CHANS_1,P_SIG,swLogPrintf("err! invalid chanType ( %d ) ! ");
270336,554014720,0,0,PLAT_AP,CCIO,PULLDOWN_CHANS_2,P_INFO,swLogPrintf("pull down channel ( %d ) ... ");
270336,554016768,0,0,PLAT_AP,CCIO,HANDLE_DEV_STATUS_1,P_INFO,swLogPrintf("handle DS ( 0x%x ) ! ");
270336,554018816,0,0,PLAT_AP,CCIO,HANDLE_DEV_STATUS_2,P_SIG,swLogPrintf("err! unknown dsFlags ( 0x%x ) ! ");
270336,554020864,0,0,PLAT_AP,CCIO,HANDLE_ENT_STATUS_1,P_INFO,swLogPrintf("handle ES ( 0x%x ) ! ");
270336,554022912,0,0,PLAT_AP,CCIO,HANDLE_ENT_STATUS_2,P_SIG,swLogPrintf("err! unknown esFlags ( 0x%x ) ! ");
270336,554025472,0,0,PLAT_AP,CCIO,CHG_PMU_TIMING_CB,P_INFO,swLogPrintf("Slp Urc Report = %d , %d , %d ");
270336,554027264,0,0,PLAT_AP,CCIO,INIT_ETHER_PROVIDER_1,P_WARNING,swLogPrintf("ether provider ( %p / %d ) has already been inited! ");
270336,554031103,0,0,PLAT_AP,CCIO,INIT_ETHER_PROVIDER_2,P_ERROR,swLogPrintf("ether provider init failure! ");
270336,554031360,0,0,PLAT_AP,CCIO,DEINIT_ETHER_PROVIDER_1,P_WARNING,swLogPrintf("ether provider ( %p / %d ) is not inited! ");
270336,554033408,0,0,PLAT_AP,CCIO,INIT_AT_PROVIDER_1,P_WARNING,swLogPrintf("AT provider ( %p / %d ) has already been inited! ");
270336,554037247,0,0,PLAT_AP,CCIO,INIT_AT_PROVIDER_2,P_WARNING,swLogPrintf("warning! no more available AT providers! ");
270336,554037249,0,0,PLAT_AP,CCIO,DEINIT_AT_PROVIDER,P_WARNING,swLogPrintf("%s provider is not inited! ");
270336,554039808,0,0,PLAT_AP,CCIO,INIT_DIAG_PROVIDER_1,P_WARNING,swLogPrintf("unilog ( %d ) provider ( %p / %d ) has already been inited! ");
270336,554043391,0,0,PLAT_AP,CCIO,INIT_DIAG_PROVIDER_2,P_ERROR,swLogPrintf("unilog provider init failure! ");
270336,554043904,0,0,PLAT_AP,CCIO,DEINIT_DIAG_PROVIDER_1,P_WARNING,swLogPrintf("unilog ( %d ) provider ( %p / %d ) is not inited! ");
270336,554045696,0,0,PLAT_AP,CCIO,INIT_OPAQ_PROVIDER_1,P_WARNING,swLogPrintf("opaq provider ( %p / %d ) has already been inited! ");
270336,554049535,0,0,PLAT_AP,CCIO,INIT_OPAQ_PROVIDER_2,P_WARNING,swLogPrintf("warning! no more available opaq providers! ");
270336,554051583,0,0,PLAT_AP,CCIO,INIT_OPAQ_PROVIDER_3,P_ERROR,swLogPrintf("opaq provider init failure! ");
270336,554053631,0,0,PLAT_AP,CCIO,DEINIT_OPAQ_PROVIDER_1,P_WARNING,swLogPrintf("opaq provider is not inited! ");
270336,554053888,0,0,PLAT_AP,CCIO,INIT_EUTRA_PROVIDER_1,P_WARNING,swLogPrintf("eutra provider ( %p / %d ) has already been inited! ");
270336,554057727,0,0,PLAT_AP,CCIO,INIT_EUTRA_PROVIDER_2,P_INFO,swLogPrintf("eutra provider init failure! ");
270336,554057984,0,0,PLAT_AP,CCIO,DEINIT_EUTRA_PROVIDER_1,P_WARNING,swLogPrintf("eutra provider ( %p / %d ) is not inited! ");
270336,554059776,0,0,PLAT_AP,CCIO,RADIOD_EXEC_INSTR_1,P_INFO,swLogPrintf("recv radio instr ( 0x%x ) ! ");
270336,554061824,0,0,PLAT_AP,CCIO,RADIOD_EXEC_INSTR_2,P_ERROR,swLogPrintf("warning! unknown radio exec instr ( %d ) ! ");
270336,554065919,0,0,PLAT_AP,CCIO,RADIOD_OUTPUT,P_INFO,swLogPrintf("send radio data to ps! ");
270336,554065920,0,0,PLAT_AP,CCIO,RADIOD_CREATE_0,P_SIG,swLogPrintf("err! cid ( %d ) overflows! ");
270336,554067968,0,0,PLAT_AP,CCIO,RADIOD_CREATE_1,P_INFO,swLogPrintf("create radio device ( %d ) ");
270336,554070016,0,0,PLAT_AP,CCIO,RADIOD_DESTROY_0,P_SIG,swLogPrintf("err! cid ( %d ) overflows! ");
270336,554072064,0,0,PLAT_AP,CCIO,RADIOD_DESTROY_1,P_INFO,swLogPrintf("destroy radio device ( %d ) ");
270336,554076159,0,0,PLAT_AP,CCIO,RADIOD_NOTIFY_DPC_0,P_SIG,swLogPrintf("warning! radio device is not working! ");
270336,554076928,0,0,PLAT_AP,CCIO,RADIOD_NOTIFY_DPC_2,P_SIG,swLogPrintf("notify fastpath ( 0x%x , 0x%x ) media ( %d ) state ( %d ) ");
270336,554080255,0,0,PLAT_AP,CCIO,RADIOD_NOTIFY_DPC_3,P_SIG,swLogPrintf("err! notify fastpath media state failure! ");
270336,554081032,0,0,PLAT_AP,CCIO,RADIOD_QUERY_WAN_MEDIA,P_INFO,swLogPrintf("fastpath ( 0x%x , 0x%x ) media ( %d ) state is %s! ");
270336,554082304,0,0,PLAT_AP,CCIO,RADIOD_LAN_LINK_CHG,P_ERROR,swLogPrintf("notify change of lan ( %d ) status failure! ");
270336,554084608,0,0,PLAT_AP,CCIO,RADIOD_LAN_LINK_UP,P_ERROR,swLogPrintf("notify lan ( %d / %d ) linkup failure! ");
270336,554086656,0,0,PLAT_AP,CCIO,RADIOD_LAN_LINK_DOWN,P_ERROR,swLogPrintf("notify lan ( %d / %d ) linkdown failure! ");
270336,554089472,0,0,PLAT_AP,CCIO,UART_UPDATE_XFER,P_INFO,swLogPrintf("uart ( %d ) : getRxCnt ( %d ) , curRxCnt ( %d ) @wri ( %d --> %d ) ");
270336,554092032,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_1,P_INFO,swLogPrintf("uart ( %d ) : isBusy ( %d ) , wri ( %d ) , rdi ( %d ) , avlbSize ( %d ) , mru ( %d ) , xferCnt ( %d ) ");
270336,554092544,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_2,P_INFO,swLogPrintf("uart ( %d ) : rts flow ctrl released ");
270336,554094592,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_3,P_ERROR,swLogPrintf("uart ( %d ) : enable recv failure!!! ");
270336,554096640,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_4,P_ERROR,swLogPrintf("uart ( %d ) : set new recv failure!!! ");
270336,554098688,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_5,P_ERROR,swLogPrintf("uart ( %d ) : release RTS failure!!! ");
270336,554100736,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_6,P_WARNING,swLogPrintf("uart ( %d ) : rts flow ctrl triggered ");
270336,554102784,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_7,P_ERROR,swLogPrintf("uart ( %d ) : set RTS failure!!! ");
270336,554104832,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_8,P_ERROR,swLogPrintf("uart ( %d ) : disable recv failure!!! ");
270336,554106880,0,0,PLAT_AP,CCIO,UART_TRG_NEXT_XFER_9,P_ERROR,swLogPrintf("uart ( %d ) : is busy!!! ");
270336,554109952,0,0,PLAT_AP,CCIO,UART_DUMMY_UPDATE,P_SIG,swLogPrintf("uart ( %d ) : wri ( %d --> %d ) , len ( %d ) , xferCnt ( %d ) ");
270336,554111232,0,0,PLAT_AP,CCIO,UARTD_RESET_HW_1,P_WARNING,swLogPrintf("uartd ( %d ) : power off , errno ( %d ) ! ");
270336,554113536,0,0,PLAT_AP,CCIO,UARTD_RESET_HW_2,P_WARNING,swLogPrintf("uartd ( %d ) : power on ( %d ) , errno ( %d ) ! ");
270336,554115840,0,0,PLAT_AP,CCIO,UARTD_RESET_HW_3,P_WARNING,swLogPrintf("uartd ( %d ) : ctrl setting ( %d ) / baud ( %d ) , errno ( %d ) ! ");
270336,554117888,0,0,PLAT_AP,CCIO,UARTD_RESET_HW_4,P_WARNING,swLogPrintf("uartd ( %d ) : next xfer@wri ( %d ) , dummyFreeLen ( %d ) , cfgRecvSize ( %d ) ");
270336,554119168,0,0,PLAT_AP,CCIO,UARTD_DTR_EVT_1,P_SIG,swLogPrintf("uartd ( %d ) : dtr evt! ");
270336,554121728,0,0,PLAT_AP,CCIO,UARTD_GET_RX_CONF,P_INFO,swLogPrintf("uartd ( %d ) : rxWinSize ( %d ) , xferCnt ( %d ) ");
270336,554123264,0,0,PLAT_AP,CCIO,UARTD_SET_STATIC_CONF,P_INFO,swLogPrintf("uartd ( %d ) : pre-rx is running... ");
270336,554125568,0,0,PLAT_AP,CCIO,UARTD_DCD_STATUS,P_SIG,swLogPrintf("uartd ( %d ) : set dcd state ( 0x%x ) ! ");
270336,554127360,0,0,PLAT_AP,CCIO,UARTD_PULSE_RI_DONE,P_SIG,swLogPrintf("uartd ( %d ) : pulse ri done! ");
270336,554130176,0,0,PLAT_AP,CCIO,UARTD_RI_STATUS_1,P_SIG,swLogPrintf("uartd ( %d ) : set ri state ( %d * %d / %d%% ) ! ");
270336,554131456,0,0,PLAT_AP,CCIO,UARTD_RI_STATUS_2,P_ERROR,swLogPrintf("uartd ( %d ) : enable ri pwm failure! ");
270336,554133504,0,0,PLAT_AP,CCIO,UARTD_RI_STATUS_3,P_ERROR,swLogPrintf("uartd ( %d ) : create pusle timer error! ");
270336,554136326,0,0,PLAT_AP,CCIO,UARTD_GET_CTS,P_SIG,swLogPrintf("uartd ( %d ) : cts %s level , and %s ( %d ) to output ");
270336,554137600,0,0,PLAT_AP,CCIO,UARTD_EXEC_INSTR_1,P_INFO,swLogPrintf("recv uart instr ( 0x%x ) ! ");
270336,554139648,0,0,PLAT_AP,CCIO,UARTD_EXEC_INSTR_2,P_ERROR,swLogPrintf("warning! unknown uart exec instr ( 0x%x ) ! ");
270336,554141696,0,0,PLAT_AP,CCIO,UARTD_INPUT_0,P_SIG,swLogPrintf("err! uartIdx ( %d ) overflows! ");
270336,554144000,0,0,PLAT_AP,CCIO,UARTD_INPUT_1,P_ERROR,swLogPrintf("uartd ( %d ) : NOT in working state ( %d ) ! ");
270336,554146048,0,0,PLAT_AP,CCIO,UARTD_INPUT_2,P_SIG,swLogPrintf("uartd ( %d ) : err event ( 0x%x ) ");
270336,554148096,0,0,PLAT_AP,CCIO,UARTD_OUTPUT,P_INFO,swLogPrintf("uartd ( %d ) : %dbytes out ");
270336,554149888,0,0,PLAT_AP,CCIO,UARTD_CREATE_0,P_SIG,swLogPrintf("err! uartIdx ( %d ) overflows! ");
270336,554151936,0,0,PLAT_AP,CCIO,UARTD_CREATE_1,P_INFO,swLogPrintf("create uart device ( %d ) ");
270336,554153984,0,0,PLAT_AP,CCIO,UARTD_CREATE_2,P_WARNING,swLogPrintf("uartd ( %d ) : set pre-rx not ok? ");
270336,554156032,0,0,PLAT_AP,CCIO,UARTD_CREATE_3,P_WARNING,swLogPrintf("uartd ( %d ) : no pre-get rx addr? ");
270336,554158080,0,0,PLAT_AP,CCIO,UARTD_CREATE_4,P_WARNING,swLogPrintf("uartd ( %d ) : chdevStatusCb is null? ");
270336,554160128,0,0,PLAT_AP,CCIO,UARTD_DESTROY_0,P_SIG,swLogPrintf("err! uartIdx ( %d ) overflows! ");
270336,554162176,0,0,PLAT_AP,CCIO,UARTD_DESTROY_1,P_INFO,swLogPrintf("destroy uart device ( %d ) ");
270336,554164224,0,0,PLAT_AP,CCIO,UARTD_DESTROY_2,P_WARNING,swLogPrintf("uartd ( %d ) : chdevStatusCb is null? ");
270336,554166272,0,0,PLAT_AP,CCIO,USBD_NOTIFY_STATE,P_SIG,swLogPrintf("usbd: notify isr state ( %d ) ! ");
270336,554168320,0,0,PLAT_AP,CCIO,USBD_DISABLE_RTS,P_SIG,swLogPrintf("usbd ( %d ) : rts flow ctrl triggered! ");
270336,554170368,0,0,PLAT_AP,CCIO,USBD_ENABLE_RTS,P_SIG,swLogPrintf("usbd ( %d ) : rts flow ctrl released! ");
270336,554173184,0,0,PLAT_AP,CCIO,USBD_HAS_OBZP,P_SIG,swLogPrintf("xferCnt ( %d ) , wri ( %d ) , magic ( 0x%x ) , obzp ( %d ) ");
270336,554176000,0,0,PLAT_AP,CCIO,USBD_UPDATE_XFER,P_INFO,swLogPrintf("usbd ( %d ) : xferCnt ( %d / %d / %d ) @wri ( +%d|%d --> %d ) ");
270336,554177280,0,0,PLAT_AP,CCIO,USBD_NEXT_XFER_1,P_INFO,swLogPrintf("usbd ( %d ) : avlbSize ( %d ) < avlbThres ( %d / %d ) ! waiting more... ");
270336,554179840,0,0,PLAT_AP,CCIO,USBD_NEXT_XFER_2,P_INFO,swLogPrintf("usbd ( %d ) : next xfer @N.WR ( +%d|%d ) / N.RD ( %d ) / A.SZ ( %d ) / G.T.E ( %d ) ");
270336,554181120,0,0,PLAT_AP,CCIO,USBD_GET_RX_CONF,P_INFO,swLogPrintf("usbd ( %d ) : rxWinSize ( %d ) , xferCnt ( %d ) ");
270336,554182912,0,0,PLAT_AP,CCIO,USBD_ETH_MEDIA_STATE_1,P_SIG,swLogPrintf("rndis media state ( %d ) ind , errno ( %d ) ! ");
270336,554184960,0,0,PLAT_AP,CCIO,USBD_ETH_MEDIA_STATE_2,P_SIG,swLogPrintf("ecm media state ( %d ) ind , errno ( %d ) ! ");
270336,554187008,0,0,PLAT_AP,CCIO,USBD_ETH_MEDIA_STATE_3,P_ERROR,swLogPrintf("error! eth media ( %d ) state ( %d ) ind timeout ( 10 s ) ! ");
270336,554189056,0,0,PLAT_AP,CCIO,USBD_DCD_STATUS,P_SIG,swLogPrintf("usbd ( %d ) : set serl dcd state ( 0x%x ) ! ");
270336,554190848,0,0,PLAT_AP,CCIO,USBD_RI_DONE,P_SIG,swLogPrintf("usbd ( %d ) : ri done! ");
270336,554193664,0,0,PLAT_AP,CCIO,USBD_RI_STATUS_1,P_SIG,swLogPrintf("usbd ( %d ) : set serl ri state ( %d * %d / %d%% ) ");
270336,554194944,0,0,PLAT_AP,CCIO,USBD_RI_STATUS_2,P_SIG,swLogPrintf("usbd ( %d ) : restore high level ");
270336,554196992,0,0,PLAT_AP,CCIO,USBD_RI_STATUS_3,P_ERROR,swLogPrintf("usbd ( %d ) : create ri timer error! ");
270336,554199040,0,0,PLAT_AP,CCIO,USBD_RI_STATUS_4,P_WARNING,swLogPrintf("usbd ( %d ) : ri cycleCnt > 15 !!! ");
270336,554201088,0,0,PLAT_AP,CCIO,USBD_EXEC_INSTR_1,P_INFO,swLogPrintf("recv usb instr ( 0x%x ) ! ");
270336,554203136,0,0,PLAT_AP,CCIO,USBD_EXEC_INSTR_2,P_ERROR,swLogPrintf("warning! unknown usb exec instr ( 0x%x ) ! ");
270336,554205440,0,0,PLAT_AP,CCIO,USBD_OUTPUT_0,P_WARNING,swLogPrintf("usbd ( %d ) : disabled! discard all dlpdu ( 0x%x ) ... ");
270336,554207488,0,0,PLAT_AP,CCIO,USBD_OUTPUT_3,P_ERROR,swLogPrintf("usbd ( %d ) : sct tx err ( %d ) ! discard all pending dlpdu... ");
270336,554209536,0,0,PLAT_AP,CCIO,USBD_OUTPUT_SIGNAL_1,P_ERROR,swLogPrintf("ifIdx ( %d ) is out of scope [ 0 , %d ) ! ");
270336,554211584,0,0,PLAT_AP,CCIO,USBD_OUTPUT_SIGNAL_2,P_ERROR,swLogPrintf("usbd ( %d ) : output pstn serl state failure ( %d ) ! ");
270336,554213888,0,0,PLAT_AP,CCIO,USBD_CTS_EVT_1,P_INFO,swLogPrintf("usbd ( %d ) : cts state ( %d ) @epNum ( %d ) ");
270336,554215936,0,0,PLAT_AP,CCIO,USBD_CTS_EVT_2,P_SIG,swLogPrintf("usbd ( %d ) : cts state ( %d --> %d ) ");
270336,554217728,0,0,PLAT_AP,CCIO,USBD_DTR_EVT_1,P_SIG,swLogPrintf("usbd ( %d ) : dtr state ( %d ) ");
270336,554220032,0,0,PLAT_AP,CCIO,USBD_DTR_EVT_2,P_SIG,swLogPrintf("usbd ( %d ) : dtr state ( %d --> %d ) ");
270336,554222080,0,0,PLAT_AP,CCIO,USBD_CFG_OUT_XFER_0,P_INFO,swLogPrintf("usbd ( %d ) : cfg xfer , type: %d , size: %d! ");
270336,554223872,0,0,PLAT_AP,CCIO,USBD_CFG_OUT_XFER_1,P_SIG,swLogPrintf("usbd ( %d ) : err! cfg next xfer fail , ret = %d ");
270336,554225664,0,0,PLAT_AP,CCIO,USBD_CREATE_0,P_SIG,swLogPrintf("err! usbIfIdx ( %d ) overflows! ");
270336,554227712,0,0,PLAT_AP,CCIO,USBD_CREATE_1,P_INFO,swLogPrintf("create usb device ( %d ) ");
270336,554229760,0,0,PLAT_AP,CCIO,USBD_DESTROY_0,P_SIG,swLogPrintf("err! usbIfIdx ( %d ) overflows! ");
270336,554231808,0,0,PLAT_AP,CCIO,USBD_DESTROY_1,P_INFO,swLogPrintf("destroy usb device ( %d ) ");
270336,554233856,0,0,PLAT_AP,CCIO,USBD_INPUT_0,P_SIG,swLogPrintf("usbd ( %d ) : err! idx overflows! ");
270336,554236416,0,0,PLAT_AP,CCIO,USBD_INPUT_1,P_WARNING,swLogPrintf("usbd ( %d ) : not in working state ( %d ) or not enabled ( %d ) ! ");
270336,554237952,0,0,PLAT_AP,CCIO,USBD_INPUT_2,P_SIG,swLogPrintf("usbd ( %d ) : special pattern ( +++ ) ! ");
270336,554240000,0,0,PLAT_AP,CCIO,USBD_RNDIS_EVT,P_SIG,swLogPrintf("usb recv rndis event ( 0x%x ) ! ");
270336,554242304,0,0,PLAT_AP,CCIO,USBD_SERL_EVT_1,P_SIG,swLogPrintf("usbd ( %d ) : serl request set-line-state ( 0x%x ) ! ");
270336,554244096,0,0,PLAT_AP,CCIO,USBD_SERL_EVT_2,P_ERROR,swLogPrintf("usbd ( %d ) : err! idx overflows! ");
270336,554246400,0,0,PLAT_AP,CCIO,USBD_SCT_TX_DONE,P_INFO,swLogPrintf("usb Tx done ( %d ) notif to sct , triggFlag ( %d ) ! ");
270336,554248192,0,0,PLAT_AP,CCIO,USBD_STATE_TO_SCT,P_INFO,swLogPrintf("usb state ( %d ) notif to sct! ");
270336,554250240,0,0,PLAT_AP,CCIO,USBD_T_EXPIRY_TO_SCT,P_INFO,swLogPrintf("usb timer expiry ( %d ) notif to sct! ");
270336,554252288,0,0,PLAT_AP,CCIO,USBD_EP_UNBLOCK_TO_SCT,P_INFO,swLogPrintf("usb EP unblock ( %d ) notif to sct! ");
270336,554255104,0,0,PLAT_AP,CCIO,USBD_TABLE_INIT_0,P_VALUE,swLogPrintf("elem_idx ( %d ) : cls_type ( %d ) , inep ( %d ) , outep ( %d ) ! ");
270336,554257410,0,0,PLAT_AP,CCIO,USBD_TABLE_INIT_1,P_VALUE,swLogPrintf("usbd ( %d ) : %s ( %d ) , inep ( %d ) , outep ( %d ) ! ");
270336,554259712,0,0,PLAT_AP,CCIO,USBD_TABLE_INIT_2,P_VALUE,swLogPrintf("type2If ( %d %d %d %d %d ) , ulgInepNum ( %d ) ! ");
270336,554260480,0,0,PLAT_AP,CCIO,usbDevGetEnumSpd_1,P_VALUE,swLogPrintf("current enum speed is 0x%x! ");
270336,554262528,0,0,PLAT_AP,CCIO,ATCMD_SET_CHAN_NAME,P_SIG,swLogPrintf("chent ( %d ) is not serial type! ");
270336,554264576,0,0,PLAT_AP,CCIO,ATCMD_ADD_ENT_1,P_SIG,swLogPrintf("AtCmdEntity ( %d ) is already added to the list!! ");
270336,554266624,0,0,PLAT_AP,CCIO,ATCMD_DEL_ENT_1,P_SIG,swLogPrintf("AtCmdEntity ( %d ) is not found in the list!! ");
270336,554268672,0,0,PLAT_AP,CCIO,ATCMD_GET_ENT_0,P_ERROR,swLogPrintf("atCid ( %d ) : not entity exist! ");
270336,554270976,0,0,PLAT_AP,CCIO,ATCMD_ACTIVATE_CTX,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : atCid ( %d ) is activated! ");
270336,554273024,0,0,PLAT_AP,CCIO,ATCMD_DEACTIVATE_CTX,P_SIG,swLogPrintf("serlEnt ( %d ) : atCid ( %d ) is deactivated! ");
270336,554274816,0,0,PLAT_AP,CCIO,ATCMD_GET_CHANNO_1,P_ERROR,swLogPrintf("atCid ( %d ) : invalid atCid! ");
270336,554276864,0,0,PLAT_AP,CCIO,ATCMD_GET_CHANNO_2,P_ERROR,swLogPrintf("atCid ( %d ) : atCmd entity is unregistered! ");
270336,554279426,0,0,PLAT_AP,CCIO,ATCMD_OUTPUT_1,P_INFO,swLogPrintf("atCid ( %d ) : output ' %s ' ( %dbytes ) ");
270336,554281218,0,0,PLAT_AP,CCIO,ATCMD_OUTPUT_2,P_ERROR,swLogPrintf("atCid ( %d ) : discard ' %s ' for unregistration! ");
270336,554283264,0,0,PLAT_AP,CCIO,ATCMD_OUTPUT_3,P_ERROR,swLogPrintf("atCid ( %d ) : dlpdu count ( %d ) overflows!! ");
270336,554285056,0,0,PLAT_AP,CCIO,ATCMD_OUTPUT_4,P_ERROR,swLogPrintf("malloc dlpdu ( %d bytes ) failure! ");
270336,554287360,0,0,PLAT_AP,CCIO,ATCMD_OUTPUT_DLPDU_1,P_ERROR,swLogPrintf("atCid ( %d ) : discard 0x%p for unregistration! ");
270336,554289408,0,0,PLAT_AP,CCIO,ATCMD_OUTPUT_DLPDU_2,P_WARNING,swLogPrintf("atCid ( %d / 0x%x ) : txDelay flag has been set! ");
270336,554291458,0,0,PLAT_AP,CCIO,ATCMD_DIRECT_OUTPUT_1,P_ERROR,swLogPrintf("atCid ( %d ) : discard ' %s ' for unregistion! ");
270336,554293248,0,0,PLAT_AP,CCIO,ATCMD_DIRECT_OUTPUT_2,P_SIG,swLogPrintf("malloc dlpdu ( %d bytes ) failure! ");
270336,554295297,0,0,PLAT_AP,CCIO,ATCMD_BCAST_OUTPUT,P_SIG,swLogPrintf("urc: bcast ' %s ' out... ");
270336,554298120,0,0,PLAT_AP,CCIO,ATCMD_GET_PEND,P_INFO,swLogPrintf("atCid ( %d / 0x%x ) : %d %s line ( s ) in total... ");
270336,554299904,0,0,PLAT_AP,CCIO,ATCMD_START_PPP_1,P_WARNING,swLogPrintf("atCid ( %d ) : both pdpCid ( %d , %d ) invalid! ");
270336,554301440,0,0,PLAT_AP,CCIO,ATCMD_START_PPP_2,P_WARNING,swLogPrintf("atCid ( %d ) : ppp sessn already running! ");
270336,554303488,0,0,PLAT_AP,CCIO,ATCMD_STOP_PPP,P_WARNING,swLogPrintf("atCid ( %d ) : no ppp sessn running! maybe deleted... ");
270336,554305536,0,0,PLAT_AP,CCIO,ATCMD_RESUME_PPP,P_WARNING,swLogPrintf("atCid ( %d ) : no ppp sessn running! ");
270336,554308608,0,0,PLAT_AP,CCIO,ETH_HAS_OBZP,P_SIG,swLogPrintf("xferCnt ( %d / %d ) , magic ( 0x%x ) , obzp ( %d ) @ulpdu ( 0x%x ) ");
270336,554309889,0,0,PLAT_AP,CCIO,ETH_DATA_INPUT,P_INFO,swLogPrintf("%s ( %d ) ulpdu fast input... ");
270336,554311937,0,0,PLAT_AP,CCIO,ETH_DATA_OUTPUT,P_INFO,swLogPrintf("%s ( %d ) dlpdu output... ");
270336,554313985,0,0,PLAT_AP,CCIO,ETH_DATA_FAST_OUTPUT,P_INFO,swLogPrintf("%s ( %d ) dlpdu fast output... ");
270336,554317823,0,0,PLAT_AP,CCIO,PPP_DATA_OUTPUT_1,P_INFO,swLogPrintf("ppp dlpdu output... ");
270336,554319871,0,0,PLAT_AP,CCIO,PPP_DATA_OUTPUT_2,P_WARNING,swLogPrintf("ppp device may be deleted or not ready , discard all... ");
270336,554320128,0,0,PLAT_AP,CCIO,PPP_DATA_FAST_OUTPUT_1,P_WARNING,swLogPrintf("pppEnt ( 0x%p ) : maybe deleted or not ready ( %d ) , discard... ");
270336,554321920,0,0,PLAT_AP,CCIO,PPP_DATA_FAST_OUTPUT_2,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : txDelay flag has been set! ");
270336,554326015,0,0,PLAT_AP,CCIO,NET_DATA_INPUT,P_INFO,swLogPrintf("ppp ulpdu fast input... ");
270336,554328063,0,0,PLAT_AP,CCIO,NET_DATA_OUTPUT,P_INFO,swLogPrintf("ppp dlpdu output... ");
270336,554330111,0,0,PLAT_AP,CCIO,NET_DATA_FAST_OUTPUT,P_INFO,swLogPrintf("ppp dlpdu fast output... ");
270336,554330112,0,0,PLAT_AP,CCIO,OPAQ_DATA_INPUT,P_INFO,swLogPrintf("chanNo ( %d ) : opaq data input... ");
270336,554332416,0,0,PLAT_AP,CCIO,OPAQ_DATA_OUTPUT,P_INFO,swLogPrintf("chanNo ( %d ) : opaq data ( %d ) output... ");
270336,554334464,0,0,PLAT_AP,CCIO,OPAQ_DATA_WRITE,P_ERROR,swLogPrintf("chanNo ( %d ) : dlfc alloc ( %d ) failure! ");
272384,557845248,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_2,P_VALUE,swLogPrintf("CmdLen = %d , CmdFlag = %d , rc = %d , chaanId = %d ");
272384,557846529,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_3,P_SIG,swLogPrintf("Regs: %s ");
272384,557848576,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_6,P_SIG,swLogPrintf("SarAdc 1 st: 0x%x ");
272384,557850625,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_4,P_SIG,swLogPrintf("duplexLoss 1 st: %s ");
272384,557854719,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_5,P_SIG,swLogPrintf("Len = 0 ");
272384,557854721,0,0,PLAT_AP,ATCMD,atcDecOneAt_1,P_SIG,swLogPrintf("ATCMD , decode AT: %s ");
272384,557857280,0,0,PLAT_AP,ATCMD,atPrcoCacCmiCnfSig_1,P_INFO,swLogPrintf("ATCMD , AT chanId: %d , CmiCnf sgId: %d ( DEV-2 / MM-3 / PS-4 / SIM-5 / SMS-6 ) , primId: %d ");
272384,557859072,0,0,PLAT_AP,ATCMD,atPrcoCacCmiIndSig_1,P_INFO,swLogPrintf("ATCMD NB protocol IND , sgId: %d ( DEV-2 / MM-3 / PS-4 / SIM-5 / SMS-6 ) , PRIM ID: %d ");
272384,557861376,0,0,PLAT_AP,ATCMD,atProcCmsApplCnfSig_1,P_INFO,swLogPrintf("ATCMD , AT chanId: %d , APP CNF appId: %d , primId: %d ");
272384,557863168,0,0,PLAT_AP,ATCMD,atProcCmsApplIndSig_1,P_INFO,swLogPrintf("ATCMD , APP IND appId: %d , primId: %d ");
272384,557865472,0,0,PLAT_AP,ATCMD,atProcPhyCmiCnfSig_1,P_INFO,swLogPrintf("ATCMD , AT chanId: %d , CmiCnf sgId: %d , primId: %d ");
272384,557867264,0,0,PLAT_AP,ATCMD,atPrcoPhyCmiIndSig_1,P_INFO,swLogPrintf("ATCMD PHY IND , sgId: %d , PRIM ID: %d ");
272384,557871103,0,0,PLAT_AP,ATCMD,atcmd_input11,P_INFO,swLogPrintf("atcmd.customer.cnf.. ");
272384,557873151,0,0,PLAT_AP,ATCMD,atcmd_input12,P_INFO,swLogPrintf("atcmd.customer.ind.. ");
272384,557873152,0,0,PLAT_AP,ATCMD,atPduInit_dlfc_w_1,P_WARNING,swLogPrintf("AT , no DLFC mem left for AT PDU , reqLen: %d ");
272384,557875200,0,0,PLAT_AP,ATCMD,atPduInitTryHeap_mem_w_1,P_WARNING,swLogPrintf("AT , no heap mem left for AT PDU , reqLen: %d ");
272384,557877760,0,0,PLAT_AP,ATCMD,atPduPrintf_fail_w_1,P_WARNING,swLogPrintf("AT , AT out PDU failed , can ' t print new string: %d , %d , %d ");
272384,557879808,0,0,PLAT_AP,ATCMD,atPduPrintf_w_1,P_WARNING,swLogPrintf("AT , AT out PDU reserved buffer is not enough: %d , %d , %d , can ' t print out ");
272384,557882112,0,0,PLAT_AP,ATCMD,atPduPrintf_w_2,P_WARNING,swLogPrintf("AT , can ' t print string into AT PDU: %d , %d , %d , ret: %d ");
272384,557883904,0,0,PLAT_AP,ATCMD,atPduMemcat_input_w_1,P_WARNING,swLogPrintf("AT , AT PDU memcat , invalid input: 0x%x , 0x%x , %d ");
272384,557885952,0,0,PLAT_AP,ATCMD,atPduMemcat_fail_w_1,P_WARNING,swLogPrintf("AT , AT out PDU failed , can ' t memcat new data: %d , %d , %d ");
272384,557888256,0,0,PLAT_AP,ATCMD,atPduMemcat_w_1,P_WARNING,swLogPrintf("AT , AT out PDU reserved buffer is not enough: %d , %d , %d , can ' t memcat out len: %d ");
272384,557891583,0,0,PLAT_AP,ATCMD,simCSIMSetCnf_1,P_ERROR,swLogPrintf("simCSIMSetCnf atHexToString fail ");
272384,557893631,0,0,PLAT_AP,ATCMD,simCRSMSetCnf_1,P_ERROR,swLogPrintf("simCRSMSetCnf atHexToString fail ");
272384,557895679,0,0,PLAT_AP,ATCMD,simCGLASetCnf_1,P_ERROR,swLogPrintf("simCGLASetCnf atHexToString fail ");
272384,557897727,0,0,PLAT_AP,ATCMD,simECUSATPGetCnf_1,P_ERROR,swLogPrintf("simECUSATPGetCnf atHexToString fail ");
272384,557897728,0,0,PLAT_AP,ATCMD,simECPINInd_1,P_INFO,swLogPrintf("unexpected pin state %d ");
272384,557900288,0,0,PLAT_AP,ATCMD,atcFlushUrc_none_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , no URC pending: %d / 0x%lx , not need flush ");
272384,557902592,0,0,PLAT_AP,ATCMD,atcFlushUrc_sms_ri_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , SMS URC RI req failed: %d , pulseCount: %d , pulseDuration: %d ");
272384,557904384,0,0,PLAT_AP,ATCMD,atcFlushUrc_sms_ri_s_1,P_SIG,swLogPrintf("AT CHAN: %d , waiting SMS URC RI done , pulseCount: %d , pulseDuration: %d ");
272384,557906688,0,0,PLAT_AP,ATCMD,atcFlushUrc_other_ri_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , URC RI req failed: %d , pulseCount: %d , pulseDuration: %d ");
272384,557908480,0,0,PLAT_AP,ATCMD,atcFlushUrc_other_ri_s_1,P_SIG,swLogPrintf("AT CHAN: %d , waiting URC RI done , pulseCount: %d , pulseDuration: %d ");
272384,557910016,0,0,PLAT_AP,ATCMD,atcFlushUrc_ri_v_1,P_VALUE,swLogPrintf("AT CHAN: %d , waiting URC RI done , URC not need Tx ");
272384,557912064,0,0,PLAT_AP,ATCMD,atcFlushUrc_delay_v_1,P_VALUE,swLogPrintf("AT CHAN: %d , URC delay time is running , URC not need Tx ");
272384,557914112,0,0,PLAT_AP,ATCMD,atcFlushUrc_delay_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , RI State: AT_RI_DONE_URC_DELAY , but delay timer not running ");
272384,557916160,0,0,PLAT_AP,ATCMD,atcFlushUrc_cache_1,P_SIG,swLogPrintf("AT CHAN: %d , URC cache , still pending ");
272384,557918464,0,0,PLAT_AP,ATCMD,atcFlushUrc_chanState_s_1,P_SIG,swLogPrintf("AT CHAN: %d , chanState: %d , not command state , pending URC ");
272384,557920256,0,0,PLAT_AP,ATCMD,atcFlushUrc_ongoing_s_1,P_SIG,swLogPrintf("AT CHAN: %d , AT CMD is ongoing , pending URC ");
272384,557922560,0,0,PLAT_AP,ATCMD,atcFlushUrc_sent_s_1,P_SIG,swLogPrintf("AT CHAN: %d , URC flush / Tx , urcNum: %d ");
272384,557924608,0,0,PLAT_AP,ATCMD,atcFlushUrc_sent_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , URC send fail , ret: %d ");
272384,557926400,0,0,PLAT_AP,ATCMD,atcFlushUrc_out_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , URC PDU out func PNULL , can ' t tx URC! ");
272384,557928448,0,0,PLAT_AP,ATCMD,atcFlushUrc_delay_w_2,P_WARNING,swLogPrintf("AT CHAN: %d , all URC Tx , but delay timer is not NULL ");
272384,557930754,0,0,PLAT_AP,ATCMD,atcURCInList_over_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , URC pend too much , discard old URC: %s ");
272384,557932800,0,0,PLAT_AP,ATCMD,atcRespStrOutput_sent_w_1,P_WARNING,swLogPrintf("AT STR RESP , send fail , ret: %d , strLen: %d ");
272384,557935104,0,0,PLAT_AP,ATCMD,atcRespPduOutput_w_1,P_WARNING,swLogPrintf("AT PDU RESP , invalid ATPDU , bFail: %d , or 0x%lx , 0x%lx ");
272384,557937152,0,0,PLAT_AP,ATCMD,atcRespPduOutput_w_2,P_WARNING,swLogPrintf("AT PDU RESP , no resp need to output: %d , %d , %d ");
272384,557938944,0,0,PLAT_AP,ATCMD,atcRespPduOutput_sent_w_1,P_WARNING,swLogPrintf("AT PDU RESP , send fail , ret: %d , pduLen: %d ");
272384,557941248,0,0,PLAT_AP,ATCMD,atcSendRespPdu_w_1,P_WARNING,swLogPrintf("AT PDU RESP , invalid ATPDU , bFail: %d , or 0x%lx , 0x%lx ");
272384,557943296,0,0,PLAT_AP,ATCMD,atcSendRespPdu_w_2,P_WARNING,swLogPrintf("AT PDU RESP , no resp need to output: %d , %d , %d ");
272384,557944832,0,0,PLAT_AP,ATCMD,atcUrcStrOutput_alloc_w_1,P_WARNING,swLogPrintf("AT STR URC , can ' t alloc PDU with len: %d ");
272384,557947136,0,0,PLAT_AP,ATCMD,atcUrcStrOutput_sent_w_1,P_WARNING,swLogPrintf("AT STR URC , send fail , ret: %d , strLen: %d ");
272384,557949440,0,0,PLAT_AP,ATCMD,atcUrcPduOutput_w_1,P_WARNING,swLogPrintf("AT PDU URC , invalid ATPDU , bFail: %d , or 0x%lx , 0x%lx ");
272384,557951488,0,0,PLAT_AP,ATCMD,atcUrcPduOutput_w_2,P_WARNING,swLogPrintf("AT PDU URC , no URC need to output: %d , %d , %d ");
272384,557953536,0,0,PLAT_AP,ATCMD,atcSendPduInfoText_w_1,P_WARNING,swLogPrintf("AT PDU TEXT RESP , invalid ATPDU , bFail: %d , or 0x%lx , 0x%lx ");
272384,557955584,0,0,PLAT_AP,ATCMD,atcSendPduInfoText_w_2,P_WARNING,swLogPrintf("AT PDU TEXT RESP , no resp need to output: %d , %d , %d ");
272384,557957121,0,0,PLAT_AP,ATCMD,atcSendPduInfoText_cont_1,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
272384,557959169,0,0,PLAT_AP,ATCMD,atcSendPduInfoText_v1_1,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
272384,557961217,0,0,PLAT_AP,ATCMD,atcSendPduInfoText_v0_1,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
272384,557963776,0,0,PLAT_AP,ATCMD,atcSendPduUrcResult_w_1,P_WARNING,swLogPrintf("AT PDU URC , invalid ATPDU , bFail: %d , or 0x%lx , 0x%lx ");
272384,557965824,0,0,PLAT_AP,ATCMD,atcSendPduUrcResult_w_2,P_WARNING,swLogPrintf("AT PDU URC , no URC need to output: %d , %d , %d ");
272384,557967361,0,0,PLAT_AP,ATCMD,atcSendPduUrcResult_str_2,P_SIG,swLogPrintf("AT CMD , URC: %s ");
272384,557969408,0,0,PLAT_AP,ATCMD,atcSendPduUrcResult_q1_2,P_SIG,swLogPrintf("AT CMD , chanId: %d is suppressed , not need to send the URC ");
272384,557971712,0,0,PLAT_AP,ATCMD,atcPassThrough_sent_w_1,P_WARNING,swLogPrintf("AT pass through , send fail , ret: %d , pduLen: %d ");
272384,557973760,0,0,PLAT_AP,ATCMD,atcPduPassThrough_sent_w_1,P_WARNING,swLogPrintf("AT PDU pass through , send fail , ret: %d , pduLen: %d ");
272384,557975808,0,0,PLAT_AP,ATCMD,atcLineEndProc_w_1,P_WARNING,swLogPrintf("AT chanId: %d , no entity: 0x%x , or one AT line not done , can ' t proc ending act ");
272384,557978368,0,0,PLAT_AP,ATCMD,atcLineEndProc_baudrate_s_1,P_SIG,swLogPrintf("AT chanId: %d , try set baudrate: %d , frameFormat: 0x%x , saveFlag: %d ");
272384,557980160,0,0,PLAT_AP,ATCMD,atcLineEndProc_baudrate_w_1,P_WARNING,swLogPrintf("AT chanId: %d , resCode: %d , not OK , fail to set baudrate: %d ");
272384,557981952,0,0,PLAT_AP,ATCMD,atcLineEndProc_poweroff_s_1,P_SIG,swLogPrintf("AT chanId: %d , try to power off UE , mode: %d ");
272384,557984000,0,0,PLAT_AP,ATCMD,atcLineEndProc_reset_s_1,P_SIG,swLogPrintf("AT chanId: %d , try to reset UE , after delayMs: %d ");
272384,557985792,0,0,PLAT_AP,ATCMD,atcUrcRiDoneCallback_s_1,P_SIG,swLogPrintf("AT chanId: %d , URC RI done ");
272384,557988096,0,0,PLAT_AP,ATCMD,atcUrcRiDoneCallback_delay_t_s_1,P_SIG,swLogPrintf("AT chanId: %d , start URC delay timer , tValMs: %d ");
272384,557990400,0,0,PLAT_AP,ATCMD,atcUrcRiDoneCallback_delay_t_w_1,P_WARNING,swLogPrintf("AT chanId: %d , URC delay timer start fail ret: %d , tValMs: %d ");
272384,557991936,0,0,PLAT_AP,ATCMD,atcUrcDelayTimerExpiry_s_1,P_SIG,swLogPrintf("AT chanId: %d , URC delay timer expiry ");
272384,557994496,0,0,PLAT_AP,ATCMD,atcUrcDelayTimerExpiry_t_w_1,P_WARNING,swLogPrintf("AT chanId: %d , URC delay timer expiry , but timer is NULL: 0x%lx , or riState: %d not right ");
272384,557998079,0,0,PLAT_AP,ATCMD,appTriggerTau_1,P_INFO,swLogPrintf("appTriggerTau ");
272384,558000127,0,0,PLAT_AP,ATCMD,appTriggerTau_2,P_INFO,swLogPrintf("appTriggerTau done ");
272384,558002175,0,0,PLAT_AP,ATCMD,appTriggerRel_1,P_INFO,swLogPrintf("appTriggerRel ");
272384,558004223,0,0,PLAT_AP,ATCMD,appTriggerRel_2,P_INFO,swLogPrintf("appTriggerRel done ");
272384,558006271,0,0,PLAT_AP,ATCMD,appGetWifiScanInfo_info,P_INFO,swLogPrintf("appGetWifiScanInfo api ");
272384,558006784,0,0,PLAT_AP,ATCMD,appGetWifiScanInfo_warn,P_WARNING,swLogPrintf("appGetWifiScanInfo invalid Params , maxTimeOut ( %ld ) should NOT less than round ( %d ) * scanTimeOut ( %d ) * 1000 ");
273408,559941632,0,0,PLAT_AP,ATCMD_PARSER,nmECIPERF_1,P_WARNING,swLogPrintf("AT CMD , ECIPERF , invalid ACT value: %d ");
273408,559945727,0,0,PLAT_AP,ATCMD_PARSER,nmECIPERF_2,P_WARNING,swLogPrintf("AT CMD , ECIPERF , invalid protocol value , should 0 - 1 ");
273408,559945984,0,0,PLAT_AP,ATCMD_PARSER,nmECIPERF_3,P_WARNING,swLogPrintf("AT CMD , ECIPERF , invalid port value , should: %d - %d ");
273408,559949823,0,0,PLAT_AP,ATCMD_PARSER,nmECIPERF_4,P_WARNING,swLogPrintf("AT CMD , ECIPERF , invalid IP ADDR input ");
273408,559951871,0,0,PLAT_AP,ATCMD_PARSER,nmECIPERF_5,P_WARNING,swLogPrintf("AT CMD , ECIPERF client / UDP NAT server , must dest IP ADDR is missing ");
273408,559951872,0,0,PLAT_AP,ATCMD_PARSER,nmECDNSCFG_ipv4_any,P_WARNING,swLogPrintf("AT CMD , invalid ipv4 addr: 0x%x , in ECDNSCFG ");
273408,559954688,0,0,PLAT_AP,ATCMD_PARSER,nmECDNSCFG_ipv6_any,P_WARNING,swLogPrintf("AT CMD , invalid ipv6 addr: 0x%x , 0x%x , 0x%x , 0x%x , in ECDNSCFG ");
273408,559955968,0,0,PLAT_AP,ATCMD_PARSER,nmECDNSCFG_invalid_type,P_WARNING,swLogPrintf("AT CMD , invalid addr type: %d , in ECDNSCFG ");
273408,559960063,0,0,PLAT_AP,ATCMD_PARSER,nmECDNSCFG_invalid_ip,P_WARNING,swLogPrintf("AT CMD , empty DNS , in ECDNSCFG ");
273408,559960064,0,0,PLAT_AP,ATCMD_PARSER,nmECNETCFG_ipv4_any,P_WARNING,swLogPrintf("AT CMD , invalid ipv4 addr: 0x%x , in ECNETCFG ");
273408,559962112,0,0,PLAT_AP,ATCMD_PARSER,nmECNETCFG_ipv4_addr4,P_WARNING,swLogPrintf("AT CMD , invalid ipv4 addr4: %d , in ECNETCFG ");
273408,559964160,0,0,PLAT_AP,ATCMD_PARSER,nmECNETCFG_invalid_type,P_WARNING,swLogPrintf("AT CMD , invalid addr type: %d , in ECNETCFG ");
273408,559968255,0,0,PLAT_AP,ATCMD_PARSER,nmECNETCFG_invalid_ip,P_WARNING,swLogPrintf("AT CMD , empty host address , in ECNETCFG ");
273408,559968512,0,0,PLAT_AP,ATCMD_PARSER,nmECNETCFG_debug,P_WARNING,swLogPrintf("nvmCfgNetParam.bNatEnable %d , aonnetParamCfg.bNatEnable %d ");
273408,559972351,0,0,PLAT_AP,ATCMD_PARSER,nmECNETDEVCTL_invalid_urcen,P_WARNING,swLogPrintf("AT CMD , invalid urc_en in ECNETDEVCTL ");
273408,559974399,0,0,PLAT_AP,ATCMD_PARSER,nmECNETDEVCTL_invalid_cid,P_WARNING,swLogPrintf("AT CMD , invalid cid in ECNETDEVCTL ");
273408,559976447,0,0,PLAT_AP,ATCMD_PARSER,nmECNETDEVCTL_invalid_op,P_WARNING,swLogPrintf("AT CMD , invalid option in ECNETDEVCTL ");
273408,559976960,0,0,PLAT_AP,ATCMD_PARSER,nmSocketInputData_1,P_WARNING,swLogPrintf("AT CMD , all input length: %d+%d , extended MAX value: %d ");
273408,559978752,0,0,PLAT_AP,ATCMD_PARSER,nmSocketInputData_2,P_WARNING,swLogPrintf("AT CMD , all input length: %d , datalen : %d , noe eq ");
273408,559980544,0,0,PLAT_AP,ATCMD_PARSER,nmSocketInputData_3,P_INFO,swLogPrintf("AT CMD , all input length: %d ");
273408,559984639,0,0,PLAT_AP,ATCMD_PARSER,nmSocketInputData_4,P_INFO,swLogPrintf("AT CMD , input end with ctrl + z ");
273408,559986687,0,0,PLAT_AP,ATCMD_PARSER,nmSocketInputData_5,P_INFO,swLogPrintf("AT CMD , input one ctrl + z ");
273408,559986688,0,0,PLAT_AP,ATCMD_PARSER,nmSocketInputData_6,P_WARNING,swLogPrintf("AT CMD , all input length: %d is invalid ");
273408,559988736,0,0,PLAT_AP,ATCMD_PARSER,nmSocketInputData_7,P_INFO,swLogPrintf("AT CMD , all input length: %d ");
273408,559990784,0,0,PLAT_AP,ATCMD_PARSER,nmSocketInputData_8,P_WARNING,swLogPrintf("AT CMD , rcv ctrl+z，but all input length just: %d with one ctrl+z ");
273408,559993088,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_1,P_WARNING,swLogPrintf("AT CMD , invalid pre-defined AT , no AT name , pPreCmd->cmdType is %d , pPreCmd->paramMaxNum is %d ");
273408,559994880,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_2,P_WARNING,swLogPrintf("AT CMD , invalid pre-defined AT , AT name strLen is %d ");
273408,559996929,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_1,P_WARNING,swLogPrintf("AT CMD: %s , name len is 0 , or greater than 32 ");
273408,559998977,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_2,P_WARNING,swLogPrintf("AT CMD: %s , time out can ' t set to 0 ");
273408,560001025,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_3,P_WARNING,swLogPrintf("AT CMD: %s , basic AT name not right ");
273408,560003073,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_invalid_ext_1,P_WARNING,swLogPrintf("AT CMD: %s , extended CHAR is not right ");
273408,560005121,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_4,P_WARNING,swLogPrintf("AT CMD: %s , extended AT name not right ");
273408,560007169,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_5,P_WARNING,swLogPrintf("AT CMD: %s , proc func is NULL ");
273408,560009217,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_6,P_WARNING,swLogPrintf("AT CMD: %s , too many param > = 32 ");
273408,560011265,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_7,P_WARNING,swLogPrintf("AT CMD: %s , pre-defined param list is NULL ");
273408,560013825,0,0,PLAT_AP,ATCMD_PARSER,atcCheckPreDefinedTable_warning_8,P_WARNING,swLogPrintf("AT CMD: %s , basic AT CMD , paramMaxNum: %d , type: %d , not valid ");
273408,560015360,0,0,PLAT_AP,ATCMD_PARSER,atcStartAsynTimer_1,P_VALUE,swLogPrintf("AT CMD , start guard time: %d ms ");
273408,560017409,0,0,PLAT_AP,ATCMD_PARSER,atcDecJsonParam_warning_1,P_WARNING,swLogPrintf("AT CMD , invalid JSON param: %s ");
273408,560019456,0,0,PLAT_AP,ATCMD_PARSER,atcDecBasicAtParam_num_w_1,P_WARNING,swLogPrintf("AT CMD , the %d param is must , can ' t missing ");
273408,560022020,0,0,PLAT_AP,ATCMD_PARSER,atcDecBasicAtParam_num_w_2,P_WARNING,swLogPrintf("AT CMD , the %d param is numeric type: %d , invlaid input: %s ");
273408,560023808,0,0,PLAT_AP,ATCMD_PARSER,atcDecBasicAtParam_warn_str_1,P_WARNING,swLogPrintf("AT CMD , the %d param , type: %d is must , can ' t missing ");
273408,560026113,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_bs_warn_1,P_WARNING,swLogPrintf("AT CMD , basic AT: %s , but attribute not right , paramMaxNum: %d , type: %d ");
273408,560027904,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_num_warn_1,P_WARNING,swLogPrintf("AT CMD , the %d param is numeric type , but contain: %d \" , invalid ");
273408,560029696,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_num_warn_2,P_WARNING,swLogPrintf("AT CMD , the %d param is must , can ' t missing ");
273408,560032256,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_num_warn_3,P_WARNING,swLogPrintf("AT CMD , the %d param is numeric type: %d , invlaid input: %d ");
273408,560033792,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_warn_json_1,P_WARNING,swLogPrintf("AT CMD , the %d param JSON is must , can ' t missing ");
273408,560035840,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_warn_str_1,P_WARNING,swLogPrintf("AT CMD , the %d param is must , can ' t missing ");
273408,560037888,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_warn_last_mix_1,P_WARNING,swLogPrintf("AT CMD , the %d param LAST MIX STR is must , can ' t missing ");
273408,560039936,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_warn_mix_1,P_WARNING,swLogPrintf("AT CMD , the %d param is must , can ' t missing ");
273408,560041984,0,0,PLAT_AP,ATCMD_PARSER,atcDecAtParam_warn_must_1,P_WARNING,swLogPrintf("AT CMD , the %d param is must , can ' t missing ");
273408,560044033,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmd_check_1,P_WARNING,swLogPrintf("AT CMD , can ' t find handler / procFunc for AT: %s ");
273408,560046081,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmd_check_2,P_WARNING,swLogPrintf("AT CMD , AT: %s , is action command , not support READ operation ");
273408,560048129,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmd_param_warn_1,P_WARNING,swLogPrintf("AT CMD: %s , decode param_value failed ");
273408,560050176,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmd_warning_no_timeout_1,P_WARNING,swLogPrintf("AT CMD , RIL AT , no valid time out set , use the AT CMD default value: %d seconds ");
273408,560052224,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmd_warning_no_timeout_2,P_WARNING,swLogPrintf("AT CMD , no time out set , use the default value: %d seconds ");
273408,560054273,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmd_proc_warn_1,P_WARNING,swLogPrintf("AT CMD: %s , funcProc failed ");
273408,560057088,0,0,PLAT_AP,ATCMD_PARSER,atcGetAtLine_mis_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , get / proc a new line , but previous ending not done: %d , %d , %d ");
273408,560058624,0,0,PLAT_AP,ATCMD_PARSER,atcGetAtLine_w_1,P_WARNING,swLogPrintf("AT CMD , input AT CMD too long: %d > %d , not support , discard it ");
273408,560060416,0,0,PLAT_AP,ATCMD_PARSER,atcDecodeOneNode_pending_1,P_WARNING,swLogPrintf("AT CMD , one AT is ongoing , pending current one , input len: %d ");
273408,560062720,0,0,PLAT_AP,ATCMD_PARSER,atcDecodeOneNode_1,P_ERROR,swLogPrintf("AT CMD , too much pending AT input , pendingLen: %d / pendingNodeNum: %d , discard all ");
273408,560064512,0,0,PLAT_AP,ATCMD_PARSER,atcDecOneNode_next_1,P_INFO,swLogPrintf("AT CMD , chan Id: %d , current line done , check next.. ");
273408,560066816,0,0,PLAT_AP,ATCMD_PARSER,atcDecodeOneNode_warn_1,P_ERROR,swLogPrintf("AT CMD , too much pending AT input , pendingLen: %d / pendingNodeNum: %d , discard all ");
273408,560069120,0,0,PLAT_AP,ATCMD_PARSER,atcDecOneApiNode_warning_1,P_WARNING,swLogPrintf("AT CMD , too much pending RIL AT input , pendingLen: %d / currentLen: %d / pendingNodeNum: %d , discard current one ");
273408,560070656,0,0,PLAT_AP,ATCMD_PARSER,atcDecOneApiNode_pending_1,P_WARNING,swLogPrintf("AT CMD , one RIL AT is ongoing , pending current one , input len: %d ");
273408,560073216,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtInDataState_0,P_INFO,swLogPrintf("AT CMD , chan Id: %d , dataState :%d , recv data len: %d ");
273408,560075264,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtInDataState_w_state_0,P_WARNING,swLogPrintf("AT CMD , chan Id: %d , dataState :%d , proc data return failed: %d , chanState change back to: COMMAND STATE ");
273408,560078847,0,0,PLAT_AP,ATCMD_PARSER,atcBeHandshakeInput_1,P_INFO,swLogPrintf("AT CMD , Handshake RESP: KSDH ");
273408,560079104,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdStrReqSig_state_0,P_WARNING,swLogPrintf("AT CMD , chanId: %d , waiting for the handshake cnf to enter state: %d , discard this dirty data ");
273408,560081152,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdStrReqSig_state_1,P_INFO,swLogPrintf("AT CMD , chanId: %d , state is: %d , not CMD state , don ' t need to decode AT ");
273408,560084991,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdStrReqSig_info_1,P_INFO,swLogDump("AT CMD , RECV dump: ");
273408,560085248,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdStrReqSig_info_2,P_INFO,swLogPrintf("AT chanId: %d , recv long AT , length: %d ");
273408,560089087,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdStrReqSig_info_3,P_INFO,swLogDump("AT CMD , RECV dump: ");
273408,560089088,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdContinueReqSig_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , proc SIG_AT_CMD_CONTINUE_REQ , but another AT is ongoing , and guard timer is runing ");
273408,560091136,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdContinueReqSig_next_1,P_INFO,swLogPrintf("AT CMD , chan Id: %d , current line done , check next.. ");
273408,560093184,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdDataModeHSCnfSig_1,P_INFO,swLogPrintf("AT CMD , chan Id: %d , rcv SIG_AT_CMD_DATA_MODE_HS_CNF , ready to enter data mode! ");
273408,560095232,0,0,PLAT_AP,ATCMD_PARSER,atcProcAtCmdDataModeHSCnfSig_2,P_WARNING,swLogPrintf("AT CMD , chan Id: %d , unexpect SIG_AT_CMD_DATA_MODE_HS_CNF , pls , check it! ");
273408,560097281,0,0,PLAT_AP,ATCMD_PARSER,atcRegisterAtChannelCallback_info_1,P_INFO,swLogPrintf("AT CMD , register USB AT channel: %s ");
273408,560099329,0,0,PLAT_AP,ATCMD_PARSER,atcRegisterAtChannelCallback_default_warning_1,P_WARNING,swLogPrintf("AT CMD , USB channel already registered: %s , re-init ");
273408,560101377,0,0,PLAT_AP,ATCMD_PARSER,atcRegisterAtChannelCallback_uart_1,P_INFO,swLogPrintf("AT CMD , register UART AT channel: %s ");
273408,560103425,0,0,PLAT_AP,ATCMD_PARSER,atcRegisterAtChannelCallback_uart_warning_1,P_WARNING,swLogPrintf("AT CMD , UART channel already registered: %s , re-init ");
273408,560105473,0,0,PLAT_AP,ATCMD_PARSER,atcRegisterAtChannelCallback_warning_1,P_WARNING,swLogPrintf("AT CMD , Chan name already registered: %s ");
273408,560107521,0,0,PLAT_AP,ATCMD_PARSER,atcRegisterAtChannelCallback_warning_2,P_WARNING,swLogPrintf("AT CMD , No channel left for request channName: %s ");
273408,560110336,0,0,PLAT_AP,ATCMD_PARSER,atcRestartGuardTimer_warning_1,P_WARNING,swLogPrintf("AT CMD , chanId: %d , Tid:%d / %d , guarding timer not running , or new value invalid: %d , can ' t restart AT guard timer. ");
273408,560111616,0,0,PLAT_AP,ATCMD_PARSER,atcRestartGuardTimer_1,P_VALUE,swLogPrintf("AT CMD , restart guard time: %d ms ");
273408,560113920,0,0,PLAT_AP,ATCMD_PARSER,atcAsynTimerExpiry_warning_1,P_WARNING,swLogPrintf("AT CMD. channId: %d , tid: %d , guard timer expiry ");
273408,560116224,0,0,PLAT_AP,ATCMD_PARSER,atcChangeChannelState_1,P_SIG,swLogPrintf("AT CMD. chanId: %d , channel state change from: %d to %d ");
273408,560118016,0,0,PLAT_AP,ATCMD_PARSER,atcChangeChannelState_data_mode_HS,P_SIG,swLogPrintf("AT CMD. chanId: %d , before enter channel state %d , handshake with CCIO and wait result! ");
273408,560119808,0,0,PLAT_AP,ATCMD_PARSER,atcChangeChannelState_pmu_1,P_SIG,swLogPrintf("AT CMD , UART channel enter state: %d , wait for more input , not allow enter SLEEP1 ");
273408,560123903,0,0,PLAT_AP,ATCMD_PARSER,atcChangeChannelState_pmu_2,P_SIG,swLogPrintf("AT CMD , UART channel back to online state , allow enter SLEEP1 ");
273408,560124416,0,0,PLAT_AP,ATCMD_PARSER,atcEnterOnlineDataState_1,P_SIG,swLogPrintf("AT CMD , chanId: %d , enter online data state , from: %d to %d ");
273408,560126208,0,0,PLAT_AP,ATCMD_PARSER,atcEnterOnlineDataState_data_mode_HS,P_SIG,swLogPrintf("AT CMD. chanId: %d , before enter online data state %d , handshake with CCIO and wait result! ");
273408,560128000,0,0,PLAT_AP,ATCMD_PARSER,atcEnterOnlineDataState_pmu_1,P_SIG,swLogPrintf("AT CMD , UART channel enter data state: %d , wait for more input , not allow enter SLEEP1 ");
273408,560130304,0,0,PLAT_AP,ATCMD_PARSER,atcEnterOnlineCommandState_w_1,P_WARNING,swLogPrintf("AT CMD , chanId: %d , cur state: %d , not data state , can ' t change to ATC_ONLINE_COMMAND_STATE ");
273408,560132608,0,0,PLAT_AP,ATCMD_PARSER,atcEnterOnlineCommandState_1,P_SIG,swLogPrintf("AT CMD , chanId: %d , enter ATC_ONLINE_COMMAND_STATE , from: %d to %d ");
273408,560136191,0,0,PLAT_AP,ATCMD_PARSER,atcEnterOnlineCommandState_pmu_2,P_SIG,swLogPrintf("AT CMD , UART channel back to online command state , allow enter SLEEP1 ");
273408,560136448,0,0,PLAT_AP,ATCMD_PARSER,atcEnterCommandState_1,P_SIG,swLogPrintf("AT CMD , chanId: %d , enter ATC_COMMAND_STATE , from: %d ");
273408,560140287,0,0,PLAT_AP,ATCMD_PARSER,atcEnterCommandState_pmu_1,P_SIG,swLogPrintf("AT CMD , UART channel back to command state , allow enter SLEEP1 ");
273408,560142335,0,0,PLAT_AP,ATCMD_PARSER,atcRilAtCmdApiCallback_dump_1,P_INFO,swLogDump("AT CMD , RIL AT dump: ");
273408,560142336,0,0,PLAT_AP,ATCMD_PARSER,atcRilAtCmdApiCallback_info_1,P_INFO,swLogPrintf("AT RIL , recv long AT , length: %d ");
273408,560146431,0,0,PLAT_AP,ATCMD_PARSER,atcRilAtCmdApiCallback_dump_2,P_INFO,swLogDump("AT CMD , RIL AT dump: ");
273408,560146944,0,0,PLAT_AP,ATCMD_PARSER,atcRilAtCmdApiCallback_warning_1,P_WARNING,swLogPrintf("AT CMD , RIL input AT not valid , startIdx: %d , len: %d , CHAR: 0x%x ");
273408,560148736,0,0,PLAT_AP,ATCMD_PARSER,atcRilAtCmdApiCallback_warning_2,P_WARNING,swLogPrintf("AT CMD , RIL input AT not right , not end with <S3> ( \ r \ \n ) , ending: %d , %d ");
273408,560150784,0,0,PLAT_AP,ATCMD_PARSER,atcRilAtCmdApiCallback_warning_3,P_WARNING,swLogPrintf("AT CMD , RIL input AT not right , not support multi-AT-line , ending: %d , %d ");
273408,560154623,0,0,PLAT_AP,ATCMD_PARSER,atcRilRegisterUrcCallback_warning_1,P_WARNING,swLogPrintf("AT RIL channel , register URC channel , but already registered before , replace new one ");
273408,560154624,0,0,PLAT_AP,ATCMD_PARSER,atcDeRegisterAtChannelCallback_warning_1,P_WARNING,swLogPrintf("AT CMD , deregister AT chan: %d , but can ' t find AT entity ");
273408,560156672,0,0,PLAT_AP,ATCMD_PARSER,atcDeRegisterAtChannelCallback_api_1,P_WARNING,swLogPrintf("AT CMD , can ' t deregister RIL AT chan: %d ");
273408,560158720,0,0,PLAT_AP,ATCMD_PARSER,atcDeRegisterAtChannelCallback_no_init_1,P_WARNING,swLogPrintf("AT CMD , deregister AT chan: %d , but AT entity is not init , don ' t need to de-reg ");
273408,560160768,0,0,PLAT_AP,ATCMD_PARSER,atcEndResetSystem_warning_1,P_WARNING,swLogPrintf("AT CMD , AT chan: %d , try reset UE , but can ' t find AT entity ");
273408,560162816,0,0,PLAT_AP,ATCMD_PARSER,atcEndResetSystem_mem_1,P_WARNING,swLogPrintf("AT CMD , AT chan: %d , try reset UE , no heap memory left ");
273408,560164864,0,0,PLAT_AP,ATCMD_PARSER,atcEndPowerOff_warning_1,P_WARNING,swLogPrintf("AT CMD , AT chan: %d , try poweroff UE , but can ' t find AT entity ");
273408,560166912,0,0,PLAT_AP,ATCMD_PARSER,atcEndPowerOff_mem_1,P_WARNING,swLogPrintf("AT CMD , AT chan: %d , try poweroff UE , no heap memory left ");
273408,560169216,0,0,PLAT_AP,ATCMD_PARSER,atcEndSetBaudrate_warning_1,P_WARNING,swLogPrintf("AT CMD , AT chan: %d , try set baudrate to: %d , invalid input ");
273408,560171264,0,0,PLAT_AP,ATCMD_PARSER,atcEndSetBaudrate_mem_1,P_WARNING,swLogPrintf("AT CMD , AT chan: %d , try set baudrate to: %d , no heap memory left ");
273408,560173056,0,0,PLAT_AP,ATCMD_PARSER,atcDiscardAllPendingAt_s_1,P_SIG,swLogPrintf("AT CHAN: %d , discard all pending AT ");
273408,560175360,0,0,PLAT_AP,ATCMD_PARSER,atcDtrEventCallback_s_1,P_SIG,swLogPrintf("AT CHAN: %d , chanState: %d , recv DTR event ");
273408,560177664,0,0,PLAT_AP,ATCMD_PARSER,atcDtrEventCallback_ret_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , chanState: %d , proc DTR event ret err: %d ");
273408,560179456,0,0,PLAT_AP,ATCMD_PARSER,atcDtrEventCallback_s_2,P_VALUE,swLogPrintf("AT CHAN: %d , chanState: %d , not need proc DTR event ");
273408,560183295,0,0,PLAT_AP,ATCMD_PARSER,devECPSTEST_1,P_WARNING,swLogPrintf("ATCMD , invalid ATCMD: AT+ECPSTEST ");
273408,560185343,0,0,PLAT_AP,ATCMD_PARSER,devECEVENTSTATIS_1,P_WARNING,swLogPrintf("ATCMD , invalid ATCMD: AT+ECEVENTSTATIS ");
273408,560185602,0,0,PLAT_AP,ATCMD_PARSER,mmGetPlmnNumeric_0,P_WARNING,swLogPrintf("AT CMD , invalid PLMN , format: %d , name: %s ");
273408,560187393,0,0,PLAT_AP,ATCMD_PARSER,mmGetPlmnNumeric_1,P_WARNING,swLogPrintf("AT CMD , PLMN Numeric: %s ");
273408,560189698,0,0,PLAT_AP,ATCMD_PARSER,mmCOPS_0,P_WARNING,swLogPrintf("AT CMD , invalid PLMN , format: %d , name: %s ");
273408,560193535,0,0,PLAT_AP,ATCMD_PARSER,mmCCIOTOPT_1,P_WARNING,swLogPrintf("ATCMD , invalid ATCMD: AT+CCIOTOPT ");
273408,560195583,0,0,PLAT_AP,ATCMD_PARSER,psECSCLKEX_invalid_idleTime,P_WARNING,swLogPrintf("AT CMD , invalid <idle_time> in ECSCLKEX ");
273408,560197631,0,0,PLAT_AP,ATCMD_PARSER,psECSCLKEX_invalid_retryTime,P_WARNING,swLogPrintf("AT CMD , invalid <retry_time> in ECSCLKEX ");
273408,560199679,0,0,PLAT_AP,ATCMD_PARSER,psECSCLKEX_invalid_mode,P_WARNING,swLogPrintf("AT CMD , invalid <mode> in ECSCLKEX ");
273408,560199680,0,0,PLAT_AP,ATCMD_PARSER,simCRSM_0,P_INFO,swLogPrintf("<data> legnth:%d ");
273408,560202752,0,0,PLAT_AP,ATCMD_PARSER,smsCMGSCMGCStateCallback_w_1,P_WARNING,swLogPrintf("AT CHAN: %d , chanState: %d , AT input data , but invalid param: 0x%lx , data: 0x%lx , len: %d ");
273408,560204288,0,0,PLAT_AP,ATCMD_PARSER,smsCMGSCMGCStateCallback_w_evt_1,P_WARNING,swLogPrintf("AT CHAN: %d , chanState: %d , not need to proc evtId: %d ");
273408,560205824,0,0,PLAT_AP,ATCMD_PARSER,smsCPMSPrefMemStrConvInt_1,P_INFO,swLogPrintf("SMS memory type: %d ");
273408,560207873,0,0,PLAT_AP,ATCMD_PARSER,smsCPMSPrefMemIntConvStr_1,P_WARNING,swLogPrintf("SMS preferred memory type invalid: %s ");
273408,560209921,0,0,PLAT_AP,ATCMD_PARSER,smsCPMSPrefMemIntConvStr_2,P_INFO,swLogPrintf("SMS preferred memory Storage is: %s ");
273408,560212480,0,0,PLAT_AP,ATCMD_PARSER,smsCMGSInputData_warn_1,P_WARNING,swLogPrintf("AT CMD , all input SMS PDU length: %d+%d , extended MAX value: %d ");
273408,560214528,0,0,PLAT_AP,ATCMD_PARSER,smsCMGSInputData_warn_2,P_WARNING,swLogPrintf("AT CMD , all input SMS text length: %d+%d , extended MAX value: %d ");
273408,560218111,0,0,PLAT_AP,ATCMD_PARSER,smsCMGSInputData_warn_3,P_WARNING,swLogPrintf("AT CMD , remove \r \n from end of <PDU> in PDU mode ");
273408,560218624,0,0,PLAT_AP,ATCMD_PARSER,smsCMGWInputData_warn_1,P_WARNING,swLogPrintf("AT CMD , all input SMS PDU length: %d+%d , extended MAX value: %d ");
273408,560220672,0,0,PLAT_AP,ATCMD_PARSER,smsCMGWInputData_warn_2,P_WARNING,swLogPrintf("AT CMD , all input SMS text length: %d+%d , extended MAX value: %d ");
273408,560222464,0,0,PLAT_AP,ATCMD_PARSER,smsCMGWInputData_info_1,P_INFO,swLogPrintf("AT CMD , all input SMS length: %d+%d ");
273408,560226303,0,0,PLAT_AP,ATCMD_PARSER,smsCMGWInputData_warn_3,P_WARNING,swLogPrintf("AT CMD , remove \r \n from end of <PDU> in PDU mode ");
273408,560228351,0,0,PLAT_AP,ATCMD_PARSER,smsCNMACancel_warn_1,P_WARNING,swLogPrintf("AT CMD , cancel the <ackpdu> input of CNMA ");
273408,560228608,0,0,PLAT_AP,ATCMD_PARSER,smsCNMAInputData_warn_1,P_WARNING,swLogPrintf("AT CMD , all input SMS ACK PDU length:%d , extended MAX value: %d ");
273408,560230400,0,0,PLAT_AP,ATCMD_PARSER,smsCNMAInputData_warn_2,P_WARNING,swLogPrintf("AT CMD , <ackpdu> is not expected in format: %d ");
273408,560234495,0,0,PLAT_AP,ATCMD_PARSER,smsCNMAInputData_warn_3,P_WARNING,swLogPrintf("AT CMD , remove \r \n from end of <ackpdu> ");
273408,560234752,0,0,PLAT_AP,ATCMD_PARSER,smsCNMAInputData_warn_4,P_WARNING,swLogPrintf("AT CMD , ack PDU length %d should be same as %d ");
273408,560236544,0,0,PLAT_AP,ATCMD_PARSER,smsNewMsgAck_warn_1,P_WARNING,swLogPrintf("AT CMD , send RP-Ack / Error of SMS %d ");
273408,560238593,0,0,PLAT_AP,ATCMD_PARSER,OperatorStringToNumericPlmn_1,P_WARNING,swLogPrintf("invalid input PLMN: %s ");
273408,560240641,0,0,PLAT_AP,ATCMD_PARSER,OperatorStringToNumericPlmn_2,P_WARNING,swLogPrintf("invalid input PLMN: %s ");
274432,562040831,0,0,PLAT_AP,ATCMD_EXEC,RfAtNstCmdPreHandle_1,P_INFO,swLogPrintf("AT+ECRFNST: crc check error ");
274432,562042879,0,0,PLAT_AP,ATCMD_EXEC,RfAtNstCmdPreHandle_2,P_INFO,swLogPrintf("AT+ECRFNST: data unfinished ");
274432,562042880,0,0,PLAT_AP,ATCMD_EXEC,RfAtNstCmdPreHandle_3,P_INFO,swLogPrintf("AT+ECRFNST: ResumeTrans , tempBlockCounter = %d ");
274432,562045184,0,0,PLAT_AP,ATCMD_EXEC,RfAtTestCmd_1,P_INFO,swLogPrintf("RC32K PTEST: aabbccdd , %x , %x ");
274432,562047488,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_1,P_INFO,swLogPrintf("AT+ECRFNST: CPReturn cmdid = %d , RetV = %d , dataLen = %d ");
274432,562051071,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_2,P_INFO,swLogPrintf("AT+ECRFNST: Write selfcal table ");
274432,562053119,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_5,P_ERROR,swLogPrintf("apNv2Data memory malloc failure. ");
274432,562053120,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_4,P_INFO,swLogPrintf("Crc Calulate and value = %d ");
274432,562057215,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_3,P_INFO,swLogPrintf("AT+ECRFNST: Urc end ");
274432,562059263,0,0,PLAT_AP,ATCMD_EXEC,atRfCaliGetThermal,P_ERROR,swLogPrintf("Rf Cali Adc convert timeout ");
274432,562059776,0,0,PLAT_AP,ATCMD_EXEC,atRf32KCapCali_1,P_ERROR,swLogPrintf("32 K cali Failure , scGap = %d , fcGap = %d , rf32kCtune = 0x%X ");
274432,562061824,0,0,PLAT_AP,ATCMD_EXEC,atRf32KCapCali_3,P_SIG,swLogPrintf("32 K cali Success , scGap = %d , fcGap = %d , rf32kCtune = 0x%X ");
274432,562064128,0,0,PLAT_AP,ATCMD_EXEC,atRf32KCapCali_2,P_SIG,swLogPrintf("32 K Cali Step = %d , val1 = %d , val2 = %d , val3 = 0x%X ");
274432,562067455,0,0,PLAT_AP,ATCMD_EXEC,ResumeTrans_1,P_ERROR,swLogPrintf("AT+ECRFNST: TRANSDATABLOCK Index error ");
274432,562067968,0,0,PLAT_AP,ATCMD_EXEC,ResumeTrans_2,P_SIG,swLogPrintf("AT+ECRFNST: Rsp dataBlockCounter = %d , datalen = %d , startPos = %d ");
274432,562071551,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspDebug_1,P_VALUE,swLogPrintf("NstRspDebug ");
274432,562073599,0,0,PLAT_AP,ATCMD_EXEC,devRST_1,P_WARNING,swLogPrintf("AT+ECRST , invalid input string parameter ");
274432,562075647,0,0,PLAT_AP,ATCMD_EXEC,devRST_2,P_WARNING,swLogPrintf("AT+ECRST , invalid input ' delay ' value ");
274432,562077695,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_1,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input string parameter ");
274432,562079743,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_2,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' faultAction ' value ");
274432,562081791,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_8,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' uartDumpPort ' value ");
274432,562083839,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_3,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' startWDT ' value ");
274432,562085887,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_4,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' logCtrl ' value ");
274432,562087935,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_5,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' logLevel ' value ");
274432,562089983,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_6,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' logBaudrate ' value ");
274432,562092031,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_7,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' slpWaitTime ' value ");
274432,562094079,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_9,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' logPortSel ' value ");
274432,562096127,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_10,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' usbCtrl ' value ");
274432,562098175,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_11,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' usbSwTrace ' value ");
274432,562100223,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_12,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' usbSlpMask ' value ");
274432,562102271,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_13,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' usbSlpThd ' value ");
274432,562104319,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_14,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' pwrKeyMode ' value ");
274432,562106367,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_15,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' usbNet ' value ");
274432,562106368,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_16,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' fotaUrcPortSel ' value ( %d ) ");
274432,562108416,0,0,PLAT_AP,ATCMD_EXEC,devECPCFG_17,P_WARNING,swLogPrintf("AT+ECPCFG , invalid input ' fotaUrcPortSel ' value ( %d ) ");
274432,562112511,0,0,PLAT_AP,ATCMD_EXEC,devECUSBSYS_1,P_WARNING,swLogPrintf("AT+ECUSBSYS , invalid input string parameter ");
274432,562114559,0,0,PLAT_AP,ATCMD_EXEC,devECUSBSYS_2,P_WARNING,swLogPrintf("AT+ECUSBSYS , invalid input ' VBUSModeEn ' value ");
274432,562116607,0,0,PLAT_AP,ATCMD_EXEC,devECUSBSYS_3,P_WARNING,swLogPrintf("AT+ECUSBSYS , invalid input ' VBUSWkupPad ' value ");
274432,562116609,0,0,PLAT_AP,ATCMD_EXEC,pdevECPURC_warning_1,P_WARNING,swLogPrintf("AT CMD , ECPURC , invalid param URC: %s ");
274432,562118657,0,0,PLAT_AP,ATCMD_EXEC,pdevECPALARM_warning_1,P_WARNING,swLogPrintf("AT CMD , ECPALARM , invalid param URC: %s ");
274432,562122751,0,0,PLAT_AP,ATCMD_EXEC,pdNPICFG_1,P_WARNING,swLogPrintf("AT+ECNPICFG , invalid input string parameter ");
274432,562124799,0,0,PLAT_AP,ATCMD_EXEC,pdNPICFG_2,P_WARNING,swLogPrintf("AT+ECNPICFG , invalid input ' rfCaliDone ' value ");
274432,562126847,0,0,PLAT_AP,ATCMD_EXEC,pdNPICFG_3,P_WARNING,swLogPrintf("AT+ECNPICFG , invalid input ' rfNSTDone ' value ");
274432,562128895,0,0,PLAT_AP,ATCMD_EXEC,nmECNETCFG_1,P_WARNING,swLogPrintf("AT+ECNETCFG , invalid input string parameter ");
274432,562130943,0,0,PLAT_AP,ATCMD_EXEC,atGetDynamicHexStrValue_0,P_INFO,swLogPrintf("pStrBegin is NULL!!! ");
274432,562132991,0,0,PLAT_AP,ATCMD_EXEC,atGetDynamicHexStrValue_2,P_INFO,swLogPrintf("pTemp fail!!! ");
274432,562132992,0,0,PLAT_AP,ATCMD_EXEC,atGetDynamicHexStrValue_3,P_INFO,swLogPrintf("cmsHexStrToHex len:%d fail!!! ");
274432,562137087,0,0,PLAT_AP,ATCMD_EXEC,devECCGSN_1,P_WARNING,swLogPrintf("AT+ECCGSN , invalid input string parameter ");
274432,562139135,0,0,PLAT_AP,ATCMD_EXEC,devECCGSNLOCK_1,P_WARNING,swLogPrintf("AT+ECCGSN , invalid input string parameter ");
274432,562141183,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_1,P_WARNING,swLogPrintf("AT+ECCFG , invalid input string parameter ");
274432,562143231,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_t3324MaxValue,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' T3324MaxValueS ' value ");
274432,562145279,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_barValue,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' BarValueS ' value ");
274432,562147327,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_11,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' DataInactTimer ' value ");
274432,562149375,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_12,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' RelaxMonitorDeltaP ' value ");
274432,562151423,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_13,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' PlmnSearchPowerLevel ' value ");
274432,562153471,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_14,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' RelVersion ' value ");
274432,562155519,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_15,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' Rohc ' value ");
274432,562157567,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_16,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' Epco ' value ");
274432,562159615,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_Ipv6RsForTestSim_17,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' Ipv6RsForTestSim ' value ");
274432,562161663,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_Ipv6RsDealy_17,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' Ipv6RsDelay ' value ");
274432,562163711,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_TcpTptOpt,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' TcpTptOpt ' value ");
274432,562165759,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_UbCategory_1,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' UeCategory ' value ");
274432,562167807,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_PsSoftReset,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' PsSoftReset ' value ");
274432,562169855,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_EnableEAB,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' EnableEAB ' value ");
274432,562171903,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_EnableABCheck,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' EnableABCheck ' value ");
274432,562173951,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_AttachBearerCid,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' AttachBearerCid ' value ");
274432,562175999,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_PowerAttachWithIMSI,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' PowerAttachWithIMSI ' value ");
274432,562178047,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_PowerAttachWithoutEia,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' PowerAttachWoEia ' value ");
274432,562180095,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_EnableDataCounter,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' EnableDataCounter ' value ");
274432,562182143,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_UpdateLociCtrl,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' UpdateLociCtrl ' value ");
274432,562184191,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_RoamService,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' RoamService ' value ");
274432,562186239,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_SavePlmnSelMode,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' SavePlmnSelMode ' value ");
274432,562188287,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_EmergencyCamp,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' EmergencyCamp ' value ");
274432,562190335,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_EnableAcl,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' EnableAcl ' value , range ( 0 , 1 ) ");
274432,562192383,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_IgnoreEmmCause,P_WARNING,swLogPrintf("AT+ECCFG , invalid input ' IgnoreEmmCause ' value ");
274432,562194431,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_18,P_WARNING,swLogPrintf("AT+ECCFG , invalid input parameters ");
274432,562194432,0,0,PLAT_AP,ATCMD_EXEC,devECCFG_19,P_WARNING,swLogPrintf("AT+ECCFG , invalid parameters number: %d ");
274432,562198527,0,0,PLAT_AP,ATCMD_EXEC,devECSTATUS_1,P_WARNING,swLogPrintf("AT+ECSTATUS , invalid input string parameter ");
274432,562200575,0,0,PLAT_AP,ATCMD_EXEC,devECSTATUS_2,P_WARNING,swLogPrintf("AT+ECSTATUS , invalid input string parameter ");
274432,562200576,0,0,PLAT_AP,ATCMD_EXEC,devECSTATUS_3,P_WARNING,swLogPrintf("AT+ECSTATUS , invalid parameters number: %d ");
274432,562204671,0,0,PLAT_AP,ATCMD_EXEC,devECBCINFO_warning_1,P_WARNING,swLogPrintf("AT+ECBCINFO , invalid <mode> set ");
274432,562206719,0,0,PLAT_AP,ATCMD_EXEC,devECBCINFO_warning_2,P_WARNING,swLogPrintf("AT+ECBCINFO , invalid <timeoutS> set ");
274432,562208767,0,0,PLAT_AP,ATCMD_EXEC,devECBCINFO_warning_3,P_WARNING,swLogPrintf("AT+ECBCINFO , invalid <save_for_later> set ");
274432,562210815,0,0,PLAT_AP,ATCMD_EXEC,devECBCINFO_warning_4,P_WARNING,swLogPrintf("AT+ECBCINFO , invalid <max_cell_number> set ");
274432,562212863,0,0,PLAT_AP,ATCMD_EXEC,devECBCINFO_warning_5,P_WARNING,swLogPrintf("AT+ECBCINFO , invalid <report_mode> set ");
274432,562213120,0,0,PLAT_AP,ATCMD_EXEC,devECNASTCFG_tval_w_1,P_WARNING,swLogPrintf("AT CMD , NAS timer cfg , Tid: %d , can ' t set timer value to: %d , should in [ 1 -32 ] ");
274432,562215424,0,0,PLAT_AP,ATCMD_EXEC,devECNASTCFG_tval_w_2,P_WARNING,swLogPrintf("AT CMD , NAS timer cfg , Tid: %d , can ' t get time_val: %d , parmRet: %d ");
274432,562217216,0,0,PLAT_AP,ATCMD_EXEC,devECNASTCFG_try_w_1,P_WARNING,swLogPrintf("AT CMD , NAS timer cfg , Tid: %d , can ' t set try num to: %d , should in [ 1 -5 ] ");
274432,562219520,0,0,PLAT_AP,ATCMD_EXEC,devECNASTCFG_try_w_2,P_WARNING,swLogPrintf("AT CMD , NAS timer cfg , Tid: %d , can ' t get try num to: %d , parmRet: %d ");
274432,562223103,0,0,PLAT_AP,ATCMD_EXEC,devECWIFISCAN_warn0,P_WARNING,swLogPrintf("AT+ECWIFISCAN , invalid <time> set ");
274432,562225151,0,0,PLAT_AP,ATCMD_EXEC,devECWIFISCAN_warn1,P_WARNING,swLogPrintf("AT+ECWIFISCAN , invalid <round> set ");
274432,562227199,0,0,PLAT_AP,ATCMD_EXEC,devECWIFISCAN_warn2,P_WARNING,swLogPrintf("AT+ECWIFISCAN , invalid <maxbssidnum> set ");
274432,562229247,0,0,PLAT_AP,ATCMD_EXEC,devECWIFISCAN_warn3,P_WARNING,swLogPrintf("AT+ECWIFISCAN , invalid <scantimeout> set ");
274432,562231295,0,0,PLAT_AP,ATCMD_EXEC,devECWIFISCAN_warn4,P_WARNING,swLogPrintf("AT+ECWIFISCAN , invalid <priority> set ");
274432,562231808,0,0,PLAT_AP,ATCMD_EXEC,devECWIFISCAN_warn5,P_WARNING,swLogPrintf("AT+ECWIFISCAN , invalid Param Value , time ( %ld ) should NOT less than round ( %d ) * scanTimeOut ( %d ) * 1000 ");
274432,562233344,0,0,PLAT_AP,ATCMD_EXEC,psATO_param_w_2,P_WARNING,swLogPrintf("ATO , not support ATO:%d ");
274432,562235392,0,0,PLAT_AP,ATCMD_EXEC,psATO_state_w_1,P_WARNING,swLogPrintf("ATO , warning , current chanState: %d not right , should be ATC_ONLINE_COMMAND_STATE ");
274432,562237696,0,0,PLAT_AP,ATCMD_EXEC,psATO_func_w_1,P_WARNING,swLogPrintf("ATO , chanId: %d , current chanState: %d , no callback API , can ' t proc ATO ");
274432,562239489,0,0,PLAT_AP,ATCMD_EXEC,gcECURC_warning_1,P_WARNING,swLogPrintf("AT CMD , ECURC , invalid param URC: %s ");
274432,562241536,0,0,PLAT_AP,ATCMD_EXEC,mmCSQ_warn1,P_WARNING,swLogPrintf("devGetExCfgParaSync cmiRc = %d ");
274432,562243584,0,0,PLAT_AP,ATCMD_EXEC,mmCESQ_warn1,P_WARNING,swLogPrintf("devGetExCfgParaSync cmiRc = %d ");
274432,562247679,0,0,PLAT_AP,ATCMD_EXEC,phyECPHYCFG_0,P_WARNING,swLogPrintf("AT+ECPHYCFG , invalid input string parameter ");
274432,562249727,0,0,PLAT_AP,ATCMD_EXEC,phyECPHYCFG_1,P_WARNING,swLogPrintf("AT+ECPHYCFG , invalid input dec parameter ");
274432,562249728,0,0,PLAT_AP,ATCMD_EXEC,phyECPHYCFG_2,P_WARNING,swLogPrintf("AT+ECPHYCFG , the paramNumb %d is wrong ");
274432,562253823,0,0,PLAT_AP,ATCMD_EXEC,psCGDATA_l2p_1,P_WARNING,swLogPrintf("ATCMD: CGDATA , invalid param: <l2p> ");
274432,562253825,0,0,PLAT_AP,ATCMD_EXEC,psCGDATA_l2p_2,P_WARNING,swLogPrintf("ATCMD: CGDATA , not support <l2p> : %s ");
274432,562257919,0,0,PLAT_AP,ATCMD_EXEC,psCGDATA_cid_1,P_WARNING,swLogPrintf("ATCMD: CGDATA , invalid param: <cid> ");
274432,562257920,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_cid_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , cid not right: %d ");
274432,562259968,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_pfid_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , packet filter id not right: %d ");
274432,562262016,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_epid_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , evaluation precedence index not right: %d ");
274432,562264064,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_buf_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , no mem left for size: %d ");
274432,562268159,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_remote_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , remote address not right ");
274432,562270207,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_protId_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , protId not right ");
274432,562272255,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_port_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , local port range not right ");
274432,562274303,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_port_w_2,P_WARNING,swLogPrintf("AT CMD CGTFT , remote port range not right ");
274432,562276351,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_ipsec_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , ipsec not right , can ' t parse ");
274432,562278399,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_ipsec_w_2,P_WARNING,swLogPrintf("AT CMD CGTFT , ipsec not right ");
274432,562280447,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_tos_w_2,P_WARNING,swLogPrintf("AT CMD CGTFT , tos and mask not right ");
274432,562280448,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_ipv6fl_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , can not parse ipv6 fl: %d ");
274432,562284543,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_ipv6fl_w_2,P_WARNING,swLogPrintf("AT CMD CGTFT , ipv6 fl not right ");
274432,562284544,0,0,PLAT_AP,ATCMD_EXEC,psCGTFT_dir_w_1,P_WARNING,swLogPrintf("AT CMD CGTFT , direction not right: %d ");
274432,562288639,0,0,PLAT_AP,ATCMD_EXEC,psCSODCP_cid_1,P_WARNING,swLogPrintf("AT CMD: CSODCP , invalid input CID ");
274432,562290687,0,0,PLAT_AP,ATCMD_EXEC,psCSODCP_length_1,P_WARNING,swLogPrintf("AT CMD: CSODCP , invalid input cpdata_length ");
274432,562292735,0,0,PLAT_AP,ATCMD_EXEC,psCSODCP_cpdate_1,P_WARNING,swLogPrintf("AT CMD: CSODCP , invalid input cpdata ");
274432,562294783,0,0,PLAT_AP,ATCMD_EXEC,psCSODCP_cpdate_2,P_WARNING,swLogPrintf("AT CMD: CSODCP , data length mismatched ");
274432,562296831,0,0,PLAT_AP,ATCMD_EXEC,psCSODCP_RAI_1,P_WARNING,swLogPrintf("AT CMD: CSODCP , invalid input RAI ");
274432,562298879,0,0,PLAT_AP,ATCMD_EXEC,psCSODCP_type_1,P_WARNING,swLogPrintf("AT CMD: CSODCP , invalid input: <type_of_user_data> ");
274432,562300927,0,0,PLAT_AP,ATCMD_EXEC,psECSENDDATA_cid_1,P_WARNING,swLogPrintf("AT CMD: ECSENDDATA , invalid input CID ");
274432,562302975,0,0,PLAT_AP,ATCMD_EXEC,psECSENDDATA_length_1,P_WARNING,swLogPrintf("AT CMD: ECSENDDATA , invalid input data_length ");
274432,562305023,0,0,PLAT_AP,ATCMD_EXEC,psECSENDDATA_date_1,P_WARNING,swLogPrintf("AT CMD: ECSENDDATA , invalid input data ");
274432,562307071,0,0,PLAT_AP,ATCMD_EXEC,psECSENDDATA_date_2,P_WARNING,swLogPrintf("AT CMD: ECSENDDATA , data length mismatched ");
274432,562309119,0,0,PLAT_AP,ATCMD_EXEC,psECSENDDATA_RAI_1,P_WARNING,swLogPrintf("AT CMD: ECSENDDATA , invalid input RAI ");
274432,562311167,0,0,PLAT_AP,ATCMD_EXEC,psECSENDDATA_type_1,P_WARNING,swLogPrintf("AT CMD: ECSENDDATA , invalid input: <type_of_user_data> ");
274432,562313215,0,0,PLAT_AP,ATCMD_EXEC,simECSIMCFG_1,P_WARNING,swLogPrintf("AT+ECSIMCFG , invalid input string parameter ");
274432,562315263,0,0,PLAT_AP,ATCMD_EXEC,simECSIMCFG_2,P_WARNING,swLogPrintf("AT+ECSIMCFG , invalid input ' SimSimulator ' value ");
274432,562317311,0,0,PLAT_AP,ATCMD_EXEC,simECSIMCFG_3,P_WARNING,swLogPrintf("AT+ECSIMCFG , invalid input ' SoftSim ' value ");
274432,562319359,0,0,PLAT_AP,ATCMD_EXEC,simECSIMCFG_4,P_WARNING,swLogPrintf("AT+ECSIMCFG , invalid input ' UsimPowerSave ' value ");
274432,562321407,0,0,PLAT_AP,ATCMD_EXEC,simECSIMCFG_5,P_WARNING,swLogPrintf("AT+ECSIMCFG , invalid input ' SimPresenceDetect ' value ");
274432,562323455,0,0,PLAT_AP,ATCMD_EXEC,simECSIMCFG_6,P_WARNING,swLogPrintf("AT+ECSIMCFG , invalid input ' SimSlot ' value ");
274432,562323456,0,0,PLAT_AP,ATCMD_EXEC,simECSIMCFG_7,P_WARNING,swLogPrintf("AT+ECSIMCFG , invalid parameters number: %d ");
274432,562327551,0,0,PLAT_AP,ATCMD_EXEC,simCPOL_1,P_WARNING,swLogPrintf("AT+CPOL , invalid input ' index ' value ");
274432,562329599,0,0,PLAT_AP,ATCMD_EXEC,simCPOL_2,P_WARNING,swLogPrintf("AT+CPOL , invalid input ' format ' value ");
274432,562331647,0,0,PLAT_AP,ATCMD_EXEC,simCPOL_3,P_WARNING,swLogPrintf("AT+CPOL , invalid input ' oper ' value ");
274432,562333695,0,0,PLAT_AP,ATCMD_EXEC,simCPOL_4,P_WARNING,swLogPrintf("AT+CPOL , invalid input ' GSMAcT ' value ");
274432,562335743,0,0,PLAT_AP,ATCMD_EXEC,simCPOL_5,P_WARNING,swLogPrintf("AT+CPOL , invalid input ' GSM Compact AcT ' value ");
274432,562337791,0,0,PLAT_AP,ATCMD_EXEC,simCPOL_6,P_WARNING,swLogPrintf("AT+CPOL , invalid input ' UTRAN AcT ' value ");
274432,562339839,0,0,PLAT_AP,ATCMD_EXEC,simCPOL_7,P_WARNING,swLogPrintf("AT+CPOL , invalid input ' EUTRAN AcT ' value ");
274432,562341887,0,0,PLAT_AP,ATCMD_EXEC,simCPOL_8,P_WARNING,swLogPrintf("AT+CPOL , operator name with format non-numeric input not allowed ");
274432,562341888,0,0,PLAT_AP,ATCMD_EXEC,smsCMSS_pdu_warn_1,P_WARNING,swLogPrintf("AT CMD , +CMSS , another SMS is ongoing , chanId: %d ");
274432,562343936,0,0,PLAT_AP,ATCMD_EXEC,smsCMSS_warn_2,P_WARNING,swLogPrintf("AT CMD , +CMSS , another SMS is ongoing , chanId: %d ");
274432,562345984,0,0,PLAT_AP,ATCMD_EXEC,smsCMGS_pdu_warn_1,P_WARNING,swLogPrintf("AT CMD , +CMGS , another SMS is ongoing , chanId: %d ");
274432,562348032,0,0,PLAT_AP,ATCMD_EXEC,smsCMGS_text_warn_1,P_WARNING,swLogPrintf("AT CMD , +CMGS , another SMS is ongoing , chanId: %d ");
274432,562350080,0,0,PLAT_AP,ATCMD_EXEC,smsCMGC_pdu_warn_1,P_WARNING,swLogPrintf("AT CMD , +CMGC , another SMS is ongoing , chanId: %d ");
274432,562352128,0,0,PLAT_AP,ATCMD_EXEC,smsCMGC_text_warn_1,P_WARNING,swLogPrintf("AT CMD , +CMGC , another SMS is ongoing , chanId: %d ");
274432,562354176,0,0,PLAT_AP,ATCMD_EXEC,smsCMGW_warn_1,P_WARNING,swLogPrintf("AT CMD , +CMGW , another SMS is ongoing , chanId: %d ");
274432,562356480,0,0,PLAT_AP,ATCMD_EXEC,smsCMGW_warn_2,P_WARNING,swLogPrintf("AT CMD , +CMGW , destination address length:%d , destination address type: %d ");
274432,562358272,0,0,PLAT_AP,ATCMD_EXEC,smsCMGW_warn_3,P_WARNING,swLogPrintf("AT CMD , +CMGW , another SMS is ongoing , chanId: %d ");
274432,562360320,0,0,PLAT_AP,ATCMD_EXEC,smsCMGW_warn_4,P_WARNING,swLogPrintf("AT CMD , +CMGW EXEC need input PDU length in PDU mode , chanId: %d ");
274432,562362368,0,0,PLAT_AP,ATCMD_EXEC,smsCNMA_pdu_warn_1,P_WARNING,swLogPrintf("AT CMD , +CMGS , another SMS ACK is ongoing , chanId: %d ");
274432,562365696,0,0,PLAT_AP,ATCMD_EXEC,smsCSMP_value_1,P_VALUE,swLogPrintf("AT CMD , CSMP from SIM VPF: %d , %d ; PID: %d , %d ; dcs: %d , %d ");
274432,562366464,0,0,PLAT_AP,ATCMD_EXEC,smsECSMSSEND_warn_1,P_WARNING,swLogPrintf("AT CMD , +ECSMSSEND , another SMS is ongoing , chanId: %d ");
274432,562370559,0,0,PLAT_AP,ATCMD_EXEC,smsECCMGS_warn_1,P_WARNING,swLogPrintf("AT CMD , +ECCMGS , donot support PDU mode ");
274432,562371072,0,0,PLAT_AP,ATCMD_EXEC,smsECCMGS_warn_2,P_WARNING,swLogPrintf("AT CMD , +ECCMGS , msg_ref :%d , msg_max :%d , msg_seq :%d ");
274432,562372608,0,0,PLAT_AP,ATCMD_EXEC,smsECCMGS_warn_3,P_WARNING,swLogPrintf("AT CMD , +ECCMGS , another SMS is ongoing , chanId: %d ");
274432,562376703,0,0,PLAT_AP,ATCMD_EXEC,smsECCMGS_warn_4,P_WARNING,swLogPrintf("AT CMD , +ECCMGS , CMS_SMS_SUCC ");
274432,562378751,0,0,PLAT_AP,ATCMD_EXEC,smsECCMGR_warn_1,P_WARNING,swLogPrintf("AT CMD , +ECCMGR , donot support PDU mode ");
274432,562379008,0,0,PLAT_AP,ATCMD_EXEC,mmExCREGInd_1,P_VALUE,swLogPrintf("ATEC , CREG report mode: %d , but REG info changed type: %d , don ' t need to report CREG ");
274432,562380800,0,0,PLAT_AP,ATCMD_EXEC,psCGCONTRDPReadCnf_1,P_WARNING,swLogPrintf("AT PS , CID: %d , only ipv6 interface address , not print out ");
274432,562382848,0,0,PLAT_AP,ATCMD_EXEC,psCGCONTRDPReadCnf_2,P_WARNING,swLogPrintf("AT PS , ipv4 addr should not be NULL :%d ");
274432,562384896,0,0,PLAT_AP,ATCMD_EXEC,psCGCONTRDPReadCnf_3,P_WARNING,swLogPrintf("AT PS , ipv6 addr should not be NULL :%d ");
274432,562387200,0,0,PLAT_AP,ATCMD_EXEC,psCEREGInd_1,P_VALUE,swLogPrintf("ATEC , CEREG report mode: %d , but PS info changed type: %d , don ' t need to report CEREG ");
274432,562389248,0,0,PLAT_AP,ATCMD_EXEC,psCEREGInd_2,P_WARNING,swLogPrintf("ATEC , CEREG report mode: %d , PS info changed type: %d , T3324_T3412_EXT_CHANGE_REPORT is disabled by user , don ' t need to report CEREG ");
274432,562391296,0,0,PLAT_AP,ATCMD_EXEC,smsCMSSCnf_warn_1,P_WARNING,swLogPrintf("AT CMD , +CMSS , reqHandle:%d , RC:%d ");
274432,562393600,0,0,PLAT_AP,ATCMD_EXEC,atcSendRespStr_len_warn_1,P_WARNING,swLogPrintf("AT CMD , RIL response length too long , %d + %d > MAX: %d ");
274432,562395904,0,0,PLAT_AP,ATCMD_EXEC,atcSendRespStr_len_warn_2,P_WARNING,swLogPrintf("AT CMD , RIL response length too long , %d + %d + %d > MAX: %d ");
274432,562399231,0,0,PLAT_AP,ATCMD_EXEC,atcSendRespStr_warn_1,P_WARNING,swLogPrintf("AT CMD , RIL response failed , send final: \ r \ \nERROR \r \n ");
274432,562399744,0,0,PLAT_AP,ATCMD_EXEC,atcSendRespStr_len_warn_3,P_WARNING,swLogPrintf("AT CMD , RIL response length too long , %d + %d + 1 > MAX: %d ");
274432,562403327,0,0,PLAT_AP,ATCMD_EXEC,atcSendRespStr_warn_2,P_WARNING,swLogPrintf("AT CMD , RIL last response failed , send final: \ r \ \nERROR \r \n ");
274432,562403329,0,0,PLAT_AP,ATCMD_EXEC,atcSendInfoText_cont_1,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
274432,562405377,0,0,PLAT_AP,ATCMD_EXEC,atcSendInfoText_1,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
274432,562407425,0,0,PLAT_AP,ATCMD_EXEC,atcSendInfoText_2,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
274432,562409473,0,0,PLAT_AP,ATCMD_EXEC,atcSendInfoText_3,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
274432,562411521,0,0,PLAT_AP,ATCMD_EXEC,atcSendUrcResult_1,P_SIG,swLogPrintf("AT CMD , URC: %s ");
274432,562413568,0,0,PLAT_AP,ATCMD_EXEC,atcSendUrcResult_2,P_INFO,swLogPrintf("AT CMD , chanId: %d is suppressed , not need to send the URC ");
274432,562415617,0,0,PLAT_AP,ATCMD_EXEC,atcSendUrcResult_str_1,P_SIG,swLogPrintf("AT CMD , URC: %s ");
274432,562417665,0,0,PLAT_AP,ATCMD_EXEC,atcSendUrcResult_str_2,P_SIG,swLogPrintf("AT CMD , URC: %s ");
274432,562419968,0,0,PLAT_AP,ATCMD_EXEC,atcSendResultCode_warning_1,P_WARNING,swLogPrintf("AT CMD , chanId: %d , result code: %d is suppressed , not need to send the result code ");
274432,562421761,0,0,PLAT_AP,ATCMD_EXEC,atcSendResultCode_1,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
274432,562423809,0,0,PLAT_AP,ATCMD_EXEC,atcSendResultCode_2,P_SIG,swLogPrintf("AT CMD , RESP: %s ");
274432,562426368,0,0,PLAT_AP,ATCMD_EXEC,atcReply_warning_1,P_WARNING,swLogPrintf("AT CMD , chanId: %d , Tid:%d / %d , guarding timer is not running , maybe expired before. ");
274432,562427905,0,0,PLAT_AP,ATCMD_EXEC,atcReply_raw_cont_1,P_SIG,swLogPrintf("AT CMD , RAW CONTINUE RESP: %s ");
274432,562429953,0,0,PLAT_AP,ATCMD_EXEC,atcReply_raw_1,P_SIG,swLogPrintf("AT CMD , RAW RESP: %s ");
274432,562432512,0,0,PLAT_AP,ATCMD_EXEC,atcPduReply_warning_1,P_WARNING,swLogPrintf("AT CMD , chanId: %d , Tid:%d / %d , guarding timer is not running , maybe expired before. ");
274432,562434049,0,0,PLAT_AP,ATCMD_EXEC,atcPduReply_raw_cont_1,P_SIG,swLogPrintf("AT CMD , PDU RAW CONTINUE RESP: %s ");
274432,562436097,0,0,PLAT_AP,ATCMD_EXEC,atcPduReply_raw_1,P_SIG,swLogPrintf("AT CMD , PDU RAW RESP: %s ");
274432,562438400,0,0,PLAT_AP,ATCMD_EXEC,smsEncodeConcatenatedSms8bit_warn_1,P_WARNING,swLogPrintf("AT CMD , UDH is illegal: maxNum:%d , seqNum:%d ");
274432,562440192,0,0,PLAT_AP,ATCMD_EXEC,smsPduEncodeUDH_warn_1,P_WARNING,swLogPrintf("UDH_IEI: %d is not support ");
274432,562442240,0,0,PLAT_AP,ATCMD_EXEC,smsPduDecodeUDH_warn_1,P_WARNING,swLogPrintf("UDH_IEI: %d is not support ");
274432,562445056,0,0,PLAT_AP,ATCMD_EXEC,smsSendTextSms_1,P_INFO,swLogPrintf("SC address Type:%d , address Length:%d , bcd [ 0 ] :%c , bcd [ 1 ] :%c ");
274432,562447104,0,0,PLAT_AP,ATCMD_EXEC,smsGetSrvCenterAddr_1,P_INFO,swLogPrintf("SC address present , Type:%d , Address Len:%d , bcd [ 0 ] :%c , bcd [ 1 ] :%c ");
274432,562448384,0,0,PLAT_AP,ATCMD_EXEC,smsSendSms_warn_1,P_WARNING,swLogPrintf("AT CMD , AT+CMGC does not support TEXT mode: %d ");
276480,566235135,0,0,PLAT_AP,ATCMD_SOCK,nmSKTSEND_4_1,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566237183,0,0,PLAT_AP,ATCMD_SOCK,nmSKTSEND_4,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566237952,0,0,PLAT_AP,ATCMD_SOCK,nmSKTCONNECT_1,P_INFO,swLogPrintf("%d.%d.%d.%d ");
276480,566241279,0,0,PLAT_AP,ATCMD_SOCK,nmSKTCONNECT_2,P_INFO,swLogPrintf("% ""x "":% ""x "":% ""x "":% ""x "":% ""x "":% ""x "":% ""x "":% ""x ");
276480,566243327,0,0,PLAT_AP,ATCMD_SOCK,nmSKTCONNECT_3,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566244096,0,0,PLAT_AP,ATCMD_SOCK,nmSKTBIND_1,P_INFO,swLogPrintf("%d.%d.%d.%d ");
276480,566247423,0,0,PLAT_AP,ATCMD_SOCK,nmSKTBIND_2,P_INFO,swLogPrintf("% ""x "":% ""x "":% ""x "":% ""x "":% ""x "":% ""x "":% ""x "":% ""x ");
276480,566249471,0,0,PLAT_AP,ATCMD_SOCK,nmSKTBIND_3,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566251519,0,0,PLAT_AP,ATCMD_SOCK,nmSKTSTATUS_1,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566253567,0,0,PLAT_AP,ATCMD_SOCK,nmSKTDELETE_1,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566255615,0,0,PLAT_AP,ATCMD_SOCK,nmECSOST_1,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566257663,0,0,PLAT_AP,ATCMD_SOCK,nmECSOSTF_1,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566259711,0,0,PLAT_AP,ATCMD_SOCK,nmECSOSD_1,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566261759,0,0,PLAT_AP,ATCMD_SOCK,nmECSRVSOTCPSENDCLT_1,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566263807,0,0,PLAT_AP,ATCMD_SOCK,nmECSRVSOTCPSENDCLT_2,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566265855,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_1,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566267903,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_2,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566269951,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_3,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566271999,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_4,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566274047,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_5,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566276095,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_6,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566278143,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_7,P_WARNING,swLogPrintf("the hex string data is not valid ");
276480,566280191,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_8,P_WARNING,swLogPrintf("send fail , malloc buffer fail ");
276480,566280192,0,0,PLAT_AP,ATCMD_SOCK,nmAtSocketSend_9,P_WARNING,swLogPrintf("nmAtSocketSend unknow req id %u ");
276480,566282240,0,0,PLAT_AP,ATCMD_SOCK,nmSocketSendCancel_1,P_WARNING,swLogPrintf("nmSocketSendCancel , unknown source %u ");
276480,566284288,0,0,PLAT_AP,ATCMD_SOCK,nmSocketSendAtReply_1,P_WARNING,swLogPrintf("nmSocketSendAtReply , unknown source %u ");
276480,566286848,0,0,PLAT_AP,ATCMD_SOCK,nmSntpInd_1,P_INFO,swLogPrintf("nmSntpInd success , aotu sync %u , time %u , us %u ");
276480,566290431,0,0,PLAT_AP,ATCMD_SOCK,nmSKTGetInd_1,P_ERROR,swLogPrintf("nmSKTGetInd invalid paras ");
276480,566292479,0,0,PLAT_AP,ATCMD_SOCK,nmSKTGetInd_2,P_ERROR,swLogPrintf("nmSKTGetInd malloc fail ");
276480,566294527,0,0,PLAT_AP,ATCMD_SOCK,nmSKTGetInd_3,P_ERROR,swLogPrintf("nmSKTGetInd malloc fail ");
276480,566296575,0,0,PLAT_AP,ATCMD_SOCK,nmSKTGetInd_4,P_ERROR,swLogPrintf("nmSKTGetInd dl pdu is invalid ");
276480,566296576,0,0,PLAT_AP,ATCMD_SOCK,nmSKTGetInd_5,P_ERROR,swLogPrintf("nmSKTGetInd invalid primId %d ");
276480,566298624,0,0,PLAT_AP,ATCMD_SOCK,nmSKTGetCnf_1,P_ERROR,swLogPrintf("nmSKTGetCnf invalid primId %d ");
276480,566300672,0,0,PLAT_AP,ATCMD_SOCK,nmSKTGetCnf_2,P_ERROR,swLogPrintf("nmSKTGetCnf invalid primId %d ");
276480,566302720,0,0,PLAT_AP,ATCMD_SOCK,nmSKTGetCnf_3,P_ERROR,swLogPrintf("nmSKTGetCnf invalid result %d ");
276480,566306815,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocInd_1,P_ERROR,swLogPrintf("nmEcSocInd invalid paras ");
276480,566308863,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocInd_2,P_ERROR,swLogPrintf("nmEcSocInd malloc buf fail ");
276480,566310911,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocInd_3,P_ERROR,swLogPrintf("nmEcSocInd malloc strBuf fail ");
276480,566312959,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocInd_4,P_ERROR,swLogPrintf("nmEcSocInd atHexToString fail ");
276480,566315007,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocInd_6,P_ERROR,swLogPrintf("nmEcSocInd dl pdu is invalid ");
276480,566315008,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocInd_5,P_ERROR,swLogPrintf("nmEcSocInd invalid primId %d ");
276480,566319103,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCnf_1,P_ERROR,swLogPrintf("nmEcSocCnf APPL_ECSOC_CREATE_CNF invalid paras ");
276480,566321151,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCnf_2,P_ERROR,swLogPrintf("nmEcSocCnf APPL_ECSOC_UDPSEND_CNF invalid paras ");
276480,566323199,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCnf_3,P_ERROR,swLogPrintf("nmEcSocCnf APPL_ECSOC_TCPSEND_CNF invalid paras ");
276480,566325247,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCnf_4,P_ERROR,swLogPrintf("nmEcSocCnf APPL_ECSOC_GNMI_CNF invalid paras ");
276480,566327295,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCnf_5,P_ERROR,swLogPrintf("nmEcSocCnf malloc buf fail ");
276480,566329343,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCnf_6,P_ERROR,swLogPrintf("nmEcSocCnf malloc strBuf fail ");
276480,566331391,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCnf_7,P_ERROR,swLogPrintf("nmEcSocCnf atHexToString fail ");
276480,566331904,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCn_11,P_INFO,swLogPrintf("nmEcSocCnf read socketId %d , lenghth %d , remaininglen %d ");
276480,566335487,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCn_8,P_ERROR,swLogPrintf("nmEcSocCnf APPL_ECSOC_READ_CNF invalid paras ");
276480,566335488,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCnf_9,P_ERROR,swLogPrintf("nmSKTGetCnf invalid primId %d ");
276480,566339583,0,0,PLAT_AP,ATCMD_SOCK,nmEcSocCn_10,P_ERROR,swLogPrintf("nmEcSocCnf invalid paras ");
276480,566341631,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocInd_1,P_ERROR,swLogPrintf("nmEcSrvSocInd invalid paras ");
276480,566343679,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocInd_2,P_WARNING,swLogPrintf("nmEcSrvSocInd malloc fail ");
276480,566345727,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocInd_3,P_WARNING,swLogPrintf("nmEcSrvSocInd malloc fail ");
276480,566347775,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocInd_dlpdu_check_1,P_WARNING,swLogPrintf("nmEcSrvSocInd dl pdu invalid ");
276480,566347776,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocInd_4,P_ERROR,swLogPrintf("nmEcSrvSocInd invalid primId %d ");
276480,566349824,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocCnf_1,P_ERROR,swLogPrintf("nmEcSrvSocCnf invalid primId %d ");
276480,566353919,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocCnf_2,P_ERROR,swLogPrintf("nmEcSrvSocCnf invalid paras ");
276480,566353920,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocCnf_3,P_ERROR,swLogPrintf("nmEcSrvSocCnf invalid primId %d ");
276480,566355968,0,0,PLAT_AP,ATCMD_SOCK,nmEcSrvSocCnf_4,P_ERROR,swLogPrintf("nmEcSrvSocCnf invalid result %d ");
276480,566358016,0,0,PLAT_AP,ATCMD_SOCK,AtecSktSendCnf_1,P_INFO,swLogPrintf("AtecSktSendCnf invalid primId %d ");
276480,566360064,0,0,PLAT_AP,ATCMD_SOCK,AtecSktSendCnf_2,P_INFO,swLogPrintf("AtecSktSendCnf invalid primId %d ");
276480,566362112,0,0,PLAT_AP,ATCMD_SOCK,AtecSktSendCnf_3,P_INFO,swLogPrintf("AtecSktSendCnf invalid result %d ");
276480,566364672,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_1,P_INFO,swLogPrintf("AtecSocSendCnf primId %u , result %u , errCode %u ");
276480,566368255,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_2,P_INFO,swLogPrintf("AtecSocSendCnf APPL_ECSOC_CREATE_CNF invalid responseBody ");
276480,566370303,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_3,P_INFO,swLogPrintf("AtecSocSendCnf APPL_ECSOC_UDPSEND_CNF invalid responseBody ");
276480,566372351,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_4,P_INFO,swLogPrintf("AtecSocSendCnf APPL_ECSOC_READ_CNF invalid responseBody ");
276480,566374399,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_5,P_INFO,swLogPrintf("AtecSocSendCnf APPL_ECSOC_TCPSEND_CNF invalid responseBody ");
276480,566376447,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_6,P_INFO,swLogPrintf("AtecSocSendCnf APPL_ECSOC_GNMI_CNF invalid responseBody ");
276480,566376448,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_7,P_INFO,swLogPrintf("AtecSocSendCnf invalid primId %d ");
276480,566378496,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_8,P_INFO,swLogPrintf("AtecSocSendCnf invalid primId %d ");
276480,566380544,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendCnf_9,P_INFO,swLogPrintf("AtecSocSendCnf invalid result %d ");
276480,566383104,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendCnf_1,P_INFO,swLogPrintf("atecSrvSocSendCnf primId %u , result %u , errCode %u ");
276480,566384640,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendCnf_2,P_INFO,swLogPrintf("atecSrvSocSendCnf invalid primId %d ");
276480,566386688,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendCnf_3,P_INFO,swLogPrintf("AtecSocSendCnf invalid primId %d ");
276480,566388736,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendCnf_4,P_INFO,swLogPrintf("AtecSocSendCnf invalid result %d ");
276480,566391040,0,0,PLAT_AP,ATCMD_SOCK,AtecSktSendInd_1,P_INFO,swLogPrintf("AtecSktSendInd invalid indBodyLen %u , indBody 0x%x ");
276480,566392832,0,0,PLAT_AP,ATCMD_SOCK,AtecSktSendInd_2,P_INFO,swLogPrintf("AtecSktSendInd invalid primId %d ");
276480,566395136,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_1,P_INFO,swLogPrintf("AtecSktSendInd invalid indBodyLen %u , indBody 0x%x ");
276480,566396928,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_2,P_INFO,swLogPrintf("AtecSktSendInd primId %u ");
276480,566401023,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_3,P_INFO,swLogPrintf("AtecSocSendInd APPL_ECSOC_NMI_IND invalid indBody ");
276480,566403071,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_4,P_INFO,swLogPrintf("AtecSocSendInd APPL_ECSOC_CLOSE_IND invalid indBody ");
276480,566405119,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_5,P_INFO,swLogPrintf("AtecSocSendInd APPL_ECSOC_QUERY_RESULT_IND invalid indBody ");
276480,566407167,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_6,P_INFO,swLogPrintf("AtecSocSendInd APPL_ECSOC_GNMIE_IND invalid indBody ");
276480,566409215,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_7,P_INFO,swLogPrintf("AtecSocSendInd APPL_ECSOC_ULSTATUS_IND invalid indBody ");
276480,566411263,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_9,P_INFO,swLogPrintf("AtecSocSendInd APPL_ECSOC_STATUS_IND invalid indBody ");
276480,566413311,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_10,P_INFO,swLogPrintf("AtecSocSendInd APPL_ECSOC_CONNECTED_IND invalid indBody ");
276480,566413312,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendInd_8,P_INFO,swLogPrintf("AtecSocSendInd invalid primId %d ");
276480,566415616,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_1,P_INFO,swLogPrintf("atecSrvSocSendInd invalid indBodyLen %u , indBody 0x%x ");
276480,566417408,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_2,P_INFO,swLogPrintf("atecSrvSocSendInd primId %u ");
276480,566421503,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_3,P_INFO,swLogPrintf("atecSrvSocSendInd APPL_ECSRVSOC_CREATE_TCP_LISTEN_IND invalid indBody ");
276480,566423551,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_4,P_INFO,swLogPrintf("atecSrvSocSendInd APPL_ECSRVSOC_SERVER_ACCEPT_CLIENT_IND invalid indBody ");
276480,566425599,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_5,P_INFO,swLogPrintf("atecSrvSocSendInd APPL_ECSRVSOC_STATUS_TCP_LISTEN_IND invalid indBody ");
276480,566427647,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_6,P_INFO,swLogPrintf("atecSrvSocSendInd APPL_ECSRVSOC_RECEIVE_TCP_CLIENT_IND invalid indBody ");
276480,566429695,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_7,P_INFO,swLogPrintf("atecSrvSocSendInd APPL_ECSRVSOC_CLOSE_TCP_CONNECTION_IND invalid indBody ");
276480,566431743,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_8,P_INFO,swLogPrintf("atecSrvSocSendInd APPL_ECSRVSOC_SERVER_REFUSE_CLIENT_IND invalid indBody ");
276480,566431744,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocSendInd_9,P_INFO,swLogPrintf("atecSrvSocSendInd invalid primId %d ");
276480,566435839,0,0,PLAT_AP,ATCMD_SOCK,nmSocketNetworkRecvInd_1,P_INFO,swLogPrintf("nmSocketNetworkRecvInd invalid buf or len ");
276480,566436096,0,0,PLAT_AP,ATCMD_SOCK,nmSocketNetworkRecvInd_2,P_INFO,swLogPrintf("nmSocketNetworkRecvInd fd %d , len %d ");
276480,566438656,0,0,PLAT_AP,ATCMD_SOCK,nmSocketNetworkRecvInd_3,P_WARNING,swLogPrintf("nmSocketNetworkRecvInd fd %d , len %d , ecsoNMind %d is too long than control header %d ");
276480,566441983,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleSendReq_1,P_INFO,swLogPrintf("AtecSocketHandleSendReq request point is null ");
276480,566444031,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleSendReq_2,P_INFO,swLogPrintf("AtecSocketHandleSendReq can not get the socketatcmd ");
276480,566444032,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleSendReq_3,P_INFO,swLogPrintf("AtecSocketHandleSendReq the seq socket %d is not atskt ");
276480,566446080,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleSendReq_4,P_INFO,swLogPrintf("AtecSocketHandleSendReq the seq socket %d is not connected ");
276480,566448128,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleSendReq_5,P_INFO,swLogPrintf("AtecSocketHandleSendReq send packet success %u ");
276480,566452223,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleSendReq_6,P_INFO,swLogPrintf("AtecSocketHandleSendReq send fail ");
276480,566454271,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleSendReq_7,P_INFO,swLogPrintf("AtecSocketHandleSendReq invalid sendLen param ");
276480,566456319,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleCreateReq_1,P_INFO,swLogPrintf("AtecSocketHandleCreateReq request point is null ");
276480,566458367,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleCreateReq_2,P_INFO,swLogPrintf("AtecSocketHandleCreateReq atskt is full ");
276480,566460415,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleCreateReq_3,P_INFO,swLogPrintf("AtecSocketHandleCreateReq create socket fail ");
276480,566462463,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleBindReq_1,P_INFO,swLogPrintf("AtecSocketHandleBindReq request point is null ");
276480,566464511,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleBindReq_2,P_INFO,swLogPrintf("AtecSocketHandleBindReq can not get the socketatcmd ");
276480,566464512,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleBindReq_4,P_INFO,swLogPrintf("AtecSocketHandleBindReq the socket fd %d is not atskt ");
276480,566468607,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleConnectReq_1,P_INFO,swLogPrintf("AtecSocketHandleConnectReq request point is null ");
276480,566470655,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleConnectReq_2,P_INFO,swLogPrintf("AtecSocketHandleConnectReq can not get the socketatcmd ");
276480,566470656,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleConnectReq_4,P_INFO,swLogPrintf("AtecSocketHandleConnectReq the seq socket %d is not atskt ");
276480,566472704,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleConnectReq_5,P_INFO,swLogPrintf("AtecSocketHandleConnectReq the seq socket %d is not init and type is not dgram ");
276480,566476799,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleConnectReq_6,P_INFO,swLogPrintf("AtecSocketHandleConnectReq connect success ");
276480,566477056,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleConnectReq_7,P_INFO,swLogPrintf("AtecSocketHandleConnectReq connect is oning , fd %d , current tick %u ");
276480,566480895,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleConnectReq_8,P_INFO,swLogPrintf("AtecSocketHandleConnectReq connect fail ");
276480,566482943,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleDeleteReq_1,P_INFO,swLogPrintf("AtecSocketHandleDeleteReq request point is null ");
276480,566484991,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleDeleteReq_2,P_INFO,swLogPrintf("AtecSocketHandleDeleteReq can not get the socketatcmd ");
276480,566487039,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleDeleteReq_3,P_INFO,swLogPrintf("AtecSocketHandleDeleteReq close socket success ");
276480,566487040,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleDeleteReq_4,P_INFO,swLogPrintf("AtecSocketHandleDeleteReq socket fd %d is not atskt ");
276480,566491135,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleStatusReq_1,P_INFO,swLogPrintf("AtecSocketHandleStatusReq request point is null ");
276480,566493183,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleStatusReq_2,P_INFO,swLogPrintf("AtecSocketHandleStatusReq can not get the socketatcmd ");
276480,566493184,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleStatusReq_3,P_INFO,swLogPrintf("AtecSocketHandleStatusReq socket %d is not atskt ");
276480,566495488,0,0,PLAT_AP,ATCMD_SOCK,atecEcSocReducePublicDlBufferUsage_0,P_WARNING,swLogPrintf("dlBuffTotalUsage:%d , free len:%d ");
276480,566497536,0,0,PLAT_AP,ATCMD_SOCK,atecPubSocReduceDlBufferUsage_0,P_INFO,swLogPrintf("Reduce: TotalLen:%d , InputLen:%d ");
276480,566499584,0,0,PLAT_AP,ATCMD_SOCK,atecPubSocAddDlBufferUsage_0,P_INFO,swLogPrintf("Add: TotalLen:%d , InputLen:%d ");
276480,566501376,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocRemoveDlList_1,P_INFO,swLogPrintf("AtecEcSocRemoveDlList reduce DL private usage buffer %u ");
276480,566503424,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocRemoveDlList_2,P_INFO,swLogPrintf("AtecEcSocRemoveDlList reduce DL public usage buffer %u ");
276480,566507519,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocAddDlList_1,P_INFO,swLogPrintf("AtecEcSocAddDlList parameter invalid ");
276480,566509567,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocAddDlList_2,P_INFO,swLogPrintf("AtecEcSocAddDlList parameter invalid ");
276480,566511615,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendUlStatusInd_1,P_INFO,swLogPrintf("AtecSocSendUlStatusInd parameter invalid , no need send indicate ");
276480,566512128,0,0,PLAT_AP,ATCMD_SOCK,AtecSocSendUlStatusInd_2,P_INFO,swLogPrintf("AtecSocSendUlStatusInd send UL status indicate socketid %u , sequence %u , status %u ");
276480,566515711,0,0,PLAT_AP,ATCMD_SOCK,atecEcSocAddDlContext_1,P_INFO,swLogPrintf("atecEcSocAddDlContext parameter invalid ");
276480,566517759,0,0,PLAT_AP,ATCMD_SOCK,atecEcSocAddDlContext_2,P_INFO,swLogPrintf("atecEcSocAddDlContext malloc DL buffer fail ");
276480,566518016,0,0,PLAT_AP,ATCMD_SOCK,atecEcSocAddDlContext_22,P_SIG,swLogPrintf("sock %d add recv length %u into dl list ");
276480,566519808,0,0,PLAT_AP,ATCMD_SOCK,atecEcSocAddDlContext_3,P_SIG,swLogPrintf("atecEcSocAddDlContext add dl packet to DL list %u ");
276480,566523903,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_1,P_INFO,swLogPrintf("AtecEcSocProcessDlData parameter invalid ");
276480,566524160,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_2,P_WARNING,swLogPrintf("AtecEcSocProcessDlData reach public DL resource , has use %u or has use num %u ");
276480,566527999,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_3,P_WARNING,swLogPrintf("AtecEcSocProcessDlData reach private DL buffer size or num max , discard this packet ");
276480,566530047,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_4,P_INFO,swLogPrintf("AtecEcSocProcessDlData modset is mode 0 ");
276480,566530304,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_5,P_INFO,swLogPrintf("AtecEcSocProcessDlData control header len %d is too long than %d ");
276480,566532096,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_8,P_SIG,swLogPrintf("AtecEcSocProcessDlData send a NMI indication %u , mode 1 or mode 2 ");
276480,566536191,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_9,P_INFO,swLogPrintf("AtecEcSocProcessDlData malloc DL buffer fail ");
276480,566536192,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_10,P_SIG,swLogPrintf("AtecEcSocProcessDlData add dl packet to DL list %u ");
276480,566538496,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_11,P_INFO,swLogPrintf("AtecEcSocProcessDlData control header len %d is too long than %d ");
276480,566540288,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_14,P_SIG,swLogPrintf("AtecEcSocProcessDlData send a NMI indication %u , mode 1 or mode 2 ");
276480,566544383,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessDlData_15,P_INFO,swLogPrintf("AtecEcSocProcessDlData invalid mode set ");
276480,566546431,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_1,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList parameter invalid ");
276480,566548479,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_2,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList the udp UL req is not a segment ");
276480,566548736,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_3,P_WARNING,swLogPrintf("AtecEcSocProcessUdpUlList the socket %d sequence %u is reusing ");
276480,566552575,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_4,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlListfind the correct ullist ");
276480,566554623,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_5,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList repeat segmentId ");
276480,566556671,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_6,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList segmentNum not match ");
276480,566557184,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_7,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlListfind can not find the adapt ullist , sequence %u , segmentind %u , segmentnum %u ");
276480,566559232,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_8,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList insert a new segment id %u , segment num %u , sequence %u ");
276480,566562815,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_9,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList malloc UL data buffer fail ");
276480,566564863,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_10,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList malloc UL list fail ");
276480,566565376,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_11,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlListfind find the adapt ullist , sequence %u , segmentind %u , segmentnum %u ");
276480,566568959,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_12,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList remote info is not correct ");
276480,566569472,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_13,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlListfind find the adapt ullist and not the last segment , sequence %u , segmentind %u , segmentnum %u ");
276480,566571520,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_14,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList insert a new segment id %u , segment num %u , sequence %u ");
276480,566575103,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_15,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList malloc ul data buffer fail ");
276480,566575616,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_16,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlListfind find the adapt ullist and is the last segment , sequence %u , segmentind %u , segmentnum %u ");
276480,566579199,0,0,PLAT_AP,ATCMD_SOCK,AtecEcSocProcessUdpUlList_17,P_INFO,swLogPrintf("AtecEcSocProcessUdpUlList malloc new UDP SEND REQ fail ");
276480,566581247,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCreateReq_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocCreateReq request parameter invalid ");
276480,566583295,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCreateReq_2,P_INFO,swLogPrintf("AtecSocketHandleEcSocCreateReq atskt is full ");
276480,566585343,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCreateReq_3,P_INFO,swLogPrintf("AtecSocketHandleEcSocCreateReq create socket fail ");
276480,566587391,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCreateReq_4,P_WARNING,swLogPrintf("AtecSocketHandleEcSocCreateReq bind fail ");
276480,566589439,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCreateReq_5,P_WARNING,swLogPrintf("AtecSocketHandleEcSocCreateReq bind fail ");
276480,566591487,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCreateReq_6,P_INFO,swLogPrintf("AtecSocketHandleEcSocCreateReq bind sucess ");
276480,566593535,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCreateReq_7,P_WARNING,swLogPrintf("AtecSocketHandleEcSocCreateReq wrong protocol ");
276480,566595583,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocUdpSendReq invalid param ");
276480,566597631,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_2,P_INFO,swLogPrintf("AtecSocketHandleEcSocUdpSendReq remote info is not correct ");
276480,566599679,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_3,P_INFO,swLogPrintf("AtecSocketHandleEcSocUdpSendReq can not get the socketatcmd ");
276480,566599680,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_5,P_INFO,swLogPrintf("AtecSocketHandleSendReq the socket %d process UL list fail ");
276480,566601728,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_6,P_INFO,swLogPrintf("AtecSocketHandleEcSocUdpSendReq the seq socket %d is not UDP socket ");
276480,566603776,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_7,P_INFO,swLogPrintf("AtecSocketHandleEcSocUdpSendReq send packet success %u ");
276480,566607871,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_8,P_INFO,swLogPrintf("AtecSocketHandleEcSocUdpSendReq send fail ");
276480,566609919,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_9,P_INFO,swLogPrintf("AtecSocketHandleEcSocUdpSendReq add UL list success ");
276480,566609920,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocUdpSendReq_10,P_INFO,swLogPrintf("AtecSocketHandleEcSocUdpSendReq socket %d is not ecsoc ");
276480,566614015,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocQueryReq_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocQueryReq invalid param ");
276480,566614272,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocQueryReq_2,P_INFO,swLogPrintf("AtecSocketHandleEcSocQueryReq senq query result indication id %u , sequence %u ");
276480,566616064,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocQueryReq_3,P_INFO,swLogPrintf("AtecSocketHandleEcSocQueryReq can not find socket id %u ");
276480,566618368,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocQueryReq_4,P_INFO,swLogPrintf("AtecSocketHandleEcSocQueryReq senq query result indication id %u , sequence %u ");
276480,566622207,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocReadReq_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocReadReq invalid paramter ");
276480,566624255,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocReadReq_2,P_INFO,swLogPrintf("AtecSocketHandleEcSocReadReq can not get the socketatcmd ");
276480,566624256,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocReadReq_3,P_INFO,swLogPrintf("AtecSocketHandleEcSocReadReq socket %d is not ecsoc ");
276480,566628351,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocReadReq_5,P_INFO,swLogPrintf("AtecSocketHandleEcSocReadReq the dl list is NULL ");
276480,566628608,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocReadReq_6,P_INFO,swLogPrintf("AtecSocketHandleEcSocReadReq the first dl remaining len %u , and read %u ");
276480,566630656,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocReadReq_7,P_INFO,swLogPrintf("AtecSocketHandleEcSocReadReq the first dl remaining len %u , and read %u ");
276480,566633216,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocReadReq_final,P_INFO,swLogPrintf("after read AlldlPkgNum: ( %d ) , sockId ( %d ) , Current status ( dlTotalLen:%d , PermitReadAgain:%d ) ");
276480,566636543,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpConnectReq_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpConnectReq request point is null ");
276480,566636544,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpConnectReq_2,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpConnectReq socket %d is not ecsoc ");
276480,566638592,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpConnectReq_3,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpConnectReq the seq socket %d is not init and type is not tcp socket ");
276480,566640640,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpConnectReq_4,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpConnectReq the seq socket %d is not init and type is not init status ");
276480,566644735,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpConnectReq_6,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpConnectReq connect success ");
276480,566644992,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpConnectReq_7,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpConnectReq connect is oning , fd %d , current tick %u ");
276480,566648831,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpConnectReq_8,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpConnectReq connect fail ");
276480,566650879,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpSendReq invalid param ");
276480,566652927,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_2,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpSendReq can not get the socketatcmd ");
276480,566652928,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_3,P_WARNING,swLogPrintf("AtecSocketHandleEcSocTcpSendReq the socket %u is not ecsoc ");
276480,566655232,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_4,P_WARNING,swLogPrintf("AtecSocketHandleEcSocTcpSendReq the socket %u sequence %u is reusing ");
276480,566657024,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_5,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpSendReq the seq socket %d is not TCP socket ");
276480,566659072,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_6,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpSendReq the seq socket %d is not connected ");
276480,566661120,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_7,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpSendReq send packet success %u ");
276480,566665215,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_8,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpSendReq send fail ");
276480,566667263,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocTcpSendReq_9,P_INFO,swLogPrintf("AtecSocketHandleEcSocTcpSendReq invalid sendLen param ");
276480,566669311,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCloseSocket_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocCloseSocket request point is null ");
276480,566671359,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCloseReq_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocCloseReq request point is null ");
276480,566673407,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCloseReq_2,P_INFO,swLogPrintf("AtecSocketHandleEcSocCloseReq can not get the socketatcmd ");
276480,566673408,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCloseReq_3,P_INFO,swLogPrintf("AtecSocketHandleEcSocCloseReq socket %d is not ecsoc ");
276480,566677503,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocCloseReq_5,P_INFO,swLogPrintf("AtecSocketHandleEcSocCloseReq close socket success ");
276480,566679551,0,0,PLAT_AP,ATCMD_SOCK,AtecHandleEcSocNMIEReq_1,P_INFO,swLogPrintf("AtecHandleEcSocNMIEReq invalid request ");
276480,566681599,0,0,PLAT_AP,ATCMD_SOCK,AtecHandleEcSocNMIEReq_2,P_INFO,swLogPrintf("AtecHandleEcSocNMIEReq can not get the socketatcmd ");
276480,566681600,0,0,PLAT_AP,ATCMD_SOCK,AtecHandleEcSocNMIEReq_3,P_INFO,swLogPrintf("AtecSocketHandleEcSocCloseReq socket %d is not ecsoc ");
276480,566683648,0,0,PLAT_AP,ATCMD_SOCK,AtecHandleEcSocNMIEReq_5,P_INFO,swLogPrintf("AtecHandleEcSocNMIEReq invalid mode %u ");
276480,566685952,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketHandleEcSocGNMIEReq_1,P_INFO,swLogPrintf("AtecSocketHandleEcSocGNMIEReq senq GNMIE ind , socket id %u , mode %d ");
276480,566689791,0,0,PLAT_AP,ATCMD_SOCK,atecSocketHandleEcSocStatusReq_1,P_INFO,swLogPrintf("atecSocketHandleEcSocStatusReq invalid param ");
276480,566689792,0,0,PLAT_AP,ATCMD_SOCK,atecSocketHandleEcSocStatusReq_2,P_INFO,swLogPrintf("atecSocketHandleEcSocStatusReq can not find socket id %u ");
276480,566692096,0,0,PLAT_AP,ATCMD_SOCK,atecSocketHandleEcSocStatusReq_3,P_INFO,swLogPrintf("atecSocketHandleEcSocStatusReq senq status indication id %u , status %u ");
276480,566695935,0,0,PLAT_AP,ATCMD_SOCK,atecSocketHandleEcSocStatusReq_4,P_INFO,swLogPrintf("atecSocketHandleEcSocStatusReq query all ec socket status ");
276480,566696192,0,0,PLAT_AP,ATCMD_SOCK,atecSocketHandleEcSocStatusReq_5,P_INFO,swLogPrintf("atecSocketHandleEcSocStatusReq senq status indication id %u , status %u ");
276480,566700031,0,0,PLAT_AP,ATCMD_SOCK,atEcsocSendConnectedInd_1,P_INFO,swLogPrintf("atEcsocSendConnectedInd socketId invalid ");
276480,566702079,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocCheckTcpServerHasCreate_1,P_INFO,swLogPrintf("atecSrvSocCheckTcpServerHasCreate bind address is null ");
276480,566704127,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocHandleCreateTcpListenReq_1,P_INFO,swLogPrintf("atecSrvSocHandleCreateTcpListenReq request point is null ");
276480,566704128,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocHandleCreateTcpListenReq_2,P_WARNING,swLogPrintf("atecSrvSocHandleCreateTcpListenReq has already create , socket id %u ");
276480,566708223,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocHandleCreateTcpListenReq_3,P_INFO,swLogPrintf("atecSrvSocHandleCreateTcpListenReq cms sock mgr context is full ");
276480,566710271,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocHandleCreateTcpListenReq_4,P_INFO,swLogPrintf("atecSrvSocHandleCreateTcpListenReq create socket fail ");
276480,566712319,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpListenReq_1,P_INFO,swLogPrintf("atecSrvSocketHandleCloseTcpListenReq request point is null ");
276480,566714367,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpListenReq_2,P_INFO,swLogPrintf("atecSrvSocketHandleCloseTcpListenReq can not get the socketatcmd ");
276480,566714368,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpListenReq_3,P_INFO,swLogPrintf("atecSrvSocketHandleCloseTcpListenReq socket %d is not ecsrvsoc or server ");
276480,566718463,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpListenReq_4,P_INFO,swLogPrintf("atecSrvSocketHandleCloseTcpListenReq close socket success ");
276480,566720511,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpListenReq_5,P_WARNING,swLogPrintf("atecSrvSocketHandleCloseTcpListenReq close socket fail ");
276480,566722559,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpClientReq_1,P_INFO,swLogPrintf("atecSrvSocketHandleCloseTcpClientReq request point is null ");
276480,566724607,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpClientReq_2,P_INFO,swLogPrintf("atecSrvSocketHandleCloseTcpClientReq can not get the socketatcmd ");
276480,566726655,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpClientReq_3,P_INFO,swLogPrintf("atecSrvSocketHandleCloseTcpClientReq request point is null ");
276480,566726656,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleCloseTcpClientReq_4,P_INFO,swLogPrintf("atecSrvSocketHandleCloseTcpClientReq client fd %u is nor ECSRVSOC or client ");
276480,566730751,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpClientSendReq_1,P_INFO,swLogPrintf("atecSrvSocketHandleTcpClientSendReq invalid param ");
276480,566732799,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpClientSendReq_2,P_INFO,swLogPrintf("atecSrvSocketHandleTcpClientSendReq can not get the socketatcmd ");
276480,566732800,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpClientSendReq_3,P_INFO,swLogPrintf("atecSrvSocketHandleTcpClientSendReq the seq socket %d is not TCP socket ");
276480,566734848,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpClientSendReq_4,P_INFO,swLogPrintf("atecSrvSocketHandleTcpClientSendReq the seq socket %d is not connected or is server ");
276480,566736896,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpClientSendReq_5,P_INFO,swLogPrintf("atecSrvSocketHandleTcpClientSendReq send packet success %u ");
276480,566740991,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpClientSendReq_6,P_INFO,swLogPrintf("atecSrvSocketHandleTcpClientSendReq send fail ");
276480,566743039,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpClientSendReq_7,P_INFO,swLogPrintf("atecSrvSocketHandleTcpClientSendReq invalid sendLen param ");
276480,566745087,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpListenStatusReq_1,P_INFO,swLogPrintf("atecSrvSocketHandleTcpListenStatusReq invalid param ");
276480,566747135,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpListenStatusReq_2,P_INFO,swLogPrintf("atecSrvSocketHandleTcpListenStatusReq invalid param ");
276480,566747136,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpListenStatusReq_3,P_INFO,swLogPrintf("atecSrvSocketHandleTcpListenStatusReq can not find socket id %u ");
276480,566749440,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpListenStatusReq_4,P_INFO,swLogPrintf("atecSrvSocketHandleTcpListenStatusReq senq status indication id %u , status %u ");
276480,566753279,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpListenStatusReq_5,P_INFO,swLogPrintf("atecSrvSocketHandleTcpListenStatusReq invalid param ");
276480,566755327,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpListenStatusReq_6,P_INFO,swLogPrintf("atecSrvSocketHandleTcpListenStatusReq query all ec srv listen socket status ");
276480,566755584,0,0,PLAT_AP,ATCMD_SOCK,atecSrvSocketHandleTcpListenStatusReq_7,P_INFO,swLogPrintf("atecSrvSocketHandleTcpListenStatusReq senq status indication id %u , status %u ");
276480,566759423,0,0,PLAT_AP,ATCMD_SOCK,atSktStatusEventProcess_1,P_WARNING,swLogPrintf("atSktStatusEventProcess connect fail ");
276480,566761471,0,0,PLAT_AP,ATCMD_SOCK,atEcsocStatusEventProcess_1,P_WARNING,swLogPrintf("atEcsocStatusEventProcess connect fail ");
276480,566763519,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocDlEventProcess_3,P_WARNING,swLogPrintf("ignore this packet ");
276480,566763776,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocUlStatusEventProcess_2,P_WARNING,swLogPrintf("AtEcsocUlStatusEventProcess the socket %d , sequence %d status invalid ");
276480,566765824,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocUlStatusEventProcess_3,P_WARNING,swLogPrintf("AtEcsocUlStatusEventProcess the socket %d , sequence %d status invalid ");
276480,566767872,0,0,PLAT_AP,ATCMD_SOCK,atEcSrvSocDlEventProcess_2,P_WARNING,swLogPrintf("atEcSrvSocDlEventProcess send a tcp client %u rcv indication , control header is too long %d ");
276480,566769664,0,0,PLAT_AP,ATCMD_SOCK,atEcSrvSocDlEventProcess_4,P_SIG,swLogPrintf("atEcSrvSocDlEventProcess send a tcp client %u rcv indication ");
276480,566771712,0,0,PLAT_AP,ATCMD_SOCK,atEcSrvSocDlEventProcess_5,P_WARNING,swLogPrintf("atEcSrvSocDlEventProcess socket %u is not a tcp client ");
276480,566774016,0,0,PLAT_AP,ATCMD_SOCK,atEcSrcSocTcpClientAcceptEventProcess_1,P_INFO,swLogPrintf("atEcSrcSocTcpClientAcceptEventProcess send a server accept client ind , server id %u , client id %u ");
276480,566777855,0,0,PLAT_AP,ATCMD_SOCK,EcsocCheckHibMode_1,P_WARNING,swLogPrintf("EcsocCheckHibMode invalid cms sock mgr context ");
276480,566777856,0,0,PLAT_AP,ATCMD_SOCK,EcsocCheckHibMode_2,P_INFO,swLogPrintf("EcsocCheckHibMode socket id %u exist pending UL ");
276480,566779904,0,0,PLAT_AP,ATCMD_SOCK,EcsocCheckHibMode_3,P_INFO,swLogPrintf("EcsocCheckHibMode socket id %u exist pending DL ");
276480,566782208,0,0,PLAT_AP,ATCMD_SOCK,EcsocCheckHibMode_4,P_INFO,swLogPrintf("EcsocCheckHibMode socket id %u exist pending UL sequence %ustatus ");
276480,566786047,0,0,PLAT_AP,ATCMD_SOCK,EcSrvsocCheckHibMode_1,P_WARNING,swLogPrintf("EcSrvsocCheckHibMode invalid cms sock mgr context ");
276480,566786816,0,0,PLAT_AP,ATCMD_SOCK,atecEcSocCheckCurIsReachDlfcHWater_error_0,P_INFO,swLogPrintf("EC socket reach public DL resource , has use %d ( maxSize %d ) or has use num %d ( limitNum:%d ) limited ");
276480,566790143,0,0,PLAT_AP,ATCMD_SOCK,AtecSktProessReq_1,P_INFO,swLogPrintf("AtecSktProessReq invalid param ");
276480,566792191,0,0,PLAT_AP,ATCMD_SOCK,AtecSktProessReq_2,P_INFO,swLogPrintf("AtecSocketProessReq invalid param ");
276480,566792704,0,0,PLAT_AP,ATCMD_SOCK,AtecSktProessReq_3,P_INFO,swLogPrintf("read atSktReqFd success , req_id %d , reqbody 0x%x , sourcePort %d ");
276480,566796287,0,0,PLAT_AP,ATCMD_SOCK,AtecSktProessReq_4,P_INFO,swLogPrintf("AtecSocketProessReq connect is on going , delay send atskt cnf ");
276480,566796288,0,0,PLAT_AP,ATCMD_SOCK,AtecSktProessReq_5,P_WARNING,swLogPrintf("process atSktReqFd fail , invalid reqId %d ");
276480,566798336,0,0,PLAT_AP,ATCMD_SOCK,AtecSktProessReq_6,P_WARNING,swLogPrintf("read atSktReqFd fail , source %u check fail ");
276480,566802431,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketProessReq_1,P_INFO,swLogPrintf("AtecSocketProessReq invalid param ");
276480,566804479,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketProessReq_2,P_INFO,swLogPrintf("AtecSocketProessReq invalid param ");
276480,566804992,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketProessReq_3,P_INFO,swLogPrintf("read atEcsocReqFd success , req_id %d , reqbody 0x%x , sourcePort %d ");
276480,566806528,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketProessReq_4,P_SIG,swLogPrintf("read compelete , socket %u need NMI ");
276480,566810623,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketProessReq_5,P_INFO,swLogPrintf("AtecSocketProessReq tcpconnect is on going ");
276480,566810624,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketProessReq_6,P_WARNING,swLogPrintf("process atSktReqFd fail , invalid reqId %d ");
276480,566812672,0,0,PLAT_AP,ATCMD_SOCK,AtecSocketProessReq_7,P_WARNING,swLogPrintf("read atSktReqFd fail , source %u check fail ");
276480,566816767,0,0,PLAT_AP,ATCMD_SOCK,atecEcSrvSocProessReq_invalid_0,P_INFO,swLogPrintf("AtecSktProessReq invalid param ");
276480,566818815,0,0,PLAT_AP,ATCMD_SOCK,atecEcSrvSocProessReq_invalid_1,P_INFO,swLogPrintf("AtecSocketProessReq invalid param ");
276480,566819328,0,0,PLAT_AP,ATCMD_SOCK,atecEcSrvSocProessReq_process_0,P_INFO,swLogPrintf("read atSktReqFd success , req_id %d , reqbody 0x%x , sourcePort %d ");
276480,566820864,0,0,PLAT_AP,ATCMD_SOCK,atecEcSrvSocProessReq_invalid_2,P_WARNING,swLogPrintf("process atSktReqFd fail , invalid reqId %d ");
276480,566822912,0,0,PLAT_AP,ATCMD_SOCK,atecEcSrvSocProessReq_invalid_3,P_WARNING,swLogPrintf("read atSktReqFd fail , source %u check fail ");
276480,566825216,0,0,PLAT_AP,ATCMD_SOCK,AtSktEvnetCallback_1,P_INFO,swLogPrintf("AtSktEvnetCallback socketid %d , event %d ");
276480,566827264,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocEventCallback_1,P_INFO,swLogPrintf("atEcsocEventCallback socketid %d , event %d ");
276480,566829312,0,0,PLAT_AP,ATCMD_SOCK,atEcSrvSocEventCallback_1,P_INFO,swLogPrintf("atEcSrvSocEventCallback socketid %d , event %d ");
276480,566833151,0,0,PLAT_AP,ATCMD_SOCK,atEcSrvSocEventCallback_2,P_INFO,swLogPrintf("atEcSrvSocEventCallback conn status event , do nothing ");
276480,566835199,0,0,PLAT_AP,ATCMD_SOCK,atEcSrvSocEventCallback_3,P_INFO,swLogPrintf("atEcSrvSocEventCallback ul sequence status event , do nothing ");
276480,566837247,0,0,PLAT_AP,ATCMD_SOCK,AtSktStoreConnHibContext_1,P_WARNING,swLogPrintf("AtSktStoreConnHibContext context is invalid ");
276480,566837504,0,0,PLAT_AP,ATCMD_SOCK,AtSktStoreConnHibContext_2,P_WARNING,swLogPrintf("AtSktStoreConnHibContext private hib context len %d bit than %d ");
276480,566841343,0,0,PLAT_AP,ATCMD_SOCK,AtSktStoreConnHibContext_3,P_WARNING,swLogPrintf("AtSktStoreConnHibContext private context is invalid ");
276480,566843391,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocStoreConnHibContext_1,P_WARNING,swLogPrintf("AtEcsocStoreConnHibContext context is invalid ");
276480,566843648,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocStoreConnHibContext_2,P_WARNING,swLogPrintf("AtEcsocStoreConnHibContext private hib context len %d bit than %d ");
276480,566847487,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocStoreConnHibContext_3,P_WARNING,swLogPrintf("AtEcsocStoreConnHibContext private context is invalid ");
276480,566849535,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_1,P_WARNING,swLogPrintf("AtSktRecoverConnContexts context is invalid ");
276480,566849792,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_2,P_WARNING,swLogPrintf("AtSktRecoverConnContext private hib context len %d bit than %d ");
276480,566853631,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_3,P_WARNING,swLogPrintf("AtSktRecoverConnContexts private hib context is invalid ");
276480,566855679,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_4,P_INFO,swLogPrintf("AtSktRecoverConnContexts atskt is full ");
276480,566855680,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_6,P_INFO,swLogPrintf("AtSktRecoverConnContexts rebuild socket id %d fail ");
276480,566857728,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_7,P_INFO,swLogPrintf("AtSktRecoverConnContexts rebuild socket id %d success , but status is not valid ");
276480,566859776,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_8,P_INFO,swLogPrintf("AtSktRecoverConnContexts rebuild socket id %d success ");
276480,566861824,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_9,P_INFO,swLogPrintf("AtSktRecoverConnContexts recreate socket id %d fail ");
276480,566863872,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_success_1,P_INFO,swLogPrintf("AtSktRecoverConnContexts recreate socket id %d success ");
276480,566865920,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_bind_fail,P_INFO,swLogPrintf("AtSktRecoverConnContexts recreate socket id %d bind fail ");
276480,566867968,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_success_2,P_INFO,swLogPrintf("AtSktRecoverConnContexts recreate socket id %d success ");
276480,566870272,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_11,P_INFO,swLogPrintf("AtSktRecoverConnContexts recreate socket id %d status %d is invalid ");
276480,566872320,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_12,P_INFO,swLogPrintf("AtSktRecoverConnContexts hib socket id %d status %d is invalid ");
276480,566874112,0,0,PLAT_AP,ATCMD_SOCK,AtSktRecoverConnContext_13,P_INFO,swLogPrintf("AtSktRecoverConnContexts rebuild socket id %d is invalid ");
276480,566878207,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_1,P_WARNING,swLogPrintf("AtEcsocRecoverConnContext context is invalid ");
276480,566878464,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_2,P_WARNING,swLogPrintf("AtEcsocRecoverConnContext private hib context len %d bit than %d ");
276480,566882303,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_3,P_WARNING,swLogPrintf("AtEcsocRecoverConnContext private hib context is invalid ");
276480,566884351,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_4,P_INFO,swLogPrintf("AtEcsocRecoverConnContext atskt is full ");
276480,566884352,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_6,P_INFO,swLogPrintf("AtEcsocRecoverConnContext rebuild socket id %d fail ");
276480,566886400,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_7,P_INFO,swLogPrintf("AtEcsocRecoverConnContext rebuild socket id %d success , but status is not valid ");
276480,566888448,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_8,P_INFO,swLogPrintf("AtEcsocRecoverConnContext rebuild socket id %d success ");
276480,566890496,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_9,P_INFO,swLogPrintf("AtEcsocRecoverConnContext recreate socket id %d fail ");
276480,566892544,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_bind_fail,P_INFO,swLogPrintf("AtEcsocRecoverConnContext recreate socket id %d bind fail ");
276480,566894592,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_rebuild_success_2,P_INFO,swLogPrintf("AtEcsocRecoverConnContext recreate socket id %d success ");
276480,566896896,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_11,P_INFO,swLogPrintf("AtEcsocRecoverConnContext recreate socket id %d status %d is invalid ");
276480,566898944,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_12,P_INFO,swLogPrintf("AtEcsocRecoverConnContext hib socket id %d status %d is invalid ");
276480,566900736,0,0,PLAT_AP,ATCMD_SOCK,AtEcsocRecoverConnContext_13,P_INFO,swLogPrintf("AtEcsocRecoverConnContext rebuild socket id %d is invalid ");
276480,566904831,0,0,PLAT_AP,ATCMD_SOCK,atEcSrcSocTcpServerProcessAcceptClient_1,P_INFO,swLogPrintf("atEcSrcSocTcpServerProcessAcceptClient cms mgr context or client address is invalid ");
276480,566906879,0,0,PLAT_AP,ATCMD_SOCK,atEcSrcSocTcpServerProcessAcceptClient_2,P_INFO,swLogPrintf("atEcSrcSocTcpServerProcessAcceptClient cms sock mgr context is full ");
276480,566908927,0,0,PLAT_AP,ATCMD_SOCK,atSocketInit_1,P_SIG,swLogPrintf("AtSocketInit INIT ");
276480,566910975,0,0,PLAT_AP,ATCMD_SOCK,atSocketInit_2,P_INFO,swLogPrintf("AtSocketInit ATSKT register fail ");
276480,566913023,0,0,PLAT_AP,ATCMD_SOCK,atSocketInit_3,P_INFO,swLogPrintf("AtSocketInit ECSOC register fail ");
276480,566915071,0,0,PLAT_AP,ATCMD_SOCK,atSocketInit_4,P_INFO,swLogPrintf("AtSocketInit ECSRVSOC register fail ");
276480,566915584,0,0,PLAT_AP,ATCMD_SOCK,atSocketInit_5,P_INFO,swLogPrintf("AtSocketInit ECSOC public setting mode %u , publicDlPkgNumMax %u , publicDlBufferToalSize %u ");
276480,566917632,0,0,PLAT_AP,ATCMD_SOCK,cmsSockMgrCheckPendingNodeIsTimeOut_0,P_INFO,swLogPrintf("sockId ; %d , currTime:%d , Addtime is :%d ");
276480,566919168,0,0,PLAT_AP,ATCMD_SOCK,cmsSockMgrAddUlPendingListTail_0,P_INFO,swLogPrintf("The seq source %d invalid ");
276480,566923263,0,0,PLAT_AP,ATCMD_SOCK,cmsSockMgrRemoveUlPendingList_0,P_INFO,swLogPrintf("Not find pending List ");
276480,566925311,0,0,PLAT_AP,ATCMD_SOCK,cmsSockMgrRemoveUlPendingList_1,P_INFO,swLogPrintf("Not find removeNode ");
276480,566925568,0,0,PLAT_AP,ATCMD_SOCK,cmsSockMgrUpdateUlPendingSequenceBitMapState_2,P_INFO,swLogPrintf("AtecEcSocUpdateUlPendingSequenceState sequence %u , bactive %u ");
276480,566929407,0,0,PLAT_AP,ATCMD_SOCK,cmsSockMgrSockServerInit_2,P_ERROR,swLogPrintf("cmsSockMgrSockServerInit bind loopback udp server socket fail ");
276480,566931455,0,0,PLAT_AP,ATCMD_SOCK,cmsSockMgrSockServerInit_3,P_WARNING,swLogPrintf("cmsSockMgrSockServerInit enable ul seqstatus handler fail ");
276480,566931456,0,0,PLAT_AP,ATCMD_SOCK,TcpipApiSendData_11,P_INFO,swLogPrintf("TcpipApiSendData send packet fail %u ");
276480,566935551,0,0,PLAT_AP,ATCMD_SOCK,TcpipApiCloseConnection_set_close_timeout_1,P_WARNING,swLogPrintf("TcpipApiCloseConnection enable tcp close timeout option fail ");
276480,566935552,0,0,PLAT_AP,ATCMD_SOCK,tcpipApiSendTotalData_4,P_INFO,swLogPrintf("tcpipApiSendTotalData send packet fail %u ");
276480,566937600,0,0,PLAT_AP,ATCMD_SOCK,tcpipApiAckedTotalData_4,P_INFO,swLogPrintf("tcpipApiAckedTotalData send packet fail %u ");
276480,566941695,0,0,PLAT_AP,ATCMD_SOCK,tcpipCheckHibMode_1,P_WARNING,swLogPrintf("tcpipCheckHibMode invalid cms sock mgr context ");
276480,566941952,0,0,PLAT_AP,ATCMD_SOCK,tcpipCheckHibMode_2,P_INFO,swLogPrintf("tcpipCheckHibMode socket id %u status %d , can not enter hib / sleep2 mode ");
276480,566944000,0,0,PLAT_AP,ATCMD_SOCK,tcpipCheckHibMode_3,P_INFO,swLogPrintf("tcpipCheckHibMode socket id %u exist pending UL sequence %ustatus ");
276480,566945792,0,0,PLAT_AP,ATCMD_SOCK,TcpipApiRecoverConnContext_8,P_ERROR,swLogPrintf("TcpipApiRecoverConnContext recreate socket id %d fail ");
276480,566948096,0,0,PLAT_AP,ATCMD_SOCK,TcpipApiRecoverConnContext_10,P_ERROR,swLogPrintf("TcpipApiRecoverConnContext recreate socket id %d status %d is invalid ");
276480,566951935,0,0,PLAT_AP,ATCMD_SOCK,httpConn_3,P_ERROR,swLogPrintf("httpCreateSocket get file cntrl flags fail ");
276480,566951936,0,0,PLAT_AP,ATCMD_SOCK,ping_netinfo_check_1,P_INFO,swLogPrintf("ping get cid %d net info fail ");
276480,566954240,0,0,PLAT_AP,ATCMD_SOCK,ping_netinfo_check_2,P_INFO,swLogPrintf("ping get cid %d net status %d is invalid ");
276480,566956032,0,0,PLAT_AP,ATCMD_SOCK,sntp_netinfo_check_1,P_INFO,swLogPrintf("sntp get cid %d net info fail ");
276480,566958336,0,0,PLAT_AP,ATCMD_SOCK,sntp_netinfo_check_2,P_INFO,swLogPrintf("sntp get cid %d net status %d is invalid ");
277504,568330496,0,0,PLAT_AP,PS_DIAL,psDialGetPlmnCfgByImsi_1,P_WARNING,swLogPrintf("Can ' t find DialPlmnCfg for PLMN: 0x%x , 0x%x ");
277504,568332544,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsBearerActedInd_1,P_WARNING,swLogPrintf("PS DIAL , bearer type: %d not valid , cid: %d ");
277504,568334336,0,0,PLAT_AP,PS_DIAL,psDialProccCmiPsBearerDeActInd_1,P_VALUE,swLogPrintf("PS DIAL , CID: %d , deactivated. ");
277504,568338431,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsConnStatusInd_1,P_INFO,swLogPrintf("PS monitor traffic idle on DRB , trigger TAU... ");
277504,568340479,0,0,PLAT_AP,PS_DIAL,psDialProcCmiDevSilentResetInd_1,P_WARNING,swLogPrintf("PS Silent Reset! ");
277504,568340480,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsReadDynBearerCtxParamCnf_1,P_WARNING,swLogPrintf("CID : %d maybe a non-ip type bearer ");
277504,568344575,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsReadDynBearerCtxParamCnf_2,P_VALUE,swLogPrintf("PS DIAL , BEARER don ' t has valid context , maybe dedicated BR , or not acted ");
277504,568346623,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsReadDynBearerCtxParamCnf_ded_1,P_VALUE,swLogPrintf("PS DIAL , wakeup proc , CGSCONTRDP get all activated dedicated BR ");
277504,568348671,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsReadDedBearerDynCtxParamCnf_tft_1,P_VALUE,swLogPrintf("PS DIAL , wakeup proc , CGTFTRDP get all activated TFT config ");
277504,568350719,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsTrafficIdleMonitorInd_1,P_INFO,swLogPrintf("PS monitor traffic idle on DRB , tigger RRC local release! ");
277504,568352767,0,0,PLAT_AP,PS_DIAL,psDialProcCmiDevSetPowerStateCnf_1,P_VALUE,swLogPrintf("PS DIAL , wakeup proc , CGCONTRDP get all activated default BR ");
277504,568354815,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_5,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi get plmn dns fail ");
277504,568356863,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_1,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi parse ipv4Dns0 fail ");
277504,568358911,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_2,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi parse ipv4Dns1 fail ");
277504,568360959,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_3,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi parse ipv6Dns0 fail ");
277504,568363007,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_4,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi parse ipv6Dns1 fail ");
277504,568363264,0,0,PLAT_AP,PS_DIAL,psDailGetPlmnPreferBandList_1,P_WARNING,swLogPrintf("Can ' t find DialPlmnCfg for PLMN: 0x%x , 0x%x , can ' t get prefer band ");
277504,568365312,0,0,PLAT_AP,PS_DIAL,psDialNetDevCtrlBindCid_1,P_VALUE,swLogPrintf("PS DIAL NET , bind cid failed due to cid %d usbCtrl %d ");
277504,568369151,0,0,PLAT_AP,PS_DIAL,psDialNetDevCtrlBindCid_2,P_WARNING,swLogPrintf("PS DIAL NET , BEARER doesn ' t have valid context! ");
277504,568371199,0,0,PLAT_AP,PS_DIAL,psDialNetDevCtrlBindCid_3,P_WARNING,swLogPrintf("PS DIAL NET , Dedicated bearer doesn ' t support to bind currently! ");
277504,568373247,0,0,PLAT_AP,PS_DIAL,psDialNetDevCtrlBindCid_4,P_VALUE,swLogPrintf("PS DIAl NET , get CGCONTRDP failed , try to act it ");
277504,568373504,0,0,PLAT_AP,PS_DIAL,psDialNetDevCtl_0,P_VALUE,swLogPrintf("PS DIAL NET do nothing as cid %d oldCid %d ");
277504,568375296,0,0,PLAT_AP,PS_DIAL,psDialNetProcApplInd_0,P_VALUE,swLogPrintf("PS DIAL NET , unbind ok , required rebind: %d as cid changed ");
277504,568377856,0,0,PLAT_AP,PS_DIAL,psDialNetLinkupCtrl_0,P_VALUE,swLogPrintf("PS DIAL NET , cancel Lan control due to cid %d pIfCfg %x usbCtrl %d ");
277504,568379392,0,0,PLAT_AP,PS_DIAL,psDialNetAutoDialCheck_0,P_VALUE,swLogPrintf("PS DIAL NET , cancel Auto Dial Check due to usbCtrl %d ");
277504,568383487,0,0,PLAT_AP,PS_DIAL,psDialNetAutoDialCheck_1,P_VALUE,swLogPrintf("PS DIAl NET , check cid undefined , report bind failure ");
277504,568385535,0,0,PLAT_AP,PS_DIAL,psDialNetAutoDialCheck_2,P_VALUE,swLogPrintf("PS DIAl NET , getAllBearersCidsBasicInfo failed , report bind failure ");
277504,568386304,0,0,PLAT_AP,PS_DIAL,psDialNetInit_1,P_VALUE,swLogPrintf("PS DIAL , Ethlan config , ethHostAddr: %u.%u.%u.%u ");
277504,568388352,0,0,PLAT_AP,PS_DIAL,psDialNetInit_2,P_VALUE,swLogPrintf("PS DIAL , Ethlan config , ethLocalAddr: %u.%u.%u.%u ");
277504,568389632,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_s_1,P_INFO,swLogPrintf("PS DIAL ISR , proc CP event: %e<CpPagingImgEventId> ");
277504,568391680,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_w_1,P_WARNING,swLogPrintf("PS DIAL , CMS task already created , forward the CP event: %d , to task ");
277504,568395775,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_paging_1,P_SIG,swLogPrintf("PS DIAL ISR , need wakeup AP & CP , as recv UE paging ");
277504,568397823,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_paging_2,P_WARNING,swLogPrintf("PS DIAL ISR , only need wakeup AP , as recv UE paging ");
277504,568399871,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_serving_1,P_SIG,swLogPrintf("PS DIAL ISR , need wakeup AP & CP , as serving cell measurement ");
277504,568401919,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_serving_2,P_SIG,swLogPrintf("PS DIAL ISR , only need wakeup AP , as serving cell measurement ");
277504,568403967,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_cell_reselect_1,P_SIG,swLogPrintf("PS DIAL ISR , need wakeup AP & CP , as need cell re-selection ");
277504,568406015,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_cell_reselect_2,P_WARNING,swLogPrintf("PS DIAL ISR , only need wakeup AP , as need cell re-selection ");
277504,568408063,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_cell_meas_1,P_SIG,swLogPrintf("PS DIAL ISR , need wakeup AP & CP , as cell measurement event ");
277504,568410111,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_cell_meas_2,P_SIG,swLogPrintf("PS DIAL ISR , only need wakeup AP , as cell measurement event ");
277504,568410112,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_err_1,P_ERROR,swLogPrintf("PS DIAL ISR , can ' t proc CP event : %d ");
277504,568414207,0,0,PLAT_AP,PS_DIAL,cmsWakeupCheckPagingEvent_paging_s_1,P_SIG,swLogPrintf("PS DIAL , UE paging event to RRC ");
277504,568416255,0,0,PLAT_AP,PS_DIAL,psDialWakeupCheckPagingEvent_meas_s_1,P_SIG,swLogPrintf("PS DIAL , UE measure event to RRC ");
277504,568418303,0,0,PLAT_AP,PS_DIAL,psDialWakeupCheckPagingEvent_reselect_s_1,P_SIG,swLogPrintf("PS DIAL , UE re-select event to RRC ");
277504,568418304,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_s_1,P_SIG,swLogPrintf("PS DIAL , PS is ready , forward CP event: %d , to RRC ");
277504,568420352,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_paging_1,P_SIG,swLogPrintf("PS DIAL , need wakeup PS , as recv UE paging , ret: %d ");
277504,568422400,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_serving_1,P_SIG,swLogPrintf("PS DIAL , need wakeup PS , as serving cell measurement , ret: %d ");
277504,568424448,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_cell_reselect_1,P_SIG,swLogPrintf("PS DIAL , need wakeup PS , as need cell re-selection , ret: %d ");
277504,568426496,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_cell_meas_1,P_SIG,swLogPrintf("PS DIAL , need wakeup PS , as cell measurement event , ret: %d ");
277504,568430591,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_not_start_ps_1,P_SIG,swLogPrintf("PS DIAL , proc CP event , not need wake up PS ");
277504,568431360,0,0,PLAT_AP,PS_DIAL,psDialIsNeedDeactBearer_1,P_VALUE,swLogPrintf("PS DIAL PPP , bPppNeedActBearer is %d , ppp cid: %d , rndis cid: %d and rndis bind state: %d ");
277504,568432896,0,0,PLAT_AP,PS_DIAL,psDialPppResume_1,P_VALUE,swLogPrintf("PS DIAL PPP , atHandle: %d , resume ppp link with cid: %d ");
277504,568434688,0,0,PLAT_AP,PS_DIAL,psDialPppDataAndOnlineCmdCallback_in_w_1,P_WARNING,swLogPrintf("PS DIAL PPP , chanId: %d , recv AT_ONLINE_CMD_ATO_EVT , but input NULL , abnormal ");
277504,568437248,0,0,PLAT_AP,PS_DIAL,psDialPppDataAndOnlineCmdCallback_w_evt_1,P_WARNING,swLogPrintf("PS DIAL PPP , chanId: %d , chanState: %d , recv unexcept evtId: %d ");
277504,568440831,0,0,PLAT_AP,PS_DIAL,psDialPppDisconnectNonBlockCallback_0,P_WARNING,swLogPrintf("PS DIAL PPP , lan ctrl unbind PPP fail! ");
277504,568440832,0,0,PLAT_AP,PS_DIAL,psDialPppDisconnectNonBlockCallback_1,P_VALUE,swLogPrintf("PS DIAL PPP , deact BEARER with cid: %d ");
277504,568443136,0,0,PLAT_AP,PS_DIAL,psDialPppHoldOnNonBlockCallback_1,P_VALUE,swLogPrintf("PS DIAL PPP , chanId: %d , hold on ppp link with cid: %d ");
277504,568446975,0,0,PLAT_AP,PS_DIAL,psDialPppCheckCidIsAct_0,P_VALUE,swLogPrintf("PS DIAl PPP , get Net Info failed! ");
277504,568447232,0,0,PLAT_AP,PS_DIAL,psDialPppCheckCidIsAct_1,P_ERROR,swLogPrintf("PS DIAL PPP , ipvCid4: %d and ipv6Cid:%d are both invalid , please check it! ");
277504,568451071,0,0,PLAT_AP,PS_DIAL,psDialPppCheckCidIsAct_2,P_INFO,swLogPrintf("PS DIAL PPP , get BEARER context fail , maybe dedicated BEARER , or not acted! ");
277504,568453119,0,0,PLAT_AP,PS_DIAL,psDialPppCheckCidIsAct_3,P_INFO,swLogPrintf("PS DIAl PPP , get CGCONTRDP failed , maybe not acted! ");
277504,568455167,0,0,PLAT_AP,PS_DIAL,psDialPppProcCmiPsSetBearerActStateCnf_1,P_INFO,swLogPrintf("PS DIAl PPP , act cid succ , wait for lan link up until wan link up succ! ");
277504,568457215,0,0,PLAT_AP,PS_DIAL,psDialPppProcCmiPsSetBearerActStateCnf_2,P_INFO,swLogPrintf("PS DIAl PPP , act cid fail! ");
277504,568459263,0,0,PLAT_AP,PS_DIAL,psDialPppLanLinkUp_1,P_INFO,swLogPrintf("PS DIAl PPP , ppp lan link up... ");
277504,568459264,0,0,PLAT_AP,PS_DIAL,psDialPppConnect_1,P_VALUE,swLogPrintf("PS DIAL PPP , pppLinkState is %d , can ' t process ATD. ");
277504,568461312,0,0,PLAT_AP,PS_DIAL,psDialPppConnect_v_1,P_VALUE,swLogPrintf("PS DIAL PPP , current cid:%d don ' t has valid bearer ctx , try to act it. ");
277504,568465407,0,0,PLAT_AP,PS_DIAL,psDialPppConnect_2,P_VALUE,swLogPrintf("PS DIAL PPP , UE don ' t has valid bearer ctx , maybe under dereg. ");
277504,568465920,0,0,PLAT_AP,PS_DIAL,psDialPppConnect_3,P_VALUE,swLogPrintf("PS DIAL PPP , connect ppp link with atChanId: %d , ipv4Cid: %d , ipv6Cid: %d ");
277504,568467968,0,0,PLAT_AP,PS_DIAL,psDialPppConnect_4,P_VALUE,swLogPrintf("PS DIAL PPP , pppAuthSelectMode:1 , connect ppp link with atChanId: %d , ipv4Cid: %d , ipv6Cid: %d ");
277504,568470016,0,0,PLAT_AP,PS_DIAL,psDialPppDisconnect_1,P_VALUE,swLogPrintf("PS DIAL PPP , disconnect ppp link with chanId: %d , ipv4Cid: %d , ipv6Cid: %d ");
277504,568471808,0,0,PLAT_AP,PS_DIAL,psDialPppHangUp_1,P_VALUE,swLogPrintf("PS DIAL PPP , atHandle: %d , hang up ppp link with cid: %d ");
277504,568474112,0,0,PLAT_AP,PS_DIAL,psDialPppHangUp_2,P_VALUE,swLogPrintf("PS DIAL PPP , pppLinkState is %d , newAtChanId: %d , oldAtChanId is: %d , no need to hang up! ");
277504,568475904,0,0,PLAT_AP,PS_DIAL,psDialPppSetAuth_1,P_VALUE,swLogPrintf("PS DIAL PPP , cid: %d , set auth info with type %d ");
277504,568477696,0,0,PLAT_AP,PS_DIAL,psDialPppActBearer_1,P_VALUE,swLogPrintf("PS DIAL PPP , act bearer with cid %d ");
277504,568480000,0,0,PLAT_AP,PS_DIAL,psDialWakeupPs_value_1,P_VALUE,swLogPrintf("PS DIAL recv CMI CNF , SgId: %d , PrimId: %d , netif not recovery , still need pending ");
277504,568483839,0,0,PLAT_AP,PS_DIAL,psDialFirstPowerOn_cfun0_1,P_SIG,swLogPrintf("PS DIAL , CFUN 0 power on , don ' t power on PS... ");
277504,568485887,0,0,PLAT_AP,PS_DIAL,psDialFirstPowerOn_cfun4_1,P_SIG,swLogPrintf("PS DIAL , CFUN 4 power on , power on PS... ");
277504,568485888,0,0,PLAT_AP,PS_DIAL,psDialFirstPowerOn_cfun1_w_1,P_WARNING,swLogPrintf("PS DIAL , unsupported poweron cfun: %d , change to CFUN 1 , power on PS... ");
277504,568489983,0,0,PLAT_AP,PS_DIAL,psDialFirstPowerOn_cfun1_s_1,P_SIG,swLogPrintf("PS DIAL , CFUN 1 power on , power on PS... ");
277504,568492031,0,0,PLAT_AP,PS_DIAL,psDialStartPs_w_1,P_WARNING,swLogPrintf("PS DIAL , PS task is ready , don ' t need to restart ");
277504,568492288,0,0,PLAT_AP,PS_DIAL,psCamCmiReq_start_1,P_SIG,swLogPrintf("PS DIAL , request PS service , sgId: %d , primId: %d , need start PS firstly ");
278528,570427392,0,0,PLAT_AP,PS_STK_BIP,SendSignaltoSimBip_1,P_INFO,swLogPrintf("Send signal ( %x ) to simbip task! ");
278528,570431487,0,0,PLAT_AP,PS_STK_BIP,SimBipLinkUp_1,P_WARNING,swLogPrintf("SIMBIP task has already been created ");
278528,570433535,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcGetDefinedCidListCnf_2,P_WARNING,swLogPrintf("the number of defined cid list is error! ");
278528,570435583,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcSetBearerActStateCnf_0,P_INFO,swLogPrintf("Act bearer successfully ");
278528,570437631,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcSetBearerActStateCnf_1,P_INFO,swLogPrintf("DeAct bearer done ");
278528,570439679,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcSetBearerActStateCnf_2,P_INFO,swLogPrintf("No bip context found ");
278528,570439680,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcReadDynBearerCtxParamCnf_1,P_WARNING,swLogPrintf("Error CID : %d maybe a non-ip type bearer ");
278528,570443775,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcReadDynBearerCtxParamCnf_2,P_WARNING,swLogPrintf("BEARER don ' t has valid context ");
278528,570444032,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcLinkDownRsp_0,P_INFO,swLogPrintf("Disconnect PDN cid %d , bearer type %d ");
278528,570446080,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcLinkDownRsp_1,P_INFO,swLogPrintf("TR for close channel %d , bearer type %d ");
278528,570447872,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcDataAvailReq_0,P_WARNING,swLogPrintf("Ignore Data available by channel state %d is abnormal ");
278528,570450176,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcDataAvailReq_1,P_WARNING,swLogPrintf("Data error! datalength:%d , pData:0x%x ");
278528,570451968,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcLinkErrorReq_0,P_WARNING,swLogPrintf("link error , channel state %d ");
278528,570454016,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcOpenChannelInd_0,P_WARNING,swLogPrintf("The default NetIf / PDP is ready , create simbip task and set up link for channel %d ");
278528,570458111,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcOpenChannelInd_1,P_WARNING,swLogPrintf("The default NetIf / PDP is not activated! ");
278528,570460159,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcOpenChannelInd_2,P_WARNING,swLogPrintf("Activate BIP PDN , get defined cid list first! ");
278528,570460160,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcOpenChannelInd_3,P_WARNING,swLogPrintf("Unsupport bearer type %x! ");
278528,570464255,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcOpenChannelInd_4,P_WARNING,swLogPrintf("No channel available! ");
278528,570464256,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcSendDataInd_1,P_WARNING,swLogPrintf("The BIP link is not ready , channel state: %x! ");
278528,570466304,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcCmiSimCnf_1,P_WARNING,swLogPrintf("Unexpected CMI CNF:%x , ignore it! ");
278528,570470399,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcCmiPsCnf_1,P_WARNING,swLogPrintf("The NetIf / PDP activated failure! ");
278528,570470400,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcSimBipReqSig_1,P_WARNING,swLogPrintf("Unexpected SIM BIP REQ:%x , ignore it! ");
278528,570472448,0,0,PLAT_AP,PS_STK_BIP,psStkBipProcSimBipRspSig_1,P_WARNING,swLogPrintf("Unexpected SIM BIP RSP:%x , ignore it! ");
278528,570474752,0,0,PLAT_AP,PS_STK_BIP,psStkProcCmiPsBearerDeActInd_1,P_WARNING,swLogPrintf("Bearer context Id %d deactive , channel state %d ");
279552,572526591,0,0,PLAT_AP,CMS,apmuWakeupPsNoneBlock_w_1,P_WARNING,swLogPrintf("CMS , not need send signal to wake up PS , if failed enter sleep2 / HIB ");
279552,572528639,0,0,PLAT_AP,CMS,cmsStartPs_s_1,P_SIG,swLogPrintf("Call CMS SYN API to start PS... ");
279552,572530687,0,0,PLAT_AP,CMS,cmsStartPsNonBlock_s_1,P_SIG,swLogPrintf("Call CMS non-block API to start PS... ");
279552,572530688,0,0,PLAT_AP,CMS,cmsPriSynApiCall_1,P_DEBUG,swLogPrintf("SIG sent pointer:%x ");
279552,572532736,0,0,PLAT_AP,CMS,psDialWakeupPs_1,P_WARNING,swLogPrintf("PS DIAL received sig: 0x%x , while waiting for PS waking up , just enqueue ");
279552,572534784,0,0,PLAT_AP,CMS,psDialFirstPowerPs_1,P_WARNING,swLogPrintf("PS DIAL received sig: 0x%x , during first power cfun , just enqueue ");
279552,572537088,0,0,PLAT_AP,CMS,smsGsmDefaultAlphabet2Ascii_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid input pInGsm [ %d ] : 0x%x ");
279552,572539136,0,0,PLAT_AP,CMS,smsAscii2GsmDefaultAlphabet_warn_1,P_WARNING,swLogPrintf("PSIL SMS , output length ( %d ) should not exceed %d ");
279552,572541184,0,0,PLAT_AP,CMS,smsAscii2GsmDefaultAlphabet_warn_2,P_WARNING,swLogPrintf("PSIL SMS , input length ( %d ) should not exceed %d ");
279552,572543232,0,0,PLAT_AP,CMS,smsAscii2GsmDefaultAlphabet_warn_3,P_WARNING,swLogPrintf("PSIL SMS , invalid input pInGsm [ %d ] : 0x%x ");
279552,572545024,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid UCS2 length: %d ");
279552,572549119,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_2,P_WARNING,swLogPrintf("PSIL SMS , user data header length is 0 ");
279552,572551167,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_3,P_WARNING,swLogPrintf("PSIL SMS , UDH is not supported in DCS 8 BIT ");
279552,572551168,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_4,P_WARNING,swLogPrintf("PSIL SMS , length = %d , user data size should be from 0 to 140 ");
279552,572555263,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_5,P_WARNING,swLogPrintf("PSIL SMS , UDH is not supported in DCS UCS2 ");
279552,572557311,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_6,P_WARNING,swLogPrintf("PSIL SMS , not valid UCS2 PDU ");
279552,572557312,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_7,P_WARNING,swLogPrintf("PSIL SMS , invalid codingScheme = %d ");
279552,572559360,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_8,P_WARNING,swLogPrintf("PSIL SMS , length = %d , user data size should be from 0 to 140 ");
279552,572561664,0,0,PLAT_AP,CMS,smsSubmitText2Pdu_warn_1,P_WARNING,swLogPrintf("PSIL SMS , send Text SMS , length: %d is 0 , or > MAX: %d ");
279552,572563712,0,0,PLAT_AP,CMS,smsSubmitText2Pdu_info_1,P_INFO,swLogPrintf("PSIL SMS , send Text SMS , length: %d , MAX: %d ");
279552,572566272,0,0,PLAT_AP,CMS,smsSubmitText2Pdu_info_2,P_INFO,swLogPrintf("PSIL SMS , Da length:%d , offset:%d , DSC:%d , VPF:%d ");
279552,572568064,0,0,PLAT_AP,CMS,smsSubmitText2Pdu_info_3,P_INFO,swLogPrintf("PSIL SMS , enCode PDU length:%d , offset:%d , DSC:%d ");
279552,572569856,0,0,PLAT_AP,CMS,smsDeliverText2Pdu_warn_1,P_WARNING,swLogPrintf("PSIL SMS , deliver Text SMS , length: %d is 0 , or > MAX: %d ");
279552,572571904,0,0,PLAT_AP,CMS,smsDeliverText2Pdu_info_1,P_INFO,swLogPrintf("PSIL SMS , deliver Text SMS , length: %d , MAX: %d ");
279552,572574208,0,0,PLAT_AP,CMS,smsDeliverText2Pdu_info_2,P_INFO,swLogPrintf("PSIL SMS , Da length:%d , offset:%d , DSC:%d ");
279552,572576256,0,0,PLAT_AP,CMS,smsDeliverText2Pdu_info_3,P_INFO,swLogPrintf("PSIL SMS , enCode PDU length:%d , offset:%d , DSC:%d ");
279552,572578560,0,0,PLAT_AP,CMS,smsSendPduSms_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid SC address in input PDU , hex vale: 0x%x , digit Length: %d , lenInHdr: %d , offset: %d ");
279552,572579840,0,0,PLAT_AP,CMS,smsWriteTextSmsToStorage_warn_1,P_WARNING,swLogPrintf("PSIL SMS , smsMsgType %d not supported ");
279552,572581888,0,0,PLAT_AP,CMS,smsWriteTextSmsToStorage_warn_2,P_WARNING,swLogPrintf("PSIL SMS , smsMsgType %d not supported ");
279552,572583936,0,0,PLAT_AP,CMS,smsWriteTextSmsToStorage_warn_3,P_WARNING,swLogPrintf("PSIL SMS , smsMemType %d not supported ");
279552,572586752,0,0,PLAT_AP,CMS,smsWritePduSmsToStorage_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid SC address in input PDU , hex vale: 0x%x , digit Length: %d , lenInHdr: %d , offset: %d ");
279552,572588032,0,0,PLAT_AP,CMS,smsWritePduSmsToStorage_warn_2,P_WARNING,swLogPrintf("PSIL SMS , smsRecMsgType %d is not supported ");
279552,572590080,0,0,PLAT_AP,CMS,smsWritePduSmsToStorage_warn_3,P_WARNING,swLogPrintf("PSIL SMS , smsMemType %d not supported ");
279552,572592128,0,0,PLAT_AP,CMS,smsSendStoredSms_warn_1,P_WARNING,swLogPrintf("PSIL SMS , TP-MTI ( %d ) is not SMS-SUBMIT ");
279552,572594176,0,0,PLAT_AP,CMS,smsSetSrvCenterAddr_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid UCS2 length: %d ");
279552,572598271,0,0,PLAT_AP,CMS,smsDeleteSmsStoreRecord_1,P_WARNING,swLogPrintf("PSIL SMS , memory allocate failed when get SMS storage information from NVRAM ");
279552,572600319,0,0,PLAT_AP,CMS,smsDeleteSmsStoreRecord_2,P_WARNING,swLogPrintf("PSIL SMS , read SMS storage memory failure ! ");
279552,572600832,0,0,PLAT_AP,CMS,smsDeleteSmsStoreRecord_3,P_WARNING,swLogPrintf("PSIL SMS , delete fail , input param are invalid , Del_Operat:%d , DEL_Index:%d , Del_Flag:%d ");
279552,572602880,0,0,PLAT_AP,CMS,smsPduDecodeUserData_1,P_INFO,swLogPrintf("userDataLen %d , msgParsed %d , msgBodyLen %d ");
279552,572604932,0,0,PLAT_AP,CMS,smsPduDecodeUserData_2,P_INFO,swLogPrintf("PSIL SMS , codingType:%d , out Length:%d , decodeUserData: %s ");
279552,572606720,0,0,PLAT_AP,CMS,smsGetTPUserDataSize_0,P_INFO,swLogPrintf("PSIL SMS , pTPUDLen:%d , pduDataLen: %d ");
279552,572608768,0,0,PLAT_AP,CMS,smsSubmitTpduLen_0,P_INFO,swLogPrintf("PSIL SMS , offset:%d , tpUserDataLen: %d ");
279552,572611072,0,0,PLAT_AP,CMS,SmsSumbitPduToText_1,P_INFO,swLogPrintf("SmsSubmitPduToText , FO:%d , offset:%d , VPF:%d ");
279552,572613120,0,0,PLAT_AP,CMS,SmsSubmitPduToText_2,P_INFO,swLogPrintf("PSIL SMS , PDU length:%d , offset:%d , VPF:%d ");
279552,572615424,0,0,PLAT_AP,CMS,SmsSubmitPduToText_3,P_INFO,swLogPrintf("PSIL SMS , pduLen:%d , dsc:%d , hdrpresent: %d , offset:%d ");
279552,572616960,0,0,PLAT_AP,CMS,smsDeliverTpduLen_0,P_INFO,swLogPrintf("PSIL SMS , offset:%d , tpUserDataLen: %d ");
279552,572619520,0,0,PLAT_AP,CMS,SmsDeliverPduToText_1,P_INFO,swLogPrintf("PSIL SMS , PDU length:%d , dsc:%d , hdrpresent: %d , offset:%d ");
279552,572620800,0,0,PLAT_AP,CMS,SmsSubmitRptPduToText_1,P_ERROR,swLogPrintf("PSIL SMS , PDU length is wrong: %d ");
279552,572622848,0,0,PLAT_AP,CMS,SmsSubmitRptPduToText_2,P_ERROR,swLogPrintf("PSIL SMS , PDU length is wrong: %d ");
279552,572624896,0,0,PLAT_AP,CMS,smsStateStrToInt_1,P_INFO,swLogPrintf("PSIL SMS , SMS status: %d ");
279552,572626945,0,0,PLAT_AP,CMS,smsStateIntToStr_1,P_INFO,swLogPrintf("PSIL SMS , SMS Status: %s ");
279552,572629508,0,0,PLAT_AP,CMS,smsDecodeCbsData_1,P_INFO,swLogPrintf("PSIL SMS , codingType:%d , out Length:%d , decodeUserData: %s ");
279552,572631298,0,0,PLAT_AP,CMS,smsAsciiToUcs2_1,P_INFO,swLogPrintf("PSIL SMS , iLengh:%d , pAscii:%s ");
279552,572633346,0,0,PLAT_AP,CMS,smsUcs2ToAscii_1,P_INFO,swLogPrintf("PSIL SMS , iLengh:%d , pUcs2:%s ");
280576,574622720,0,0,PLAT_AP,SIM_BIP,SimBipProcLinkUp_1,P_WARNING,swLogPrintf("Sim bip link up: dest ipv4 addr %u.%u.%u.%u , port %d ");
280576,574625791,0,0,PLAT_AP,SIM_BIP,SimBipProcLinkUp_2,P_WARNING,swLogPrintf("Sim bip link up failed , close socket! ");
280576,574627839,0,0,PLAT_AP,SIM_BIP,SimBipProcLinkUp_3,P_WARNING,swLogPrintf("Sim bip link up failed , connect server error! ");
280576,574628096,0,0,PLAT_AP,SIM_BIP,SimBipProcLinkUp_4,P_WARNING,swLogPrintf("index:%d , socketId:%d , Sim bip link up successed! ");
280576,574631935,0,0,PLAT_AP,SIM_BIP,SimBipProcLinkUp_5,P_WARNING,swLogPrintf("Sim bip link up failed , bind cid error! ");
280576,574631936,0,0,PLAT_AP,SIM_BIP,SimBipProcLinkDown_0,P_WARNING,swLogPrintf("Sim bip close channel ( Id: %x ) ! ");
280576,574634752,0,0,PLAT_AP,SIM_BIP,SimBipProcSendData_001,P_INFO,swLogPrintf("channelId:%d , index:%d , socketId:%d , linkState:%d! ");
280576,574636032,0,0,PLAT_AP,SIM_BIP,SimBipProcSendData_0,P_ERROR,swLogPrintf("Sim bip send data got error code ( %d ) ! ");
280576,574640127,0,0,PLAT_AP,SIM_BIP,SimBipProcSendData_1,P_WARNING,swLogPrintf("Sim bip send data successed! ");
280576,574642175,0,0,PLAT_AP,SIM_BIP,SimBipProcSendData_2,P_WARNING,swLogPrintf("Sim bip send data failed! ");
280576,574642176,0,0,PLAT_AP,SIM_BIP,SimBipProcRecvData_1,P_WARNING,swLogPrintf("Sim bip recvd data got error code ( %d ) ! ");
280576,574644224,0,0,PLAT_AP,SIM_BIP,SimBipProcRecvData_2,P_WARNING,swLogPrintf("Sim bip recvd data ( %d ) bytes! ");
280576,574648319,0,0,PLAT_AP,SIM_BIP,SimBipProcRecvData_3,P_WARNING,swLogPrintf("Sim bip recvd 0 byte data! Continue to receive data... ");
280576,574648320,0,0,PLAT_AP,SIM_BIP,SimBipProcRecvData_4,P_WARNING,swLogPrintf("Sim bip link drop error ( %d ) , send channel status event download! ");
280576,574652415,0,0,PLAT_AP,SIM_BIP,SimBipProcRecvData_5,P_INFO,swLogPrintf("Sim bip select timeout! ");
280576,574654463,0,0,PLAT_AP,SIM_BIP,SimBipTaskEntry_0,P_WARNING,swLogPrintf("SIM BIP task is starting... ");
280576,574656511,0,0,PLAT_AP,SIM_BIP,SimBipTaskEntry_1,P_WARNING,swLogPrintf("All link state of channel is NULL , so exit the sim bip task... ");
280576,574658559,0,0,PLAT_AP,SIM_BIP,SimBipTaskEntry_3,P_WARNING,swLogPrintf("SIM BIP task is exiting... ");
283648,580915199,0,0,PLAT_AP,CMS_PS_IL,phySetPhyInfo_start_1,P_SIG,swLogPrintf("PS PHY IF , set PHY CFG , need start PS firstly ");
283648,580915459,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromStr_w_1,P_WARNING,swLogPrintf("PS IF , can ' t decode IP addr and mask from str: %s , parsed: %s ");
283648,580918024,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromSt_num_w_1,P_WARNING,swLogPrintf("PS IF , intOffset: %d , addrNum: %d , numVal: %d , can ' t decode IP addr and mask from str: %s ");
283648,580919554,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromStr_addrNum_w_1,P_WARNING,swLogPrintf("PS IF , addr num: %d not right , can ' t decode IP addr and mask from str: %s ");
283648,580921860,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromStr_mask_w_1,P_WARNING,swLogPrintf("PS IF , ip mask: %d , not right , idx: %d , can ' t decode IP addr and mask from str: %s ");
283648,580923908,0,0,PLAT_AP,CMS_PS_IL,psParsePfPortInfoFromStr_w_1,P_WARNING,swLogPrintf("PS IF , can ' t parse port range: %d , %d from str: %s ");
283648,580925441,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_1,P_WARNING,swLogPrintf("PS IF , can ' t parse TOS and mask from str: %s ");
283648,580927746,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_2,P_WARNING,swLogPrintf("PS IF , invalid TOS: %d , str: %s ");
283648,580929537,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_3,P_WARNING,swLogPrintf("PS IF , can ' t parse TOS from str: %s ");
283648,580931842,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_4,P_WARNING,swLogPrintf("PS IF , invalid TOS MASK: %d , str: %s ");
283648,580933633,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_5,P_WARNING,swLogPrintf("PS IF , can ' t parse TOS MASK from str: %s ");
284672,583010560,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrJudgeDlDataIsHighWater_0,P_INFO,swLogPrintf("CMS SOCK , totalUsage has used %d , maxUsageSize:%d , Trigger Highwater ");
284672,583012352,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcDlCacheListBuffer_0,P_WARNING,swLogPrintf("cmsMgr , process socket:%d DL cache is failed! ");
284672,583016447,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrGetFreeMgrContext_1,P_WARNING,swLogPrintf("CmsMgrGetFreeMgrContext reach MAX num ");
284672,583018495,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrGetFreeMgrContext_2,P_ERROR,swLogPrintf("CmsMgrGetFreeMgrContext malloc fail ");
284672,583020543,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnableHibMode_1,P_ERROR,swLogPrintf("cmsSockMgrEnableHibMode invalid parameter ");
284672,583022591,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnableHibMode_2,P_WARNING,swLogPrintf("cmsSockMgrEnableHibMode set hib / sleep2 flags fail ");
284672,583024639,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnableHibMode_3,P_INFO,swLogPrintf("cmsSockMgrEnableHibMode set hib / sleep2 flags success ");
284672,583026687,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCreateSocket_1,P_ERROR,swLogPrintf("cmsSockMgrCreateSocket create socket fail ");
284672,583028735,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCreateSocket_2,P_ERROR,swLogPrintf("cmsSockMgrCreateSockets get file cntrl flags fail ");
284672,583030783,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCreateTcpSrvSocket_1,P_ERROR,swLogPrintf("cmsSockMgrCreateTcpSrvSocket create socket fail ");
284672,583032831,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCreateTcpSrvSocket_2,P_ERROR,swLogPrintf("cmsSockMgrCreateTcpSrvSocket get file cntrl flags fail ");
284672,583034879,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCreateTcpSrvSocket_3,P_ERROR,swLogPrintf("cmsSockMgrCreateTcpSrvSocket bind listen port or lisen address fail ");
284672,583036927,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCreateTcpSrvSocket_4,P_ERROR,swLogPrintf("cmsSockMgrCreateTcpSrvSocket bind listen port or lisen address fail ");
284672,583038975,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrBindSocket_1,P_ERROR,swLogPrintf("cmsSockMgrBindSocket invalid param ");
284672,583041023,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrBindSocket_2,P_ERROR,swLogPrintf("cmsSockMgrBindSocket bind fail , because local address is ipv6 address ");
284672,583043071,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrBindSocket_3,P_ERROR,swLogPrintf("cmsSockMgrBindSocket bind fail ");
284672,583045119,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrBindSocket_4,P_ERROR,swLogPrintf("cmsSockMgrBindSocket bind fail , because local address is ipv4 address ");
284672,583047167,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrBindSocket_5,P_ERROR,swLogPrintf("cmsSockMgrBindSocket bind fail ");
284672,583049215,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrBindSocket_6,P_ERROR,swLogPrintf("cmsSockMgrBindSocket invalid domain type ");
284672,583049216,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectTimeout_1,P_WARNING,swLogPrintf("connect result = -1 get errno = 115 ( EINPROGRESS ) select<0 get errno = %d ");
284672,583053311,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectTimeout_2,P_WARNING,swLogPrintf("connect result = -1 get select = = 0 , timeout ");
284672,583053312,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectTimeout_3,P_WARNING,swLogPrintf("connect result = -1 get select<0 get errno = %d ");
284672,583057407,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectTimeout_4,P_WARNING,swLogPrintf("connect result = -1 get errno = 115 ( EINPROGRESS ) select> = 0 connect success ");
284672,583059455,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_1,P_INFO,swLogPrintf("cmsSockMgrConnectSocket connect success ");
284672,583061503,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_2,P_ERROR,swLogPrintf("cmsSockMgrConnectSocket connect is ongoing ");
284672,583063551,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_3,P_INFO,swLogPrintf("cmsSockMgrConnectSocket connect success ");
284672,583063552,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_4,P_ERROR,swLogPrintf("cmsSockMgrConnectSocket connect fail , error code %d ");
284672,583067647,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_5,P_ERROR,swLogPrintf("cmsSockMgrConnectSocket connect fail ");
284672,583069695,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_6,P_INFO,swLogPrintf("cmsSockMgrConnectSocket connect success ");
284672,583071743,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_7,P_ERROR,swLogPrintf("cmsSockMgrConnectSocket connect is ongoing ");
284672,583073791,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_8,P_INFO,swLogPrintf("cmsSockMgrConnectSocket connect success ");
284672,583073792,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_9,P_ERROR,swLogPrintf("cmsSockMgrConnectSocket connect fail , error code %d ");
284672,583077887,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_10,P_ERROR,swLogPrintf("cmsSockMgrConnectSocket connect fail ");
284672,583079935,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrConnectSocket_11,P_ERROR,swLogPrintf("cmsSockMgrConnectSocket invalid domain type ");
284672,583081983,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCloseSocket_0,P_ERROR,swLogPrintf("cmsSockMgrCloseSocket invalid fd ");
284672,583084031,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCloseSocket_1,P_ERROR,swLogPrintf("cmsSockMgrCloseSocket sockMgrContext is not find ");
284672,583086079,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCloseSocket_2,P_WARNING,swLogPrintf("pdlBufList proc Dlcache fail return error ");
284672,583088127,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCloseSocket_3,P_INFO,swLogPrintf("cmsSockMgrCloseSocket close socket success ");
284672,583090175,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCloseSocket_4,P_ERROR,swLogPrintf("cmsSockMgrCloseSocket close socket fail ");
284672,583092223,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRebuildSocket_1,P_ERROR,swLogPrintf("cmsSockMgrRebuildSocket invalid domain ");
284672,583094271,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRebuildSocket_2,P_ERROR,swLogPrintf("cmsSockMgrRebuildSocket invalid type ");
284672,583096319,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRebuildSocket_3,P_ERROR,swLogPrintf("cmsSockMgrRebuildSocket create socket fail ");
284672,583098367,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRebuildSocket_4,P_ERROR,swLogPrintf("cmsSockMgrRebuildSocket bind socket fail ");
284672,583100415,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRebuildSocket_5,P_INFO,swLogPrintf("cmsSockMgrRebuildSocket bind socket success ");
284672,583102463,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRebuildSocket_6,P_ERROR,swLogPrintf("cmsSockMgrRebuildSocket connect socket fail ");
284672,583104511,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRebuildSocket_7,P_INFO,swLogPrintf("cmsSockMgrRebuildSocket connect socket success ");
284672,583106559,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrGetUlPendingSequenceState_1,P_ERROR,swLogPrintf("cmsSockMgrGetUlPendingSequenceState parameter invalid ");
284672,583108607,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrUpdateUlPendingSequenceBitMapState_1,P_ERROR,swLogPrintf("cmsSockMgrUpdateUlPendingSequenceBitMapStates parameter invalid ");
284672,583110655,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendAsyncRequest_5,P_ERROR,swLogPrintf("cmsSockMgrSendAsyncRequest invalid param ");
284672,583110912,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendAsyncRequest_req_check_1,P_ERROR,swLogPrintf("cmsSockMgrSendAsyncRequest length %u big than message body len %u ");
284672,583114751,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendAsyncRequest_6,P_ERROR,swLogPrintf("init CMS SOCK MGR resource fail ");
284672,583114752,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendAsyncRequest_expect,P_WARNING,swLogPrintf("CmsMgrSendAsyncRequest create loopback udp socket with expect id %u fail ");
284672,583118847,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendAsyncRequest_1,P_ERROR,swLogPrintf("CmsMgrSendAsyncRequest create loopback udp socket fail ");
284672,583120895,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendAsyncRequest_2,P_ERROR,swLogPrintf("CmsMgrSendAsyncRequest bind fail ");
284672,583122943,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendAsyncRequest_3,P_INFO,swLogPrintf("send socket request to socket handler success ");
284672,583124991,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendAsyncRequest_4,P_ERROR,swLogPrintf("send socket request to socket handler fail ");
284672,583127039,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendsyncRequest_1,P_ERROR,swLogPrintf("cmsSockMgrSendsyncRequest invalid param ");
284672,583127296,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSendsyncRequest_req_check_1,P_ERROR,swLogPrintf("cmsSockMgrSendsyncRequest length %u big than message body len %u ");
284672,583131135,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSendsyncRequest_9,P_ERROR,swLogPrintf("init CMS SOCK MGR resource fail ");
284672,583131136,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSendsyncRequest_expect,P_WARNING,swLogPrintf("cmsSockMgrSendsyncRequest create loopback udp socket with expect id %u fail ");
284672,583135231,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSendsyncRequest_2,P_ERROR,swLogPrintf("cmsSockMgrSendsyncRequest create loopback udp socket fail ");
284672,583137279,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendsyncRequest_3,P_ERROR,swLogPrintf("SdkSendSocketRequestWithResponse bind fail ");
284672,583139327,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendsyncRequest_4,P_INFO,swLogPrintf("send socket request to socket handler success ");
284672,583141375,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendsyncRequest_5,P_ERROR,swLogPrintf("send socket request to socket handler fail ");
284672,583143423,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendsyncRequest_6,P_INFO,swLogPrintf("SdkSendSocketRequestWithResponse recv responses ");
284672,583145471,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendsyncRequest_7,P_ERROR,swLogPrintf("SdkSendSocketRequestWithResponse timeout ");
284672,583147519,0,0,PLAT_AP,CMS_SOCK_MGR,CmsMgrSendsyncRequest_8,P_ERROR,swLogPrintf("SdkSendSocketRequestWithResponse recv response fail ");
284672,583147776,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcTimeOutEvent_0,P_WARNING,swLogPrintf("fd %d connect timeout , mErr:%d ");
284672,583149824,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcTimeOutEvent_1,P_WARNING,swLogPrintf("fd %d connect timeout , mErr:%d ");
284672,583151616,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcTimeOutEvent_close_1,P_WARNING,swLogPrintf("fd %d timeout under connect state ");
284672,583153664,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcTimeOutEvent_close_2,P_WARNING,swLogPrintf("fd %d timeout under connect state ");
284672,583157759,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSockRead_dlCache_0,P_WARNING,swLogPrintf("pdlBufList proc Dlcache fail return error ");
284672,583158016,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgr_Highwater_warning,P_WARNING,swLogPrintf("Highwater [ sourceType:%d , sockId:%d ] is occured , ignore read it !!! ");
284672,583160064,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSockRead_1,P_WARNING,swLogPrintf("recv Len = %d , errno = %d ");
284672,583161856,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSockRead_3,P_WARNING,swLogPrintf("sock %d dlfc malloc failed , and add into dlCache list ");
284672,583164160,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessReadEvent_tcpserver_0,P_WARNING,swLogPrintf("tcp server socket id %u accept client error %u ");
284672,583166208,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessReadEvent_tcpserver_1,P_SIG,swLogPrintf("tcp server socket id %u accept client success socket id %u ");
284672,583168000,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessReadEvent_server_1,P_SIG,swLogPrintf("sockId:%d , tcp server ");
284672,583170304,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessReadEvent_server_fail_0,P_SIG,swLogPrintf("sockId:%d , listen tcp client is fail , ret:%d ");
284672,583172352,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessReadEvent_server_fail_1,P_SIG,swLogPrintf("sockId:%d , listen udp client is fail , ret:%d ");
284672,583174144,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessReadEvent_server_2,P_INFO,swLogPrintf("not support type:%d ");
284672,583176448,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessReadEvent_server_fail_2,P_SIG,swLogPrintf("sockId:%d , process client read is fail , ret:%d ");
284672,583178240,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessWriteEvent_0,P_INFO,swLogPrintf("selcet>0 sth to write at sockId:%d ");
284672,583180288,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessWriteEvent_1,P_WARNING,swLogPrintf("fd %d can write now , but invalid status ");
284672,583184383,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSockDlCacheContext_0,P_WARNING,swLogPrintf("pdlBufList proc Dlcache fail return error ");
284672,583184384,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcRemoveCacheNode_1,P_INFO,swLogPrintf("socket %d no find cache data ");
284672,583188479,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcDlCacheData_0,P_ERROR,swLogPrintf("cmsSockMgrCloseSocket sockMgrContext is not find ");
284672,583190527,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcDlCacheData_1,P_INFO,swLogPrintf("dl pdu allocate fail ");
284672,583190784,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcDlCacheData_send,P_WARNING,swLogPrintf("send sockt %d DL Cache buffer data , len:%d ");
284672,583192576,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallErrorEventCallback_2,P_WARNING,swLogPrintf("cmsSockMgrCallErrorEventCallback %d fd , but eventcallback is invalid ");
284672,583196671,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnableVoteHib_0,P_INFO,swLogPrintf("cmsSockMgr task enable enter hib / sleep2 mode ");
284672,583198719,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrDisableVoteHib_0,P_INFO,swLogPrintf("cmsSockMgr task disable enter hib / sleep2 mode ");
284672,583200767,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcVoteToHib_0,P_INFO,swLogPrintf("cmsSockMgr task enable enter hib / sleep2 mode ");
284672,583202815,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcVoteToHib_1,P_INFO,swLogPrintf("cmsSockMgr task disable enter hib / sleep2 mode ");
284672,583204863,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcLocalServerRdEvent_0,P_INFO,swLogPrintf("read local server fail ");
284672,583204864,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcLocalServerRdEvent_1,P_WARNING,swLogPrintf("cms sock mgr message magic %u is invalid ");
284672,583206912,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcLocalServerRdEvent_2,P_WARNING,swLogPrintf("cms sock mgr invalid message type %u ");
284672,583211007,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRegisterHandleDefine_1,P_ERROR,swLogPrintf("cmsSockMgrRegisterHandleDefine invalid handlefine ");
284672,583211008,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRegisterHandleDefine_2,P_WARNING,swLogPrintf("cmsSockMgrRegisterHandleDefine source %d has exist ");
284672,583213056,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRegisterHandleDefine_3,P_ERROR,swLogPrintf("cmsSockMgrRegisterHandleDefine source %d get free handledefine context fail ");
284672,583217151,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCommonCheckHib_1,P_ERROR,swLogPrintf("cmsSockMgrCommonCheckHib invalid context ");
284672,583217152,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCommonCheckHib_check_0,P_INFO,swLogPrintf("cmsSockMgrCommonCheckHib sockId %d has dl cache data , hib mode disable ");
284672,583219200,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCommonCheckHib_check_1,P_INFO,swLogPrintf("cmsSockMgrCommonCheckHib sockId %d has UL pending buffer , hib mode disable ");
284672,583221248,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCommonCheckHib_2,P_INFO,swLogPrintf("cmsSockMgrCommonCheckHib sockId %d hib mode disable ");
284672,583223296,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCommonCheckHib_4,P_INFO,swLogPrintf("cmsSockMgrCommonCheckHib sockId %d change to hib / sleep2 mode success ");
284672,583225344,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCommonCheckHib_5,P_INFO,swLogPrintf("cmsSockMgrCommonCheckHib sockId %d change to hib / sleep2 mode fail ");
284672,583227392,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCommonCheckHib_6,P_INFO,swLogPrintf("cmsSockMgrCommonCheckHib sockId %d is server ");
284672,583229696,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCommonCheckHib_3,P_INFO,swLogPrintf("cmsSockMgrCommonCheckHib sockId %d status %d is not valid ");
284672,583233535,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrPubCheckHib_1,P_ERROR,swLogPrintf("cmsSockMgrPubCheckHib invalid context ");
284672,583235583,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrPubCheckHib_2,P_ERROR,swLogPrintf("cmsSockMgrPubCheckHib source is invalid ");
284672,583235584,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrPubCheckHib_3,P_ERROR,swLogPrintf("cmsSockMgrPubCheckHib can not find handledefine , maybe not register %d ");
284672,583239679,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessEvent_1,P_ERROR,swLogPrintf("cmsSockMgrProcessEvent invalid event ");
284672,583241727,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessEvent_2,P_ERROR,swLogPrintf("cmsSockMgrProcessEvent invalid magic ");
284672,583241728,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessEvent_3,P_WARNING,swLogPrintf("cmsSockMgrProcessEvent invalid event id %u ");
284672,583245823,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_1,P_ERROR,swLogPrintf("cmsSockMgrProcessRequest invalid request ");
284672,583245824,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_2,P_ERROR,swLogPrintf("cmsSockMgrProcessRequest invalid request source %d ");
284672,583247872,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_3,P_ERROR,swLogPrintf("cmsSockMgrProcessRequest can not find handledefine , maybe not register %d ");
284672,583249920,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_4,P_INFO,swLogPrintf("cmsSockMgrProcessRequest process sync request %d ");
284672,583254015,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_5,P_ERROR,swLogPrintf("cmsSockMgrProcessRequest invalid request process function ");
284672,583256063,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_timeout_1,P_ERROR,swLogPrintf("cmsSockMgrProcessRequest sync request has timeout ");
284672,583258111,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_timeout_2,P_ERROR,swLogPrintf("cmsSockMgrProcessRequest sync request has timeout ");
284672,583258112,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_7,P_INFO,swLogPrintf("cmsSockMgrProcessRequest process async request %d ");
284672,583262207,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_8,P_ERROR,swLogPrintf("cmsSockMgrProcessRequest invalid request process function ");
284672,583264255,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessRequest_9,P_ERROR,swLogPrintf("cmsSockMgrProcessRequest invalid request magic ");
284672,583264256,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallProcUlPendingCallBack_0,P_WARNING,swLogPrintf("cmsSockMgrCallProcUlPendingCallBack %d ");
284672,583266304,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallProcUlPendingCallBack_1,P_WARNING,swLogPrintf("cmsSockMgrCallProcUlPendingCallBack %d fd , but eventcallback is invalid ");
284672,583268352,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallStatusEventCallback_1,P_INFO,swLogPrintf("cmsSockMgrCallStatusEventCallback cause %d ");
284672,583270400,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallStatusEventCallback_2,P_WARNING,swLogPrintf("cmsSockMgrCallStatusEventCallback %d fd , but eventcallback is invalid ");
284672,583272448,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallDlEventCallback_1,P_INFO,swLogPrintf("cmsSockMgrCallDlEventCallback dl %d , fd ");
284672,583275008,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallUlStatusEventCallback_1,P_INFO,swLogPrintf("the sockeId %d ul sequence %u , status %u status event callback compelete ");
284672,583276544,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallUlStatusEventCallback_2,P_WARNING,swLogPrintf("the sockeId %d event callback function is invalid ");
284672,583278848,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallUlStatusStatusEventCallback_1,P_INFO,swLogPrintf("the sockeId %d ul total %u event compelete ");
284672,583280640,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallUlStatusStatusEventCallback_2,P_WARNING,swLogPrintf("the sockeId %d event callback function is invalid ");
284672,583284735,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessUlStatusInd_1,P_ERROR,swLogPrintf("cmsSockMgrProcessUlStatusInd invalid indication ");
284672,583286783,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessUlStatusInd_2,P_ERROR,swLogPrintf("cmsSockMgrProcessUlStatusInd invalid mgr context ");
284672,583288831,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessUlTotalStatusInd_1,P_ERROR,swLogPrintf("cmsSockMgrProcessUlTotalStatusInd invalid request ");
284672,583290879,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcessUlTotalStatusInd_2,P_ERROR,swLogPrintf("cmsSockMgrProcessUlTotalStatusInd invalid mgr context ");
284672,583291136,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallTcpServerAcceptClientEventCallback_1,P_INFO,swLogPrintf("the sockeId %d accept client socketId %d event callback compelete ");
284672,583292928,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrCallTcpServerAcceptClientEventCallback_2,P_WARNING,swLogPrintf("the sockeId %d event callback function is invalid ");
284672,583294976,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcAcceptClientRequest_0,P_ERROR,swLogPrintf("cmsSockMgrProcessTcpServerAcceptClientRequest invalid source %d ");
284672,583297024,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcAcceptClientRequest_1,P_ERROR,swLogPrintf("cmsSockMgrProcessTcpServerAcceptClientRequest can not find handledefine , maybe not register %d ");
284672,583299072,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcAcceptClientRequest_2,P_SIG,swLogPrintf("cmsSockMgrProcessTcpServerAcceptClientRequest accept the client %d ");
284672,583301120,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcAcceptClientRequest_3,P_SIG,swLogPrintf("cmsSockMgrProcessTcpServerAcceptClientRequest did not accept the client %d ");
284672,583303168,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrProcAcceptClientRequest_4,P_WARNING,swLogPrintf("cmsSockMgrProcessTcpServerAcceptClientRequest can not find tcperveracceptclient process , maybe not register %d ");
284672,583305216,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrLoop_0,P_INFO,swLogPrintf("cmsSockMgrLoop create! , wakeup flag %u ");
284672,583307264,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrLoop_invalid_socket_0,P_INFO,swLogPrintf("cmsSockMgr sock:%d is not create ");
284672,583309312,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrLoop_invalid_read_0,P_INFO,swLogPrintf("cmsSockMgr sock:%d read fail , break ");
284672,583313407,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrLoop_timeout_0,P_INFO,swLogPrintf("select timeout ");
284672,583315455,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrLoop_select_fail_0,P_INFO,swLogPrintf("select fail ");
284672,583317503,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrLoop_invalid_socket_1,P_INFO,swLogPrintf("No sockets existed , return ");
284672,583317504,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSockServerInit_expect_socket,P_WARNING,swLogPrintf("cmsSockMgrSockServerInit create loopback udp socket with expect id %u fail ");
284672,583321599,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrSockServerInit_1,P_ERROR,swLogPrintf("cmsSockMgrSockServerInit create loopback udp socket fail ");
284672,583323647,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrLoop_27,P_INFO,swLogPrintf("exit cmsSockMgr task ");
284672,583325695,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_1,P_INFO,swLogPrintf("cmsSockMgrEnterHibCallback enter ");
284672,583327743,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_2,P_INFO,swLogPrintf("cmsSockMgrEnterHibCallback store udp context ");
284672,583327744,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_3,P_ERROR,swLogPrintf("cmsSockMgrEnterHibCallback can not find handledefine , maybe not register %d ");
284672,583331839,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_4,P_INFO,swLogPrintf("cmsSockMgrEnterHibCallback store udp context compelete ");
284672,583331840,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_5,P_WARNING,swLogPrintf("cmsSockMgrEnterHibCallback sockId %d no storeHibContext function ");
284672,583335935,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_6,P_INFO,swLogPrintf("cmsSockMgrEnterHibCallback store tcp context ");
284672,583335936,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_7,P_ERROR,swLogPrintf("cmsSockMgrEnterHibCallback can not find handledefine , maybe not register %d ");
284672,583340031,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_8,P_INFO,swLogPrintf("cmsSockMgrEnterHibCallback store tcp context complete ");
284672,583340032,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrEnterHibCallback_9,P_WARNING,swLogPrintf("cmsSockMgrEnterHibCallback sockId %d no storeHibContext function ");
284672,583344127,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_1,P_INFO,swLogPrintf("cmsSockMgrRecoverHibCallback enter ");
284672,583346175,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_2,P_INFO,swLogPrintf("cmsSockMgrRecoverHibCallback invalid hib context , can not recover ");
284672,583348223,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_3,P_INFO,swLogPrintf("cmsSockMgrRecoverHibCallback no hibcontext need recover ");
284672,583348736,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_4,P_WARNING,swLogPrintf("cmsSockMgrRecoverHibCallback udp sockId %d or source %d or magic %d is invalid ");
284672,583350272,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_5,P_INFO,swLogPrintf("cmsSockMgrRecoverHibCallback recover udp context , sockId %d ");
284672,583352320,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_6,P_ERROR,swLogPrintf("cmsSockMgrRecoverHibCallback can not find handledefine , maybe not register %d ");
284672,583354368,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_7,P_INFO,swLogPrintf("cmsSockMgrRecoverHibCallback recover udp context , sockId %d compelete ");
284672,583356928,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_8,P_WARNING,swLogPrintf("cmsSockMgrRecoverHibCallback tcp sockId %d or source %d or magic %d is invalid ");
284672,583358464,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_9,P_INFO,swLogPrintf("cmsSockMgrRecoverHibCallback recover tcp context , sockId %d ");
284672,583360512,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_10,P_ERROR,swLogPrintf("cmsSockMgrRecoverHibCallback can not find handledefine , maybe not register %d ");
284672,583362560,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_11,P_INFO,swLogPrintf("cmsSockMgrRecoverHibCallback recover tcp context , sockId %d compelete ");
284672,583366655,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_12,P_INFO,swLogPrintf("cmsSockMgrRecoverHibCallback INIT CMS SOCK MGR success ");
284672,583368703,0,0,PLAT_AP,CMS_SOCK_MGR,cmsSockMgrRecoverHibCallback_13,P_ERROR,swLogPrintf("cmsSockMgrRecoverHibCallback INIT CMS SOCK MGR fail ");
284672,583370751,0,0,PLAT_AP,CMS_SOCK_MGR,TcpipApiCloseConnection_set_close_timeout_2,P_INFO,swLogPrintf("TcpipApiCloseConnection enable tcp close timeout option success ");
284672,583371008,0,0,PLAT_AP,CMS_SOCK_MGR,udp_send_dns_resolve_result_len_check_1,P_ERROR,swLogPrintf("cmsSockMgrSendAsyncRequest length %u big than message body len %u ");
285696,585109503,0,0,PLAT_AP,EC_API,apIpcWakeup_0,P_SIG,swLogPrintf("Send IPC Wake up Signal ");
285696,585110016,0,0,PLAT_AP,EC_API,ApFpgaIpcIsr_0,P_SIG,swLogPrintf("msgId = %x , bFastMsg = %x , msgBodyLen = %x ");
285696,585113599,0,0,PLAT_AP,EC_API,ApFpgaIpcIsr_1,P_SIG,swLogPrintf("HandShake REQ Received! ");
285696,585115647,0,0,PLAT_AP,EC_API,ApFpgaIpcAlone0Isr_0,P_SIG,swLogPrintf("Enter FPGA IPC ALONE0 ISR! ISR INFO WRONG ");
285696,585117695,0,0,PLAT_AP,EC_API,ApFpgaIpcAlone0Isr_1,P_SIG,swLogPrintf("Enter FPGA IPC ALONE0 ISR! ");
285696,585119743,0,0,PLAT_AP,EC_API,ApFpgaIpcAlone1Isr_0,P_SIG,swLogPrintf("Enter FPGA IPC ALONE1 ISR! ISR INFO WRONG ");
285696,585121791,0,0,PLAT_AP,EC_API,ApFpgaIpcAlone1Isr_1,P_SIG,swLogPrintf("Enter FPGA IPC ALONE1 ISR! ");
285696,585123839,0,0,PLAT_AP,EC_API,ApFpgaIpcMergeIsr_0,P_SIG,swLogPrintf("Enter FPGA IPC MERGE ISR! ISR INFO WRONG ");
285696,585125887,0,0,PLAT_AP,EC_API,ApFpgaIpcMergeIsr_1,P_SIG,swLogPrintf("Enter FPGA IPC MERGE ISR! ");
285696,585127935,0,0,PLAT_AP,EC_API,ApFpgaSipcIsr_0,P_SIG,swLogPrintf("AP SIPC ISR OK ");
285696,585129983,0,0,PLAT_AP,EC_API,ApFpgaSipcIsr_2,P_SIG,swLogPrintf("AP SIPC RESET OK ");
285696,585132031,0,0,PLAT_AP,EC_API,ApFpgaSipcIsr_3,P_SIG,swLogPrintf("AP SIPC RESET NOK ");
285696,585134079,0,0,PLAT_AP,EC_API,ApFpgaSipcIsr_1,P_SIG,swLogPrintf("AP SIPC ISR NOK ");
285696,585136127,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_0,P_SIG,swLogPrintf("Start IPC FGPA TEST! ");
285696,585138175,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_1,P_SIG,swLogPrintf("C2A_IPC_INIT_REQ RECEIVED ");
285696,585138176,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_2,P_SIG,swLogPrintf("Send Data to CP , caseIndex = %d \n ");
285696,585140736,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_3,P_SIG,swLogPrintf("M = %d , N = %d , X = %d ");
285696,585144319,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_4,P_SIG,swLogPrintf("RECEIVED CP DATA IND ( 1 ) ");
285696,585146367,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_5,P_SIG,swLogPrintf("RECEIVED CP DATA IND ( 2 ) ");
285696,585148415,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_6,P_SIG,swLogPrintf("RECEIVED CP DATA IND ( 3 ) ");
285696,585150463,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_7,P_SIG,swLogPrintf("SIPC Lock by AP ");
285696,585152511,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_8,P_SIG,swLogPrintf("SIPC Release by AP ");
285696,585154559,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_9,P_SIG,swLogPrintf("SIPC Release by CP ");
285696,585156607,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_10,P_SIG,swLogPrintf("SIPC SET INT ");
285696,585156608,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_11,P_SIG,swLogPrintf("Case Pass: caseIndex = %d \n ");
285696,585158656,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_12,P_SIG,swLogPrintf("Case Fail: caseIndex = %d \n ");
285696,585160704,0,0,PLAT_AP,EC_API,appPsCmiReqBlockCallback_warn_1,P_WARNING,swLogPrintf("EC API , APP CMI request is busy , can ' t proc new , freeBitmap: 0x%x ");
285696,585163264,0,0,PLAT_AP,EC_API,psBlockProcCmiCnf_warning_1,P_WARNING,swLogPrintf("EC API , blocked psCmiReq , guard timer maybe expiried before , sgId: %d , primId: %d , subHdrId: %d ");
285696,585164800,0,0,PLAT_AP,EC_API,psBlockProcTimerExpiry_warning_1,P_WARNING,swLogPrintf("EC API , block timer expiry , but block info not exist , maybe confirmed before , subHdrId: %d ");
293888,601884928,0,0,PLAT_AP,LWIP_CORE,dns_init_1,P_WARNING,swLogPrintf("dns_init dns_query ( %u ) , dns_answer ( %u ) ");
293888,601888767,0,0,PLAT_AP,LWIP_CORE,dns_init_2,P_INFO,swLogPrintf("dns_init initializing ");
293888,601888768,0,0,PLAT_AP,LWIP_CORE,dns_clear_cache_1,P_INFO,swLogPrintf("dns_clearcache:type %u ");
293888,601890816,0,0,PLAT_AP,LWIP_CORE,dns_clear_cache_2,P_SIG,swLogPrintf("dns_clearcache:invalid type %u ");
293888,601894911,0,0,PLAT_AP,LWIP_CORE,dns_find_adpt_hib_tiny_entry_1,P_INFO,swLogPrintf("dns_find_adpt_hib_tiny_entry ");
293888,601896959,0,0,PLAT_AP,LWIP_CORE,dns_add_cache_entry_1,P_INFO,swLogPrintf("dns_add_cache_entry ");
293888,601899007,0,0,PLAT_AP,LWIP_CORE,dns_add_cache_entry_2,P_INFO,swLogPrintf("dns_add_cache_entry has timeout ");
293888,601899008,0,0,PLAT_AP,LWIP_CORE,dns_add_cache_entry_3,P_INFO,swLogPrintf("active dns entry cache timer %u ");
293888,601903103,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_1,P_INFO,swLogPrintf("dns_entry_retry_timer_handler timeout ");
293888,601905151,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,601905152,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_3,P_WARNING,swLogPrintf("invalid dns entry 0x%x ");
293888,601909247,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_4,P_INFO,swLogPrintf("dns_check_entry:timeout ");
293888,601909248,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_5,P_WARNING,swLogPrintf("dns_send returned error2: ( %d ) ");
293888,601911552,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_6,P_INFO,swLogPrintf("active dns entry timout %u , entry 0x%x ");
293888,601915391,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_7,P_ERROR,swLogPrintf("unknown dns_table entry retry timeout invalid ");
293888,601915392,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_8,P_ERROR,swLogPrintf("unknown dns_table entry state %u ");
293888,601919487,0,0,PLAT_AP,LWIP_CORE,dns_entry_cache_timer_handler_1,P_INFO,swLogPrintf("dns_entry_cache_timer_handler timeout ");
293888,601921535,0,0,PLAT_AP,LWIP_CORE,dns_entry_cache_timer_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,601923583,0,0,PLAT_AP,LWIP_CORE,dns_entry_cache_timer_handler_3,P_INFO,swLogPrintf("dns_check_entry:flush ");
293888,601923584,0,0,PLAT_AP,LWIP_CORE,dns_entry_cache_timer_handler_4,P_ERROR,swLogPrintf("unknown dns_table entry state %u ");
293888,601927679,0,0,PLAT_AP,LWIP_CORE,dns_lookup_1,P_INFO,swLogPrintf("dns_lookup found ");
293888,601929727,0,0,PLAT_AP,LWIP_CORE,dns_lookup_timeout_1,P_INFO,swLogPrintf("dns_lookup has timeout ");
293888,601931775,0,0,PLAT_AP,LWIP_CORE,dns_lookup_timeout_2,P_INFO,swLogPrintf("dns_lookup has timeout ");
293888,601931776,0,0,PLAT_AP,LWIP_CORE,dns_send_1,P_INFO,swLogPrintf("dns_send dns_servers %u request ");
293888,601933824,0,0,PLAT_AP,LWIP_CORE,dns_send_2,P_ERROR,swLogPrintf("dns_send dns_servers %u request ");
293888,601936128,0,0,PLAT_AP,LWIP_CORE,dns_send_3,P_INFO,swLogPrintf("sending DNS request ID ( %d ) for name to server ( %d ) ");
293888,601937920,0,0,PLAT_AP,LWIP_CORE,dns_send_4,P_INFO,swLogPrintf("dns_send entry retry timeout %u ");
293888,601939968,0,0,PLAT_AP,LWIP_CORE,dns_send_5,P_INFO,swLogPrintf("dns_send entry retry timeout %u ");
293888,601944063,0,0,PLAT_AP,LWIP_CORE,dns_send_6,P_ERROR,swLogPrintf("dns_send entry retry timeout invalid ");
293888,601946111,0,0,PLAT_AP,LWIP_CORE,dns_call_found_1,P_ERROR,swLogPrintf("invalid ipv6 response ");
293888,601948159,0,0,PLAT_AP,LWIP_CORE,dns_call_found_2,P_ERROR,swLogPrintf("invalid ipv4 response ");
293888,601950207,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_1,P_ERROR,swLogPrintf("array index out of bounds ");
293888,601950208,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_2,P_WARNING,swLogPrintf("dns_send returned error1: ( %d ) ");
293888,601952512,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_3,P_INFO,swLogPrintf("active dns entry retry timeout %u entry 0x%x ");
293888,601956351,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_4,P_INFO,swLogPrintf("dns_check_entry:timeout ");
293888,601956352,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_5,P_WARNING,swLogPrintf("dns_send returned error2: ( %d ) ");
293888,601960447,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_6,P_INFO,swLogPrintf("dns_check_entry:flush ");
293888,601962495,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_7,P_ERROR,swLogPrintf("unknown dns_table entry state ");
293888,601964543,0,0,PLAT_AP,LWIP_CORE,dns_clear_entry_1,P_ERROR,swLogPrintf("the name point is null ");
293888,601964544,0,0,PLAT_AP,LWIP_CORE,dns_clear_entry_2,P_INFO,swLogPrintf("dns_clear_entry index %u ");
293888,601968639,0,0,PLAT_AP,LWIP_CORE,dns_clear_all_entry_1,P_INFO,swLogPrintf("dns_clear_all_entry ");
293888,601970687,0,0,PLAT_AP,LWIP_CORE,dns_get_dns_server_info_1,P_WARNING,swLogPrintf("dns_get_dns_server_info invalid ");
293888,601970688,0,0,PLAT_AP,LWIP_CORE,dns_get_dns_server_info_2,P_INFO,swLogPrintf("dns_get_dns_server_info dns server index %u ");
293888,601972736,0,0,PLAT_AP,LWIP_CORE,dns_get_dns_server_info_3,P_INFO,swLogPrintf("dns_get_dns_server_info dns server number %u ");
293888,601976831,0,0,PLAT_AP,LWIP_CORE,dns_disable_all_cache_1,P_INFO,swLogPrintf("dns_disable_all_cache ");
293888,601978879,0,0,PLAT_AP,LWIP_CORE,dns_enable_all_cache_1,P_INFO,swLogPrintf("dns_disable_all_cache ");
293888,601978880,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_1,P_INFO,swLogPrintf("remove dns entry retry timer , entry 0x%x ");
293888,601982975,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_2,P_INFO,swLogPrintf("dns_recv response = ");
293888,601982976,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_3,P_INFO,swLogPrintf("remove dns entry cache timer , entry 0x%x ");
293888,601985024,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_4,P_INFO,swLogPrintf("active dns entry cache timer %u ");
293888,601989119,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_5,P_INFO,swLogPrintf("disable dns entry cache ");
293888,601991167,0,0,PLAT_AP,LWIP_CORE,dns_recv_9,P_INFO,swLogPrintf("dns_recv one packet ");
293888,601993215,0,0,PLAT_AP,LWIP_CORE,dns_recv_1,P_WARNING,swLogPrintf("dns_recv pbuf too small ");
293888,601995263,0,0,PLAT_AP,LWIP_CORE,dns_recv_2,P_INFO,swLogPrintf("dns_recv not a response ");
293888,601997311,0,0,PLAT_AP,LWIP_CORE,dns_recv_3,P_INFO,swLogPrintf("dns_recv response not match to query1 ");
293888,601999359,0,0,PLAT_AP,LWIP_CORE,dns_recv_4,P_INFO,swLogPrintf("dns_recv response not match to query2 ");
293888,602001407,0,0,PLAT_AP,LWIP_CORE,dns_recv_5,P_INFO,swLogPrintf("dns_recv response not match to query3 ");
293888,602003455,0,0,PLAT_AP,LWIP_CORE,dns_recv_6,P_INFO,swLogPrintf("dns_recv error in flags ");
293888,602005503,0,0,PLAT_AP,LWIP_CORE,dns_recv_7,P_INFO,swLogPrintf("dns_recv error in response ");
293888,602007551,0,0,PLAT_AP,LWIP_CORE,dns_recv_8,P_ERROR,swLogPrintf("dns_recv memory error ");
293888,602007552,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_netif_invalid_1,P_ERROR,swLogPrintf("dns_enqueue can not find netif by cid %u ");
293888,602011647,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_1,P_INFO,swLogPrintf("dns_enqueue duplicate request ");
293888,602013695,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_2,P_INFO,swLogPrintf("dns_enqueue DNS entries table is full ");
293888,602015743,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_3,P_INFO,swLogPrintf("dns_enqueue DNS request entries table is full ");
293888,602015744,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_4,P_INFO,swLogPrintf("dns_enqueue use DNS entry ( %u ) ");
293888,602019839,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_5,P_WARNING,swLogPrintf("dns_enqueue failed to allocate a pcb ");
293888,602019840,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_6,P_INFO,swLogPrintf("dns_enqueue use DNS pcb ( %u ) ");
293888,602023935,0,0,PLAT_AP,LWIP_CORE,dns_gethostbyname_addrtype_1,P_WARNING,swLogPrintf("dns_gethostbyname name too long to resolve ");
293888,602024192,0,0,PLAT_AP,LWIP_CORE,inet_cksum_pseudo_base_2,P_INFO,swLogPrintf("inet_chksum_pseudo ( ) pbuf 0x%x chain lwip_chksum ( ) = %x ");
293888,602028031,0,0,PLAT_AP,LWIP_CORE,inet_cksum_pseudo_partial_base_1,P_ERROR,swLogPrintf("delete me ");
293888,602030079,0,0,PLAT_AP,LWIP_CORE,mem_malloc_1,P_ERROR,swLogPrintf("malloc ( ) must return aligned memory ");
293888,602032127,0,0,PLAT_AP,LWIP_CORE,mem_free_1,P_ERROR,swLogPrintf("rmem = = NULL or rmem ! = MEM_ALIGN ( rmem ) ");
293888,602034175,0,0,PLAT_AP,LWIP_CORE,do_memp_malloc_pool_1,P_ERROR,swLogPrintf("memp_malloc: memp properly aligned ");
293888,602036223,0,0,PLAT_AP,LWIP_CORE,do_memp_malloc_pool_2,P_ERROR,swLogPrintf("memp_malloc: out of memory in pool ");
293888,602038271,0,0,PLAT_AP,LWIP_CORE,memp_malloc_pool_1,P_ERROR,swLogPrintf("invalid pool desc ");
293888,602040319,0,0,PLAT_AP,LWIP_CORE,memp_malloc_1,P_ERROR,swLogPrintf("memp_malloc: type < MEMP_MAX ");
293888,602040320,0,0,PLAT_AP,LWIP_CORE,memp_malloc_2,P_ERROR,swLogPrintf("memp_malloc: type %d fail ");
293888,602042624,0,0,PLAT_AP,LWIP_CORE,memp_malloc_3,P_INFO,swLogPrintf("memp_malloc: type %d , address 0x%x success ");
293888,602046463,0,0,PLAT_AP,LWIP_CORE,do_memp_free_pool_1,P_ERROR,swLogPrintf("memp_free: mem properly aligned ");
293888,602048511,0,0,PLAT_AP,LWIP_CORE,do_memp_free_pool_2,P_ERROR,swLogPrintf("memp sanity ");
293888,602050559,0,0,PLAT_AP,LWIP_CORE,memp_free_pool_1,P_ERROR,swLogPrintf("invalid pool desc ");
293888,602052607,0,0,PLAT_AP,LWIP_CORE,memp_free_1,P_ERROR,swLogPrintf("memp_free: type < MEMP_MAX ");
293888,602052864,0,0,PLAT_AP,LWIP_CORE,memp_free_3,P_INFO,swLogPrintf("memp_free: type %d , address 0x%x ");
293888,602054912,0,0,PLAT_AP,LWIP_CORE,memp_free_2,P_INFO,swLogPrintf("memp_free: type %d , address 0x%x success ");
293888,602058751,0,0,PLAT_AP,LWIP_CORE,netif_add_1,P_ERROR,swLogPrintf("No init function given ");
293888,602059520,0,0,PLAT_AP,LWIP_CORE,netif_add_2,P_INFO,swLogPrintf("netif 0x%x added list 0x%x interface %c%u IP ");
293888,602061312,0,0,PLAT_AP,LWIP_CORE,netif_add_3,P_INFO,swLogPrintf("netif 0x%x added list interface %c%u IP complete ");
293888,602063872,0,0,PLAT_AP,LWIP_CORE,netif_remove_1,P_INFO,swLogPrintf("netif_remove:0x%x removed from list 0x%x netif %c%u , net_type %u ");
293888,602065408,0,0,PLAT_AP,LWIP_CORE,netif_remove_2,P_INFO,swLogPrintf("netif_remove:0x%x removed from list netif %c%u complete ");
293888,602066944,0,0,PLAT_AP,LWIP_CORE,netif_remove_type_1,P_INFO,swLogPrintf("netif_remove_type : removed netif type :%d ");
293888,602069248,0,0,PLAT_AP,LWIP_CORE,netif_find_1,P_INFO,swLogPrintf("netif_find: found %c%u ");
293888,602071296,0,0,PLAT_AP,LWIP_CORE,netif_find_2,P_INFO,swLogPrintf("netif_find: didn ' t find %c%u ");
293888,602075135,0,0,PLAT_AP,LWIP_CORE,netif_set_arp_reply_mode_1,P_ERROR,swLogPrintf("netif_remove_type : invalid netif point ");
293888,602075136,0,0,PLAT_AP,LWIP_CORE,netif_set_arp_reply_mode_2,P_INFO,swLogPrintf("netif_set_arp_reply_mode : :%d ");
293888,602079231,0,0,PLAT_AP,LWIP_CORE,netif_set_arp_reply_ignore_addr_1,P_ERROR,swLogPrintf("netif_set_arp_reply_ignore_addr : invalid netif point ");
293888,602081279,0,0,PLAT_AP,LWIP_CORE,netif_set_arp_reply_ignore_addr_2,P_INFO,swLogPrintf("netif_set_arp_reply_ignore_addr ");
293888,602081536,0,0,PLAT_AP,LWIP_CORE,netif_enter_oos_1,P_INFO,swLogPrintf("netif_enter_oos: netif enter oos %c%u ");
293888,602083584,0,0,PLAT_AP,LWIP_CORE,netif_exit_oos_1,P_INFO,swLogPrintf("netif_exit_oos: netif exit oos %c%u ");
293888,602087423,0,0,PLAT_AP,LWIP_CORE,netif_enable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602089471,0,0,PLAT_AP,LWIP_CORE,netif_disable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602089728,0,0,PLAT_AP,LWIP_CORE,netif_set_netif_type_1,P_INFO,swLogPrintf("netif_set_netif_type: netif 0x%x set net type %u ");
293888,602093567,0,0,PLAT_AP,LWIP_CORE,netif_find_by_wan_netif_1,P_INFO,swLogPrintf("netif_find_by_wan_netif: didn ' t wan netif ");
293888,602094080,0,0,PLAT_AP,LWIP_CORE,netif_find_by_cid_1,P_INFO,swLogPrintf("netif_find: found %c%u cid %u ");
293888,602095616,0,0,PLAT_AP,LWIP_CORE,netif_find_by_cid_2,P_INFO,swLogPrintf("netif_find: didn ' t find %d ");
293888,602098176,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ip4_cid_1,P_INFO,swLogPrintf("netif_find: found %c%u cid %u ");
293888,602099712,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ip4_cid_2,P_INFO,swLogPrintf("netif_find: didn ' t find %d ");
293888,602101760,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ded_cid_in_w_1,P_INFO,swLogPrintf("netif_find , invalid ded_cid: %d , can ' t found netif ");
293888,602103808,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ded_cid_1,P_INFO,swLogPrintf("netif_find , found netif via ded_cid: %d ");
293888,602105856,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ded_cid_w_1,P_INFO,swLogPrintf("netif_find: didn ' t find ded_cid: %d ");
293888,602108416,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ip6_cid_1,P_INFO,swLogPrintf("netif_find: found %c%u cid %u ");
293888,602109952,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ip6_cid_2,P_INFO,swLogPrintf("netif_find: didn ' t find %d ");
293888,602112000,0,0,PLAT_AP,LWIP_CORE,NetGetLanTypeNetif_1,P_INFO,swLogPrintf("NetGetLanTypeNetif invalid type %u ");
293888,602116095,0,0,PLAT_AP,LWIP_CORE,netif_check_netif_type_1,P_INFO,swLogPrintf("netif_check_netif_type invalid parameter ");
293888,602117120,0,0,PLAT_AP,LWIP_CORE,netif_add_ip6_prefix_info_1,P_INFO,swLogPrintf("netif_add_ip6_prefix_info: cid %u , state %u , source %u , life_time %u , active_time %u ");
293888,602120191,0,0,PLAT_AP,LWIP_CORE,netif_add_ip6_prefix_info_timeout_1,P_WARNING,swLogPrintf("netif_add_ip6_prefix_info life_time has timeout ");
293888,602122239,0,0,PLAT_AP,LWIP_CORE,netif_add_ip6_prefix_info_timeout_2,P_WARNING,swLogPrintf("netif_add_ip6_prefix_info life_time has timeout ");
293888,602124287,0,0,PLAT_AP,LWIP_CORE,netif_add_ip6_prefix_info_3,P_WARNING,swLogPrintf("netif_add_ip6_prefix_info malloc fail ");
293888,602124288,0,0,PLAT_AP,LWIP_CORE,netif_remove_ip6_prefix_info_1,P_INFO,swLogPrintf("netif_remove_ip6_prefix_info cid %u ");
293888,602126336,0,0,PLAT_AP,LWIP_CORE,netif_find_ip6_prefix_info_1,P_INFO,swLogPrintf("netif_find_ip6_prefix_info cid %u ");
293888,602130431,0,0,PLAT_AP,LWIP_CORE,netif_set_ipaddr_1,P_INFO,swLogPrintf("netif_set_ipaddr: netif address being changed ");
293888,602131712,0,0,PLAT_AP,LWIP_CORE,netif_set_ipaddr_2,P_INFO,swLogPrintf("netif: IP address of interface %c%u set to %u.%u.%u.%u ");
293888,602133760,0,0,PLAT_AP,LWIP_CORE,netif_set_gw_1,P_INFO,swLogPrintf("netif: GW address of interface %c%u set to %u.%u.%u.%u ");
293888,602135808,0,0,PLAT_AP,LWIP_CORE,netif_set_netmask_1,P_INFO,swLogPrintf("netif: netmask of interface %c%u set to %u.%u.%u.%u ");
293888,602136832,0,0,PLAT_AP,LWIP_CORE,netif_set_default_1,P_INFO,swLogPrintf("netif: setting default interface %c%u ");
293888,602140671,0,0,PLAT_AP,LWIP_CORE,netif_loop_output_1,P_ERROR,swLogPrintf("if first ! = NULL , last must also be ! = NULL ");
293888,602142719,0,0,PLAT_AP,LWIP_CORE,netif_poll_1,P_ERROR,swLogPrintf("bogus pbuf: len ! = tot_len but next = = NULL! ");
293888,602144767,0,0,PLAT_AP,LWIP_CORE,netif_poll_2,P_ERROR,swLogPrintf("netif->loop_cnt_current underflow ");
293888,602146815,0,0,PLAT_AP,LWIP_CORE,netif_poll_3,P_ERROR,swLogPrintf("should not be null since first ! = last! ");
293888,602148863,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_1,P_ERROR,swLogPrintf("addr6 ! = NULL ");
293888,602150911,0,0,PLAT_AP,LWIP_CORE,netif_ip6_prefx_length_set_1,P_ERROR,swLogPrintf("invalid netif ");
293888,602152959,0,0,PLAT_AP,LWIP_CORE,netif_ip6_prefix_length_get_1,P_ERROR,swLogPrintf("invalid netif ");
293888,602155007,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_parts_1,P_ERROR,swLogPrintf("addr6 ! = NULL or invalid index ");
293888,602157055,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_parts_2,P_INFO,swLogPrintf("netif_ip6_addr_set: netif address being changed ");
293888,602157824,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_parts_3,P_INFO,swLogPrintf("netif: IPv6 address %d of interface %c%u set to 0x%x ");
293888,602161151,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_state_1,P_ERROR,swLogPrintf("addr6 ! = NULL or invalid index ");
293888,602163199,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_state_2,P_INFO,swLogPrintf("netif_ip6_addr_set: netif address state being changed ");
293888,602163968,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_state_3,P_INFO,swLogPrintf("netif: IPv6 address %d of interface %c%u set to 0x%x ");
293888,602165760,0,0,PLAT_AP,LWIP_CORE,pbuf_set_1,P_INFO,swLogPrintf("pbuf_set ( length = %u ) 0x%x type %d ");
293888,602169343,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_2,P_ERROR,swLogPrintf("pbuf_alloc: bad pbuf layer ");
293888,602169600,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_ps_dl_pkg_1,P_ERROR,swLogPrintf("LWIP , can ' t alloc pbuf from DL PKG MEM , layer: %d , size: %d ");
293888,602173439,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_5,P_ERROR,swLogPrintf("pbuf_alloc: pbuf->payload properly aligned ");
293888,602173440,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_6,P_WARNING,swLogPrintf("pbuf_alloc: Could not allocate MEMP_PBUF for PBUF type %d ");
293888,602175488,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_8,P_ERROR,swLogPrintf("LWIP , pbuf_alloc , erroneous type: %d ");
293888,602178048,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_9,P_INFO,swLogPrintf("pbuf_alloc 0x%x , the init ticktype %u , the dataLifeTime %u ");
293888,602180352,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_10,P_INFO,swLogPrintf("pbuf_alloc ( length = %u ) 0x%x layer ( %d ) type %d ");
293888,602181632,0,0,PLAT_AP,LWIP_CORE,pbuf_alloced_custom_1,P_INFO,swLogPrintf("pbuf_alloced_custom length %u ");
293888,602185727,0,0,PLAT_AP,LWIP_CORE,pbuf_alloced_custom_2,P_ERROR,swLogPrintf("pbuf_alloced_custom: bad pbuf layer ");
293888,602185728,0,0,PLAT_AP,LWIP_CORE,pbuf_alloced_custom_3,P_WARNING,swLogPrintf("pbuf_alloced_custom ( length = %u ) buffer too short ");
293888,602188032,0,0,PLAT_AP,LWIP_CORE,pbuf_realloc_w_1,P_INFO,swLogPrintf("LWIP , can ' t realloc pbuf , new_len: %d > = tot_len: %d ");
293888,602191871,0,0,PLAT_AP,LWIP_CORE,pbuf_realloc_2,P_ERROR,swLogPrintf("grow < max_u16_t ");
293888,602193919,0,0,PLAT_AP,LWIP_CORE,pbuf_realloc_3,P_ERROR,swLogPrintf("pbuf_realloc: q ! = NULL ");
293888,602195967,0,0,PLAT_AP,LWIP_CORE,pbuf_realloc_4,P_ERROR,swLogPrintf("mem_trim returned q = = NULL ");
293888,602198015,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_1,P_ERROR,swLogPrintf("p ! = NULL ");
293888,602200063,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_2,P_ERROR,swLogPrintf("increment_magnitude < = p->len ");
293888,602200320,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_6,P_WARNING,swLogPrintf("pbuf_header: failed as 0x%x < 0x%x ( not enough space for new header size ) ");
293888,602202368,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_3,P_WARNING,swLogPrintf("pbuf_header: failed as 0x%x < 0x%x ( not enough space for new header size ) ");
293888,602206207,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_4,P_ERROR,swLogPrintf("bad pbuf type ");
293888,602206720,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_5,P_INFO,swLogPrintf("pbuf_header: old 0x%x new 0x%x %d ");
293888,602210303,0,0,PLAT_AP,LWIP_CORE,pbuf_free_1,P_ERROR,swLogPrintf("LWIP , pbuf_free , invalid input: p = = NULL ");
293888,602210304,0,0,PLAT_AP,LWIP_CORE,pbuf_free_2,P_INFO,swLogPrintf("LWIP , pbuf_free: 0x%x ");
293888,602214399,0,0,PLAT_AP,LWIP_CORE,pbuf_free_4,P_ERROR,swLogPrintf("pbuf_free: p->ref > 0 ");
293888,602216447,0,0,PLAT_AP,LWIP_CORE,pbuf_free_e_5,P_ERROR,swLogPrintf("LWIP , can ' t free pbuf with type: PBUF_POOL , if PS DL PKG memory used ");
293888,602218495,0,0,PLAT_AP,LWIP_CORE,pbuf_ref_1,P_ERROR,swLogPrintf("pbuf ref overflow ");
293888,602220543,0,0,PLAT_AP,LWIP_CORE,pbuf_cat_1,P_ERROR,swLogPrintf("pbuf_cat invalid argument ");
293888,602222591,0,0,PLAT_AP,LWIP_CORE,pbuf_cat_2,P_ERROR,swLogPrintf("p->tot_len ! = p->len or p->next ! = NULL ");
293888,602222848,0,0,PLAT_AP,LWIP_CORE,pbuf_chain_1,P_INFO,swLogPrintf("pbuf_chain: 0x%x references 0x%x ");
293888,602226687,0,0,PLAT_AP,LWIP_CORE,pbuf_dechain_1,P_ERROR,swLogPrintf("p->tot_len = = p->len + q->tot_len ");
293888,602226688,0,0,PLAT_AP,LWIP_CORE,pbuf_dechain_2,P_INFO,swLogPrintf("pbuf_dechain: unreferencing 0x%x ");
293888,602228736,0,0,PLAT_AP,LWIP_CORE,pbuf_dechain_3,P_INFO,swLogPrintf("pbuf_dechain: deallocated 0x%x ( as it is no longer referenced ) ");
293888,602232831,0,0,PLAT_AP,LWIP_CORE,pbuf_dechain_4,P_ERROR,swLogPrintf("p->tot_len = = p->len ");
293888,602233088,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_1,P_INFO,swLogPrintf("pbuf_copy to 0x%x from 0x%x ");
293888,602236927,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_2,P_ERROR,swLogPrintf("pbuf_copy: target not big enough to hold source ");
293888,602238975,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_3,P_ERROR,swLogPrintf("offset_to > p_to->len or offset_from > p_from->len ");
293888,602241023,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_4,P_ERROR,swLogPrintf("p_to ! = NULL ");
293888,602243071,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_5,P_ERROR,swLogPrintf("pbuf_copy ( ) does not allow packet queues! ");
293888,602245119,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_6,P_ERROR,swLogPrintf("pbuf_copy ( ) does not allow packet queues! ");
293888,602247167,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_partial_1,P_ERROR,swLogPrintf("pbuf_copy_partial: invalid buf or dataptr ");
293888,602249215,0,0,PLAT_AP,LWIP_CORE,updateSequenceBitmap_1,P_ERROR,swLogPrintf("updateSequenceBitmap parameter invalid ");
293888,602251263,0,0,PLAT_AP,LWIP_CORE,getSequenceBitmap_1,P_ERROR,swLogPrintf("getSequenceBitmap parameter invalid ");
293888,602253311,0,0,PLAT_AP,LWIP_CORE,pbuf_split_64k_1,P_ERROR,swLogPrintf("tot_len / len mismatch in last pbuf ");
293888,602255359,0,0,PLAT_AP,LWIP_CORE,pbuf_take_1,P_ERROR,swLogPrintf("pbuf_take: invalid buf or dataptr ");
293888,602257407,0,0,PLAT_AP,LWIP_CORE,pbuf_take_2,P_ERROR,swLogPrintf("pbuf_take: buf not large enough ");
293888,602259455,0,0,PLAT_AP,LWIP_CORE,pbuf_take_3,P_ERROR,swLogPrintf("pbuf_take: invalid pbuf ");
293888,602261503,0,0,PLAT_AP,LWIP_CORE,pbuf_take_4,P_ERROR,swLogPrintf("did not copy all data ");
293888,602263551,0,0,PLAT_AP,LWIP_CORE,pbuf_coalesce_1,P_ERROR,swLogPrintf("pbuf_copy failed ");
293888,602265599,0,0,PLAT_AP,LWIP_CORE,raw_input_1,P_ERROR,swLogPrintf("raw pcb recv callback altered pbuf payload pointer without eating packet ");
293888,602267647,0,0,PLAT_AP,LWIP_CORE,raw_sendto_1,P_INFO,swLogPrintf("raw_sendto ");
293888,602269695,0,0,PLAT_AP,LWIP_CORE,raw_sendto_5,P_WARNING,swLogPrintf("raw_sendto: No route to ");
293888,602271743,0,0,PLAT_AP,LWIP_CORE,raw_sendto_2,P_WARNING,swLogPrintf("raw_sendto: could not allocate header ");
293888,602272000,0,0,PLAT_AP,LWIP_CORE,raw_sendto_3,P_INFO,swLogPrintf("raw_sendto: added header pbuf 0x%x before given pbuf 0x%x ");
293888,602275839,0,0,PLAT_AP,LWIP_CORE,raw_sendto_4,P_ERROR,swLogPrintf("Can ' t restore header we just removed ");
293888,602277887,0,0,PLAT_AP,LWIP_CORE,raw_sendto_7,P_WARNING,swLogPrintf("Checksum must fit into first pbuf ");
293888,602279935,0,0,PLAT_AP,LWIP_CORE,raw_new_1,P_INFO,swLogPrintf("raw_new ");
293888,602279936,0,0,PLAT_AP,LWIP_CORE,raw_netif_enter_oos_state_1,P_INFO,swLogPrintf("raw_netif_enter_oos_state 0x%x ");
293888,602281984,0,0,PLAT_AP,LWIP_CORE,raw_netif_exit_oos_state_1,P_INFO,swLogPrintf("raw_netif_exit_oos_state 0x%x ");
293888,602284544,0,0,PLAT_AP,LWIP_CORE,TCP_REG_1,P_INFO,swLogPrintf("TCP_REG 0x%x local port %d to 0x%x ");
293888,602288127,0,0,PLAT_AP,LWIP_CORE,TCP_REG_2,P_ERROR,swLogPrintf("TCP_REG:tcp_tmp_pcb = = ( npcb ) ");
293888,602290175,0,0,PLAT_AP,LWIP_CORE,TCP_REG_3,P_ERROR,swLogPrintf("TCP_REG: pcb->state = = CLOSED ");
293888,602292223,0,0,PLAT_AP,LWIP_CORE,TCP_REG_4,P_ERROR,swLogPrintf("TCP_REG: npcb->next = = npcb ");
293888,602294271,0,0,PLAT_AP,LWIP_CORE,TCP_REG_5,P_ERROR,swLogPrintf("TCP_REG: tcp_pcbs sane ");
293888,602296319,0,0,PLAT_AP,LWIP_CORE,TCP_RMV_1,P_ERROR,swLogPrintf("TCP_RMV: pcbs = = NULL ");
293888,602296576,0,0,PLAT_AP,LWIP_CORE,TCP_RMV_2,P_INFO,swLogPrintf("TCP_RMV removing 0x%x from 0x%x ");
293888,602300415,0,0,PLAT_AP,LWIP_CORE,TCP_RMV_3,P_ERROR,swLogPrintf("TCP_RMV: tcp_pcbs sane ");
293888,602300416,0,0,PLAT_AP,LWIP_CORE,tcp_add_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("tcp_add_curr_hib_sleep2_pcb_num %u ");
293888,602302464,0,0,PLAT_AP,LWIP_CORE,tcp_del_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("tcp_del_curr_hib_sleep2_pcb_num %u ");
293888,602304512,0,0,PLAT_AP,LWIP_CORE,tcp_enable_hib_sleep2_mode_1,P_INFO,swLogPrintf("tcp_enable_hib_sleep2_mode %u ");
293888,602306560,0,0,PLAT_AP,LWIP_CORE,tcp_disable_hib_sleep2_mode_1,P_INFO,swLogPrintf("tcp_disable_hib_sleep2_mode %u ");
293888,602308608,0,0,PLAT_AP,LWIP_CORE,tcp_add_hib_sleep2_context_pcb_1,P_INFO,swLogPrintf("tcp_add_hib_sleep2_context_pcb alloc new tcp_pcb success , sockid %d ");
293888,602312703,0,0,PLAT_AP,LWIP_CORE,tcp_add_hib_sleep2_context_pcb_2,P_ERROR,swLogPrintf("tcp_add_hib_sleep2_context_pcb alloc new tcp_pcb fail ");
293888,602314751,0,0,PLAT_AP,LWIP_CORE,tcp_check_hib_sleep2_pcb_active_1,P_INFO,swLogPrintf("tcp_check_hib_sleep2_pcb_active ");
293888,602314752,0,0,PLAT_AP,LWIP_CORE,tcp_check_hib_sleep2_pcb_active_2,P_INFO,swLogPrintf("tcp_check_hib_sleep2_pcb_active change pcb 0x%x state to enable_active state ");
293888,602318847,0,0,PLAT_AP,LWIP_CORE,tcp_check_hib_sleep2_pcb_deactive_1,P_INFO,swLogPrintf("tcp_check_hib_sleep2_pcb_deactive ");
293888,602318848,0,0,PLAT_AP,LWIP_CORE,tcp_check_hib_sleep2_pcb_deactive_2,P_INFO,swLogPrintf("tcp_check_hib_sleep2_pcb_deactive change pcb 0x%x state to enable_deactive state ");
293888,602322943,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_1,P_ERROR,swLogPrintf("tcp_get_sock_info invalid fd ");
293888,602324991,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_2,P_INFO,swLogPrintf("tcp_get_sock_info find adpat tcp hib pcb ");
293888,602327039,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_3,P_INFO,swLogPrintf("tcp_get_sock_info can not find adpat tcp hib pcb ");
293888,602329087,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_by_pcb_1,P_ERROR,swLogPrintf("tcp_get_sock_info_by_pcb invalid parameter ");
293888,602331135,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_by_pcb_2,P_INFO,swLogPrintf("tcp_get_sock_info_by_pcb find adpat tcppcb ");
293888,602333183,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_by_pcb_3,P_INFO,swLogPrintf("tcp_get_sock_info_by_pcb find adpat tcp hib pcb ");
293888,602335231,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_by_pcb_4,P_INFO,swLogPrintf("tcp_get_sock_info_by_pcb can not find adpat tcp hib pcb ");
293888,602337279,0,0,PLAT_AP,LWIP_CORE,tcp_listen_closed_1,P_ERROR,swLogPrintf("pcb = = NULL or pcb->state ! = LISTEN ");
293888,602339327,0,0,PLAT_AP,LWIP_CORE,tcp_backlog_delayed_1,P_ERROR,swLogPrintf("pcb = = NULL ");
293888,602341375,0,0,PLAT_AP,LWIP_CORE,tcp_backlog_delayed_2,P_ERROR,swLogPrintf("accepts_pending ! = 0 ");
293888,602343423,0,0,PLAT_AP,LWIP_CORE,tcp_backlog_accepted_1,P_ERROR,swLogPrintf("pcb = = NULL ");
293888,602345471,0,0,PLAT_AP,LWIP_CORE,tcp_backlog_accepted_2,P_ERROR,swLogPrintf("accepts_pending ! = 0 ");
293888,602347519,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_5,P_SIG,swLogPrintf("tcp_close_shutdown THE hib / sleep2 tcp context pcb will shutdown ");
293888,602349567,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_1,P_ERROR,swLogPrintf("pcb->flags & TF_RXCLOSED ");
293888,602351615,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_2,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602351616,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_3,P_INFO,swLogPrintf("enable tcp time_wait timer %u ");
293888,602355711,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_4,P_INFO,swLogPrintf("tcp time_wait timer has active ");
293888,602357759,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_1,P_ERROR,swLogPrintf("pcb ! = NULL ");
293888,602359807,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_2,P_INFO,swLogPrintf("remove tcp sync rcv timer ");
293888,602361855,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_3,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602363903,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_4,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,602363904,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_5,P_INFO,swLogPrintf("enable tcp last ack timer %u ");
293888,602365952,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_local_abort_time,P_INFO,swLogPrintf("enable tcp close local abort time %u ");
293888,602368000,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_6,P_INFO,swLogPrintf("enable tcp pending fin timer %u ");
293888,602372095,0,0,PLAT_AP,LWIP_CORE,tcp_close_1,P_INFO,swLogPrintf("tcp_close: closing in ");
293888,602374143,0,0,PLAT_AP,LWIP_CORE,tcp_shutdown_1,P_INFO,swLogPrintf("remove tcp refuse data timer ");
293888,602376191,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_12,P_SIG,swLogPrintf("tcp_abandon THE hib / sleep2 tcp context pcb will abandon ");
293888,602378239,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_1,P_ERROR,swLogPrintf("don ' t call tcp_abort / tcp_abandon for listen-pcbs ");
293888,602380287,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_2,P_INFO,swLogPrintf("remove time wait timer ");
293888,602382335,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_3,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602384383,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_4,P_INFO,swLogPrintf("remove tcp syncrcv timer ");
293888,602386431,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_5,P_INFO,swLogPrintf("remove tcp last ack timer ");
293888,602388479,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_6,P_INFO,swLogPrintf("remove tcp FIN_WAIT2 timer ");
293888,602390527,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_tcp_total_retry_time_1,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602390528,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_tcp_retry_time_1,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602394623,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_tcp_poll_time_1,P_INFO,swLogPrintf("remove tcp poll timer ");
293888,602396671,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_11,P_INFO,swLogPrintf("tcp_abandon: sending RST ");
293888,602398719,0,0,PLAT_AP,LWIP_CORE,tcp_bind_1,P_ERROR,swLogPrintf("tcp_bind: can only bind in state CLOSED ");
293888,602398720,0,0,PLAT_AP,LWIP_CORE,tcp_bind_2,P_INFO,swLogPrintf("tcp_bind: bind to port %u ");
293888,602402815,0,0,PLAT_AP,LWIP_CORE,tcp_listen_with_backlog_and_err_1,P_ERROR,swLogPrintf("tcp_listen: pcb already connected ");
293888,602404863,0,0,PLAT_AP,LWIP_CORE,tcp_recved_1,P_ERROR,swLogPrintf("don ' t call tcp_recved for listen-pcbs ");
293888,602406911,0,0,PLAT_AP,LWIP_CORE,tcp_recved_2,P_ERROR,swLogPrintf("tcp_recved: len wrapped rcv_wnd ");
293888,602407424,0,0,PLAT_AP,LWIP_CORE,tcp_recved_3,P_INFO,swLogPrintf("tcp_recved: received ( %u ) bytes , wnd ( %u ) %u ");
293888,602411007,0,0,PLAT_AP,LWIP_CORE,tcp_connect_1,P_ERROR,swLogPrintf("tcp_connect: can only connect from state CLOSED ");
293888,602411008,0,0,PLAT_AP,LWIP_CORE,tcp_connect_2,P_INFO,swLogPrintf("tcp_connect to port %u ");
293888,602415103,0,0,PLAT_AP,LWIP_CORE,tcp_connect_3,P_SIG,swLogPrintf("tcp_connect: pcb has connected ");
293888,602417151,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_1,P_INFO,swLogPrintf("tcp_slowtmr: no active pcbs ");
293888,602419199,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_2,P_ERROR,swLogPrintf("tcp_slowtmr: active pcb->state inlavid ");
293888,602421247,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_3,P_INFO,swLogPrintf("tcp_slowtmr: max SYN retries reached ");
293888,602423295,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_4,P_INFO,swLogPrintf("tcp_slowtmr: max DATA retries reached ");
293888,602423552,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_5,P_INFO,swLogPrintf("tcp_slowtmr: rtime %u pcb->rto %u ");
293888,602425600,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_6,P_INFO,swLogPrintf("tcp_slowtmr: cwnd %u ssthresh %u ");
293888,602429439,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_7,P_INFO,swLogPrintf("tcp_slowtmr: removing pcb stuck in FIN-WAIT-2 ");
293888,602431487,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_8,P_INFO,swLogPrintf("tcp_slowtmr: KEEPALIVE timeout. Aborting connection to ");
293888,602433535,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_9,P_INFO,swLogPrintf("tcp_slowtmr: dropping OOSEQ queued data ");
293888,602435583,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_10,P_INFO,swLogPrintf("tcp_slowtmr: removing pcb stuck in SYN-RCVD ");
293888,602437631,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_11,P_INFO,swLogPrintf("tcp_slowtmr: removing pcb stuck in LAST-ACK ");
293888,602439679,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_12,P_ERROR,swLogPrintf("tcp_slowtmr: middle tcp ! = tcp_active_pcbs ");
293888,602441727,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_13,P_ERROR,swLogPrintf("tcp_slowtmr: first pcb = = tcp_active_pcbs ");
293888,602443775,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_14,P_INFO,swLogPrintf("tcp_slowtmr: polling application ");
293888,602445823,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_15,P_ERROR,swLogPrintf("tcp_slowtmr: TIME-WAIT pcb->state = = TIME-WAIT ");
293888,602447871,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_16,P_ERROR,swLogPrintf("tcp_slowtmr: middle tcp ! = tcp_tw_pcbs ");
293888,602449919,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_17,P_ERROR,swLogPrintf("tcp_slowtmr: first pcb = = tcp_tw_pcbs ");
293888,602451967,0,0,PLAT_AP,LWIP_CORE,tcp_fasttmr_1,P_INFO,swLogPrintf("tcp_fasttmr: delayed ACK ");
293888,602454015,0,0,PLAT_AP,LWIP_CORE,tcp_fasttmr_2,P_INFO,swLogPrintf("tcp_fasttmr: pending FIN ");
293888,602456063,0,0,PLAT_AP,LWIP_CORE,tcp_enable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602458111,0,0,PLAT_AP,LWIP_CORE,tcp_disable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602458368,0,0,PLAT_AP,LWIP_CORE,tcp_remove_pcb_1,P_INFO,swLogPrintf("tcp_remove_pcb remove pcb 0x%x from list 0x%x ");
293888,602460672,0,0,PLAT_AP,LWIP_CORE,tcp_remove_pcb_2,P_INFO,swLogPrintf("tcp_remove_pcb send error %d event success , err fn 0x%x , err_arg 0x%x ");
293888,602464255,0,0,PLAT_AP,LWIP_CORE,tcp_delay_ack_handler_1,P_INFO,swLogPrintf("tcp_delay_ack_handler timeout ");
293888,602466303,0,0,PLAT_AP,LWIP_CORE,tcp_delay_ack_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602468351,0,0,PLAT_AP,LWIP_CORE,tcp_pending_fin_handler_1,P_INFO,swLogPrintf("tcp_pending_fin_handler timeout ");
293888,602470399,0,0,PLAT_AP,LWIP_CORE,tcp_pending_fin_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602472447,0,0,PLAT_AP,LWIP_CORE,tcp_refused_data_handler_1,P_INFO,swLogPrintf("tcp_refused_data_handler timeout ");
293888,602474495,0,0,PLAT_AP,LWIP_CORE,tcp_refused_data_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602476543,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_1,P_INFO,swLogPrintf("tcp_retry_timeout_handler timeout ");
293888,602478591,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602480639,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_3,P_ERROR,swLogPrintf("tcp_retry_timeout_handler: active pcb->state inlavid ");
293888,602482687,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_4,P_INFO,swLogPrintf("tcp_retry_timeout_handler: max SYN retries reached ");
293888,602484735,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_5,P_INFO,swLogPrintf("tcp_retry_timeout_handler: max DATA retries reached ");
293888,602484992,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_6,P_INFO,swLogPrintf("active tcp retry timer %u , pcb 0x%x ");
293888,602487552,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_7,P_INFO,swLogPrintf("tcp_retry_timeout_handler: pcb->rto %u nrtx %u sa %d sv %d ");
293888,602489088,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_8,P_INFO,swLogPrintf("tcp_retry_timeout_handler: cwnd %u ssthresh %u ");
293888,602492927,0,0,PLAT_AP,LWIP_CORE,tcp_total_retry_timeout_handler_1,P_INFO,swLogPrintf("tcp_total_retry_timeout_handler timeout ");
293888,602494975,0,0,PLAT_AP,LWIP_CORE,tcp_total_retry_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602497023,0,0,PLAT_AP,LWIP_CORE,tcp_total_retry_timeout_handler_3,P_ERROR,swLogPrintf("tcp_total_retry_timeout_handler: active pcb->state inlavid ");
293888,602499071,0,0,PLAT_AP,LWIP_CORE,tcp_fin_wait2_timeout_handler_1,P_INFO,swLogPrintf("tcp_fin_wait2_timeout_handler timeout ");
293888,602501119,0,0,PLAT_AP,LWIP_CORE,tcp_fin_wait2_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602503167,0,0,PLAT_AP,LWIP_CORE,tcp_fin_wait2_timeout_handler_3,P_INFO,swLogPrintf("tcp_fin_wait2_timeout_handler: removing pcb stuck in FIN-WAIT-2 ");
293888,602505215,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_timeout_handler_1,P_INFO,swLogPrintf("tcp_keepalive_timeout_handler timeout ");
293888,602507263,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602509311,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_timeout_handler_3,P_INFO,swLogPrintf("tcp_keepalive_timeout_handler: KEEPALIVE timeout. Aborting connection to ");
293888,602509568,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_timeout_handler_4,P_INFO,swLogPrintf("active tcp keepalive intvl timer %u , send cnt %u ");
293888,602513407,0,0,PLAT_AP,LWIP_CORE,tcp_ooseq_timeout_handler_1,P_INFO,swLogPrintf("tcp_ooseq_timeout_handler timeout ");
293888,602515455,0,0,PLAT_AP,LWIP_CORE,tcp_ooseq_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602517503,0,0,PLAT_AP,LWIP_CORE,tcp_ooseq_timeout_handler_3,P_INFO,swLogPrintf("tcp_ooseq_timeout_handler: dropping OOSEQ queued data ");
293888,602519551,0,0,PLAT_AP,LWIP_CORE,tcp_syncrcv_timeout_handler_1,P_INFO,swLogPrintf("tcp_syncrcv_timeout_handler timeout ");
293888,602521599,0,0,PLAT_AP,LWIP_CORE,tcp_syncrcv_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602523647,0,0,PLAT_AP,LWIP_CORE,tcp_syncrcv_timeout_handler_3,P_INFO,swLogPrintf("tcp_syncrcv_timeout_handler: removing pcb stuck in SYN-RCVD ");
293888,602525695,0,0,PLAT_AP,LWIP_CORE,tcp_lastack_timeout_handler_1,P_INFO,swLogPrintf("tcp_lastack_timeout_handler timeout ");
293888,602527743,0,0,PLAT_AP,LWIP_CORE,tcp_lastack_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602529791,0,0,PLAT_AP,LWIP_CORE,tcp_lastack_timeout_handler_3,P_INFO,swLogPrintf("tcp_lastack_timeout_handler: removing pcb stuck in LAST-ACK ");
293888,602531839,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_timeout_handler_1,P_INFO,swLogPrintf("tcp_timewait_timeout_handler timeout ");
293888,602533887,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602535935,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_timeout_handler_3,P_INFO,swLogPrintf("tcp_timewait_timeout_handler: removing pcb in time wait state ");
293888,602537983,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_1,P_INFO,swLogPrintf("tcp_remove_all_timer invalid pcb point ");
293888,602540031,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_12,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602540032,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_2,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602544127,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_3,P_INFO,swLogPrintf("remove delay ack timer ");
293888,602546175,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_4,P_INFO,swLogPrintf("remove tcp pending fin timer ");
293888,602548223,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_5,P_INFO,swLogPrintf("remove tcp refuse data timer ");
293888,602550271,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_6,P_INFO,swLogPrintf("remove tcp fin wait2 timer ");
293888,602552319,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_7,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602554367,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_8,P_INFO,swLogPrintf("remove tcp ooseq timer ");
293888,602556415,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_9,P_INFO,swLogPrintf("remove tcp syncrcv timer ");
293888,602558463,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_10,P_INFO,swLogPrintf("remove tcp lastack timer ");
293888,602560511,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_11,P_INFO,swLogPrintf("remove tcp timewait timer ");
293888,602562559,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_13,P_INFO,swLogPrintf("remove tcp poll timer ");
293888,602564607,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_14,P_INFO,swLogPrintf("remove tcp close local abort timer ");
293888,602566655,0,0,PLAT_AP,LWIP_CORE,tcp_close_local_abort_timeout_handler_1,P_INFO,swLogPrintf("tcp_close_local_abort_timeout_handler timeout ");
293888,602568703,0,0,PLAT_AP,LWIP_CORE,tcp_close_local_abort_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602570751,0,0,PLAT_AP,LWIP_CORE,tcp_close_local_abort_timeout_handler_3,P_ERROR,swLogPrintf("tcp_close_local_abort_timeout_handler: pcb->state inlavid ");
293888,602572799,0,0,PLAT_AP,LWIP_CORE,tcp_close_local_abort_timeout_handler_4,P_INFO,swLogPrintf("remove tcp timewait timer ");
293888,602574847,0,0,PLAT_AP,LWIP_CORE,tcp_poll_timeout_handler_1,P_INFO,swLogPrintf("tcp_poll_timeout_handler timeout ");
293888,602576895,0,0,PLAT_AP,LWIP_CORE,tcp_poll_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602576896,0,0,PLAT_AP,LWIP_CORE,tcp_poll_timeout_handler_3,P_INFO,swLogPrintf("tcp_poll_timeout_handler poll result %d ");
293888,602580991,0,0,PLAT_AP,LWIP_CORE,tcp_active_poll_timeout_timer_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602583039,0,0,PLAT_AP,LWIP_CORE,tcp_active_poll_timeout_timer_2,P_INFO,swLogPrintf("tcp_active_poll_timeout_timer poll timeout timer has active ");
293888,602583296,0,0,PLAT_AP,LWIP_CORE,tcp_active_poll_timeout_timer_3,P_INFO,swLogPrintf("active tcp poll timeour timer %u seconds , pcb 0x%x ");
293888,602587135,0,0,PLAT_AP,LWIP_CORE,tcp_disable_keepalive_time_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602589183,0,0,PLAT_AP,LWIP_CORE,tcp_disable_keepalive_time_2,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602591231,0,0,PLAT_AP,LWIP_CORE,tcp_send_unack_ul_state_1,P_ERROR,swLogPrintf("tcp_send_unack_ul_state:pcb invalid ");
293888,602593279,0,0,PLAT_AP,LWIP_CORE,tcp_send_unack_ul_state_2,P_ERROR,swLogPrintf("tcp_send_unack_ul_state: the pcb socketid is invalid ");
293888,602593280,0,0,PLAT_AP,LWIP_CORE,tcp_send_unack_ul_state_3,P_INFO,swLogPrintf("tcp_send_unack_ul_state: UL sequence state indicate success , the pcb socket id %u ");
293888,602597375,0,0,PLAT_AP,LWIP_CORE,tcp_set_max_retry_times_1,P_ERROR,swLogPrintf("tcp_set_max_retry_times:pcb invalid ");
293888,602597376,0,0,PLAT_AP,LWIP_CORE,tcp_set_max_retry_times_2,P_ERROR,swLogPrintf("tcp_set_max_retry_times:invalid tcp max retry times %u ");
293888,602601471,0,0,PLAT_AP,LWIP_CORE,tcp_set_max_total_retry_time_1,P_ERROR,swLogPrintf("tcp_set_max_total_retry_time:pcb invalid ");
293888,602601472,0,0,PLAT_AP,LWIP_CORE,tcp_set_max_total_retry_time_2,P_ERROR,swLogPrintf("tcp_set_max_total_retry_time:invalid tcp max total retry time %u ");
293888,602605567,0,0,PLAT_AP,LWIP_CORE,tcp_set_init_retry_time_1,P_ERROR,swLogPrintf("tcp_set_init_retry_time:pcb invalid ");
293888,602605568,0,0,PLAT_AP,LWIP_CORE,tcp_set_init_retry_time_2,P_ERROR,swLogPrintf("tcp_set_init_retry_time:invalid tcp init retry times %u ");
293888,602609663,0,0,PLAT_AP,LWIP_CORE,tcp_ack_1,P_WARNING,swLogPrintf("tcp_ack:pcb invalid ");
293888,602611711,0,0,PLAT_AP,LWIP_CORE,tcp_ack_2,P_INFO,swLogPrintf("tcp delay ack timer has enable ");
293888,602611712,0,0,PLAT_AP,LWIP_CORE,tcp_ack_3,P_INFO,swLogPrintf("enable tcp delay ack timer %u ");
293888,602615807,0,0,PLAT_AP,LWIP_CORE,tcp_ack_now_1,P_WARNING,swLogPrintf("tcp_ack_now:pcb invalid ");
293888,602617855,0,0,PLAT_AP,LWIP_CORE,tcp_ack_now_2,P_INFO,swLogPrintf("tcp delay ack timer has enable , remove it ");
293888,602619903,0,0,PLAT_AP,LWIP_CORE,tcp_process_refused_data_1,P_INFO,swLogPrintf("tcp_input: notify kept packet ");
293888,602621951,0,0,PLAT_AP,LWIP_CORE,tcp_process_refused_data_2,P_INFO,swLogPrintf("tcp_input: drop incoming packets , because pcb is full ");
293888,602621952,0,0,PLAT_AP,LWIP_CORE,tcp_process_refused_data_3,P_INFO,swLogPrintf("enable tcp refse data timer %u ");
293888,602624256,0,0,PLAT_AP,LWIP_CORE,tcp_kill_prio_1,P_INFO,swLogPrintf("tcp_kill_prio: killing oldest PCB 0x%x ( %u ) ");
293888,602628095,0,0,PLAT_AP,LWIP_CORE,tcp_kill_state_1,P_INFO,swLogPrintf("tcp_kill_state invalid state ");
293888,602628608,0,0,PLAT_AP,LWIP_CORE,tcp_kill_state_2,P_INFO,swLogPrintf("tcp_kill_closing: killing oldest %d PCB 0x%x ( %u ) ");
293888,602630400,0,0,PLAT_AP,LWIP_CORE,tcp_kill_timewait_1,P_INFO,swLogPrintf("tcp_kill_timewait: killing oldest TIME-WAIT PCB 0x%x ( %u ) ");
293888,602634239,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_1,P_INFO,swLogPrintf("tcp_alloc: killing off oldest TIME-WAIT connection ");
293888,602636287,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_2,P_INFO,swLogPrintf("tcp_alloc: killing off oldest LAST-ACK connection ");
293888,602638335,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_3,P_INFO,swLogPrintf("tcp_alloc: killing off oldest CLOSING connection ");
293888,602638336,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_4,P_INFO,swLogPrintf("tcp_alloc: killing connection with prio lower than %d ");
293888,602640384,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_5,P_INFO,swLogPrintf("tcp_alloc: current UE packet delay %u ");
293888,602644479,0,0,PLAT_AP,LWIP_CORE,tcp_recv_1,P_ERROR,swLogPrintf("invalid socket state for recv callback ");
293888,602646527,0,0,PLAT_AP,LWIP_CORE,tcp_sent_1,P_ERROR,swLogPrintf("invalid socket state for sent callback ");
293888,602648575,0,0,PLAT_AP,LWIP_CORE,tcp_err_1,P_ERROR,swLogPrintf("invalid socket state for err callback ");
293888,602650623,0,0,PLAT_AP,LWIP_CORE,tcp_poll_1,P_ERROR,swLogPrintf("invalid socket state for poll ");
293888,602652671,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_1,P_INFO,swLogPrintf("tcp_pcb_purge ");
293888,602654719,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_2,P_INFO,swLogPrintf("tcp_pcb_purge: data left on ->refused_data ");
293888,602656767,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_3,P_INFO,swLogPrintf("tcp_pcb_purge: not all data sent ");
293888,602658815,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_4,P_INFO,swLogPrintf("tcp_pcb_purge: data left on ->unacked ");
293888,602660863,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_5,P_INFO,swLogPrintf("tcp_pcb_purge: data left on ->ooseq ");
293888,602662911,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_6,P_INFO,swLogPrintf("remove tcp refuse data timer ");
293888,602664959,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_10,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602664960,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_7,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602669055,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_8,P_INFO,swLogPrintf("remove tcp ooseq timer ");
293888,602671103,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_9,P_INFO,swLogPrintf("remove fin wait2 timer ");
293888,602673151,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_last_ack_1,P_INFO,swLogPrintf("remove last ack timer ");
293888,602675199,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_close_local_abort,P_INFO,swLogPrintf("remove close local abort timer ");
293888,602677247,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_close_sync_rcv,P_INFO,swLogPrintf("remove sync rcv timer ");
293888,602679295,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_poll,P_INFO,swLogPrintf("remove tcp poll timer ");
293888,602681343,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_11,P_SIG,swLogPrintf("tcp_pcb_purge THE hib / sleep2 tcp context pcb will shutdown ");
293888,602683391,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_remove_4,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,602685439,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_remove_1,P_ERROR,swLogPrintf("unsent or unacked segments leaking ");
293888,602687487,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_remove_2,P_ERROR,swLogPrintf("ooseq segments leaking ");
293888,602689535,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_remove_3,P_ERROR,swLogPrintf("tcp_pcb_remove: tcp_pcbs_sane ");
293888,602689536,0,0,PLAT_AP,LWIP_CORE,tcp_eff_send_mss_impl_1,P_INFO,swLogPrintf("netif_set_ipaddr: aborting TCP pcb 0x%x ");
293888,602691584,0,0,PLAT_AP,LWIP_CORE,tcp_netif_ip_addr_changed_1,P_INFO,swLogPrintf("tcp_netif_ip_addr_changed: aborting TCP hib pcb 0x%x ");
293888,602693632,0,0,PLAT_AP,LWIP_CORE,tcp_netif_enter_oos_state_1,P_INFO,swLogPrintf("tcp pcb 0x%x enter oos state event ");
293888,602695680,0,0,PLAT_AP,LWIP_CORE,tcp_netif_exit_oos_state_1,P_INFO,swLogPrintf("tcp pcb 0x%x exit oos state event ");
293888,602699775,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_1,P_INFO,swLogPrintf("TCP header: ");
293888,602700032,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_2,P_INFO,swLogPrintf("| %u | %u | ( src port , dest port ) ");
293888,602702080,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_3,P_INFO,swLogPrintf("| %u | %u | ( seq no ) ( ack no ) ");
293888,602705664,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_4,P_INFO,swLogPrintf("|%u|%u%u%u%u%u%u|%u| ( seq no ) ( hdrlen flags wnd ) ");
293888,602706176,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_5,P_INFO,swLogPrintf("| %u | %u | ( chksum , urgp ) ");
293888,602707968,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_state_1,P_INFO,swLogPrintf("State: %d ");
293888,602712063,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_1,P_INFO,swLogPrintf("FIN ");
293888,602714111,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_2,P_INFO,swLogPrintf("SYN ");
293888,602716159,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_3,P_INFO,swLogPrintf("RST ");
293888,602718207,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_4,P_INFO,swLogPrintf("PSH ");
293888,602720255,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_5,P_INFO,swLogPrintf("PSH ");
293888,602722303,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_6,P_INFO,swLogPrintf("URG ");
293888,602724351,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_7,P_INFO,swLogPrintf("ECE ");
293888,602726399,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_8,P_INFO,swLogPrintf("CWR ");
293888,602727168,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_pcbs_1,P_INFO,swLogPrintf("Active PCB Local port ( %u ) foreign port ( %u ) snd_nxt ( %u ) rcv_nxt ( %u ) ");
293888,602728448,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_pcbs_2,P_INFO,swLogPrintf("Listen PCB Local port %u ");
293888,602731264,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_pcbs_3,P_INFO,swLogPrintf("TIME-WAIT PCB Local port ( %u ) foreign port ( %u ) snd_nxt ( %u ) rcv_nxt ( %u ) ");
293888,602734591,0,0,PLAT_AP,LWIP_CORE,tcp_pcbs_sane_1,P_ERROR,swLogPrintf("tcp_pcbs_sane ");
293888,602736639,0,0,PLAT_AP,LWIP_CORE,tcp_pcbs_sane_2,P_ERROR,swLogPrintf("tcp_pcbs_sane: tw pcb->state = = TIME-WAIT ");
293888,602736640,0,0,PLAT_AP,LWIP_CORE,tcp_input_1,P_WARNING,swLogPrintf("tcp_input: short packet ( %u bytes ) discarded ");
293888,602738688,0,0,PLAT_AP,LWIP_CORE,tcp_input_2,P_WARNING,swLogPrintf("tcp_input: packet discarded due to failing checksum 0x%x ");
293888,602740736,0,0,PLAT_AP,LWIP_CORE,tcp_input_3,P_WARNING,swLogPrintf("tcp_input: invalid header length ( %u ) ");
293888,602744831,0,0,PLAT_AP,LWIP_CORE,tcp_input_4,P_ERROR,swLogPrintf("p->next = = NULL ");
293888,602744832,0,0,PLAT_AP,LWIP_CORE,tcp_input_5,P_WARNING,swLogPrintf("tcp_input: options overflow second pbuf ( %u bytes ) ");
293888,602748927,0,0,PLAT_AP,LWIP_CORE,tcp_input_6,P_ERROR,swLogPrintf("p->len ! = 0 or p->tot_len ! = p->next->tot_len ");
293888,602750975,0,0,PLAT_AP,LWIP_CORE,tcp_input_7,P_ERROR,swLogPrintf("tcp_input: active pcb invalid state ");
293888,602753023,0,0,PLAT_AP,LWIP_CORE,tcp_input_8,P_ERROR,swLogPrintf("tcp_input: pcb->next ! = pcb ( before cache ) ");
293888,602755071,0,0,PLAT_AP,LWIP_CORE,tcp_input_9,P_ERROR,swLogPrintf("tcp_input: pcb->next ! = pcb ( after cache ) ");
293888,602757119,0,0,PLAT_AP,LWIP_CORE,tcp_input_10,P_ERROR,swLogPrintf("tcp_input: TIME-WAIT pcb->state = = TIME-WAIT ");
293888,602759167,0,0,PLAT_AP,LWIP_CORE,tcp_input_11,P_INFO,swLogPrintf("tcp_input: packed for TIME_WAITing connection ");
293888,602761215,0,0,PLAT_AP,LWIP_CORE,tcp_input_12,P_INFO,swLogPrintf("tcp_input: packed for LISTENing connection ");
293888,602763263,0,0,PLAT_AP,LWIP_CORE,tcp_input_13,P_INFO,swLogPrintf("tcp_input: flags ");
293888,602765311,0,0,PLAT_AP,LWIP_CORE,tcp_input_20,P_SIG,swLogPrintf("tcp receive rst , THE hib / sleep2 tcp context pcb will shutdown ");
293888,602767359,0,0,PLAT_AP,LWIP_CORE,tcp_input_14,P_ERROR,swLogPrintf("pcb->refused_data = = NULL ");
293888,602769407,0,0,PLAT_AP,LWIP_CORE,tcp_input_15,P_INFO,swLogPrintf("tcp refuse data timer has enable ");
293888,602769408,0,0,PLAT_AP,LWIP_CORE,tcp_input_16,P_INFO,swLogPrintf("enable tcp refuse data timer %u ");
293888,602773503,0,0,PLAT_AP,LWIP_CORE,tcp_input_17,P_WARNING,swLogPrintf("tcp_input: keep incoming packet , because pcb is full ");
293888,602775551,0,0,PLAT_AP,LWIP_CORE,tcp_input_18,P_WARNING,swLogPrintf("tcp_input: no PCB match found , resetting ");
293888,602777599,0,0,PLAT_AP,LWIP_CORE,tcp_input_19,P_WARNING,swLogPrintf("tcp_input: tcp_pcbs_sane ( ) ");
293888,602779647,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_1,P_INFO,swLogPrintf("tcp_listen_input: ACK in LISTEN , sending reset ");
293888,602779904,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_2,P_INFO,swLogPrintf("TCP connection request %u -> %u ");
293888,602781696,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_3,P_INFO,swLogPrintf("tcp_listen_input: listen backlog exceeded for port %u ");
293888,602785791,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_4,P_WARNING,swLogPrintf("tcp_listen_input: could not allocate PCB ");
293888,602785792,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_5,P_INFO,swLogPrintf("enable tcp syncrcy timer %u ");
293888,602789887,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_input_1,P_INFO,swLogPrintf("remove tcp time wait timer ");
293888,602789888,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_input_2,P_INFO,swLogPrintf("enable tcp time wait timer %u ");
293888,602791936,0,0,PLAT_AP,LWIP_CORE,tcp_rebuild_seg_ul_sequence_bitmap_1,P_INFO,swLogPrintf("tcp_rebuild_seg_ul_sequence_bitmap disable sequence %d ");
293888,602796031,0,0,PLAT_AP,LWIP_CORE,tcp_process_1,P_INFO,swLogPrintf("tcp_process: Connection RESET ");
293888,602798079,0,0,PLAT_AP,LWIP_CORE,tcp_process_2,P_ERROR,swLogPrintf("tcp_process: pcb->state = = CLOSED ");
293888,602800127,0,0,PLAT_AP,LWIP_CORE,tcp_process_3,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,602800384,0,0,PLAT_AP,LWIP_CORE,tcp_process_4,P_INFO,swLogPrintf("tcp_process: unacceptable reset seqno %u rcv_nxt %u ");
293888,602802432,0,0,PLAT_AP,LWIP_CORE,tcp_process_5,P_INFO,swLogPrintf("tcp_process: Connection RESET seqno %u rcv_nxt %u ");
293888,602804736,0,0,PLAT_AP,LWIP_CORE,tcp_process_6,P_INFO,swLogPrintf("SYN-SENT: ackno %u pcb->snd_nxt %u unacked %u ");
293888,602808319,0,0,PLAT_AP,LWIP_CORE,tcp_process_7,P_INFO,swLogPrintf("tcp keepalive timer has active ");
293888,602808320,0,0,PLAT_AP,LWIP_CORE,tcp_process_8,P_INFO,swLogPrintf("enable tcp keepalive timer %u ");
293888,602810624,0,0,PLAT_AP,LWIP_CORE,tcp_process_9,P_INFO,swLogPrintf("tcp_process ( SENT ) : cwnd %u ssthresh %u ");
293888,602814463,0,0,PLAT_AP,LWIP_CORE,tcp_process_10,P_ERROR,swLogPrintf("pcb->snd_queuelen > 0 ");
293888,602814464,0,0,PLAT_AP,LWIP_CORE,tcp_process_11,P_INFO,swLogPrintf("tcp_process: SYN-SENT --queuelen %u ");
293888,602818559,0,0,PLAT_AP,LWIP_CORE,tcp_process_12,P_ERROR,swLogPrintf("no segment to free ");
293888,602818560,0,0,PLAT_AP,LWIP_CORE,tcp_process_13,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602820608,0,0,PLAT_AP,LWIP_CORE,tcp_process_14,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602822912,0,0,PLAT_AP,LWIP_CORE,tcp_process_15,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,602826751,0,0,PLAT_AP,LWIP_CORE,tcp_process_43,P_SIG,swLogPrintf("tcp_process THE tcp pcb ( enable hib / sleep2 ) has established ");
293888,602826752,0,0,PLAT_AP,LWIP_CORE,tcp_process_16,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602829056,0,0,PLAT_AP,LWIP_CORE,tcp_process_17,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,602832895,0,0,PLAT_AP,LWIP_CORE,tcp_process_18,P_INFO,swLogPrintf("remove tcp syncrcv timer ");
293888,602833152,0,0,PLAT_AP,LWIP_CORE,tcp_process_19,P_INFO,swLogPrintf("TCP connection established %u -> %u ");
293888,602836991,0,0,PLAT_AP,LWIP_CORE,tcp_process_20,P_ERROR,swLogPrintf("pcb->listener->accept ! = NULL ");
293888,602837248,0,0,PLAT_AP,LWIP_CORE,tcp_process_21,P_INFO,swLogPrintf("tcp_process ( SYN_RCVD ) : cwnd %u ssthresh %u ");
293888,602841087,0,0,PLAT_AP,LWIP_CORE,tcp_process_keep_alive_1,P_INFO,swLogPrintf("tcp keepalive timer has active ");
293888,602841088,0,0,PLAT_AP,LWIP_CORE,tcp_process_22,P_INFO,swLogPrintf("enable tcp keepalive timer %u ");
293888,602845183,0,0,PLAT_AP,LWIP_CORE,tcp_process_23,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602845184,0,0,PLAT_AP,LWIP_CORE,tcp_process_24,P_INFO,swLogPrintf("enable tcp ooseq timer %u ");
293888,602849279,0,0,PLAT_AP,LWIP_CORE,tcp_process_25,P_INFO,swLogPrintf("tcp ooseq timer has active ");
293888,602849280,0,0,PLAT_AP,LWIP_CORE,tcp_process_26,P_INFO,swLogPrintf("disable tcp ooseq timer %u ");
293888,602853375,0,0,PLAT_AP,LWIP_CORE,tcp_process_keep_alive_2,P_INFO,swLogPrintf("tcp keepalive timer has active ");
293888,602853376,0,0,PLAT_AP,LWIP_CORE,tcp_process_27,P_INFO,swLogPrintf("enable tcp keepalive timer %u ");
293888,602855680,0,0,PLAT_AP,LWIP_CORE,tcp_process_28,P_INFO,swLogPrintf("TCP connection closed: FIN_WAIT_1 %u -> %u ");
293888,602857472,0,0,PLAT_AP,LWIP_CORE,tcp_process_29,P_INFO,swLogPrintf("enable tcp timewait timeout %u ");
293888,602861567,0,0,PLAT_AP,LWIP_CORE,tcp_process_30,P_WARNING,swLogPrintf("tcp keepalive timer has active ");
293888,602861568,0,0,PLAT_AP,LWIP_CORE,tcp_process_31,P_INFO,swLogPrintf("enable tcp fin wait2 %u ");
293888,602865663,0,0,PLAT_AP,LWIP_CORE,tcp_process_32,P_WARNING,swLogPrintf("tcp FIN WAIT2 timer has active ");
293888,602865920,0,0,PLAT_AP,LWIP_CORE,tcp_process_33,P_INFO,swLogPrintf("TCP connection closed: FIN_WAIT_2 %u -> %u ");
293888,602869759,0,0,PLAT_AP,LWIP_CORE,tcp_process_34,P_INFO,swLogPrintf("remove fin wait2 timer ");
293888,602871807,0,0,PLAT_AP,LWIP_CORE,tcp_process_35,P_WARNING,swLogPrintf("tcp FIN WAIT2 timer has deactive ");
293888,602871808,0,0,PLAT_AP,LWIP_CORE,tcp_process_36,P_INFO,swLogPrintf("enable tcp time wait timer %u ");
293888,602875903,0,0,PLAT_AP,LWIP_CORE,tcp_process_37,P_WARNING,swLogPrintf("tcp TIME WAIT timer has active ");
293888,602876160,0,0,PLAT_AP,LWIP_CORE,tcp_process_38,P_INFO,swLogPrintf("TCP connection closed: CLOSING %u -> %u ");
293888,602877952,0,0,PLAT_AP,LWIP_CORE,tcp_process_39,P_INFO,swLogPrintf("enable tcp time wait timer %u ");
293888,602882047,0,0,PLAT_AP,LWIP_CORE,tcp_process_40,P_WARNING,swLogPrintf("tcp TIME WAIT timer has active ");
293888,602882304,0,0,PLAT_AP,LWIP_CORE,tcp_process_41,P_INFO,swLogPrintf("TCP connection closed: LAST_ACK %u -> %u ");
293888,602886143,0,0,PLAT_AP,LWIP_CORE,tcp_process_42,P_INFO,swLogPrintf("remove tcp last ack timer ");
293888,602888191,0,0,PLAT_AP,LWIP_CORE,tcp_receive_1,P_ERROR,swLogPrintf("tcp_receive: wrong state ");
293888,602888192,0,0,PLAT_AP,LWIP_CORE,tcp_receive_2,P_INFO,swLogPrintf("tcp_receive: window update %u ");
293888,602891264,0,0,PLAT_AP,LWIP_CORE,tcp_receive_3,P_INFO,swLogPrintf("tcp_receive: no window update lastack %u ackno %u wl1 %u seqno %u wl2 %u ");
293888,602892288,0,0,PLAT_AP,LWIP_CORE,tcp_receive_4,P_INFO,swLogPrintf("tcp_receive: slow start cwnd %u ");
293888,602894336,0,0,PLAT_AP,LWIP_CORE,tcp_receive_5,P_INFO,swLogPrintf("tcp_receive: congestion avoidance cwnd %u ");
293888,602896896,0,0,PLAT_AP,LWIP_CORE,tcp_receive_6,P_INFO,swLogPrintf("tcp_receive: ACK for %u , unacked->seqno %u:%u ");
293888,602898688,0,0,PLAT_AP,LWIP_CORE,tcp_receive_7,P_INFO,swLogPrintf("tcp_receive: removing %u:%u from pcb->unacked ");
293888,602900480,0,0,PLAT_AP,LWIP_CORE,tcp_receive_8,P_INFO,swLogPrintf("tcp_receive: queuelen %u ");
293888,602904575,0,0,PLAT_AP,LWIP_CORE,tcp_receive_9,P_ERROR,swLogPrintf("pcb->snd_queuelen > = pbuf_clen ( next->p ) ");
293888,602906623,0,0,PLAT_AP,LWIP_CORE,tcp_receive_38,P_ERROR,swLogPrintf("tcp_receive_37: UL sequence state indicate fail , the pcb socketid is inavlid ");
293888,602906624,0,0,PLAT_AP,LWIP_CORE,tcp_receive_40,P_INFO,swLogPrintf("tcp_receive_37: UL sequence state indicate success , the pcb socket id %u ");
293888,602908928,0,0,PLAT_AP,LWIP_CORE,tcp_receive_ul_total_status_1,P_INFO,swLogPrintf("tcp_receive_37:socket %d , UL total status %u ");
293888,602910976,0,0,PLAT_AP,LWIP_CORE,tcp_receive_ul_total_status_2,P_INFO,swLogPrintf("tcp_receive_37:socket %d , UL total status %u ");
293888,602912768,0,0,PLAT_AP,LWIP_CORE,tcp_receive_10,P_INFO,swLogPrintf("%u ( after freeing unacked ) ");
293888,602916863,0,0,PLAT_AP,LWIP_CORE,tcp_receive_11,P_ERROR,swLogPrintf("tcp_receive: valid queue length ");
293888,602916864,0,0,PLAT_AP,LWIP_CORE,tcp_receive_12,P_INFO,swLogPrintf("remove tcp retry time , pcb 0x%x ");
293888,602920959,0,0,PLAT_AP,LWIP_CORE,tcp_receive_tcp_total_retry_time1,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602920960,0,0,PLAT_AP,LWIP_CORE,tcp_receive_13,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602923264,0,0,PLAT_AP,LWIP_CORE,tcp_receive_14,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,602927103,0,0,PLAT_AP,LWIP_CORE,tcp_receive_tcp_total_retry_time_2,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602927104,0,0,PLAT_AP,LWIP_CORE,tcp_receive_tcp_total_retry_time_4,P_INFO,swLogPrintf("enable tcp total retry timer %u ");
293888,602929408,0,0,PLAT_AP,LWIP_CORE,tcp_receive_15,P_ERROR,swLogPrintf("tcp_receive: removing %u:%u from pcb->unsent ");
293888,602931200,0,0,PLAT_AP,LWIP_CORE,tcp_receive_16,P_INFO,swLogPrintf("tcp_receive: queuelen %u ");
293888,602935295,0,0,PLAT_AP,LWIP_CORE,tcp_receive_17,P_ERROR,swLogPrintf("pcb->snd_queuelen > = pbuf_clen ( next->p ) ");
293888,602935296,0,0,PLAT_AP,LWIP_CORE,tcp_receive_18,P_INFO,swLogPrintf("%u ( after freeing unsent ) ");
293888,602939391,0,0,PLAT_AP,LWIP_CORE,tcp_receive_19,P_ERROR,swLogPrintf("tcp_receive: valid queue length ");
293888,602939392,0,0,PLAT_AP,LWIP_CORE,tcp_receive_pool,P_INFO,swLogPrintf("tcp_receive: poll result %u ");
293888,602941952,0,0,PLAT_AP,LWIP_CORE,tcp_receive_20,P_INFO,swLogPrintf("tcp_receive: pcb->rttest %u rtseq %u ackno %u ");
293888,602943744,0,0,PLAT_AP,LWIP_CORE,tcp_receive_21,P_INFO,swLogPrintf("tcp_receive: experienced rtt %u ticks ( %u msec ) ");
293888,602946304,0,0,PLAT_AP,LWIP_CORE,tcp_receive_22,P_INFO,swLogPrintf("tcp_receive: RTO %u ( %u msec ) , sv %d , sa %d ");
293888,602949631,0,0,PLAT_AP,LWIP_CORE,tcp_receive_23,P_ERROR,swLogPrintf("inseg.p ! = NULL or insane offset! ");
293888,602951679,0,0,PLAT_AP,LWIP_CORE,tcp_receive_24,P_ERROR,swLogPrintf("pbuf too short! ");
293888,602953727,0,0,PLAT_AP,LWIP_CORE,tcp_receive_25,P_ERROR,swLogPrintf("pbuf_header failed1 ");
293888,602955775,0,0,PLAT_AP,LWIP_CORE,tcp_receive_26,P_ERROR,swLogPrintf("pbuf_header failed2 ");
293888,602955776,0,0,PLAT_AP,LWIP_CORE,tcp_receive_27,P_INFO,swLogPrintf("tcp_receive: duplicate seqno %u ");
293888,602958336,0,0,PLAT_AP,LWIP_CORE,tcp_receive_28,P_INFO,swLogPrintf("tcp_receive: other end overran receive window seqno %u len %u right edge %u ");
293888,602961919,0,0,PLAT_AP,LWIP_CORE,tcp_receive_29,P_ERROR,swLogPrintf("tcp_receive: segment not trimmed correctly to rcv_wnd ");
293888,602963967,0,0,PLAT_AP,LWIP_CORE,tcp_receive_30,P_INFO,swLogPrintf("tcp_receive: received in-order FIN , binning ooseq queue ");
293888,602966015,0,0,PLAT_AP,LWIP_CORE,tcp_receive_31,P_ERROR,swLogPrintf("tcp_receive: segment not trimmed correctly to ooseq queue ");
293888,602968063,0,0,PLAT_AP,LWIP_CORE,tcp_receive_32,P_ERROR,swLogPrintf("tcp_receive: tcplen > rcv_wnd ");
293888,602970111,0,0,PLAT_AP,LWIP_CORE,tcp_receive_33,P_INFO,swLogPrintf("tcp_receive: received FIN. ");
293888,602972159,0,0,PLAT_AP,LWIP_CORE,tcp_receive_34,P_ERROR,swLogPrintf("tcp_receive: ooseq tcplen > rcv_wnd ");
293888,602974207,0,0,PLAT_AP,LWIP_CORE,tcp_receive_35,P_INFO,swLogPrintf("tcp_receive: dequeued FIN ");
293888,602974720,0,0,PLAT_AP,LWIP_CORE,tcp_receive_36,P_INFO,swLogPrintf("tcp_receive: other end overran receive window seqno %u len %u right edge %u ");
293888,602978303,0,0,PLAT_AP,LWIP_CORE,tcp_receive_37,P_ERROR,swLogPrintf("tcp_receive: segment not trimmed correctly to rcv_wnd ");
293888,602980351,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_1,P_INFO,swLogPrintf("tcp_parseopt: EOL ");
293888,602982399,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_2,P_INFO,swLogPrintf("tcp_parseopt: NOP ");
293888,602984447,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_3,P_INFO,swLogPrintf("tcp_parseopt: MSS ");
293888,602986495,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_4,P_WARNING,swLogPrintf("tcp_parseopt: bad length ");
293888,602988543,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_5,P_INFO,swLogPrintf("tcp_parseopt: WND_SCALE ");
293888,602990591,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_6,P_WARNING,swLogPrintf("tcp_parseopt: bad length2 ");
293888,602992639,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_7,P_ERROR,swLogPrintf("tcp_parseopt: window not at default value ");
293888,602994687,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_10,P_INFO,swLogPrintf("tcp_parseopt: other ");
293888,602996735,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_11,P_WARNING,swLogPrintf("tcp_parseopt: bad length3 ");
293888,602998783,0,0,PLAT_AP,LWIP_CORE,tcp_output_alloc_header_1,P_ERROR,swLogPrintf("check that first pbuf can hold struct tcp_hdr ");
293888,603000831,0,0,PLAT_AP,LWIP_CORE,tcp_create_segment_1,P_WARNING,swLogPrintf("tcp_create_segment: no memory ");
293888,603002879,0,0,PLAT_AP,LWIP_CORE,tcp_create_segment_2,P_ERROR,swLogPrintf("p->tot_len > = optlen ");
293888,603004927,0,0,PLAT_AP,LWIP_CORE,tcp_create_segment_4,P_WARNING,swLogPrintf("tcp_create_segment: no room for TCP header in pbuf ");
293888,603006975,0,0,PLAT_AP,LWIP_CORE,tcp_pbuf_prealloc_1,P_ERROR,swLogPrintf("need unchained pbuf ");
293888,603009023,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_1,P_WARNING,swLogPrintf("tcp_write ( ) called in invalid state ");
293888,603009280,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_2,P_WARNING,swLogPrintf("tcp_write: too much data ( len %u > snd_buf %u ) ");
293888,603011072,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_3,P_INFO,swLogPrintf("tcp_write: queuelen: %u ");
293888,603013376,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_4,P_INFO,swLogPrintf("tcp_write: too long queue %u ( max %u ) ");
293888,603017215,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_5,P_ERROR,swLogPrintf("tcp_write: pbufs on queue = > at least one queue non-empty ");
293888,603019263,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_6,P_ERROR,swLogPrintf("tcp_write: no pbufs on queue = > both queues empty ");
293888,603020032,0,0,PLAT_AP,LWIP_CORE,tcp_write_1,P_INFO,swLogPrintf("tcp_write ( pcb = 0x%x , data = 0x%x , len = %u , apiflags = %u ) ");
293888,603023359,0,0,PLAT_AP,LWIP_CORE,tcp_write_2,P_ERROR,swLogPrintf("tcp_write: arg = = NULL ( programmer violates API ");
293888,603025407,0,0,PLAT_AP,LWIP_CORE,tcp_write_3,P_ERROR,swLogPrintf("mss_local is too small ");
293888,603027455,0,0,PLAT_AP,LWIP_CORE,tcp_write_4,P_ERROR,swLogPrintf("unsent_oversize mismatch ( pcb vs. last_unsent ) ");
293888,603029503,0,0,PLAT_AP,LWIP_CORE,tcp_write_5,P_ERROR,swLogPrintf("inconsistent oversize vs. space ");
293888,603031551,0,0,PLAT_AP,LWIP_CORE,tcp_write_6,P_ERROR,swLogPrintf("inconsistent oversize vs. len ");
293888,603031552,0,0,PLAT_AP,LWIP_CORE,tcp_write_7,P_INFO,swLogPrintf("tcp_write : could not allocate memory for pbuf copy size %u ");
293888,603035647,0,0,PLAT_AP,LWIP_CORE,tcp_write_8,P_ERROR,swLogPrintf("tcp_write: ROM pbufs cannot be oversized ");
293888,603037695,0,0,PLAT_AP,LWIP_CORE,tcp_write_9,P_WARNING,swLogPrintf("tcp_write: could not allocate memory for zero-copy pbuf ");
293888,603039743,0,0,PLAT_AP,LWIP_CORE,tcp_write_10,P_ERROR,swLogPrintf("unsent_oversize mismatch ( pcb->unsent is NULL ) ");
293888,603039744,0,0,PLAT_AP,LWIP_CORE,tcp_write_11,P_WARNING,swLogPrintf("tcp_write : could not allocate memory for pbuf copy size %u ");
293888,603043839,0,0,PLAT_AP,LWIP_CORE,tcp_write_12,P_ERROR,swLogPrintf("tcp_write: check that first pbuf can hold the complete seglen ");
293888,603045887,0,0,PLAT_AP,LWIP_CORE,tcp_write_13,P_ERROR,swLogPrintf("oversize = = 0 ");
293888,603047935,0,0,PLAT_AP,LWIP_CORE,tcp_write_14,P_WARNING,swLogPrintf("tcp_write: could not allocate memory for zero-copy pbu ");
293888,603049983,0,0,PLAT_AP,LWIP_CORE,tcp_write_15,P_WARNING,swLogPrintf("tcp_write: could not allocate memory for header pbuf ");
293888,603050240,0,0,PLAT_AP,LWIP_CORE,tcp_write_16,P_WARNING,swLogPrintf("tcp_write: queue too long %u ( %d ) ");
293888,603054079,0,0,PLAT_AP,LWIP_CORE,tcp_write_17,P_ERROR,swLogPrintf("prev_seg ! = NULL ");
293888,603054336,0,0,PLAT_AP,LWIP_CORE,tcp_write_18,P_INFO,swLogPrintf("tcp_write: queueing %u:%u ");
293888,603058175,0,0,PLAT_AP,LWIP_CORE,tcp_write_19,P_ERROR,swLogPrintf("last_unsent->oversize_left > = oversize_used ");
293888,603060223,0,0,PLAT_AP,LWIP_CORE,tcp_write_20,P_ERROR,swLogPrintf("tcp_write: cannot concatenate when pcb->unsent is empty ");
293888,603062271,0,0,PLAT_AP,LWIP_CORE,tcp_write_21,P_ERROR,swLogPrintf("tcp_write: extension of reference requires reference ");
293888,603062272,0,0,PLAT_AP,LWIP_CORE,tcp_write_23,P_INFO,swLogPrintf("tcp_write: %u ( after enqueued ) ");
293888,603066367,0,0,PLAT_AP,LWIP_CORE,tcp_write_24,P_ERROR,swLogPrintf("tcp_write: valid queue length ");
293888,603066368,0,0,PLAT_AP,LWIP_CORE,tcp_write_27,P_ERROR,swLogPrintf("tcp_write: UL sequence state indicate fail , because the pcb 0x%x socket id is invalid ");
293888,603068416,0,0,PLAT_AP,LWIP_CORE,tcp_write_28,P_INFO,swLogPrintf("tcp_write: UL sequence state indicate success , the pcb socket id %u ");
293888,603072511,0,0,PLAT_AP,LWIP_CORE,tcp_write_25,P_ERROR,swLogPrintf("tcp_write: valid queue length2 ");
293888,603072512,0,0,PLAT_AP,LWIP_CORE,tcp_write_26,P_INFO,swLogPrintf("tcp_write: %u ( with mem err ) ");
293888,603074560,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_1,P_INFO,swLogPrintf("tcp_enqueue_flags: queuelen: %u ");
293888,603078655,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_2,P_ERROR,swLogPrintf("tcp_enqueue_flags: need either TCP_SYN or TCP_FIN in flags ( programmer violates API ) ");
293888,603078912,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_3,P_INFO,swLogPrintf("tcp_enqueue_flags: too long queue %u ( max %u ) ");
293888,603082751,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_4,P_ERROR,swLogPrintf("tcp_enqueue_flags: check that first pbuf can hold optlen ");
293888,603084799,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_5,P_ERROR,swLogPrintf("tcp_enqueue_flags: seg->tcphdr not aligned or invalid segment length ");
293888,603085312,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_6,P_INFO,swLogPrintf("tcp_enqueue_flags: queueing %u:%u ( 0x%x ) ");
293888,603086848,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_7,P_INFO,swLogPrintf("tcp_enqueue_flags: %u ( after enqueued ) ");
293888,603090943,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_8,P_ERROR,swLogPrintf("tcp_enqueue_flags: invalid queue length ");
293888,603092991,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_4,P_INFO,swLogPrintf("tcp delay ack timer has enable ");
293888,603092992,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_3,P_INFO,swLogPrintf("enable tcp delay ack timer %u ");
293888,603097087,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_1,P_INFO,swLogPrintf("tcp_output: ( ACK ) could not allocate pbuf ");
293888,603097088,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_2,P_INFO,swLogPrintf("tcp_output: sending ACK for %u ");
293888,603099392,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_port_mapping_1,P_INFO,swLogPrintf("tcp_send_empty_ack: port mapping from %u to %u ");
293888,603103231,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_5,P_INFO,swLogPrintf("tcp delay ack timer has enable ");
293888,603103232,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_6,P_INFO,swLogPrintf("enable tcp delay ack timer %u ");
293888,603107327,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_7,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,603109375,0,0,PLAT_AP,LWIP_CORE,tcp_output_1,P_ERROR,swLogPrintf("don ' t call tcp_output for listen-pcbs ");
293888,603109376,0,0,PLAT_AP,LWIP_CORE,tcp_output_2,P_INFO,swLogPrintf("tcp_output: nothing to send 0x%x ");
293888,603112192,0,0,PLAT_AP,LWIP_CORE,tcp_output_3,P_INFO,swLogPrintf("tcp_output: snd_wnd ( %u ) cwnd ( %u ) wnd ( %u ) seq = = NULL , ack %u ");
293888,603114752,0,0,PLAT_AP,LWIP_CORE,tcp_output_4,P_INFO,swLogPrintf("tcp_output: snd_wnd ( %u ) cwnd ( %u ) wnd ( %u ) effwnd ( %u ) seq ( %u ) , ack %u ");
293888,603117567,0,0,PLAT_AP,LWIP_CORE,tcp_output_5,P_ERROR,swLogPrintf("RST not expected here! ");
293888,603119104,0,0,PLAT_AP,LWIP_CORE,tcp_output_6,P_INFO,swLogPrintf("tcp_output: snd_wnd ( %u ) cwnd ( %u ) wnd ( %u ) effwnd ( %u ) seq ( %u ) , ack %u i ( %u ) ");
293888,603121663,0,0,PLAT_AP,LWIP_CORE,tcp_output_8,P_SIG,swLogPrintf("tcp output fail because of UL suspending , it will retry later when retry time timeout ");
293888,603123711,0,0,PLAT_AP,LWIP_CORE,tcp_output_7,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,603123968,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_5,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,603127807,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_6,P_WARNING,swLogPrintf("tcp retry timer has active ");
293888,603127808,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_tcp_total_retry_time_1,P_INFO,swLogPrintf("enable tcp total retry timer %u ");
293888,603131903,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_tcp_total_retry_time_2,P_WARNING,swLogPrintf("tcp total retry timer has active ");
293888,603132160,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_8,P_INFO,swLogPrintf("tcp output segment pbuf data ticktype %u , dataLifetime %u ");
293888,603134208,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_1,P_INFO,swLogPrintf("tcp_output_segment: rtseq %u , rttest %u ");
293888,603138047,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_10,P_INFO,swLogPrintf("tcp_output_segment: pcb in SYS_SENT state , discard rttest ");
293888,603138304,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_2,P_INFO,swLogPrintf("tcp_output_segment: %u:%u ");
293888,603140608,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_port_mapping_1,P_INFO,swLogPrintf("tcp_output_segment: port mapping from %u to %u , cid %u ");
293888,603144191,0,0,PLAT_AP,LWIP_CORE,tcp_rst_1,P_INFO,swLogPrintf("tcp_rst: could not allocate memory for pbuf ");
293888,603146239,0,0,PLAT_AP,LWIP_CORE,tcp_rst_2,P_ERROR,swLogPrintf("check that first pbuf can hold struct tcp_hdr ");
293888,603146752,0,0,PLAT_AP,LWIP_CORE,tcp_rst_port_mapping_1,P_INFO,swLogPrintf("tcp_rst: port mapping from %u to %u , cid %u ");
293888,603148544,0,0,PLAT_AP,LWIP_CORE,tcp_rst_3,P_INFO,swLogPrintf("tcp_rst: seqno %u ackno %u ");
293888,603150848,0,0,PLAT_AP,LWIP_CORE,tcp_rexmit_fast_1,P_INFO,swLogPrintf("tcp_receive: dupacks %u ( %u ) fast retransmit %u ");
293888,603152640,0,0,PLAT_AP,LWIP_CORE,tcp_rexmit_fast_2,P_INFO,swLogPrintf("tcp_receive: The minimum value for ssthresh %u should be min 2 mss %u ");
293888,603154432,0,0,PLAT_AP,LWIP_CORE,tcp_rexmit_fast_3,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,603156736,0,0,PLAT_AP,LWIP_CORE,tcp_rexmit_fast_4,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,603160575,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_1,P_INFO,swLogPrintf("tcp_keepalive: sending KEEPALIVE probe to ");
293888,603161088,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_2,P_INFO,swLogPrintf("tcp_keepalive: tcp_ticks %u pcb->tmr %u pcb->keep_cnt_sent %u ");
293888,603164671,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_3,P_WARNING,swLogPrintf("tcp_keepalive: could not allocate memory for pbuf ");
293888,603165184,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_port_mapping_1,P_INFO,swLogPrintf("tcp_keepalive: port mapping from %u to %u , cid %u ");
293888,603166976,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_5,P_INFO,swLogPrintf("tcp_keepalive: pbuf tick type %u , dataLifeTime %u ");
293888,603169280,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_6,P_INFO,swLogPrintf("tcp_keepalive: seqno %u ackno %u err %d ");
293888,603172863,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_1,P_INFO,swLogPrintf("tcp_zero_window_probe: sending ZERO WINDOW probe to ");
293888,603173376,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_2,P_INFO,swLogPrintf("tcp_zero_window_probe: tcp_ticks %u pcb->tmr %u pcb->keep_cnt_sent %u ");
293888,603176959,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_3,P_WARNING,swLogPrintf("tcp_zero_window_probe: no memory for pbuf ");
293888,603177216,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_6,P_INFO,swLogPrintf("tcp_zero_window_probe: pbuf ticktype %u , datalifetime %u ");
293888,603179520,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_7,P_INFO,swLogPrintf("tcp_zero_window_probe: seqno %u ackno %u err %d ");
293888,603183103,0,0,PLAT_AP,LWIP_CORE,sys_timeout_debug_1,P_ERROR,swLogPrintf("sys_timeout: timeout ! = NULL , alloc sys_timeout fail ");
293888,603185151,0,0,PLAT_AP,LWIP_CORE,tcpip_idle_timer_1,P_INFO,swLogPrintf("tcpip idle timer timeout ");
293888,603187199,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_1,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist ipv6 rs retry timer ");
293888,603189247,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_2,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist ipv6 address dad timer ");
293888,603189248,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_3,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp retry timer , arg 0x%x ");
293888,603193343,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_16,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp total retry timer ");
293888,603195391,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_4,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp delay ack timer ");
293888,603197439,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_5,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp pending fin timer ");
293888,603199487,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_6,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp refuse data timer ");
293888,603201535,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_7,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp fin wait2 timer ");
293888,603203583,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_8,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp ooseq timer ");
293888,603205631,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_9,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp syncrcv timer ");
293888,603207679,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_10,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp lastack timer ");
293888,603209727,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_11,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp timewait timer ");
293888,603211775,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_pool_check,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp pool timer ");
293888,603213823,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_keep_alive_check,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist keep alive timer ");
293888,603215871,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_close_local_abort_check,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp close local abort timer ");
293888,603217919,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_12,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist ipv4 frag timer ");
293888,603219967,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_13,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist ipv6 frag timer ");
293888,603222015,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_14,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist DNS retry timer ");
293888,603224063,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_15,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist idle timer ");
293888,603224064,0,0,PLAT_AP,LWIP_CORE,udp_get_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("udp_get_curr_hib_sleep2_pcb_num %u ");
293888,603226112,0,0,PLAT_AP,LWIP_CORE,udp_add_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("udp_add_hib_sleep2_context_pcb %u ");
293888,603228160,0,0,PLAT_AP,LWIP_CORE,udp_del_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("udp_del_curr_hib_sleep2_pcb_num %u ");
293888,603230208,0,0,PLAT_AP,LWIP_CORE,udp_enable_hib_sleep2_mode_1,P_INFO,swLogPrintf("udp_enable_hib_sleep2_mode %u ");
293888,603234303,0,0,PLAT_AP,LWIP_CORE,udp_disable_hib_sleep2_mode_1,P_INFO,swLogPrintf("udp_disable_hib_sleep2_mode ");
293888,603234304,0,0,PLAT_AP,LWIP_CORE,udp_add_hib_sleep2_context_pcb_1,P_INFO,swLogPrintf("udp_add_hib_sleep2_context_pcb alloc new udp_pcb success , sockid %d ");
293888,603238399,0,0,PLAT_AP,LWIP_CORE,udp_add_hib_sleep2_context_pcb_2,P_ERROR,swLogPrintf("udp_add_hib_sleep2_context_pcb alloc new udp_pcb fail ");
293888,603240447,0,0,PLAT_AP,LWIP_CORE,udp_check_hib_sleep2_pcb_active_1,P_INFO,swLogPrintf("udp_check_hib_sleep2_pcb_active ");
293888,603240448,0,0,PLAT_AP,LWIP_CORE,udp_check_hib_sleep2_pcb_active_2,P_INFO,swLogPrintf("udp_check_hib_sleep2_pcb_active change pcb 0x%x state to enable_active state ");
293888,603244543,0,0,PLAT_AP,LWIP_CORE,udp_check_hib_sleep2_pcb_deactive_1,P_INFO,swLogPrintf("udp_check_hib_sleep2_pcb_deactive ");
293888,603244544,0,0,PLAT_AP,LWIP_CORE,udp_check_hib_sleep2_pcb_deactive_2,P_INFO,swLogPrintf("udp_check_hib_sleep2_pcb_deactive change pcb 0x%x state to enable_deactive state ");
293888,603248639,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_1,P_ERROR,swLogPrintf("udp_get_sock_info invalid fd ");
293888,603250687,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_2,P_INFO,swLogPrintf("udp_get_sock_info find adpat udp hib pcb ");
293888,603252735,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_3,P_INFO,swLogPrintf("udp_get_sock_info can not find adpat udp hib pcb ");
293888,603254783,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_by_pcb_1,P_ERROR,swLogPrintf("udp_get_sock_info_by_pcb invalid parameter ");
293888,603256831,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_by_pcb_2,P_INFO,swLogPrintf("udp_get_sock_info_by_pcb find adpat udp pcb ");
293888,603258879,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_by_pcb_3,P_INFO,swLogPrintf("udp_get_sock_info find adpat udp hib pcb ");
293888,603260927,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_by_pcb_4,P_INFO,swLogPrintf("udp_get_sock_info_by_pcb can not find adpat udp pcb ");
293888,603260928,0,0,PLAT_AP,LWIP_CORE,udp_input_1,P_WARNING,swLogPrintf("udp_input: short UDP datagram ( %u bytes ) discarded ");
293888,603262976,0,0,PLAT_AP,LWIP_CORE,udp_input_2,P_INFO,swLogPrintf("udp_input: received datagram of length %u ");
293888,603265280,0,0,PLAT_AP,LWIP_CORE,udp_input_3,P_INFO,swLogPrintf("udp ( %u ) <-- ( %u ) ");
293888,603267328,0,0,PLAT_AP,LWIP_CORE,udp_input_4,P_INFO,swLogPrintf("pcb ( %u ) <-- ( %u ) ");
293888,603271167,0,0,PLAT_AP,LWIP_CORE,udp_input_5,P_INFO,swLogPrintf("udp_input: calculating checksum ");
293888,603273215,0,0,PLAT_AP,LWIP_CORE,udp_input_6,P_ERROR,swLogPrintf("pbuf_header failed ");
293888,603275263,0,0,PLAT_AP,LWIP_CORE,udp_input_7,P_INFO,swLogPrintf("udp_input: not for us ");
293888,603277311,0,0,PLAT_AP,LWIP_CORE,udp_input_8,P_WARNING,swLogPrintf("udp_input:not for us , and not reply icmp unreachable message ");
293888,603279359,0,0,PLAT_AP,LWIP_CORE,udp_input_9,P_WARNING,swLogPrintf("udp_input: UDP ( or UDP Lite ) datagram discarded due to failing checksum ");
293888,603281407,0,0,PLAT_AP,LWIP_CORE,udp_sendto_chksum_2,P_INFO,swLogPrintf("udp_sendto_chksum No route to ");
293888,603283455,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_2,P_INFO,swLogPrintf("udp_send: not yet bound to a port , binding now ");
293888,603285503,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_3,P_WARNING,swLogPrintf("udp_send: forced port bind failed ");
293888,603287551,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_4,P_WARNING,swLogPrintf("udp_send: could not allocate header ");
293888,603287808,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_5,P_INFO,swLogPrintf("udp_send: added header pbuf 0x%x before given pbuf 0x%x ");
293888,603289600,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_6,P_INFO,swLogPrintf("udp_send: added header in given pbuf 0x%x ");
293888,603293695,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_7,P_ERROR,swLogPrintf("check that first pbuf can hold struct udp_hdr ");
293888,603294208,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_port_mapping_1,P_INFO,swLogPrintf("udp_send: port mapping from %u to %u , cid %u ");
293888,603295744,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_8,P_INFO,swLogPrintf("udp_send: sending datagram of length %u ");
293888,603298048,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_12,P_INFO,swLogPrintf("udp_send: UDP packet checksum %u ip_output_if %u ");
293888,603299840,0,0,PLAT_AP,LWIP_CORE,udp_bind_1,P_INFO,swLogPrintf("udp_bind port = %u ");
293888,603303935,0,0,PLAT_AP,LWIP_CORE,udp_bind_2,P_WARNING,swLogPrintf("udp_bind: out of free UDP ports ");
293888,603303936,0,0,PLAT_AP,LWIP_CORE,udp_bind_3,P_INFO,swLogPrintf("udp_bind: local port %u already bound by another pcb ");
293888,603308031,0,0,PLAT_AP,LWIP_CORE,udp_bind_5,P_INFO,swLogPrintf("udp_bind: add active udp list ) ");
293888,603308032,0,0,PLAT_AP,LWIP_CORE,udp_bind_4,P_INFO,swLogPrintf("udp_bind: bound to port ( %u ) ");
293888,603310080,0,0,PLAT_AP,LWIP_CORE,udp_connect_1,P_INFO,swLogPrintf("udp_connect: connected to port ( %u ) ");
293888,603314175,0,0,PLAT_AP,LWIP_CORE,udp_connect_2,P_INFO,swLogPrintf("udp_bind: add active udp list ) ");
293888,603316223,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_1,P_ERROR,swLogPrintf("udp_send_pkg_to_pcb: invalid parameter ");
293888,603318271,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_2,P_ERROR,swLogPrintf("udp_send_pkg_to_pcb: malloc pbuf fail ");
293888,603318528,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_3,P_ERROR,swLogPrintf("udp_send_pkg_to_pcb: reqeust_body 0x%x fail , len %d ");
293888,603320576,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_4,P_INFO,swLogPrintf("udp_send_pkg_to_pcb: reqeust_body 0x%x success , len %d ");
293888,603324415,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_5,P_ERROR,swLogPrintf("udp_send_pkg_to_pcb: the pcb is null ");
293888,603326463,0,0,PLAT_AP,LWIP_CORE,udp_send_ul_state_ind_1,P_ERROR,swLogPrintf("udp_send_ul_state_ind: invalid parameter ");
293888,603326464,0,0,PLAT_AP,LWIP_CORE,udp_send_ul_state_ind_body_len_check_1,P_ERROR,swLogPrintf("udp_send_ul_state_ind: invalid len %u big than &u ");
293888,603330559,0,0,PLAT_AP,LWIP_CORE,udp_send_ul_state_ind_3,P_INFO,swLogPrintf("udp_send_ul_state_ind: no sequence state need indicate ");
293888,603332607,0,0,PLAT_AP,LWIP_CORE,udp_send_dns_resolve_result_1,P_ERROR,swLogPrintf("udp_send_dns_resolve_result: invalid parameter ");
293888,603334655,0,0,PLAT_AP,LWIP_CORE,udp_send_dns_resolve_result_2,P_ERROR,swLogPrintf("udp_send_dns_resolve_result: malloc fail ");
293888,603334656,0,0,PLAT_AP,LWIP_CORE,udp_send_ul_total_length_status_1,P_ERROR,swLogPrintf("udp_send_ul_state_ind: invalid len %u big than &u ");
293888,603336704,0,0,PLAT_AP,LWIP_CORE,udp_netif_enter_oos_state_1,P_INFO,swLogPrintf("udp_netif_enter_oos_state pcb 0x%x ");
293888,603338752,0,0,PLAT_AP,LWIP_CORE,udp_netif_exit_oos_state_1,P_INFO,swLogPrintf("udp_netif_exit_oos_state pcb 0x%x ");
293888,603341056,0,0,PLAT_AP,LWIP_CORE,udp_debug_print_1,P_INFO,swLogPrintf("UDP header: | %u | %u | ( src port , dest port ) ");
293888,603343104,0,0,PLAT_AP,LWIP_CORE,udp_debug_print_2,P_INFO,swLogPrintf("UDP header: | %u | %u | ( len , chksum ) ");
294912,603983871,0,0,PLAT_AP,LWIP_CORE_IP,NetifIp4PkgFwdWanFromLanSrcAddrProcess_1,P_INFO,swLogPrintf("update ip4 src addr ");
294912,603985919,0,0,PLAT_AP,LWIP_CORE_IP,NetifIp4PkgFwdLanFromWanDestAddrProcess_1,P_INFO,swLogPrintf("update ip4 dest addr ");
294912,603985920,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_1,P_INFO,swLogPrintf("icmp_input: short IP header ( %u bytes ) received ");
294912,603987968,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_2,P_INFO,swLogPrintf("icmp_input: short ICMP ( %u bytes ) received ");
294912,603992063,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_3,P_INFO,swLogPrintf("icmp_input: Not echoing to multicast pings ");
294912,603994111,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_4,P_INFO,swLogPrintf("icmp_input: Not echoing to broadcast pings ");
294912,603996159,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_5,P_INFO,swLogPrintf("icmp_input: ping ");
294912,603998207,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_6,P_INFO,swLogPrintf("icmp_input: bad ICMP echo received ");
294912,604000255,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_7,P_WARNING,swLogPrintf("icmp_input: checksum failed for received ICMP echo ");
294912,604002303,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_8,P_WARNING,swLogPrintf("icmp_input: allocating new pbuf failed ");
294912,604004351,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_9,P_ERROR,swLogPrintf("icmp_input: moving r->payload to icmp header failed ");
294912,604006399,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_10,P_WARNING,swLogPrintf("icmp_input: copying to new pbuf failed ");
294912,604008447,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_11,P_ERROR,swLogPrintf("icmp_input: restoring original p->payload failed ");
294912,604010495,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_12,P_WARNING,swLogPrintf("icmp_input: Can ' t move over header in packet ");
294912,604010496,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_13,P_WARNING,swLogPrintf("icmp_input: ip_output_if returned an error: %d ");
294912,604012800,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_14,P_WARNING,swLogPrintf("icmp_input: ICMP type %u code %u not supported ");
294912,604016639,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_response_1,P_WARNING,swLogPrintf("icmp_time_exceeded: failed to allocate pbuf for ICMP packet. ");
294912,604018687,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_response_2,P_ERROR,swLogPrintf("check that first pbuf can hold icmp message ");
294912,604020735,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_response_3,P_INFO,swLogPrintf("icmp_time_exceeded from ");
294912,604022783,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_responseto_1,P_WARNING,swLogPrintf("icmp_time_exceeded: failed to allocate pbuf for ICMP packet. ");
294912,604024831,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_responseto_2,P_ERROR,swLogPrintf("check that first pbuf can hold icmp message ");
294912,604026879,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_responseto_3,P_INFO,swLogPrintf("icmp_time_exceeded from ");
294912,604027648,0,0,PLAT_AP,LWIP_CORE_IP,ip4_route_1,P_INFO,swLogPrintf("ip4_route: No route to %u.%u.%u.%u ");
294912,604029696,0,0,PLAT_AP,LWIP_CORE_IP,ip4_forwardto_1,P_INFO,swLogPrintf("ip4_forwardto: not forwarding LLA %u.%u.%u.%u ");
294912,604031744,0,0,PLAT_AP,LWIP_CORE_IP,ip4_forwardto_2,P_INFO,swLogPrintf("ip4_forwardto: no forwarding route for %u.%u.%u.%u ");
294912,604033792,0,0,PLAT_AP,LWIP_CORE_IP,ip4_forwardto_3,P_INFO,swLogPrintf("ip4_forwardto: forwarding packet to %u.%u.%u.%u ");
294912,604035328,0,0,PLAT_AP,LWIP_CORE_IP,ip4_forwardto_4,P_WARNING,swLogPrintf("ip4_forwardto: netif mtu %u littler than pkg len %u ");
294912,604039167,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_1,P_INFO,swLogPrintf("ip4_input_adpt_process fwd WAN ");
294912,604039424,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_2,P_INFO,swLogPrintf("ip4_input_adpt_process fwd WAN name %c%u ");
294912,604043263,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_3,P_INFO,swLogPrintf("ip4_input_adpt_process fwd LAN ");
294912,604043520,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_4,P_INFO,swLogPrintf("ip4_input_adpt_process fwd LAN name %c%u ");
294912,604047359,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_5,P_INFO,swLogPrintf("ip4_input_adpt_process fwd ETH LAN ");
294912,604047616,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_6,P_INFO,swLogPrintf("ip4_input_adpt_process fwd LAN name %c%u ");
294912,604051455,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_7,P_INFO,swLogPrintf("ip4_input_adpt_process fwd PPP LAN ");
294912,604051712,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_8,P_INFO,swLogPrintf("ip4_input_adpt_process fwd LAN name %c%u ");
294912,604055551,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_9,P_INFO,swLogPrintf("ip4_input_adpt_process dns pkg fwd WAN ");
294912,604055808,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_10,P_INFO,swLogPrintf("ip4_input_adpt_process dns pkg fwd WAN name %c%u ");
294912,604059647,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_11,P_INFO,swLogPrintf("ip4_input_adpt_process dns pkg fwd LAN ");
294912,604059904,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_12,P_INFO,swLogPrintf("ip4_input_adpt_process dns pkg fwd LAN name %c%u ");
294912,604063743,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_13,P_INFO,swLogPrintf("ip4_input_adpt_process dns pkg fwd ETH LAN ");
294912,604064000,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_14,P_INFO,swLogPrintf("ip4_input_adpt_process dns pkg fwd ETH LAN name %c%u ");
294912,604067839,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_15,P_INFO,swLogPrintf("ip4_input_adpt_process dns pkg fwd PPP LAN ");
294912,604068096,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_16,P_INFO,swLogPrintf("ip4_input_adpt_process dns pkg fwd PPP LAN name %c%u ");
294912,604071935,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_17,P_INFO,swLogPrintf("ip4_input_adpt_process fwd LAN and input ");
294912,604072192,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_18,P_INFO,swLogPrintf("ip4_input_adpt_process fwd ETH LAN and input name %c%u ");
294912,604074240,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_19,P_INFO,swLogPrintf("ip4_input_adpt_process fwd PPP LAN and input name %c%u ");
294912,604078079,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_20,P_INFO,swLogPrintf("ip4_input_adpt_process discard ");
294912,604078080,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_1,P_INFO,swLogPrintf("IP packet dropped due to bad version number %u ");
294912,604080128,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_2,P_WARNING,swLogPrintf("ip4_input: short IP header ( %u bytes ) received , IP packet dropped ");
294912,604082432,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_3,P_WARNING,swLogPrintf("IP header ( len %u ) does not fit in first pbuf ( len %u ) , IP packet dropped ");
294912,604084480,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_4,P_WARNING,swLogPrintf("IP ( len %u ) is longer than pbuf ( len %u ) , IP packet dropped ");
294912,604086272,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_5,P_WARNING,swLogPrintf("Checksum ( 0x%x ) failed , IP packet dropped ");
294912,604089344,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_pre_13,P_INFO,swLogPrintf("IP packet is a fragment ( id = 0x%x tot_len = %u len = %u MF = %u offset = %u ) , calling ip4_reass ( ) ");
294912,604091392,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_6,P_INFO,swLogPrintf("ip_input: iphdr->dest 0x%x netif->ip_addr 0x%x ( 0x%x , 0x%x , 0x%x ) ");
294912,604092672,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_7,P_INFO,swLogPrintf("ip4_input: packet accepted on interface %c%u ");
294912,604094464,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_9,P_INFO,swLogPrintf("ip4_input: UDP packet to DHCP client port %u ");
294912,604098559,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_10,P_INFO,swLogPrintf("ip4_input: DHCP packet accepted ");
294912,604100607,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_11,P_WARNING,swLogPrintf("ip4_input: packet source is not valid ");
294912,604102655,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_12,P_INFO,swLogPrintf("ip4_input: packet not for us ");
294912,604102912,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_16,P_INFO,swLogPrintf("ip4_input:p->len %u p->tot_len %u ");
294912,604104704,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_17,P_INFO,swLogPrintf("Unsupported transport protocol %u ");
294912,604108799,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_2,P_WARNING,swLogPrintf("ip4_output: not enough room for IP header in pbuf ");
294912,604110847,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_3,P_ERROR,swLogPrintf("check that first pbuf can hold struct ip_hdr ");
294912,604111360,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_4,P_INFO,swLogPrintf("ip4_output_if: %c%u %u ");
294912,604114943,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_5,P_INFO,swLogPrintf("netif_loop_output ( ) ");
294912,604116991,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_6,P_INFO,swLogPrintf("ip4_output_if: call netif->output ( ) ");
294912,604117248,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_7,P_INFO,swLogPrintf("ip4_output_if: call netif->output ( ) , ticktype %u , systick %u ");
294912,604119808,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_1,P_WARNING,swLogPrintf("ip4_output: No route to %u.%u.%u.%u ");
294912,604121856,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_1,P_INFO,swLogPrintf("IP header: |%u|%u|%u|%u| ( v , hl , tos , len ) ");
294912,604124160,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_2,P_INFO,swLogPrintf("IP header: |%u|%u%u%u|%u| ( id , flags , offset ) ");
294912,604125696,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_3,P_INFO,swLogPrintf("IP header: |%u|%u|%u| ( ttl , proto , chksum ) ");
294912,604128000,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_4,P_INFO,swLogPrintf("IP header: |%u|%u|%u|%u| ( src ) ");
294912,604130048,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_5,P_INFO,swLogPrintf("IP header: |%u|%u|%u|%u| ( dest ) ");
294912,604131328,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_tmr_1,P_INFO,swLogPrintf("ip_reass_tmr: timer dec %u ");
294912,604135423,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_tmr_2,P_INFO,swLogPrintf("ip_reass_tmr: timer timed out ");
294912,604137471,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_1,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram: prev ! = ipr ");
294912,604139519,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_2,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram: prev->next = = ipr ");
294912,604141567,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_3,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram1: pbufs_freed + clen < = 0xffff ");
294912,604143615,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_4,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram2: pbufs_freed + clen < = 0xffff ");
294912,604145663,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_5,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram2: ip_reass_pbufcount > = clen ");
294912,604147711,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_enqueue_new_datagram_1,P_WARNING,swLogPrintf("Failed to alloc reassdata struct ");
294912,604149759,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_dequeue_datagram_1,P_WARNING,swLogPrintf("sanity check linked list ");
294912,604151807,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_chain_frag_into_datagram_and_validate_1,P_ERROR,swLogPrintf("sizeof ( struct ip_reass_helper ) < = IP_HLEN ");
294912,604153855,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_chain_frag_into_datagram_and_validate_2,P_ERROR,swLogPrintf("check fragments don ' t overlap ");
294912,604155903,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_chain_frag_into_datagram_and_validate_3,P_ERROR,swLogPrintf("no previous fragment , this must be the first fragment ");
294912,604157951,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_chain_frag_into_datagram_and_validate_4,P_ERROR,swLogPrintf("sanity check fail or validate_datagram:next_pbuf! = NULL ");
294912,604159999,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_1,P_WARNING,swLogPrintf("ip4_reass: IP options currently not supported! ");
294912,604160512,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_2,P_INFO,swLogPrintf("ip4_reass: Overflow condition: pbufct = %d , clen = %d , MAX = %d ");
294912,604162048,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_3,P_INFO,swLogPrintf("ip4_reass: matching previous fragment ID = %x ");
294912,604166143,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_overlapp_check_1,P_INFO,swLogPrintf("ip4_reass: invalid reass pkg , drop it ");
294912,604166144,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_4,P_INFO,swLogPrintf("ip4_reass: last fragment seen , total len %u ");
294912,604168192,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_5,P_INFO,swLogPrintf("ip_reass_pbufcount: %d out ");
294912,604172287,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_6,P_INFO,swLogPrintf("ip4_reass: nullreturn ");
294912,604174335,0,0,PLAT_AP,LWIP_CORE_IP,ip_frag_free_pbuf_custom_ref_1,P_ERROR,swLogPrintf("ip_frag_free_pbuf_custom_ref: p ! = NULL ");
294912,604176383,0,0,PLAT_AP,LWIP_CORE_IP,ipfrag_free_pbuf_custom_1,P_ERROR,swLogPrintf("ipfrag_free_pbuf_custom:pcr ! = NULL or pcr = = p ");
294912,604178431,0,0,PLAT_AP,LWIP_CORE_IP,ip4_frag_1,P_ERROR,swLogPrintf("ip4_frag ( ) does not support IP options ");
294912,604180479,0,0,PLAT_AP,LWIP_CORE_IP,ip4_frag_2,P_ERROR,swLogPrintf("ip_frag ( ) : MF already set ");
294912,604182527,0,0,PLAT_AP,LWIP_CORE_IP,ip4_frag_4,P_ERROR,swLogPrintf("this needs a pbuf in one piece!2 ");
294912,604183296,0,0,PLAT_AP,LWIP_CORE_IP,ip4_frag_5,P_INFO,swLogPrintf("the new pbuf bexceptdata %u , dataRai %u , ticktype %u , datalifetime %u ");
294912,604186623,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_timeout_1,P_INFO,swLogPrintf("ip_reass_timeout: timer timed out ");
294912,604188671,0,0,PLAT_AP,LWIP_CORE_IP,tcpip_ip4_reass_timer_1,P_INFO,swLogPrintf("tcpip_ip4_reass_timer: timeout ");
294912,604188672,0,0,PLAT_AP,LWIP_CORE_IP,tcpip_ip4_reass_timer_2,P_INFO,swLogPrintf("tcpip_ip4_reass_timer: enable ip4_rease_timer %u ");
294912,604192767,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_timer_needed_1,P_INFO,swLogPrintf("ip4_reass_timer_needed ");
294912,604192768,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_timer_needed_2,P_INFO,swLogPrintf("ip4_reass_timer_needed active tcpip_ip4_reass_timer %u ");
294912,604196863,0,0,PLAT_AP,LWIP_CORE_IP,icmp6_send_response_1,P_INFO,swLogPrintf("icmp_time_exceeded: failed to allocate pbuf for ICMPv6 packet ");
294912,604198911,0,0,PLAT_AP,LWIP_CORE_IP,icmp6_send_response_2,P_ERROR,swLogPrintf("check that first pbuf can hold icmp 6 message ");
294912,604200959,0,0,PLAT_AP,LWIP_CORE_IP,ip6_forward_1,P_INFO,swLogPrintf("ip6_forward: not forwarding link-local address. ");
294912,604202752,0,0,PLAT_AP,LWIP_CORE_IP,ip6_forward_2,P_INFO,swLogPrintf("ip6_forward: no route for %x:%x:%x:%x:%x:%x:%x:%x ");
294912,604205055,0,0,PLAT_AP,LWIP_CORE_IP,ip6_forward_3,P_INFO,swLogPrintf("ip6_forward: not bouncing packets back on incoming interface. ");
294912,604206848,0,0,PLAT_AP,LWIP_CORE_IP,ip6_forward_4,P_INFO,swLogPrintf("ip6_forward: forwarding packet to%x:%x:%x:%x:%x:%x:%x:%x ");
294912,604207104,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_1,P_INFO,swLogPrintf("IPv6 packet dropped due to bad version number %u ");
294912,604209408,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_2,P_WARNING,swLogPrintf("IPv6 header ( len %u ) does not fit in first pbuf ( len %u ) , IP packet dropped. ");
294912,604211456,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_3,P_WARNING,swLogPrintf("IPv6 ( plen %u ) is longer than pbuf ( len %u ) , IP packet dropped. ");
294912,604213504,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_17,P_INFO,swLogPrintf("ip6_input: p->len %u p->tot_len %u ");
294912,604215552,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_solicited_1,P_SIG,swLogPrintf("ip6_input: solicited packet accepted on interface %c%u ");
294912,604217600,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_4,P_INFO,swLogPrintf("ip6_input: solicited node packet accepted on interface %c%u ");
294912,604219648,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_5,P_INFO,swLogPrintf("ip6_input: packet accepted on interface %c%u ");
294912,604223487,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_6,P_INFO,swLogPrintf("ip6_input: packet with src ANY_ADDRESS dropped ");
294912,604225535,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_7,P_INFO,swLogPrintf("ip6_input: packet not for us ");
294912,604227583,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_8,P_INFO,swLogPrintf("ip6_input: packet with Hop-by-Hop options header ");
294912,604227840,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_9,P_WARNING,swLogPrintf("IPv6 options header ( hlen %u ) does not fit in first pbuf ( len %u ) , IPv6 packet dropped1 ");
294912,604231679,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_10,P_INFO,swLogPrintf("ip6_input: packet with Destination options header ");
294912,604231936,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_11,P_WARNING,swLogPrintf("IPv6 options header ( hlen %u ) does not fit in first pbuf ( len %u ) , IPv6 packet dropped2 ");
294912,604235775,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_12,P_INFO,swLogPrintf("ip6_input: packet with Routing header ");
294912,604236032,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_13,P_WARNING,swLogPrintf("IPv6 options header ( hlen %u ) does not fit in first pbuf ( len %u ) , IPv6 packet dropped3 ");
294912,604239871,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_14,P_INFO,swLogPrintf("ip6_input: packet with Fragment header ");
294912,604240128,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_15,P_WARNING,swLogPrintf("IPv6 options header ( hlen %u ) does not fit in first pbuf ( len %u ) , IPv6 packet dropped4 ");
294912,604241920,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_18,P_WARNING,swLogPrintf("ip6_input: Unsupported transport protocol %u ");
294912,604246015,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_1,P_WARNING,swLogPrintf("ip6_output_if: No suitable source address for packet ");
294912,604248063,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_1,P_WARNING,swLogPrintf("ip6_output_if_src: not enough room for IPv6 header in pbuf ");
294912,604250111,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_2,P_ERROR,swLogPrintf("ip6_output_if_src: check that first pbuf can hold struct ip6_hdr ");
294912,604250624,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_3,P_INFO,swLogPrintf("ip6_output_if: %c%u %u ");
294912,604254207,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_4,P_INFO,swLogPrintf("netif_loop_output ( ) ");
294912,604256255,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_5,P_INFO,swLogPrintf("netif->output_ip6 ( ) ");
294912,604256512,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_6,P_INFO,swLogPrintf("netif->output_ip6 ( ) , ticktype %u , systick %u ");
294912,604260096,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_1,P_INFO,swLogPrintf("ip6_output: no route for %x:%x:%x:%x:%x:%x:%x:%x ");
294912,604260864,0,0,PLAT_AP,LWIP_CORE_IP,ip6_debug_print_1,P_INFO,swLogPrintf("IPv6 header: |%u|%u|%u| ( ver , class , flow ) ");
294912,604262912,0,0,PLAT_AP,LWIP_CORE_IP,ip6_debug_print_2,P_INFO,swLogPrintf("IPv6 header: |%u|%u|%u| ( plen , nexth , hopl ) ");
294912,604266240,0,0,PLAT_AP,LWIP_CORE_IP,ip6_debug_print_3,P_INFO,swLogPrintf("IPv6 header: src %x:%x:%x:%x:%x:%x:%x:%x ");
294912,604268288,0,0,PLAT_AP,LWIP_CORE_IP,ip6_debug_print_4,P_INFO,swLogPrintf("IPv6 header: dest %x:%x:%x:%x:%x:%x:%x:%x ");
294912,604270591,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_tmr_1,P_ERROR,swLogPrintf("sizeof ( struct ip6_reass_helper ) < = IP6_FRAG_HLEN , set IPV6_FRAG_COPYHEADER to 1 ");
294912,604272639,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_1,P_ERROR,swLogPrintf("ip6_reass_free: moving p->payload to ip6 header failed ");
294912,604274687,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_2,P_ERROR,swLogPrintf("pbufs_freed + clen < = 0xffff 1 ");
294912,604276735,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_3,P_ERROR,swLogPrintf("pbufs_freed + clen < = 0xffff 2 ");
294912,604278783,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_4,P_ERROR,swLogPrintf("ip_reass_pbufcount > = clen ");
294912,604280831,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_2,P_ERROR,swLogPrintf("sizeof ( struct ip6_reass_helper ) < = IP6_FRAG_HLEN , set IPV6_FRAG_COPYHEADER to 1 ");
294912,604282879,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_3,P_ERROR,swLogPrintf("check fragments don ' t overlap ");
294912,604284927,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_4,P_ERROR,swLogPrintf("no previous fragment , this must be the first fragment! ");
294912,604286975,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_7,P_ERROR,swLogPrintf("sanity check linked list ");
294912,604289023,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_8,P_ERROR,swLogPrintf("ip6_reass: moving p->payload to ip6 header failed ");
294912,604291071,0,0,PLAT_AP,LWIP_CORE_IP,ip6_frag_free_pbuf_custom_ref_1,P_ERROR,swLogPrintf("ip6_frag_free_pbuf_custom_ref p ! = NULL ");
294912,604293119,0,0,PLAT_AP,LWIP_CORE_IP,ip6_frag_free_pbuf_custom_1,P_ERROR,swLogPrintf("ip6_frag_free_pbuf_custom p ! = NULL or pcr = = p ");
294912,604295167,0,0,PLAT_AP,LWIP_CORE_IP,ip6_frag_2,P_ERROR,swLogPrintf("ip6_frag this needs a pbuf in one piece!2 ");
294912,604295936,0,0,PLAT_AP,LWIP_CORE_IP,ip6_frag_3,P_INFO,swLogPrintf("the new pbuf bexceptdata %u , dataRai %u , ticktype %u , datalifetime %u ");
294912,604299263,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_timer_needed_1,P_INFO,swLogPrintf("ip6_reass_timer_needed ");
294912,604301311,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_timer_needed_2,P_INFO,swLogPrintf("ip6_reass_timer_needed active tcpip_ip6_reass_timer ");
294912,604303359,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_rs_refresh_1,P_INFO,swLogPrintf("remove nd6 rs refresh timer ");
294912,604303360,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_rs_refresh_2,P_INFO,swLogPrintf("nd6 enable rs refresh timer %u ");
294912,604307455,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_disable_ra_1,P_INFO,swLogPrintf("nd6_send_disable_ra the netif linklocal address is invalid , cancel send disable RA packet ");
294912,604307968,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_disable_ra_2,P_INFO,swLogPrintf("nd6_send_disable_ra , lladdr_opt_len %u , mtu_opt_len %u , prefix_opt_len %u ");
294912,604311551,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_ra_1,P_INFO,swLogPrintf("nd6_send_ra the netif linklocal address is invalid , cancel send RA packet ");
294912,604312320,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_ra_2,P_INFO,swLogPrintf("nd6_send_ra , lladdr_opt_len %u , mtu_opt_len %u , prefix_opt_len %u , rdns_opt_len %u ");
294912,604315647,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_1,P_ERROR,swLogPrintf("invalid parameter ");
294912,604317695,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_2,P_ERROR,swLogPrintf("nd6_enable_ip6_ra_server allocate fail ");
294912,604319743,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_3,P_INFO,swLogPrintf("nd6_enable_ip6_ra_server allocate send un solicitate RA success ");
294912,604321791,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_retrans_timer_check_1,P_INFO,swLogPrintf("nd6_enable_ip6_ra_server close ra server first ");
294912,604323839,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_4,P_ERROR,swLogPrintf("nd6_enable_ip6_ra_server allocate send unsolicitate RA fail ");
294912,604325887,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_5,P_INFO,swLogPrintf("nd6_enable_ip6_ra_server allocate disable send un solicitate ");
294912,604327935,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_1,P_ERROR,swLogPrintf("invalid parameter ");
294912,604329983,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_2,P_WARNING,swLogPrintf("can not find IPV6 RA server data ");
294912,604332031,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_3,P_INFO,swLogPrintf("nd6_resend_ip6_ra_server send un solicitate RA success ");
294912,604334079,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_retrans_timer_check_1,P_INFO,swLogPrintf("nd6_resend_ip6_ra_server close ra server first ");
294912,604336127,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_4,P_ERROR,swLogPrintf("nd6_resend_ip6_ra_server send unsolicitate RA fail ");
294912,604338175,0,0,PLAT_AP,LWIP_CORE_IP,nd6_disable_ip6_ra_server_1,P_ERROR,swLogPrintf("invalid parameter ");
294912,604340223,0,0,PLAT_AP,LWIP_CORE_IP,nd6_disable_ip6_ra_server_2,P_INFO,swLogPrintf("disable ipv6 ra retrans timer ");
294912,604342271,0,0,PLAT_AP,LWIP_CORE_IP,nd6_disable_ip6_ra_server_3,P_INFO,swLogPrintf("nd6_disable_ip6_ra_server allocate send un solicitate RA success ");
294912,604344319,0,0,PLAT_AP,LWIP_CORE_IP,nd6_disable_ip6_ra_server_4,P_ERROR,swLogPrintf("nd6_disable_ip6_ra_server allocate send unsolicitate RA fail ");
294912,604344320,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_NA_retry_timer,P_INFO,swLogPrintf("nd6_input , receive NS packet , disable NS retry timer 0x%x ");
294912,604348415,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_RS_1,P_INFO,swLogPrintf("nd6_input , receive RS packet ");
294912,604350463,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_RS_2,P_WARNING,swLogPrintf("nd6_input , receive RS packet , but not exist ra server data ");
294912,604352511,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_RS_3,P_INFO,swLogPrintf("nd6_input , receive RS packet , send RA success ");
294912,604354559,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_RS_4,P_ERROR,swLogPrintf("nd6_input , receive RS packet , send RA fail ");
294912,604356607,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_13,P_INFO,swLogPrintf("nd6_input , receive RA packet , process it depend on the linklocal address is valid ");
294912,604358655,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_6,P_INFO,swLogPrintf("remove nd6 rs retry timer ");
294912,604360703,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_14,P_INFO,swLogPrintf("nd6_input , receive RA packet , but netif without linklocal address , drop it ");
294912,604362751,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_1,P_INFO,swLogPrintf("remove nd6 default router entry timer ");
294912,604362752,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_2,P_INFO,swLogPrintf("nd6 default router entry timer %u ");
294912,604366847,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_3,P_INFO,swLogPrintf("remove nd6 prefix entry timer ");
294912,604366848,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_4,P_INFO,swLogPrintf("nd6 prefix entry timer %u ");
294912,604369408,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_8,P_INFO,swLogPrintf("p6_prefix_info add / update active_time %u , life_time %u , cid %u ");
294912,604372991,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_12,P_INFO,swLogPrintf("active nd6 address rs refresh timer has active ");
294912,604375039,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_invalid_prefix_info,P_ERROR,swLogPrintf("nd6_input receive RA with invalid prefix information ");
294912,604375296,0,0,PLAT_AP,LWIP_CORE_IP,nd6_neighbor_cache_process_1,P_INFO,swLogPrintf("nd6_neighbor_cache_process enable nd6 ns 0x%x retry timer %u ");
294912,604379135,0,0,PLAT_AP,LWIP_CORE_IP,nd6_router_entry_timer_handler_1,P_INFO,swLogPrintf("nd6_router_entry_timer_handler timeout ");
294912,604381183,0,0,PLAT_AP,LWIP_CORE_IP,nd6_router_entry_timer_handler_2,P_ERROR,swLogPrintf("nd6_router_entry_timer_handler invalid argument ");
294912,604383231,0,0,PLAT_AP,LWIP_CORE_IP,nd6_prefix_entry_timer_handler_1,P_INFO,swLogPrintf("nd6_prefix_entry_timer_handler timeout ");
294912,604385279,0,0,PLAT_AP,LWIP_CORE_IP,nd6_prefix_entry_timer_handler_2,P_ERROR,swLogPrintf("nd6_prefix_entry_timer_handler invalid argument ");
294912,604387327,0,0,PLAT_AP,LWIP_CORE_IP,nd6_address_dad_timer_handler_1,P_INFO,swLogPrintf("nd6_address_dad_timer_handler timeout ");
294912,604389375,0,0,PLAT_AP,LWIP_CORE_IP,nd6_address_dad_timer_handler_2,P_ERROR,swLogPrintf("nd6_address_dad_timer_handler invalid argument ");
294912,604389376,0,0,PLAT_AP,LWIP_CORE_IP,nd6_address_dad_timer_handler_3,P_INFO,swLogPrintf("nd6 address dad timer %u ");
294912,604393471,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_retry_timer_handler_1,P_INFO,swLogPrintf("nd6_rs_retry_timer_handler timeout ");
294912,604395519,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_retry_timer_handler_2,P_ERROR,swLogPrintf("nd6_rs_retry_timer_handler invalid argument ");
294912,604395520,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_retry_timer_handler_3,P_INFO,swLogPrintf("nd6 rs retry timer %u ");
294912,604399615,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_refresh_timer_handler_1,P_INFO,swLogPrintf("nd6_rs_refresh_timer_handler timeout ");
294912,604401663,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_refresh_timer_handler_2,P_ERROR,swLogPrintf("nd6_rs_refresh_timer_handler invalid argument ");
294912,604401664,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_refresh_timer_handler_3,P_INFO,swLogPrintf("nd6 rs refresh timer %u ");
294912,604405759,0,0,PLAT_AP,LWIP_CORE_IP,nd6_start_rs_process_1,P_ERROR,swLogPrintf("nd6_start_rs_process invalid argument ");
294912,604407807,0,0,PLAT_AP,LWIP_CORE_IP,nd6_start_rs_process_2,P_WARNING,swLogPrintf("nd6 not trigger rs procedure ");
294912,604407808,0,0,PLAT_AP,LWIP_CORE_IP,nd6_start_rs_process_3,P_INFO,swLogPrintf("nd6 rs retry timer %u ");
294912,604411903,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ns_retry_timer_handler_1,P_ERROR,swLogPrintf("nd6_ns_retry_timer_handler invalid argument ");
294912,604411904,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ns_retry_timer_handler_2,P_INFO,swLogPrintf("nd6 ns retry has retry total times %u ");
294912,604414208,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ns_retry_timer_handler_3,P_INFO,swLogPrintf("nd6 ns 0x%x retry timer %u ");
294912,604418047,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_1,P_INFO,swLogPrintf("nd6_ra_retrans_timer_handler timeout ");
294912,604420095,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_2,P_ERROR,swLogPrintf("nd6_ra_retrans_timer_handler invalid argument ");
294912,604422143,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_server_data_check_1,P_ERROR,swLogPrintf("nd6_ra_retrans_timer_handler invalid ra server data ");
294912,604424191,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_3,P_INFO,swLogPrintf("nd6_ra_retrans_timer_handler send unsolicitate RA success ");
294912,604426239,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_4,P_ERROR,swLogPrintf("nd6_ra_retrans_timer_handler send unsolicitat RA fail ");
294912,604428287,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_rs_1,P_INFO,swLogPrintf("nd6_send_rs the netif linklocal address is invalid , cancel send RS packet ");
294912,604428544,0,0,PLAT_AP,LWIP_CORE_IP,nd6_queue_packet_1,P_INFO,swLogPrintf("ipv6: queued packet 0x%x on neighbor entry %d ");
294912,604430336,0,0,PLAT_AP,LWIP_CORE_IP,nd6_queue_packet_2,P_INFO,swLogPrintf("ipv6: could not queue a copy of packet 0x%x ( out of memory ");
294912,604432384,0,0,PLAT_AP,LWIP_CORE_IP,nd6_queue_packet_4,P_INFO,swLogPrintf("ipv6: 2 could not queue a copy of packet 0x%x ( out of memory ");
294912,604436479,0,0,PLAT_AP,LWIP_CORE_IP,nd6_free_q_1,P_ERROR,swLogPrintf("nd6_free_q:q ! = NULL or q->p ! = NULL ");
294912,604438527,0,0,PLAT_AP,LWIP_CORE_IP,nd6_free_q_2,P_ERROR,swLogPrintf("nd6_free_q:r->p ! = NULL ");
294912,604440575,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_1,P_INFO,swLogPrintf("remove nd6 rs retry timer ");
294912,604442623,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_2,P_INFO,swLogPrintf("remove nd6 rs refresh timer ");
294912,604444671,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_3,P_INFO,swLogPrintf("remove nd6 router entry timer ");
294912,604446719,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_4,P_INFO,swLogPrintf("remove nd6 address dad timer ");
294912,604448767,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_5,P_INFO,swLogPrintf("remove nd6 prefix entry timer ");
295936,606081023,0,0,PLAT_AP,LWIP_API,netconn_apimsg_1,P_ERROR,swLogPrintf("netconn_apimsg: SYS new sem fail ");
295936,606083071,0,0,PLAT_AP,LWIP_API,netconn_new_with_proto_and_callback_1,P_ERROR,swLogPrintf("netconn_new_with_proto_and_callback: freeing conn without freeing pcb or conn has no recvmbox ");
295936,606085119,0,0,PLAT_AP,LWIP_API,netconn_new_with_proto_and_callback_2,P_ERROR,swLogPrintf("netconn_new_with_proto_and_callback: conn->acceptmbox shouldn ' t exist ");
295936,606087167,0,0,PLAT_AP,LWIP_API,netconn_getaddr_1,P_ERROR,swLogPrintf("netconn_getaddr: argument invalid ");
295936,606089215,0,0,PLAT_AP,LWIP_API,netconn_bind_1,P_ERROR,swLogPrintf("netconn_bind: invalid conn ");
295936,606091263,0,0,PLAT_AP,LWIP_API,netconn_bind_cid_1,P_ERROR,swLogPrintf("netconn_bind_cid: invalid conn ");
295936,606093311,0,0,PLAT_AP,LWIP_API,netconn_alloca_server_port_1,P_ERROR,swLogPrintf("server_port point: invalid parameter ");
295936,606095359,0,0,PLAT_AP,LWIP_API,netconn_connect_1,P_ERROR,swLogPrintf("netconn_connect: invalid conn ");
295936,606097407,0,0,PLAT_AP,LWIP_API,netconn_disconnect_1,P_ERROR,swLogPrintf("netconn_disconnect: invalid conn ");
295936,606099455,0,0,PLAT_AP,LWIP_API,netconn_listen_with_backlog_1,P_ERROR,swLogPrintf("netconn_listen_with_backlog: invalid conn ");
295936,606101503,0,0,PLAT_AP,LWIP_API,netconn_accept_1,P_ERROR,swLogPrintf("netconn_accept: invalid pointer ");
295936,606103551,0,0,PLAT_AP,LWIP_API,netconn_accept_2,P_ERROR,swLogPrintf("netconn_accept: invalid conn ");
295936,606105599,0,0,PLAT_AP,LWIP_API,netconn_recv_data_1,P_ERROR,swLogPrintf("netconn_recv_data: invalid pointer ");
295936,606107647,0,0,PLAT_AP,LWIP_API,netconn_recv_data_2,P_ERROR,swLogPrintf("netconn_recv_data: invalid conn ");
295936,606109695,0,0,PLAT_AP,LWIP_API,netconn_recv_data_3,P_ERROR,swLogPrintf("netconn_recv_data: invalid recvmbox ");
295936,606111743,0,0,PLAT_AP,LWIP_API,netconn_recv_data_7,P_ERROR,swLogPrintf("netconn_recv_data: netif enter OOS state ");
295936,606113791,0,0,PLAT_AP,LWIP_API,netconn_recv_data_6,P_ERROR,swLogPrintf("netconn_recv_data: netif enter OOS state ");
295936,606115839,0,0,PLAT_AP,LWIP_API,netconn_recv_data_9,P_ERROR,swLogPrintf("netconn_recv_data: tcp rcv buff null ");
295936,606117887,0,0,PLAT_AP,LWIP_API,netconn_recv_data_4,P_ERROR,swLogPrintf("netconn_recv_data: buf = = NULL ");
295936,606119935,0,0,PLAT_AP,LWIP_API,netconn_recv_data_8,P_ERROR,swLogPrintf("netconn_recv_data: netif enter OOS state ");
295936,606120192,0,0,PLAT_AP,LWIP_API,netconn_recv_data_5,P_INFO,swLogPrintf("netconn_recv_data: received 0x%x , len = %u ");
295936,606124031,0,0,PLAT_AP,LWIP_API,netconn_recv_tcp_pbuf_1,P_ERROR,swLogPrintf("netconn_recv_tcp_pbuf: invalid conn ");
295936,606126079,0,0,PLAT_AP,LWIP_API,netconn_recv_1,P_ERROR,swLogPrintf("netconn_recv: invalid pointer ");
295936,606128127,0,0,PLAT_AP,LWIP_API,netconn_recv_2,P_ERROR,swLogPrintf("netconn_recv: invalid conn ");
295936,606130175,0,0,PLAT_AP,LWIP_API,netconn_recv_3,P_ERROR,swLogPrintf("netconn_recv: p = = NULL ");
295936,606132223,0,0,PLAT_AP,LWIP_API,netconn_send_1,P_ERROR,swLogPrintf("netconn_send: invalid conn ");
295936,606132224,0,0,PLAT_AP,LWIP_API,netconn_send_2,P_INFO,swLogPrintf("netconn_send: sending %u bytes ");
295936,606136319,0,0,PLAT_AP,LWIP_API,netconn_write_partly_1,P_ERROR,swLogPrintf("netconn_write_partly: invalid conn ");
295936,606138367,0,0,PLAT_AP,LWIP_API,netconn_write_partly_2,P_ERROR,swLogPrintf("netconn_write_partly: invalid conn->type ");
295936,606140415,0,0,PLAT_AP,LWIP_API,netconn_close_shutdown_1,P_ERROR,swLogPrintf("netconn_close_shutdown: invalid conn ");
295936,606142463,0,0,PLAT_AP,LWIP_API,netconn_gethostbyname_addrtype_1,P_ERROR,swLogPrintf("netconn_gethostbyname: invalid name or addr ");
295936,606144511,0,0,PLAT_AP,LWIP_API,netconn_gethostbyname_addrtype_async_1,P_ERROR,swLogPrintf("netconn_gethostbyname_addrtype_async: invalid name ");
295936,606146559,0,0,PLAT_AP,LWIP_API,netconn_get_default_net_info_1,P_WARNING,swLogPrintf("netconn_get_default_net_info : malloc get net info message fail ");
295936,606146560,0,0,PLAT_AP,LWIP_API,netconn_get_default_net_info_2,P_INFO,swLogPrintf("netconn_get_default_net_info %u ");
295936,606150655,0,0,PLAT_AP,LWIP_API,netconn_get_default_net_info_3,P_WARNING,swLogPrintf("netconn_get_default_net_info get net info fail ");
295936,606152703,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_1,P_WARNING,swLogPrintf("netconn_get_sock_info : malloc get sock info message fail ");
295936,606154751,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_2,P_INFO,swLogPrintf("netconn_get_sock_info success ");
295936,606156799,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_3,P_WARNING,swLogPrintf("netconn_get_sock_info get net info fail ");
295936,606158847,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_by_pcb_1,P_WARNING,swLogPrintf("netconn_get_sock_info_by_pcb : malloc get sock info message fail ");
295936,606160895,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_by_pcb_2,P_INFO,swLogPrintf("netconn_get_sock_info_by_pcb success ");
295936,606162943,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_by_pcb_3,P_WARNING,swLogPrintf("netconn_get_sock_info_by_pcb get net info fail ");
295936,606164991,0,0,PLAT_AP,LWIP_API,netconn_get_hib_sock_id_1,P_WARNING,swLogPrintf("netconn_get_hib_sock_id : malloc get sock info message fail ");
295936,606167039,0,0,PLAT_AP,LWIP_API,netconn_get_hib_sock_id_2,P_INFO,swLogPrintf("netconn_get_hib_sock_id success ");
295936,606169087,0,0,PLAT_AP,LWIP_API,netconn_get_hib_sock_id_3,P_WARNING,swLogPrintf("netconn_get_hib_sock_id get hib sockid fail ");
295936,606171135,0,0,PLAT_AP,LWIP_API,netconn_get_tcp_send_buffer_size_1,P_WARNING,swLogPrintf("netconn_get_tcp_send_buffer_size : malloc get tcp send buffer size message fail ");
295936,606173183,0,0,PLAT_AP,LWIP_API,netconn_get_tcp_send_buffer_size_2,P_INFO,swLogPrintf("netconn_get_tcp_send_buffer_size success ");
295936,606175231,0,0,PLAT_AP,LWIP_API,netconn_get_tcp_send_buffer_size_3,P_WARNING,swLogPrintf("netconn_get_tcp_send_buffer_size get tcp send buffer size fail ");
295936,606177279,0,0,PLAT_AP,LWIP_API,process_oos_tcp_1,P_ERROR,swLogPrintf("process_oos_tcp: conn = = NULL ");
295936,606179327,0,0,PLAT_AP,LWIP_API,recv_udp_1,P_ERROR,swLogPrintf("recv_udp: invalid argument ");
295936,606181375,0,0,PLAT_AP,LWIP_API,recv_udp_2,P_ERROR,swLogPrintf("recv_udp: recv for wrong pcb! ");
295936,606183423,0,0,PLAT_AP,LWIP_API,recv_tcp_1,P_ERROR,swLogPrintf("recv_tcp: invalid argument ");
295936,606185471,0,0,PLAT_AP,LWIP_API,recv_tcp_2,P_ERROR,swLogPrintf("recv_tcp: recv for wrong pcb! ");
295936,606187519,0,0,PLAT_AP,LWIP_API,poll_tcp_1,P_ERROR,swLogPrintf("poll_tcp: conn ! = NULL ");
295936,606189567,0,0,PLAT_AP,LWIP_API,sent_tcp_1,P_ERROR,swLogPrintf("sent_tcp: conn ! = NULL ");
295936,606191615,0,0,PLAT_AP,LWIP_API,err_tcp_1,P_ERROR,swLogPrintf("err_tcp: conn ! = NULL ");
295936,606191872,0,0,PLAT_AP,LWIP_API,err_tcp_state_1,P_INFO,swLogPrintf("err_tcp: state %u , old state %u ");
295936,606195711,0,0,PLAT_AP,LWIP_API,err_tcp_2,P_ERROR,swLogPrintf("err_tcp: conn->current_msg ! = NULL ");
295936,606197759,0,0,PLAT_AP,LWIP_API,err_tcp_3,P_ERROR,swLogPrintf("err_tcp: inavlid op_completed_sem ");
295936,606199807,0,0,PLAT_AP,LWIP_API,err_tcp_info,P_INFO,swLogPrintf("err_tcp: send signal ");
295936,606201855,0,0,PLAT_AP,LWIP_API,err_tcp_4,P_ERROR,swLogPrintf("err_tcp: conn->current_msg ! = NULL 2 ");
295936,606203903,0,0,PLAT_AP,LWIP_API,accept_function_1,P_INFO,swLogPrintf("accept_function: acceptmbox already deleted ");
295936,606203904,0,0,PLAT_AP,LWIP_API,accept_function_2,P_INFO,swLogPrintf("accept_function: newpcb->tate: %d ");
295936,606207999,0,0,PLAT_AP,LWIP_API,netconn_get_socket_id_1,P_ERROR,swLogPrintf("netconn_get_socket_id invalid conn ");
295936,606210047,0,0,PLAT_AP,LWIP_API,pcb_new_1,P_ERROR,swLogPrintf("pcb_new: pcb already allocated ");
295936,606212095,0,0,PLAT_AP,LWIP_API,netconn_alloc_1,P_ERROR,swLogPrintf("netconn_alloc: undefined netconn_type ");
295936,606214143,0,0,PLAT_AP,LWIP_API,netconn_free_1,P_ERROR,swLogPrintf("netconn_free: PCB must be deallocated outside this function ");
295936,606216191,0,0,PLAT_AP,LWIP_API,netconn_free_2,P_ERROR,swLogPrintf("netconn_free: acceptmbox must be deallocated before calling this functionn ");
295936,606218239,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_internal_1,P_ERROR,swLogPrintf("lwip_netconn_do_close_internal: conn check fail ");
295936,606218240,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_internal_close_local_abort_time_1,P_INFO,swLogPrintf("lwip_netconn_do_close_internal: block close , need wait max time %u ");
295936,606222335,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_internal_2,P_ERROR,swLogPrintf("lwip_netconn_do_close_internal: Closing a listen pcb may not fail! ");
295936,606224383,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_internal_3,P_ERROR,swLogPrintf("lwip_netconn_do_close_internal: err ! = ERR_OK ");
295936,606226431,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_1,P_ERROR,swLogPrintf("lwip_netconn_do_delconn: netconn state error ");
295936,606228479,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_3,P_ERROR,swLogPrintf("lwip_netconn_do_delconn: blocking connect in progress ");
295936,606230527,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_15,P_INFO,swLogPrintf("lwip_netconn_do_delconn: remove check udp hib pcb ");
295936,606232575,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_16,P_INFO,swLogPrintf("lwip_netconn_do_delconn: remove udp hib pcb ");
295936,606234623,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_17,P_INFO,swLogPrintf("lwip_netconn_do_delconn: reduce udp hib num ");
295936,606236671,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_18,P_INFO,swLogPrintf("lwip_netconn_do_delconn: set the global sequence handler pcb as NULL ");
295936,606238719,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_4,P_ERROR,swLogPrintf("lwip_netconn_do_delconn: already writing or closing ");
295936,606240767,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_1,P_INFO,swLogPrintf("lwip_netconn_do_bind process hib pcb ");
295936,606242815,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_2,P_INFO,swLogPrintf("lwip_netconn_do_bind udp hib pcb exist ");
295936,606244863,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_3,P_INFO,swLogPrintf("lwip_netconn_do_bind udp hib adapt the udp bind action ");
295936,606245120,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_4,P_WARNING,swLogPrintf("lwip_netconn_do_bind socket id is not adapt , hib pcb %u , this conn %u ");
295936,606248959,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_5,P_INFO,swLogPrintf("lwip_netconn_do_bind hib udp pcb bind success , change hib udp pcb context ");
295936,606251007,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_6,P_ERROR,swLogPrintf("lwip_netconn_do_bind get hib udp pcb fail ");
295936,606251008,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_cid_default,P_WARNING,swLogPrintf("can ' t find netif for CID: %d , try to use default netif ");
295936,606253056,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_cid_1,P_WARNING,swLogPrintf("lwip_netconn_do_bind_cid can not find adapt netif by cid %u ");
295936,606255104,0,0,PLAT_AP,LWIP_API,lwip_netconn_alloc_server_port_1,P_INFO,swLogPrintf("lwip_netconn_alloc_server_port alloc udp server port %d ");
295936,606257152,0,0,PLAT_AP,LWIP_API,lwip_netconn_alloc_server_port_2,P_INFO,swLogPrintf("lwip_netconn_alloc_server_port alloc tcp server port %d ");
295936,606261247,0,0,PLAT_AP,LWIP_API,lwip_netconn_alloc_server_port_3,P_ERROR,swLogPrintf("lwip_netconn_alloc_server_port invalid type ");
295936,606263295,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_net_info_with_cid_1,P_WARNING,swLogPrintf("lwip_netconn_get_net_info_with_cid invalid argument ");
295936,606265343,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_net_info_with_cid_2,P_WARNING,swLogPrintf("lwip_netconn_get_net_info_with_cid can not find any netif ");
295936,606267391,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_1,P_WARNING,swLogPrintf("lwip_netconn_get_sock_info invalid argument ");
295936,606269439,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_2,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get tcp adapt hib pcb fail ");
295936,606271487,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_3,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get udp adapt hib pcb fail ");
295936,606273535,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_4,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get udp adapt hib pcb success ");
295936,606275583,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_5,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get tcp adapt hib pcb success ");
295936,606277631,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_by_pcb_1,P_WARNING,swLogPrintf("lwip_netconn_get_sock_info_by_pcb invalid argument ");
295936,606279679,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_by_pcb_2,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get tcp adapt pcb fail ");
295936,606281727,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_by_pcb_3,P_INFO,swLogPrintf("lwip_netconn_get_sock_info_by_pcb get udp adapt pcb fail ");
295936,606281728,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_by_pcb_4,P_INFO,swLogPrintf("lwip_netconn_get_sock_info_by_pcb get adpt pcb fail , type %d ");
295936,606285823,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_hib_sock_id_1,P_WARNING,swLogPrintf("lwip_netconn_get_hib_sock_id invalid argument ");
295936,606287871,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_tcp_send_buffer_size_1,P_WARNING,swLogPrintf("lwip_netconn_get_tcp_send_buffer_size invalid argument ");
295936,606289919,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_tcp_send_buffer_size_2,P_WARNING,swLogPrintf("lwip_netconn_get_tcp_send_buffer_size invalid connection ");
295936,606291967,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_tcp_send_buffer_size_3,P_WARNING,swLogPrintf("lwip_netconn_get_tcp_send_buffer_size the connection is not tcp connection ");
295936,606291968,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_tcp_send_buffer_size_4,P_INFO,swLogPrintf("lwip_netconn_get_tcp_send_buffer_size the tcp connection buffer size %u ");
295936,606296063,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connected_1,P_ERROR,swLogPrintf("lwip_netconn_do_connected: conn->state = = NETCONN_CONNECT ");
295936,606298111,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connected_2,P_ERROR,swLogPrintf("lwip_netconn_do_connected: ( conn->current_msg ! = NULL ) || conn->in_non_blocking_connect ");
295936,606300159,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connected_3,P_ERROR,swLogPrintf("lwip_netconn_do_connected: blocking connect state error ");
295936,606302207,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connected_4,P_INFO,swLogPrintf("lwip_netconn_do_connected: connected success ");
295936,606304255,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_1,P_INFO,swLogPrintf("lwip_netconn_do_connect: udp pcb active ");
295936,606306303,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_2,P_INFO,swLogPrintf("lwip_netconn_do_connect: udp pcb active and remote ip / port change ");
295936,606308351,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_3,P_INFO,swLogPrintf("lwip_netconn_do_connect: udp pcb active and update udp hib pcb list ");
295936,606310399,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_4,P_INFO,swLogPrintf("lwip_netconn_do_connect: udp hib pcb is not NULL ");
295936,606312447,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_5,P_INFO,swLogPrintf("lwip_netconn_do_connect: reuse udp hib pcb ");
295936,606312704,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_13,P_WARNING,swLogPrintf("lwip_netconn_do_connect: socket id is not adapt , hib pcb id %u , this conn id %u ");
295936,606316543,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_6,P_INFO,swLogPrintf("lwip_netconn_do_connect: the hib udp pcb has include in udp active list ");
295936,606318591,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_7,P_INFO,swLogPrintf("lwip_netconn_do_connect: the udp pcb hib / sleep2 is not enable ");
295936,606320639,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_8,P_SIG,swLogPrintf("lwip_netconn_do_connect: tcp connection find adpt hib / sleep2 tcp context ");
295936,606322687,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_9,P_SIG,swLogPrintf("lwip_netconn_do_connect: the hib tcp pcb has include in tcp active list ");
295936,606324735,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_12,P_ERROR,swLogPrintf("lwip_netconn_do_connect: Invalid netconn type ");
295936,606324736,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_send_1,P_WARNING,swLogPrintf("lwip_netconn_do_send:last err is fatal %d ");
295936,606328831,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_send_4,P_WARNING,swLogPrintf("lwip_netconn_do_send:last err is ERR_IF_OOS ");
295936,606330879,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_writemore_1,P_ERROR,swLogPrintf("lwip_netconn_do_writemore: conn check fail ");
295936,606332927,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_writemore_2,P_ERROR,swLogPrintf("lwip_netconn_do_writemore: invalid length ");
295936,606334975,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_write_4,P_WARNING,swLogPrintf("lwip_netconn_do_write: err is ERR_IF_OOS ");
295936,606337023,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_write_1,P_ERROR,swLogPrintf("lwip_netconn_do_write: already writing or closing ");
295936,606339071,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_getaddr_1,P_ERROR,swLogPrintf("lwip_netconn_do_getaddr: invalid netconn_type ");
295936,606341119,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_3,P_ERROR,swLogPrintf("lwip_netconn_do_close: already writing or closing ");
295936,606343167,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_dns_found_async_1,P_ERROR,swLogPrintf("lwip_netconn_do_dns_found_async: src_hdr point is null ");
295936,606345215,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_dns_found_async_by_cmsSockMgr_1,P_ERROR,swLogPrintf("lwip_netconn_do_dns_found_async_by_cmsSockMgr: source point is null ");
295936,606347263,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_dns_found_async_by_cmsSockMgr_2,P_INFO,swLogPrintf("lwip_netconn_do_dns_found_async_by_cmsSockMgr: complete ");
295936,606349311,0,0,PLAT_AP,LWIP_API,netbuf_alloc_1,P_ERROR,swLogPrintf("netbuf_alloc: invalid buf ");
295936,606351359,0,0,PLAT_AP,LWIP_API,netbuf_alloc_2,P_ERROR,swLogPrintf("netbuf_alloc: check that first pbuf can hold size ");
295936,606353407,0,0,PLAT_AP,LWIP_API,netbuf_free_1,P_ERROR,swLogPrintf("netbuf_free: invalid buf ");
295936,606355455,0,0,PLAT_AP,LWIP_API,netbuf_ref_1,P_ERROR,swLogPrintf("netbuf_ref: invalid buf ");
295936,606357503,0,0,PLAT_AP,LWIP_API,netbuf_chain_1,P_ERROR,swLogPrintf("netbuf_chain: invalid head or tail ");
295936,606359551,0,0,PLAT_AP,LWIP_API,netbuf_data_1,P_ERROR,swLogPrintf("netbuf_data: invalid argument ");
295936,606361599,0,0,PLAT_AP,LWIP_API,netbuf_next_1,P_ERROR,swLogPrintf("netbuf_next: invalid buff ");
295936,606363647,0,0,PLAT_AP,LWIP_API,netbuf_first_1,P_ERROR,swLogPrintf("netbuf_first: invalid buff ");
295936,606363648,0,0,PLAT_AP,LWIP_API,lwip_gethostbyname_1,P_INFO,swLogPrintf("lwip_gethostbyname failed , err = %d ");
295936,606366464,0,0,PLAT_AP,LWIP_API,lwip_gethostbyname_2,P_INFO,swLogPrintf("lwip_gethostbyname hostent.h_name , hostent.h_aliases ( 0x%x ) , hostent.h_addrtype ( %d ) , hostent.h_length ( %d ) , hostent.h_addr_list ( 0x%x ) ");
295936,606368000,0,0,PLAT_AP,LWIP_API,lwip_gethostbyname_3,P_INFO,swLogPrintf("lwip_gethostbyname hostent.h_addr_list [ %u ] ( 0x%x ) ");
295936,606369792,0,0,PLAT_AP,LWIP_API,lwip_gethostbyname_r_1,P_INFO,swLogPrintf("lwip_gethostbyname_r failed , err = %d ");
295936,606371840,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_get_addpt_type_1,P_INFO,swLogPrintf("lwip_getaddrinfo get default net info %u ");
295936,606375935,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_1,P_ERROR,swLogPrintf("lwip_getaddrinfo namelen is too long ");
295936,606377983,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_2,P_ERROR,swLogPrintf("lwip_getaddrinfo total_size < = NETDB_ELEM_SIZE: please report this ");
295936,606380031,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_3,P_ERROR,swLogPrintf("lwip_getaddrinfo wrong sockaddr family ");
295936,606380032,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_1,P_INFO,swLogPrintf("lwip_getaddrinfowithcid get cid net info %u ");
295936,606384127,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_2,P_ERROR,swLogPrintf("lwip_getaddrinfo namelen is too long ");
295936,606386175,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_3,P_ERROR,swLogPrintf("lwip_getaddrinfo total_size < = NETDB_ELEM_SIZE: please report this ");
295936,606388223,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_4,P_ERROR,swLogPrintf("lwip_getaddrinfo wrong sockaddr family ");
295936,606388224,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_async_1,P_INFO,swLogPrintf("lwip_getaddrinfo_async get cid net info %u ");
295936,606390272,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_async_by_cmsSockMgr_1,P_INFO,swLogPrintf("lwip_getaddrinfo_async_by_cmsSockMgr get cid net info %u ");
295936,606392320,0,0,PLAT_AP,LWIP_API,get_socket_1,P_WARNING,swLogPrintf("get_socket ( %d ) : invalid ");
295936,606394368,0,0,PLAT_AP,LWIP_API,get_socket_2,P_WARNING,swLogPrintf("get_socket ( %d ) : not active ");
295936,606396672,0,0,PLAT_AP,LWIP_API,alloc_socket_1,P_INFO,swLogPrintf("alloc_socket get tcp hib sockid %d , udp hib sockid %d success ");
295936,606400511,0,0,PLAT_AP,LWIP_API,alloc_socket_2,P_WARNING,swLogPrintf("alloc_socket get hib sockid fail ");
295936,606400512,0,0,PLAT_AP,LWIP_API,lwip_accept_1,P_INFO,swLogPrintf("lwip_accept ( %d ) ");
295936,606402560,0,0,PLAT_AP,LWIP_API,lwip_accept_2,P_INFO,swLogPrintf("lwip_accept ( %d ) returning EWOULDBLOCK ");
295936,606404864,0,0,PLAT_AP,LWIP_API,lwip_accept_3,P_INFO,swLogPrintf("lwip_accept ( %d ) netconn_acept failed , err = %d ");
295936,606408703,0,0,PLAT_AP,LWIP_API,lwip_accept_4,P_ERROR,swLogPrintf("lwip_accept newconn ! = NULL ");
295936,606410751,0,0,PLAT_AP,LWIP_API,lwip_accept_5,P_ERROR,swLogPrintf("lwip_accept invalid socket index ");
295936,606412799,0,0,PLAT_AP,LWIP_API,lwip_accept_6,P_ERROR,swLogPrintf("lwip_accept newconn->callback = = event_callback ");
295936,606413056,0,0,PLAT_AP,LWIP_API,lwip_accept_7,P_INFO,swLogPrintf("lwip_accept ( %d ) netconn_peer failed , err = %d ");
295936,606416895,0,0,PLAT_AP,LWIP_API,lwip_accept_8,P_ERROR,swLogPrintf("lwip_accept addr valid but addrlen NULL ");
295936,606417408,0,0,PLAT_AP,LWIP_API,lwip_accept_9,P_INFO,swLogPrintf("lwip_accept ( %d ) returning new sock = %d port %d ");
295936,606419200,0,0,PLAT_AP,LWIP_API,lwip_accept_10,P_INFO,swLogPrintf("lwip_accept ( %d ) returning new sock = %d ");
295936,606423039,0,0,PLAT_AP,LWIP_API,lwip_bind_1,P_ERROR,swLogPrintf("lwip_bind: invalid address ");
295936,606423296,0,0,PLAT_AP,LWIP_API,lwip_bind_2,P_INFO,swLogPrintf("lwip_bind ( %d , port = %u ) ");
295936,606425344,0,0,PLAT_AP,LWIP_API,lwip_bind_3,P_WARNING,swLogPrintf("lwip_bind ( %d ) failed , err = %d ");
295936,606427136,0,0,PLAT_AP,LWIP_API,lwip_bind_4,P_INFO,swLogPrintf("lwip_bind ( %d ) succeeded ");
295936,606429440,0,0,PLAT_AP,LWIP_API,lwip_bind_cid_2,P_INFO,swLogPrintf("lwip_bind_cid ( socket %d cid = %u ) ");
295936,606431488,0,0,PLAT_AP,LWIP_API,lwip_bind_cid_3,P_WARNING,swLogPrintf("lwip_bind_cid ( %d ) failed , err = %d ");
295936,606433280,0,0,PLAT_AP,LWIP_API,lwip_bind_cid_4,P_INFO,swLogPrintf("lwip_bind_cid ( %d ) succeeded ");
295936,606435328,0,0,PLAT_AP,LWIP_API,lwip_alloc_server_port_1,P_INFO,swLogPrintf("lwip_alloc_server_port type %u ");
295936,606437376,0,0,PLAT_AP,LWIP_API,lwip_alloc_server_port_2,P_WARNING,swLogPrintf("lwip_alloc_server_port invalid type %u ");
295936,606439680,0,0,PLAT_AP,LWIP_API,lwip_alloc_server_port_3,P_WARNING,swLogPrintf("lwip_alloc_server_port type ( %u ) failed , err = %d ");
295936,606441472,0,0,PLAT_AP,LWIP_API,sock_get_errno_1,P_INFO,swLogPrintf("sock_get_errno ( %d ) ");
295936,606443520,0,0,PLAT_AP,LWIP_API,lwip_close_1,P_INFO,swLogPrintf("lwip_close ( %d ) ");
295936,606447615,0,0,PLAT_AP,LWIP_API,lwip_close_2,P_ERROR,swLogPrintf("lwip_close sock->lastdata = = NULL ");
295936,606447616,0,0,PLAT_AP,LWIP_API,lwip_close_3,P_INFO,swLogPrintf("lwip_close result %d ");
295936,606449664,0,0,PLAT_AP,LWIP_API,lwip_connect_1,P_INFO,swLogPrintf("lwip_connect ( %d , AF_UNSPEC ) ");
295936,606453759,0,0,PLAT_AP,LWIP_API,lwip_connect_2,P_ERROR,swLogPrintf("lwip_connect:invalid address ");
295936,606454016,0,0,PLAT_AP,LWIP_API,lwip_connect_3,P_INFO,swLogPrintf("lwip_connect ( %d , port = %u ) ");
295936,606456064,0,0,PLAT_AP,LWIP_API,lwip_connect_4,P_INFO,swLogPrintf("lwip_connect ( %d ) failed , err = %d ");
295936,606457856,0,0,PLAT_AP,LWIP_API,lwip_connect_5,P_INFO,swLogPrintf("lwip_connect ( %d ) has already connected succeeded ");
295936,606459904,0,0,PLAT_AP,LWIP_API,lwip_connect_6,P_INFO,swLogPrintf("lwip_connect ( %d ) succeeded ");
295936,606462208,0,0,PLAT_AP,LWIP_API,lwip_listen_1,P_INFO,swLogPrintf("lwip_listen ( %d , backlog = %d ) ");
295936,606464256,0,0,PLAT_AP,LWIP_API,lwip_listen_2,P_INFO,swLogPrintf("lwip_listen ( %d ) failed , err = %d ");
295936,606466816,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_1,P_INFO,swLogPrintf("lwip_recvfrom ( %d , 0x%x , %u , 0x%x , .. ) ");
295936,606468096,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_2,P_INFO,swLogPrintf("lwip_recvfrom: top while sock->lastdata = 0x%x ");
295936,606470144,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_3,P_INFO,swLogPrintf("lwip_recvfrom ( %d ) : returning EWOULDBLOCK ");
295936,606472448,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_4,P_INFO,swLogPrintf("lwip_recvfrom netconn_recv err = %d , netbuf = 0x%x ");
295936,606474496,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_5,P_INFO,swLogPrintf("lwip_recvfrom ( %d ) : buf = = NULL , error is %d ");
295936,606478335,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_6,P_ERROR,swLogPrintf("lwip_recvfrom buf ! = NULL ");
295936,606479104,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_7,P_INFO,swLogPrintf("lwip_recvfrom: buflen = %u len = %u off = %d sock->lastoffset = %u ");
295936,606482431,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_8,P_ERROR,swLogPrintf("lwip_recvfrom invalid copylen , len would underflow ");
295936,606482688,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_9,P_INFO,swLogPrintf("lwip_recvfrom: port = %u len = %d ");
295936,606484480,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_10,P_INFO,swLogPrintf("lwip_recvfrom: lastdata now netbuf = 0x%x ");
295936,606486528,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_11,P_INFO,swLogPrintf("lwip_recvfrom: deleting netbuf = 0x%x ");
295936,606489344,0,0,PLAT_AP,LWIP_API,lwip_send_1,P_INFO,swLogPrintf("lwip_send ( %d , data = 0x%x , size = %u , flags = 0x%x ) ");
295936,606491136,0,0,PLAT_AP,LWIP_API,lwip_send_2,P_INFO,swLogPrintf("lwip_send ( %d ) err = %d written = %u ) ");
295936,606494719,0,0,PLAT_AP,LWIP_API,lwip_sendmsg_1,P_ERROR,swLogPrintf("lwip_sendmsg: invalid msghdr ");
295936,606496767,0,0,PLAT_AP,LWIP_API,lwip_sendmsg_2,P_ERROR,swLogPrintf("lwip_sendmsg: invalid msghdr iov ");
295936,606498815,0,0,PLAT_AP,LWIP_API,lwip_sendmsg_3,P_ERROR,swLogPrintf("lwip_sendmsg: invalid msghdr name ");
295936,606500863,0,0,PLAT_AP,LWIP_API,lwip_sendmsg_4,P_ERROR,swLogPrintf("lwip_sendmsg: iov_len < u16_t ");
295936,606502144,0,0,PLAT_AP,LWIP_API,ps_send_1,P_INFO,swLogPrintf("ps_send ( %d , data = 0x%x , size = %u , flags = 0x%x ) , dataRai = %u , exceptdata = %u ");
295936,606503168,0,0,PLAT_AP,LWIP_API,ps_send_2,P_WARNING,swLogPrintf("ps_send invalid dataRai %u or exceptdata %u ");
295936,606505472,0,0,PLAT_AP,LWIP_API,ps_send_3,P_INFO,swLogPrintf("ps_send ( %d ) err = %d written = %u ) ");
295936,606507264,0,0,PLAT_AP,LWIP_API,ps_sendto_1,P_WARNING,swLogPrintf("ps_sendto invalid dataRai %u or exceptdata %u ");
295936,606510848,0,0,PLAT_AP,LWIP_API,ps_sendto_2,P_INFO,swLogPrintf("ps_sendto ( %d , data = 0x%x , size = %u , flags = 0x%x , to addr = 0x%x , tolen = %u , dataRai = %u , exceptdata = %u ");
295936,606513151,0,0,PLAT_AP,LWIP_API,ps_sendto_3,P_ERROR,swLogPrintf("ps_sendto: size must fit in u16_t ");
295936,606515199,0,0,PLAT_AP,LWIP_API,ps_sendto_4,P_ERROR,swLogPrintf("ps_sendto: invalid address ");
295936,606517247,0,0,PLAT_AP,LWIP_API,ps_sendto_5,P_WARNING,swLogPrintf("ps_sendto low-level netif high water ");
295936,606517248,0,0,PLAT_AP,LWIP_API,ps_sendto_6,P_INFO,swLogPrintf("ps_sendto low-level netif high water , current UE packet delay %u ");
295936,606521088,0,0,PLAT_AP,LWIP_API,ps_send_with_ticks_1,P_INFO,swLogPrintf("ps_send ( %d , data = 0x%x , size = %u , flags = 0x%x ) , dataRai = %u , exceptdata = %u , tick type %u , sys tick %u ");
295936,606521600,0,0,PLAT_AP,LWIP_API,ps_send_with_ticks_2,P_WARNING,swLogPrintf("ps_send invalid dataRai %u or exceptdata %u ");
295936,606523904,0,0,PLAT_AP,LWIP_API,ps_send_with_ticks_3,P_INFO,swLogPrintf("ps_send ( %d ) err = %d written = %u ) ");
295936,606525696,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_1,P_WARNING,swLogPrintf("ps_sendto invalid dataRai %u or exceptdata %u ");
295936,606528768,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_2,P_INFO,swLogPrintf("ps_sendto ( %d , data = 0x%x , size = %u , flags = 0x%x , to addr = 0x%x , tolen = %u ");
295936,606530304,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_printf_2,P_INFO,swLogPrintf("ps_sendto ( continue... , dataRai = %u , exceptdata = %u , tick type %u , sys tick %u ");
295936,606533631,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_3,P_ERROR,swLogPrintf("ps_sendto: size must fit in u16_t ");
295936,606535679,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_4,P_ERROR,swLogPrintf("ps_sendto: invalid address ");
295936,606535936,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_5,P_INFO,swLogPrintf("ps_sendto_with_ticks tick type %u , sys tick %u ");
295936,606539775,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_6,P_WARNING,swLogPrintf("ps_sendto low-level netif high water ");
295936,606539776,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_7,P_INFO,swLogPrintf("ps_sendto low-level netif high water , current UE packet delay %u ");
295936,606541824,0,0,PLAT_AP,LWIP_API,lwip_get_tcp_send_buffer_size_1,P_ERROR,swLogPrintf("lwip_get_tcp_send_buffer_size can not find the socket %d ");
295936,606544128,0,0,PLAT_AP,LWIP_API,lwip_get_tcp_send_buffer_size_2,P_INFO,swLogPrintf("lwip_get_tcp_send_buffer_size get the socket %d send buffer size %u ");
295936,606545920,0,0,PLAT_AP,LWIP_API,lwip_get_tcp_send_buffer_size_3,P_ERROR,swLogPrintf("lwip_get_tcp_send_buffer_size get the socket %d send buffer size fail ");
295936,606549248,0,0,PLAT_AP,LWIP_API,lwip_sendto_1,P_INFO,swLogPrintf("lwip_sendto ( %d , data = 0x%x , size = %u , flags = 0x%x , to addr = 0x%x , tolen = %u ");
295936,606552063,0,0,PLAT_AP,LWIP_API,lwip_sendto_2,P_ERROR,swLogPrintf("lwip_sendto: size must fit in u16_t ");
295936,606554111,0,0,PLAT_AP,LWIP_API,lwip_sendto_3,P_ERROR,swLogPrintf("lwip_sendto: invalid address ");
295936,606556159,0,0,PLAT_AP,LWIP_API,lwip_sendto_5,P_WARNING,swLogPrintf("lwip_sendto low-level netif high water ");
295936,606556160,0,0,PLAT_AP,LWIP_API,lwip_sendto_6,P_INFO,swLogPrintf("lwip_sendto low-level netif high water , current UE packet delay %u ");
295936,606558464,0,0,PLAT_AP,LWIP_API,lwip_socket_1,P_INFO,swLogPrintf("lwip_socket ( %d , SOCK_RAW , %d ) = ");
295936,606560512,0,0,PLAT_AP,LWIP_API,lwip_socket_2,P_INFO,swLogPrintf("lwip_socket ( %d , SOCK_DGRAM , %d ) = ");
295936,606562560,0,0,PLAT_AP,LWIP_API,lwip_socket_3,P_INFO,swLogPrintf("lwip_socket ( %d , SOCK_STREAM , %d ) = ");
295936,606564864,0,0,PLAT_AP,LWIP_API,lwip_socket_4,P_INFO,swLogPrintf("lwip_socket ( %d , %d / UNKNOWN , %d ) = -1 ");
295936,606568447,0,0,PLAT_AP,LWIP_API,lwip_socket_5,P_WARNING,swLogPrintf("lwip_socket -1 / ENOBUFS ( could not create netconn ) ");
295936,606568448,0,0,PLAT_AP,LWIP_API,lwip_get_socket_info_by_fd_1,P_INFO,swLogPrintf("lwip_get_socket_info_by_fd get sock %d info fail ");
295936,606570496,0,0,PLAT_AP,LWIP_API,lwip_get_socket_info_by_fd_2,P_INFO,swLogPrintf("lwip_get_socket_info_by_fd get sock %d info by tcp pcb fail ");
295936,606572544,0,0,PLAT_AP,LWIP_API,lwip_get_socket_info_by_fd_3,P_INFO,swLogPrintf("lwip_get_socket_info_by_fd get sock %d info udp by pcb fail ");
295936,606574592,0,0,PLAT_AP,LWIP_API,lwip_get_socket_info_by_fd_4,P_INFO,swLogPrintf("lwip_get_socket_info_by_fd get sock %d info by pcb fail , unsupport type ");
295936,606576640,0,0,PLAT_AP,LWIP_API,lwip_selscan_1,P_INFO,swLogPrintf("lwip_selscan: fd = %d ready for reading ");
295936,606578688,0,0,PLAT_AP,LWIP_API,lwip_selscan_2,P_INFO,swLogPrintf("lwip_selscan: fd = %d ready for writing ");
295936,606580736,0,0,PLAT_AP,LWIP_API,lwip_selscan_3,P_INFO,swLogPrintf("lwip_selscan: fd = %d ready for exception ");
295936,606584831,0,0,PLAT_AP,LWIP_API,lwip_selscan_4,P_ERROR,swLogPrintf("nready > = 0 ");
295936,606586112,0,0,PLAT_AP,LWIP_API,lwip_select_1,P_INFO,swLogPrintf("lwip_select ( %d , 0x%x , 0x%x , 0x%x , tvsec = %u tvusec = %u ) ");
295936,606588927,0,0,PLAT_AP,LWIP_API,lwip_select_2,P_WARNING,swLogPrintf("lwip_select: no timeout , returning 0 ");
295936,606590975,0,0,PLAT_AP,LWIP_API,lwip_select_9,P_ERROR,swLogPrintf("lwip_select: new sys semphore fail ");
295936,606593023,0,0,PLAT_AP,LWIP_API,lwip_select_3,P_ERROR,swLogPrintf("lwip_select: sock->select_waiting > 0 ");
295936,606595071,0,0,PLAT_AP,LWIP_API,lwip_select_4,P_ERROR,swLogPrintf("lwip_select: sock->select_waiting > 0 2 ");
295936,606597119,0,0,PLAT_AP,LWIP_API,lwip_select_5,P_ERROR,swLogPrintf("lwip_select: select_cb.prev = = NULL ");
295936,606599167,0,0,PLAT_AP,LWIP_API,lwip_select_6,P_ERROR,swLogPrintf("lwip_select: select_cb.prev ! = NULL ");
295936,606601215,0,0,PLAT_AP,LWIP_API,lwip_select_7,P_INFO,swLogPrintf("lwip_select: timeout expired ");
295936,606601216,0,0,PLAT_AP,LWIP_API,lwip_select_8,P_INFO,swLogPrintf("lwip_select: nready = %d ");
295936,606605311,0,0,PLAT_AP,LWIP_API,event_callback_1,P_WARNING,swLogPrintf("event_callback unknown event ");
295936,606605568,0,0,PLAT_AP,LWIP_API,lwip_shutdown_1,P_INFO,swLogPrintf("lwip_shutdown ( %d , how = %d ) ");
295936,606607616,0,0,PLAT_AP,LWIP_API,lwip_getaddrname_1,P_INFO,swLogPrintf("lwip_getaddrname ( %d , port = %u ) ");
295936,606611455,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_1,P_ERROR,swLogPrintf("lwip_getsockopt: new sys semphore fail ");
295936,606613503,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_callback_1,P_ERROR,swLogPrintf("lwip_getsockopt_callback arg ! = NULL ");
295936,606613760,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_1,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , optname = 0x%x , .. ) ");
295936,606615808,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_2,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , SO_TYPE ) : unrecognized socket type %d ");
295936,606617856,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_3,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , SO_TYPE ) = %d ");
295936,606619904,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_4,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , SO_ERROR ) = %d ");
295936,606621952,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_5,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , UNIMPL: optname = 0x%x , .. ) ");
295936,606624000,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_6,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_IP , IP_TTL ) = %d ");
295936,606626048,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_7,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_IP , IP_TOS ) = %d ");
295936,606628096,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_11,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_IP , UNIMPL: optname = 0x%x , .. ) ");
295936,606629888,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_12,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_NODELAY ) ");
295936,606632192,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_13,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPALIVE ) = %d ");
295936,606634240,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_14,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPIDLE ) = %d ");
295936,606636288,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_15,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPINTVL ) = %d ");
295936,606638336,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_16,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPCNT ) = %d ");
295936,606640384,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_17,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , UNIMPL: optname = 0x%x , .. ) ");
295936,606642432,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_18,P_INFO,swLogPrintf("lwip_getsockopt_impl lwip_getsockopt ( %d , IPPROTO_IPV6 , IPV6_V6ONLY ) = %d ");
295936,606644480,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_19,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_IPV6 , UNIMPL: optname = 0x%x , .. ) ");
295936,606646528,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_23,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_RAW , IPV6_CHECKSUM ) = %d ");
295936,606648576,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_24,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_RAW , UNIMPL: optname = 0x%x , .. ) ");
295936,606650880,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_25,P_INFO,swLogPrintf("lwip_getsockopt_impl ( %d , level = 0x%x , UNIMPL: optname = 0x%x , .. ) ");
295936,606654463,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_1,P_ERROR,swLogPrintf("lwip_setsockopt: new sys semphore fail ");
295936,606656511,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_callback_1,P_ERROR,swLogPrintf("lwip_setsockopt_callback arg = = NULL ");
295936,606656768,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_1,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , SOL_SOCKET , optname = 0x%x , .. ) ");
295936,606658560,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_keepalive,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , SOL_SOCKET , KEEPALIVE , .. ) ");
295936,606662655,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_20,P_WARNING,swLogPrintf("tcp hib / sleep2 mode connection number limited ");
295936,606664703,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_info_1,P_INFO,swLogPrintf("tcp hib / sleep2 mode connection , tcp hib pcb not connectted ");
295936,606666751,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_warning_1,P_WARNING,swLogPrintf("tcp hib / sleep2 mode connection , tcp hib pcb has exist ");
295936,606668799,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_warning_2,P_WARNING,swLogPrintf("tcp hib / sleep2 mode connection , tcp pcb is invalid ");
295936,606670847,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_21,P_INFO,swLogPrintf("tcp hib / sleep2 mode connection enable ");
295936,606672895,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_22,P_INFO,swLogPrintf("tcp hib / sleep2 mode connection disable ");
295936,606674943,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_23,P_WARNING,swLogPrintf("udp hib / sleep2 mode connection number limited ");
295936,606676991,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_info_2,P_INFO,swLogPrintf("udp hib / sleep2 mode connection , udp hib pcb not bind or connect ");
295936,606679039,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_warning_3,P_WARNING,swLogPrintf("udp hib / sleep2 mode connection , udp hib pcb has exist ");
295936,606681087,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_warning_4,P_WARNING,swLogPrintf("udp hib / sleep2 mode connection , udp pcb is invalid ");
295936,606683135,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_24,P_INFO,swLogPrintf("udp hib / sleep2 mode connection enable ");
295936,606685183,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_25,P_INFO,swLogPrintf("udp hib / sleep2 mode connection disable ");
295936,606687231,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_26,P_INFO,swLogPrintf("set the pcb as squence state handler pcb ");
295936,606689279,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_27,P_WARNING,swLogPrintf("the UL sequence handler socket has set , can not set again ");
295936,606691327,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_28,P_WARNING,swLogPrintf("the udp pcb is invalid ");
295936,606693375,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_29,P_INFO,swLogPrintf("the socket is not UDP socket , can not handle socket sequence state ");
295936,606695423,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_30,P_INFO,swLogPrintf("set squence state handler pcb as NULL ");
295936,606695424,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_init_retry_time_1,P_WARNING,swLogPrintf("tcp_init_retry_time %u fail ");
295936,606699519,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_init_retry_time_2,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606701567,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_init_retry_time_3,P_ERROR,swLogPrintf("the socket is not TCP socket , can not set tcp init retry time ");
295936,606703615,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_init_retry_time_4,P_ERROR,swLogPrintf("invalid tcp max retry time ");
295936,606703616,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_31,P_WARNING,swLogPrintf("tcp_set_max_retry_times %u fail ");
295936,606707711,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_32,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606709759,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_33,P_ERROR,swLogPrintf("the socket is not TCP socket , can not set tcp max retry times ");
295936,606711807,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_34,P_ERROR,swLogPrintf("invalid tcp max retry times ");
295936,606711808,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_35,P_WARNING,swLogPrintf("tcp_set_max_total_retry_time %u fail ");
295936,606715903,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_36,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606717951,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_37,P_ERROR,swLogPrintf("the socket is not TCP socket , can not set tcp max total retry time ");
295936,606719999,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_38,P_ERROR,swLogPrintf("invalid max total retry time ");
295936,606722047,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_tcp_close_local_abort_1,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606724095,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_tcp_close_local_abort_2,P_ERROR,swLogPrintf("the socket is not TCP socket , can not enable the option ");
295936,606726143,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_tcp_need_report_ul_status_1,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606728191,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_tcp_need_report_ul_status_2,P_ERROR,swLogPrintf("the socket is not TCP socket , can not enable the option ");
295936,606728448,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_2,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , SOL_SOCKET , UNIMPL: optname = 0x%x , .. ) ");
295936,606730496,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_3,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IP , IP_TTL , .. ) -> %d ");
295936,606732544,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_4,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IP , IP_TOS , .. ) -> %d ");
295936,606734592,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_5,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IP , UNIMPL: optname = 0x%x , .. ) ");
295936,606736384,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_6,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_NODELAY ) ");
295936,606738688,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_7,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPALIVE ) -> %u ");
295936,606740736,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_8,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPIDLE ) -> %u ");
295936,606742784,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_9,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPINTVL ) -> %u ");
295936,606744832,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_10,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPCNT ) -> %u ");
295936,606746880,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_11,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , UNIMPL: optname = 0x%x , .. ) ");
295936,606748928,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_12,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IPV6 , IPV6_V6ONLY , .. ) -> %d ");
295936,606750976,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_13,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IPV6 , UNIMPL: optname = 0x%x , .. ) ");
295936,606753024,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_17,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_RAW , IPV6_CHECKSUM , .. ) -> %d ");
295936,606755072,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_18,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_RAW , UNIMPL: optname = 0x%x , .. ) ");
295936,606757376,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_19,P_INFO,swLogPrintf("lwip_setsockopt_impl ( %d , level = 0x%x , UNIMPL: optname = 0x%x , .. ) ");
295936,606759424,0,0,PLAT_AP,LWIP_API,lwip_ioctl_1,P_INFO,swLogPrintf("lwip_ioctl ( %d , FIONREAD , 0x%x ) = %u ");
295936,606761216,0,0,PLAT_AP,LWIP_API,lwip_ioctl_2,P_INFO,swLogPrintf("lwip_ioctl ( %d , FIONBIO , %d ) ");
295936,606763264,0,0,PLAT_AP,LWIP_API,lwip_ioctl_3,P_INFO,swLogPrintf("lwip_ioctl ( %d , FIOHWODR , %d ) ");
295936,606765568,0,0,PLAT_AP,LWIP_API,lwip_ioctl_4,P_INFO,swLogPrintf("lwip_ioctl ( %d , UNIMPL: 0x%x , 0x%x ) ");
295936,606767616,0,0,PLAT_AP,LWIP_API,lwip_fcntl_1,P_INFO,swLogPrintf("lwip_fcntl ( %d , UNIMPL: %d , %d ) ) ");
295936,606771199,0,0,PLAT_AP,LWIP_API,tcpip_thread_1,P_WARNING,swLogPrintf("tcpip_thread: invalid message: NULL ");
295936,606771200,0,0,PLAT_AP,LWIP_API,tcpip_thread_2,P_INFO,swLogPrintf("tcpip_thread: API message 0x%x ");
295936,606773248,0,0,PLAT_AP,LWIP_API,tcpip_thread_3,P_INFO,swLogPrintf("tcpip_thread: API CALL message 0x%x ");
295936,606775296,0,0,PLAT_AP,LWIP_API,tcpip_thread_5,P_INFO,swLogPrintf("tcpip_thread: PS PACKET 0x%x ");
295936,606777344,0,0,PLAT_AP,LWIP_API,tcpip_thread_pending_input,P_INFO,swLogPrintf("tcpip_thread: PS PACKET 0x%x ");
295936,606779392,0,0,PLAT_AP,LWIP_API,tcpip_thread_11,P_INFO,swLogPrintf("tcpip_thread: LAN PACKET 0x%x ");
295936,606781440,0,0,PLAT_AP,LWIP_API,tcpip_thread_6,P_INFO,swLogPrintf("tcpip_thread: TIMEOUT 0x%x ");
295936,606783488,0,0,PLAT_AP,LWIP_API,tcpip_thread_7,P_INFO,swLogPrintf("tcpip_thread: UNTIMEOUT 0x%x ");
295936,606785536,0,0,PLAT_AP,LWIP_API,tcpip_thread_8,P_INFO,swLogPrintf("tcpip_thread: CALLBACK 0x%x ");
295936,606787584,0,0,PLAT_AP,LWIP_API,tcpip_thread_9,P_INFO,swLogPrintf("tcpip_thread: CALLBACK_STATIC 0x%x ");
295936,606789632,0,0,PLAT_AP,LWIP_API,tcpip_thread_10,P_WARNING,swLogPrintf("tcpip_thread: invalid message %d ");
295936,606793727,0,0,PLAT_AP,LWIP_API,tcpip_inpkt_2,P_ERROR,swLogPrintf("tcpip_inpkt: Invalid mbox ");
295936,606793984,0,0,PLAT_AP,LWIP_API,TcpipPsInpkt_2,P_INFO,swLogPrintf("TcpipPsInpkt2: %u / 0x%x ");
295936,606797823,0,0,PLAT_AP,LWIP_API,TcpipPsInpkt_3,P_ERROR,swLogPrintf("TcpipPsInpkt: Invalid mbox ");
295936,606797824,0,0,PLAT_AP,LWIP_API,TcpipPsPendingInpkt_2,P_INFO,swLogPrintf("TcpipPsPendingInpkt: %u ");
295936,606801919,0,0,PLAT_AP,LWIP_API,TcpipPsPendingInpkt_3,P_ERROR,swLogPrintf("TcpipPsPendingInpkt: Invalid mbox ");
295936,606802176,0,0,PLAT_AP,LWIP_API,TcpipLanInpkt_2,P_INFO,swLogPrintf("TcpipLanInpkt: %u / 0x%x ");
295936,606806015,0,0,PLAT_AP,LWIP_API,TcpipLanInpkt_3,P_ERROR,swLogPrintf("TcpipLanInpkt: Invalid mbox ");
295936,606808063,0,0,PLAT_AP,LWIP_API,tcpip_callback_with_block_1,P_ERROR,swLogPrintf("tcpip_callback_with_block: Invalid mbox ");
295936,606810111,0,0,PLAT_AP,LWIP_API,tcpip_timeout_1,P_ERROR,swLogPrintf("tcpip_timeout: Invalid mbox ");
295936,606812159,0,0,PLAT_AP,LWIP_API,tcpip_untimeout_1,P_ERROR,swLogPrintf("tcpip_untimeout: Invalid mbox ");
295936,606814207,0,0,PLAT_AP,LWIP_API,tcpip_send_msg_wait_sem_1,P_ERROR,swLogPrintf("tcpip_send_msg_wait_sem: Invalid mbox or semaphore not initialized ");
295936,606816255,0,0,PLAT_AP,LWIP_API,tcpip_api_call_1,P_ERROR,swLogPrintf("tcpip_api_call: Invalid mbox ");
295936,606818303,0,0,PLAT_AP,LWIP_API,tcpip_trycallback_1,P_ERROR,swLogPrintf("tcpip_trycallback: Invalid mbox ");
295936,606820351,0,0,PLAT_AP,LWIP_API,tcpip_init_1,P_ERROR,swLogPrintf("tcpip_init: failed to create tcpip_thread mbox ");
296960,608178175,0,0,PLAT_AP,MAC,CatMacUlBeCancelZeroBSR_highwater_1,P_WARNING,swLogPrintf("CAT MAC UL , UL highwater , cancel BSR 0 ");
296960,608180223,0,0,PLAT_AP,LWIP_OTHER,free_etharp_q_1,P_ERROR,swLogPrintf("free_etharp_q point is invalid ");
296960,608182271,0,0,PLAT_AP,LWIP_OTHER,free_etharp_q_2,P_ERROR,swLogPrintf("free_etharp_q point is invalid ");
296960,608182528,0,0,PLAT_AP,LWIP_OTHER,etharp_free_entry_1,P_INFO,swLogPrintf("etharp_free_entry: freeing entry %u , packet queue 0x%x ");
296960,608184320,0,0,PLAT_AP,LWIP_OTHER,etharp_free_entry_disable_retry_timer_1,P_INFO,swLogPrintf("etharp_free_entry: disable retry timer entry %u ");
296960,608186368,0,0,PLAT_AP,LWIP_OTHER,etharp_free_entry_disable_cahce_timer_1,P_INFO,swLogPrintf("etharp_free_entry: disable cache timer entry %u ");
296960,608190463,0,0,PLAT_AP,LWIP_OTHER,etharp_free_table_1,P_ERROR,swLogPrintf("etharp_free_entry: invalid table point ");
296960,608190464,0,0,PLAT_AP,LWIP_OTHER,etharp_free_table_2,P_INFO,swLogPrintf("etharp_free_entry: freeing entr , packet queue 0x%x ");
296960,608194559,0,0,PLAT_AP,LWIP_OTHER,arp_enable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
296960,608196607,0,0,PLAT_AP,LWIP_OTHER,arp_disable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
296960,608198655,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_cache_timer_1,P_INFO,swLogPrintf("tcpip_arp_cache_timer timeout ");
296960,608200703,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_cache_timer_2,P_ERROR,swLogPrintf("tcpip_arp_cache_timer arg invliad ");
296960,608202751,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_1,P_INFO,swLogPrintf("tcpip_arp_retry_timer tiemout ");
296960,608204799,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_2,P_ERROR,swLogPrintf("tcpip_arp_retry_timer arg invliad ");
296960,608204800,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_3,P_WARNING,swLogPrintf("tcpip_arp_retry_timer start retry timer %u ");
296960,608206848,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_4,P_WARNING,swLogPrintf("tcpip_arp_retry_timer invliad state %u ");
296960,608210943,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_5,P_INFO,swLogPrintf("tcpip_arp_retry_timer reach max retry times ");
296960,608210944,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_1,P_INFO,swLogPrintf("etharp_find_entry: found empty entry %u ");
296960,608212992,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_2,P_VALUE,swLogPrintf("state %u ");
296960,608215040,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_3,P_INFO,swLogPrintf("etharp_find_entry: found matching entry %u ");
296960,608219135,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_4,P_INFO,swLogPrintf("etharp_find_entry: no empty entry found and not allowed to recycle ");
296960,608219136,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_5,P_INFO,swLogPrintf("etharp_find_entry: selecting empty entry %u ");
296960,608221184,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_6,P_INFO,swLogPrintf("etharp_find_entry: selecting oldest entry %u ");
296960,608225279,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_7,P_ERROR,swLogPrintf("arp_table [ i ] .q ! = NULL ");
296960,608225280,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_8,P_INFO,swLogPrintf("etharp_find_entry: selecting oldest pending entry %u ");
296960,608227584,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_9,P_INFO,swLogPrintf("etharp_find_entry: selecting oldest pending entry %u , freeing packet queue 0x%x ");
296960,608231423,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_10,P_INFO,swLogPrintf("etharp_find_entry: no empty or recyclable entries found ");
296960,608233471,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_11,P_ERROR,swLogPrintf("i > = ARP_TABLE_SIZE ");
296960,608235519,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_1,P_ERROR,swLogPrintf("netif->hwaddr_len = = ETH_HWADDR_LEN ");
296960,608236288,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_2_sub_1,P_INFO,swLogPrintf("etharp_update_arp_entry: ip %u.%u.%u.%u ");
296960,608238848,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_2_sub_2,P_INFO,swLogPrintf("etharp_update_arp_entry: mac %u:%u:%u:%u:%u:%u ");
296960,608241663,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_3,P_ERROR,swLogPrintf("etharp_update_arp_entry: will not add non-unicast IP address to ARP cache ");
296960,608241664,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_4,P_INFO,swLogPrintf("etharp_update_arp_entry: updating stable entry %u ");
296960,608243712,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_disable_retry_timer_1,P_INFO,swLogPrintf("etharp_update_arp_entry: disable retry timer entry %u ");
296960,608245760,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_disable_cahce_timer_1,P_INFO,swLogPrintf("etharp_update_arp_entry: disable old cache timer entry %u ");
296960,608247808,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_enable_cahce_timer_1,P_INFO,swLogPrintf("etharp_update_arp_entry: disable old cache timer entry %u ");
296960,608249856,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_disable_retry_timer_static,P_INFO,swLogPrintf("etharp_update_arp_entry: static arp entry %u ");
296960,608252672,0,0,PLAT_AP,LWIP_OTHER,etharp_add_static_entry_11,P_INFO,swLogPrintf("etharp_add_static_entry: %u.%u.%u.%u ");
296960,608255232,0,0,PLAT_AP,LWIP_OTHER,etharp_add_static_entry_12,P_INFO,swLogPrintf("etharp_add_static_entry: %u:%u:%u:%u:%u:%u ");
296960,608256768,0,0,PLAT_AP,LWIP_OTHER,etharp_remove_static_entry_1,P_INFO,swLogPrintf("etharp_remove_static_entry: %u.%u.%u.%u ");
296960,608260095,0,0,PLAT_AP,LWIP_OTHER,etharp_find_addr_1,P_ERROR,swLogPrintf("eth_ret = = NULL || ip_ret = = NULL ");
296960,608262143,0,0,PLAT_AP,LWIP_OTHER,etharp_get_entry_1,P_ERROR,swLogPrintf("ipaddr = = NULL || ipaddr = = NULL || eth_ret = = NUL ");
296960,608264191,0,0,PLAT_AP,LWIP_OTHER,etharp_input_1,P_ERROR,swLogPrintf("netif = = NULL ");
296960,608264704,0,0,PLAT_AP,LWIP_OTHER,etharp_input_2,P_INFO,swLogPrintf("etharp_input: packet dropped , wrong hw type , hwlen , proto , protolen or ethernet type ( %u ^u %u %u ) ");
296960,608268287,0,0,PLAT_AP,LWIP_OTHER,etharp_input_3,P_INFO,swLogPrintf("etharp_input: incoming ARP request ");
296960,608270335,0,0,PLAT_AP,LWIP_OTHER,etharp_input_4,P_INFO,swLogPrintf("etharp_input: we are unconfigured , ARP request ignored ");
296960,608272383,0,0,PLAT_AP,LWIP_OTHER,etharp_input_5,P_INFO,swLogPrintf("etharp_input: ARP request was not for us ");
296960,608274431,0,0,PLAT_AP,LWIP_OTHER,etharp_input_6,P_INFO,swLogPrintf("etharp_input: incoming ARP reply ");
296960,608274432,0,0,PLAT_AP,LWIP_OTHER,etharp_input_7,P_INFO,swLogPrintf("etharp_input: ARP unknown opcode type %u ");
296960,608278527,0,0,PLAT_AP,LWIP_OTHER,etharp_output_to_arp_index_1,P_ERROR,swLogPrintf("arp_table [ arp_idx ] .state < ETHARP_STATE_STABLE ");
296960,608278528,0,0,PLAT_AP,LWIP_OTHER,etharp_output_to_arp_index_enable_retry_timer_1,P_INFO,swLogPrintf("etharp_output_to_arp_index: enable retry timer entry %u ");
296960,608280576,0,0,PLAT_AP,LWIP_OTHER,etharp_output_to_arp_index_enable_retry_timer_2,P_INFO,swLogPrintf("etharp_output_to_arp_index: enable retry timer entry %u ");
296960,608284671,0,0,PLAT_AP,LWIP_OTHER,etharp_output_1,P_ERROR,swLogPrintf("netif = = NULL || q = = NULL || ipaddr = = NULL ");
296960,608286719,0,0,PLAT_AP,LWIP_OTHER,etharp_query_1,P_ERROR,swLogPrintf("etharp_query: will not add non-unicast IP address to ARP cache ");
296960,608288767,0,0,PLAT_AP,LWIP_OTHER,etharp_query_2,P_INFO,swLogPrintf("etharp_query: could not create ARP entry ");
296960,608290815,0,0,PLAT_AP,LWIP_OTHER,etharp_query_3,P_INFO,swLogPrintf("etharp_query: packet dropped ");
296960,608292863,0,0,PLAT_AP,LWIP_OTHER,etharp_query_4,P_ERROR,swLogPrintf("( arp_table [ i ] .state ! = ETHARP_STATE_PENDING ) && ( arp_table [ i ] .state < ETHARP_STATE_STABLE ) L ");
296960,608294911,0,0,PLAT_AP,LWIP_OTHER,etharp_query_5,P_ERROR,swLogPrintf("q = = NULL ");
296960,608296959,0,0,PLAT_AP,LWIP_OTHER,etharp_query_6,P_ERROR,swLogPrintf("no packet queues allowed ");
296960,608297216,0,0,PLAT_AP,LWIP_OTHER,etharp_query_7,P_INFO,swLogPrintf("etharp_query: queued packet 0x%x on ARP entry %u ");
296960,608299008,0,0,PLAT_AP,LWIP_OTHER,etharp_query_8,P_INFO,swLogPrintf("etharp_query: could not queue a copy of PBUF_REF packet 0x%x ( out of memory ) ");
296960,608301312,0,0,PLAT_AP,LWIP_OTHER,etharp_query_10,P_INFO,swLogPrintf("etharp_query: dropped previously queued packe 0x%x for ARP entry %u ");
296960,608305151,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_1,P_ERROR,swLogPrintf("netif = = NULL ");
296960,608307199,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_2,P_ERROR,swLogPrintf("etharp_raw: could not allocate pbuf for ARP request ");
296960,608309247,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_3,P_ERROR,swLogPrintf("check that first pbuf can hold struct etharp_hdr ");
296960,608311295,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_4,P_INFO,swLogPrintf("etharp_raw: sending raw ARP packet ");
296960,608313343,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_5,P_ERROR,swLogPrintf("netif->hwaddr_len must be the same as ETH_HWADDR_LEN for etharp ");
296960,608315391,0,0,PLAT_AP,LWIP_OTHER,etharp_request_1,P_VALUE,swLogPrintf("etharp_request: sending ARP request ");
296960,608316672,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_1_sub_1,P_INFO,swLogPrintf("ethernet_input: dest: %u:%u:%u:%u:%u:%u ");
296960,608318976,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_1_sub_2,P_INFO,swLogPrintf("ethernet_input: src: %u:%u:%u:%u:%u:%u , type %u ");
296960,608319744,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_2,P_INFO,swLogPrintf("ethernet_input: IPv4 packet dropped , too short ( %u %u ) ");
296960,608321792,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_3,P_INFO,swLogPrintf("ethernet_input: ARP response packet dropped , too short ( %u %u ) ");
296960,608323840,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_4,P_INFO,swLogPrintf("ethernet_input: IPv6 packet dropped , too short ( %u %u ) ");
296960,608327679,0,0,PLAT_AP,LWIP_OTHER,ethernet_output_2,P_ERROR,swLogPrintf("netif->hwaddr_len must be 6 for ethernet_output ");
296960,608327680,0,0,PLAT_AP,LWIP_OTHER,ethernet_output_3,P_INFO,swLogPrintf("ethernet_output: sending packet 0x%x ");
296960,608331775,0,0,PLAT_AP,LWIP_OTHER,ethernet_output_4,P_ERROR,swLogPrintf("ethernet_output: could not allocate room for header ");
297984,610273536,0,0,PLAT_AP,RLC,CatRlcAmDecodeDlSnPdu_hw_3,P_WARNING,swLogPrintf("AM DL , L2 DL BM highwater , could only RECV / ACCEPT VRR: %d PDU , discard this SN: %d ");
297984,610275584,0,0,PLAT_AP,RLC,CatRlcAmReEstAssemblePdcpPduFromRlcPdu_1,P_INFO,swLogPrintf("Re-Est AM DL , Cur SN: %d , segNum: 1 , fi: %d ( FNF ) , this PDCP PDU missing the front half , can ' t assemble it , discard this RLC PDU! ");
297984,610277888,0,0,PLAT_AP,RLC,CatRlcAmReEstAssemblePdcpPduFromRlcPdu_2,P_INFO,swLogPrintf("Re-Est AM DL , Cur SN: %d , segNum: %d , fi: %d ( FNF ) , the first PDCP seg missing the front half , can ' t assemble it , skip and continue to assemble other seg! ");
297984,610279424,0,0,PLAT_AP,RLC,CatRlcAmAssembleLcDlSdu_1,P_INFO,swLogPrintf("RLC AM LC: %d , don ' t has valid PDCP PDU , maybe only RLC STATUS report , or RLC PDU has been discarded. ");
297984,610281984,0,0,PLAT_AP,RLC,CatRlcAmDlLcReestablishReq_1,P_INFO,swLogPrintf("Re-Est RLC AM DL , LC: %d , vrr: %d , miss SN: %d , SN is not continuous , discard BackUp PDU! ");
297984,610283776,0,0,PLAT_AP,RLC,CatRlcUmAssemblePdcpPduFromWholeRlcPdu_1,P_INFO,swLogPrintf("UM DL , Cur SN: %d , segNum: 1 , fi: %d ( FNF ) , this PDCP PDU missing the front half , can ' t assemble it , discard this RLC PDU! ");
297984,610286080,0,0,PLAT_AP,RLC,CatRlcUmAssemblePdcpPduFromWholeRlcPdu_2,P_INFO,swLogPrintf("UM DL , Cur SN: %d , segNum: %d , fi: %d ( FNF ) , the first PDCP seg missing the front half , can ' t assemble it , skip and continue to assemble other seg! ");
297984,610287616,0,0,PLAT_AP,RLC,CatRlcUmAssembleLcDlSdu_1,P_INFO,swLogPrintf("RLC UM DL , LC: %d , don ' t has valid PDCP PDU , maybe RLC PDU has been discarded. ");
297984,610290432,0,0,PLAT_AP,RLC,CatRlcUmAssembleLcDlSdu_2,P_INFO,swLogPrintf("RLC UM DL , LC: %d , vrur: %d , fall out of reordering window: [ %d ~ %d ) , update vrur ");
297984,610292224,0,0,PLAT_AP,RLC,CatRlcUmAssembleLcDlSdu_3,P_INFO,swLogPrintf("RLC UM DL , LC: %d , vrur: %d , miss SN: %d , skip this PDU! ");
297984,610293760,0,0,PLAT_AP,RLC,CatRlcUmAssembleLcDlSdu_4,P_INFO,swLogPrintf("RLC UM DL , LC: %d , the backup PDU missing the second half , can ' t assemble it , discard the backup PDU! ");
297984,610296320,0,0,PLAT_AP,RLC,CatRlcUmDlLcReestablishReq_1,P_INFO,swLogPrintf("RLC UM DL , LC: %d , vrur: %d , miss SN: %d , skip this PDU! ");
297984,610297856,0,0,PLAT_AP,RLC,CatRlcUmDlLcReestablishReq_2,P_INFO,swLogPrintf("RLC UM DL , LC: %d , the backup PDU missing the second half , can ' t assemble it , discard the backup PDU! ");
297984,610300416,0,0,PLAT_AP,RLC,CatRlcUmTReorderingTimerExpiry_2,P_INFO,swLogPrintf("UM DL , LC: %d , vrur: %d , miss SN: %d , skip this PDU! ");
297984,610301952,0,0,PLAT_AP,RLC,CatRlcUmTReorderingTimerExpiry_3,P_INFO,swLogPrintf("RLC UM DL , LC: %d , the backup PDU missing the second half , can ' t assemble it , discard the backup PDU! ");
297984,610306047,0,0,PLAT_AP,LWIP_PPP,IPV6CP_UP_1,P_INFO,swLogPrintf("sif6addr failed ");
297984,610308095,0,0,PLAT_AP,LWIP_PPP,IPV6CP_UP_2,P_INFO,swLogPrintf("sif6up failed ( IPV6 ) ");
297984,610310143,0,0,PLAT_AP,LWIP_PPP,LCP_RESETCI_1,P_INFO,swLogPrintf("ppp: auth protocols: ");
297984,610310144,0,0,PLAT_AP,LWIP_PPP,LCP_RESETCI_2,P_INFO,swLogPrintf("PAP = %d ");
297984,610312448,0,0,PLAT_AP,LWIP_PPP,LCP_RESETCI_3,P_INFO,swLogPrintf("CHAP = %d CHAP_MD5 = %d ");
297984,610314496,0,0,PLAT_AP,LWIP_PPP,PPP_CONNECT_1,P_INFO,swLogPrintf("ppp_connect [ %d ] : holdoff = %d \n ");
297984,610316288,0,0,PLAT_AP,LWIP_PPP,PPP_FREE,P_INFO,swLogPrintf("ppp_free [ %d ] \n ");
297984,610320383,0,0,PLAT_AP,LWIP_PPP,ppp_netif_set_1,P_ERROR,swLogPrintf("No init function given ");
297984,610320896,0,0,PLAT_AP,LWIP_PPP,ppp_netif_set_2,P_INFO,swLogPrintf("set netif ( 0x%x ) %c%c complete ");
297984,610323200,0,0,PLAT_AP,LWIP_PPP,ppp_netif_unset_1,P_INFO,swLogPrintf("unset netif ( 0x%x ) %c%c complete , net_type ( %u ) ");
297984,610324480,0,0,PLAT_AP,LWIP_PPP,PPP_NETIF_OUTPUT_1,P_INFO,swLogPrintf("ppp_netif_output [ %d ] : link not up \n ");
297984,610328575,0,0,PLAT_AP,LWIP_PPP,PPP_NEW,P_INFO,swLogPrintf("ppp_new: netif_add failed \n ");
297984,610328576,0,0,PLAT_AP,LWIP_PPP,PPP_START_1,P_INFO,swLogPrintf("ppp_start [ %d ] \n ");
297984,610330624,0,0,PLAT_AP,LWIP_PPP,PPP_START_2,P_INFO,swLogPrintf("ppp_start [ %d ] : finished \n ");
297984,610332672,0,0,PLAT_AP,LWIP_PPP,PPP_LINK_FAILED,P_INFO,swLogPrintf("ppp_link_failed [ %d ] \n ");
297984,610334720,0,0,PLAT_AP,LWIP_PPP,PPP_LINK_END,P_INFO,swLogPrintf("ppp_link_end [ %d ] \n ");
297984,610336768,0,0,PLAT_AP,LWIP_PPP,PPP_INPUT_1,P_INFO,swLogPrintf("ppp_input [ %d ] : packet too short \n ");
297984,610339584,0,0,PLAT_AP,LWIP_PPP,PPP_INPUT_2,P_WARNING,swLogPrintf("ppp_input [ %d ] : discarding proto ( 0x%x ) @fsm ( %d ) in phase ( %d ) ! \n ");
297984,610341120,0,0,PLAT_AP,LWIP_PPP,PPP_INPUT_4,P_INFO,swLogPrintf("ppp_input [ %d ] : ip in pbuf len = %d \n ");
297984,610343168,0,0,PLAT_AP,LWIP_PPP,PPP_INPUT_5,P_INFO,swLogPrintf("ppp_input [ %d ] : ip6 in pbuf len = %d \n ");
297984,610345216,0,0,PLAT_AP,LWIP_PPP,PPP_INPUT_10,P_INFO,swLogPrintf("ppp_input [ %d ] : proto ( 0x%x ) input! \n ");
297984,610347008,0,0,PLAT_AP,LWIP_PPP,PPP_SINGLEBUF,P_ERROR,swLogPrintf("ppp_singlebuf: unable to alloc new buf ( %d ) \n ");
297984,610349056,0,0,PLAT_AP,LWIP_PPP,PPP_LINK_TERMINATED_1,P_INFO,swLogPrintf("ppp_link_terminated [ %d ] \n ");
297984,610351104,0,0,PLAT_AP,LWIP_PPP,PPP_LINK_TERMINATED_2,P_INFO,swLogPrintf("ppp_link_terminated [ %d ] : finished. \n ");
297984,610353408,0,0,PLAT_AP,LWIP_PPP,PPP_NEW_PHASE,P_INFO,swLogPrintf("ppp phase changed [ %d ] : phase = %d \n ");
297984,610355200,0,0,PLAT_AP,LWIP_PPP,PPP_SEND_CONFIG,P_INFO,swLogPrintf("ppp_send_config [ %d ] \n ");
297984,610357248,0,0,PLAT_AP,LWIP_PPP,PPP_RECV_CONFIG,P_INFO,swLogPrintf("ppp_recv_config [ %d ] \n ");
297984,610359552,0,0,PLAT_AP,LWIP_PPP,PPP_SIF_UP,P_INFO,swLogPrintf("sifup [ %d ] : err_code = %d \n ");
297984,610361600,0,0,PLAT_AP,LWIP_PPP,PPP_SIF_DOWN,P_INFO,swLogPrintf("sifdown [ %d ] : err_code = %d \n ");
297984,610363648,0,0,PLAT_AP,LWIP_PPP,PPP_SIF6_UP,P_INFO,swLogPrintf("sif6up [ %d ] : err_code = %d \n ");
297984,610365696,0,0,PLAT_AP,LWIP_PPP,PPP_SIF6_DOWN,P_INFO,swLogPrintf("sif6down [ %d ] : err_code = %d \n ");
297984,610367744,0,0,PLAT_AP,LWIP_PPP,NETIF_SET_MTU,P_INFO,swLogPrintf("netif_set_mtu [ %d ] : mtu = %d \n ");
297984,610370048,0,0,PLAT_AP,LWIP_PPP,ppp_pbuf_init,P_INFO,swLogPrintf("pbuf_init ( length = %u ) 0x%x type %d ");
297984,610371840,0,0,PLAT_AP,LWIP_PPP,PPP_LISTEN_1,P_INFO,swLogPrintf("ppp_listen [ %d ] : netact flags ( 0x%x ) \n ");
297984,610373632,0,0,PLAT_AP,LWIP_PPP,PPP_CLOSE_1,P_INFO,swLogPrintf("ppp_close [ %d ] : carrier lost -> lcp_lowerdown \n ");
297984,610375680,0,0,PLAT_AP,LWIP_PPP,PPP_CLOSE_2,P_INFO,swLogPrintf("ppp_close [ %d ] : kill_link -> lcp_close \n ");
297984,610377728,0,0,PLAT_AP,LWIP_PPP,PPPOS_WRITE_1,P_INFO,swLogPrintf("pppos_write [ %d ] : alloc fail \n ");
297984,610380032,0,0,PLAT_AP,LWIP_PPP,PPPOS_WRITE_2,P_INFO,swLogPrintf("pppos_write [ %d ] : len = %d \n ");
297984,610382080,0,0,PLAT_AP,LWIP_PPP,PPPOS_WRITE_3,P_INFO,swLogPrintf("pppos_write [ %d ] : output failed len = %d \n ");
297984,610383872,0,0,PLAT_AP,LWIP_PPP,PPPOS_NETIF_OUTPUT_1,P_INFO,swLogPrintf("pppos_netif_output [ %d ] : alloc fail \n ");
297984,610385920,0,0,PLAT_AP,LWIP_PPP,PPPOS_NETIF_OUTPUT_2,P_INFO,swLogPrintf("pppos_netif_output [ %d ] : proto = 0x% ""x "", len = %d \n ");
297984,610387968,0,0,PLAT_AP,LWIP_PPP,PPPOS_NETIF_OUTPUT_3,P_INFO,swLogPrintf("pppos_netif_output [ %d ] : output failed proto = 0x% ""x "", len = %d \n ");
297984,610390016,0,0,PLAT_AP,LWIP_PPP,PPPOS_CONNECT,P_INFO,swLogPrintf("pppos_connect [ %d ] : connecting \n ");
297984,610392064,0,0,PLAT_AP,LWIP_PPP,PPPOS_LISTEN,P_INFO,swLogPrintf("pppos_listen [ %d ] : listening \n ");
297984,610395136,0,0,PLAT_AP,LWIP_PPP,PPPOS_SEND_CONFIG,P_INFO,swLogPrintf("pppos_send_config [ %d ] : out_accm = %X %X %X %X \n ");
297984,610397184,0,0,PLAT_AP,LWIP_PPP,PPPOS_RECV_CONFIG,P_INFO,swLogPrintf("pppos_recv_config [ %d ] : in_accm = %X %X %X %X \n ");
297984,610398464,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_DROP_2,P_INFO,swLogPrintf("pppos_input_drop: pbuf len = %d , addr %p \n ");
297984,610400512,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_0,P_INFO,swLogPrintf("pppos_input [ %d ] : got %d bytes ");
297984,610402304,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_1,P_WARNING,swLogPrintf("pppos_input [ %d ] : not open! all dropped! ");
297984,610404608,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_2,P_WARNING,swLogPrintf("pppos_input [ %d ] : Dropping incomplete packet %d \n ");
297984,610406912,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_3,P_WARNING,swLogPrintf("pppos_input [ %d ] : Dropping bad fcs ( 0x%x ) , proto ( 0x%x ) \n ");
297984,610408704,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_5,P_WARNING,swLogPrintf("pppos_input [ %d ] : Dropping ACCM char <0x%x> \n ");
297984,610410496,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_7,P_WARNING,swLogPrintf("pppos_input [ %d ] : no free pbufs , try again... \n ");
297984,610412800,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_ULPDU_1,P_INFO,swLogPrintf("pppos_input_ulpdu [ %d ] : got %d bytes ");
297984,610414848,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_ULPDU_2,P_ERROR,swLogPrintf("pppos_input_ulpdu [ %d ] : in_state ( %d ) error , drop it! \n ");
297984,610416640,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_ULPDU_3,P_ERROR,swLogPrintf("pppos_input_ulpdu [ %d ] : malloc pbufh0 failure , drop it! \n ");
297984,610418688,0,0,PLAT_AP,LWIP_PPP,PPPOS_INPUT_ULPDU_4,P_ERROR,swLogPrintf("pppos_input_ulpdu [ %d ] : malloc pbufh1 failure , drop it! \n ");
297984,610420736,0,0,PLAT_AP,LWIP_PPP,PPPOS_ESCAPE_1,P_WARNING,swLogPrintf("pppos_escape [ %d ] : alloc fail \n ");
297984,610423040,0,0,PLAT_AP,LWIP_PPP,PPPOS_ESCAPE_2,P_INFO,swLogPrintf("pppos_escape [ %d ] : new len = %d \n ");
297984,610425088,0,0,PLAT_AP,LWIP_PPP,PPPOS_ESCAPE_3,P_INFO,swLogPrintf("pppos_escape [ %d ] : failure , err ( %d ) ");
297984,610426881,0,0,PLAT_AP,LWIP_PPP,PPP_LOG_WRITE,P_SIG,swLogPrintf("%s \n ");
299008,612370944,0,0,PLAT_AP,PDCP,CatPdcpDlDecodeOneStatusReportPdu_fms_1,P_VALUE,swLogPrintf("PDCP DL , LCID: %d , recv status report , fmsCount: 0x%x , nextTxCount: 0x%x ");
299008,612372480,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrProcCeregCnf_1,P_WARNING,swLogPrintf("NM , PS not REG: %d , but not try to search / register to NW ");
299008,612374784,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrProcCeregCnf_2,P_WARNING,swLogPrintf("NM , PS not REG: %d , actCidsBitmap: 0x%x ");
299008,612376576,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrProcCeregInd_1,P_WARNING,swLogPrintf("NM , PS not REG: %d , but not try to search / register to NW ");
299008,612378624,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetNetInfoCallback_1,P_SIG,swLogPrintf("NET MGR , NM get net info , state: %u ");
299008,612380928,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_1,P_SIG,swLogPrintf("Net manager link up: CID %d , bind to another CID %d ");
299008,612382976,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_2,P_WARNING,swLogPrintf("Net manager link up fail , invalid ip type: %d , %d ");
299008,612386815,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_3,P_WARNING,swLogPrintf("NM , Test SIM and IPV6 RS is not enabled for TEST SIM , not EST this IPV6 IF ");
299008,612387840,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_4,P_SIG,swLogPrintf("Net manager , link up , CID: %d , IPV4: %u.%u.%u.%u ");
299008,612390911,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_5,P_SIG,swLogDump("Net manager , link up , full IPV6 addr: ");
299008,612392959,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_ipv6_id_4,P_WARNING,swLogPrintf("NM , Test SIM and IPV6 RS is not enabled for TEST SIM , ignore this IPV6 IF ");
299008,612392960,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_ipv6GetPrefixelay,P_INFO,swLogPrintf("NM , ipv6 get prefix delay %u ");
299008,612397055,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_6,P_SIG,swLogDump("Net manager , link up , IPV6 ID addr: ");
299008,612397824,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_7,P_SIG,swLogPrintf("Net manager , link up , IPV4 PCO DNS: %u.%u.%u.%u ");
299008,612399360,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrDedLinkUp_1,P_SIG,swLogPrintf("NETMANAGER , dedicated BR link up , cid: %d , pcid: %d ");
299008,612401152,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkDown_1,P_SIG,swLogPrintf("NETMANAGER link down: cid %d ");
299008,612403200,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanLinkUp_1,P_SIG,swLogPrintf("NETMANAGER LAN link up: type %u ");
299008,612405248,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanLinkDown_1,P_SIG,swLogPrintf("NETMANAGER LAN link down: type %u ");
299008,612407552,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanLinkLayerStatusChange_1,P_SIG,swLogPrintf("NETMANAGER LAN link layer status change: type %u , new status %u ");
299008,612409344,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanConfig_1,P_SIG,swLogPrintf("NETMANAGER LAN config , ether mode %u ");
299008,612412160,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanCtrl_1,P_SIG,swLogPrintf("NETMANAGER LAN control , action %u , type %u , ip4Cid %u , ip6Cid %u ");
299008,612413440,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrQueryLanTcpipDataPathCapability_1,P_INFO,swLogPrintf("NET MGR , lan data path cap type: %u ");
299008,612415488,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetLanTcpipDataPathStatus_1,P_INFO,swLogPrintf("NET MGR , lan data path status type: %u ");
299008,612417536,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetLanTcpipDataPathHostInfo_1,P_INFO,swLogPrintf("NET MGR , lan data path host info type: %u ");
299008,612419584,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetNetInfo_1,P_INFO,swLogPrintf("NET MGR , get ATI netif info , cid: %u ");
299008,612421632,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetNetInfoWithoutPsStatusCheck_1,P_INFO,swLogPrintf("NET MGR , get ATI netif info without PS check , cid: %u ");
299008,612423680,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetDnsServerInfo_1,P_INFO,swLogPrintf("NETMANAGER get DNS server info: cid %u ");
299008,612425728,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrClearDnsCacheInfo_1,P_INFO,swLogPrintf("NETMANAGER clear DNS cache info: clear all flag %u ");
299008,612427776,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrSetDnsCache_1,P_INFO,swLogPrintf("NETMANAGER Set DNS cache config %u ");
299008,612430592,0,0,PLAT_AP,TCPIP_NETMGR,nmDNSGetCnf_1,P_SIG,swLogPrintf("NM , get DNS IPV4 ADDR: %u.%u.%u.%u ");
299008,612433664,0,0,PLAT_AP,TCPIP_NETMGR,nmDNSGetCnf_2,P_SIG,swLogPrintf("NM , get DNS IPV6 ADDR: %x:%x:%x:%x:%x:%x:%x:%x ");
299008,612435967,0,0,PLAT_AP,TCPIP_NETMGR,nmDNSGetCnf_3,P_WARNING,swLogPrintf("NM , get DNS addr , but it is invalid ");
299008,612436736,0,0,PLAT_AP,TCPIP_NETMGR,psDailSetAdptDnsServerInfo_1,P_INFO,swLogPrintf("psdial , NW not config DNS , use default IPv4 DNS ADDR: %u.%u.%u.%u ");
299008,612440063,0,0,PLAT_AP,TCPIP_NETMGR,psDailSetAdptDnsServerInfo_3,P_INFO,swLogPrintf("psdial load ipv4 IMSI DNS ");
299008,612442111,0,0,PLAT_AP,TCPIP_NETMGR,psDailSetAdptDnsServerInfo_4,P_INFO,swLogPrintf("psdial load ipv6 IMSI DNS ");
299008,612442112,0,0,PLAT_AP,TCPIP_NETMGR,psDailSetAdptDnsServerInfo_5,P_WARNING,swLogPrintf("PS DAIL , Get adpt DNS server address failed , bWakeUp %u ");
299008,612444928,0,0,PLAT_AP,TCPIP_NETMGR,AppMgrPingRequest_1_1,P_SIG,swLogPrintf("NM PING , DEST ipv4: %u.%u.%u.%u ");
299008,612448000,0,0,PLAT_AP,TCPIP_NETMGR,AppMgrPingRequest_1_2,P_SIG,swLogPrintf("NM PING , DEST IPV6: %x:%x:%x:%x:%x:%x:%x:%x ");
299008,612448256,0,0,PLAT_AP,TCPIP_NETMGR,AppMgrPingRequest_1_3,P_WARNING,swLogPrintf("NM PING , invalid IP type: %d ");
299008,612450304,0,0,PLAT_AP,TCPIP_NETMGR,AppMgrIperfRequest_1,P_SIG,swLogPrintf("NETMANAGER stop iperf task %u ");
299008,612454399,0,0,PLAT_AP,TCPIP_NETMGR,AppMgrIperfRequest_2,P_WARNING,swLogPrintf("NETMANAGER start ECIPERF task failed ");
299008,612456447,0,0,PLAT_AP,TCPIP_NETMGR,AppMgrSntpStart_1,P_INFO,swLogPrintf("AppMgrSntpStart ");
299008,612458495,0,0,PLAT_AP,TCPIP_NETMGR,AppMgrSntpStart_2,P_WARNING,swLogPrintf("AppMgrSntpStart SERVER address paramter is invalid ");
299008,612460543,0,0,PLAT_AP,TCPIP_NETMGR,AppMgrSntpStop_1,P_INFO,swLogPrintf("AppMgrSntpStop ");
300032,614467840,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_dest_1,P_WARNING,swLogPrintf("NET DL fast path , one IP DL dest: 0x%lx , not for UE: 0x%lx , discard ");
300032,614469888,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_dest_2,P_WARNING,swLogPrintf("NET DL fast path , one IP DL dest: 0x%lx , not for UE: 0x%lx ");
300032,614471936,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_arpCache_1,P_WARNING,swLogPrintf("NET DL fast path , IPV4 host ARP cache not done , host ARP addr: 0x%lx , host addr: 0x%lx , pkg foward to LWIP ");
300032,614473728,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_frag_1,P_WARNING,swLogPrintf("NET DL fast path , one IP is fragment: 0x%lx , pass to LWIP ");
300032,614476032,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_mtu_1,P_WARNING,swLogPrintf("NET DL fast path , pkg length: %d > LAN MTU: %d , need IP fragment ");
300032,614477824,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_ip_proto_1,P_INFO,swLogPrintf("NET DL fast path , IP protocol is not UDP / TCP: %d , pass to LWIP ");
300032,614480128,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_udp_len_1,P_ERROR,swLogPrintf("NET DL fast path , pkg length: %d < = ( ipHdrLen: %d + udpHdrLen: 8 ) , discard ");
300032,614482176,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_tcp_len_1,P_ERROR,swLogPrintf("NET DL fast path , pkg length: %d < = ( ipHdrLen: %d + tcpHdrLen: 20 ) , discard ");
300032,614486015,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_tcp_mss_1,P_INFO,swLogPrintf("NET DL fast path , TCP SYNC pkt , need MSS check ");
300032,614488063,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_dns_relay_1,P_INFO,swLogPrintf("NET DL fast path , RNDIS private IP soltion , dns need relay ");
300032,614488320,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp6Isr_eth_lan_mtu_1,P_WARNING,swLogPrintf("NET DL fast path , pkg length: %d > LAN MTU: %d , need IP segment ");
300032,614490368,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp6Isr_ppp_lan_mtu_1,P_WARNING,swLogPrintf("NET DL fast path , pkg length: %d > LAN MTU: %d , need IP segment ");
300032,614494207,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp6Isr_fast_fail,P_WARNING,swLogPrintf("NET DL fast path , ipv6 dl fast fail , maybe ndp cache fail ");
300032,614496255,0,0,PLAT_AP,TCPIP_NETADPT,NetFastInsertTcpConnInfo_none_s_1,P_WARNING,swLogPrintf("NET FAST , try add new TCP conn , but list is NULL ");
300032,614497280,0,0,PLAT_AP,TCPIP_NETADPT,NetFastInsertTcpConnInfo_rm_s_1,P_SIG,swLogPrintf("NET FAST , RM oldest tcp conn , ipType: %d , hostPort: %d , rmtPort: %d , curTick: 0x%lx , oldTick: 0x%lx ");
300032,614499072,0,0,PLAT_AP,TCPIP_NETADPT,NetFastPathTcpWSProcess_add_ws,P_DEBUG,swLogPrintf("NET FAST PATH , UL TCP SYN , IpType: %d , hostPort: %d , rmtPort: %d , scaleV: %d , try add into list ");
300032,614501120,0,0,PLAT_AP,TCPIP_NETADPT,NetFastPathTcpWSProcess_disable_ws,P_VALUE,swLogPrintf("NET FAST PATH , UL IpType: %d , hostPort: %d , rmtPort: %d , scaleV: %d , list full , disable WS option ");
300032,614502912,0,0,PLAT_AP,TCPIP_NETADPT,NetFastPathTcpWSProcess_em_ws_1,P_DEBUG,swLogPrintf("NET FAST PATH , UL TCP SYN , IpType: %d , hostPort: %d , rmtPort: %d , no WS option , try to rm from list ");
300032,614505216,0,0,PLAT_AP,TCPIP_NETADPT,NetFastPathTcpWSProcess_1,P_INFO,swLogPrintf("NET FAST PATH TCP WIN ADPT , hostPort: %d , old win %u , new win %u , scaling value %u ");
300032,614506752,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_ip_1,P_WARNING,swLogPrintf("NET UL fast path , can ' t get ipv4 header , or ipver: %d , pkglen: %d , discard ");
300032,614508544,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_wan_ipv4_invalid_1,P_VALUE,swLogPrintf("NET UL fast path , wan ipv4 invalid , ipv4Cid: %d ");
300032,614510592,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_local_1,P_VALUE,swLogPrintf("NET UL fast path , ipv4 dest: 0x%lx , multicast , or to local , local input ");
300032,614514687,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_ip_freg_1,P_WARNING,swLogPrintf("NET UL fast path , ip fregment , need local input ");
300032,614514944,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_mtu_1,P_WARNING,swLogPrintf("NET UL fast path , IP pkg len: %d > WAN MTU: %d , need segment ");
300032,614517248,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_nat_2,P_WARNING,swLogPrintf("NET UL fast path , SRC ipv4 addr: 0x%lx , not host addr: 0x%lx , not UE addr: 0x%lx , fwd to PS for easy ");
300032,614519296,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_udp_1,P_WARNING,swLogPrintf("NET UL fast path , can ' t get UDP header , pkglen: %d , iphdrSize: %d , offset: %d , discard ");
300032,614521344,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_tcp_1,P_WARNING,swLogPrintf("NET UL fast path , can ' t get TCP header , pkglen: %d , iphdrSize: %d , offset: %d , discard ");
300032,614523136,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_mss_1,P_INFO,swLogPrintf("NET UL fast path , TCP SYNC pkt , and LAN MTU: %d > WAN MTU: %d , need MSS check ");
300032,614526975,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_dns_relay_1,P_INFO,swLogPrintf("NET UL fast path , DNS request pkt , Rndis Private Ip solution , need dns relay ");
300032,614526976,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_port_1,P_WARNING,swLogPrintf("NET UL fast path , SRC port: %d , need mapping ");
300032,614531071,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_major_channel_check_1,P_INFO,swLogPrintf("NET UL fast path , lan channel is the secondary , need mapping ");
300032,614531584,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_nat_1,P_WARNING,swLogPrintf("NET UL fast path , SRC ipv4 addr: 0x%lx , not host addr: 0x%lx , not UE addr: 0x%lx , fwd to PS for easy ");
300032,614535167,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_ROHC_1,P_WARNING,swLogPrintf("NET UL fast path , ROHC configed , all pass to LWIP ");
300032,614535680,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_ip_1,P_WARNING,swLogPrintf("NET UL fast path , can ' t get ipv6 header , or ipver: %d , pkglen: %d , or ip6cid invalid: %d , discard ");
300032,614537216,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_wan_ipv6_invalid,P_VALUE,swLogPrintf("NET UL fast path , wan ipv6 invalid , ipv6Cid: %d ");
300032,614540032,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_multi_1,P_VALUE,swLogPrintf("NET UL fast path , ipv6 dest: 0x%lx:0x%lx:0x%lx:0x%lx , multicast , local input ");
300032,614542080,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_local_1,P_VALUE,swLogPrintf("NET UL fast path , ipv6 dest: 0x%lx:0x%lx:0x%lx:0x%lx , to local ");
300032,614543616,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_mtu_1,P_WARNING,swLogPrintf("NET UL fast path , IPv6 pkg len: %d > WAN MTU: %d , need segment ");
300032,614547455,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_ROHC_1,P_WARNING,swLogPrintf("NET UL fast path , ROHC configed , all pass to LWIP ");
300032,614547968,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_ip_1,P_WARNING,swLogPrintf("NET UL fast path , PPP can ' t get ipv4 header , or ipver: %d , pkglen: %d , or ip4cid invalid: %d , discard ");
300032,614549504,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_ip_wan_ipv4_invalid_1,P_WARNING,swLogPrintf("NET UL fast path , wan ipv4 invalid , ipv4Cid: %d ");
300032,614553599,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_ip_freg_1,P_WARNING,swLogPrintf("NET UL fast path , PPP ip fregment , need local input ");
300032,614553856,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_mtu_1,P_WARNING,swLogPrintf("NET UL fast path , PPP IP pkg len: %d > WAN MTU: %d , need segment ");
300032,614555904,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_udp_1,P_WARNING,swLogPrintf("NET UL fast path , PPP can ' t get UDP header , pkglen: %d , iphdrSize: %d , discard ");
300032,614557952,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_tcp_1,P_WARNING,swLogPrintf("NET UL fast path , PPP can ' t get TCP header , pkglen: %d , iphdrSize: %d , discard ");
300032,614560000,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_mss_1,P_WARNING,swLogPrintf("NET UL fast path , PPP TCP SYNC pkt , and LAN MTU: %d > WAN MTU: %d , need MSS check ");
300032,614563839,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_windows_adpt_1,P_INFO,swLogPrintf("NET UL fast path , TCP SYNC pkt , need windows adpt ");
300032,614563840,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_port_1,P_WARNING,swLogPrintf("NET UL fast path , PPP SRC port: %d , need mapping ");
300032,614566400,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_ip_1,P_WARNING,swLogPrintf("NET UL fast path , PPP can ' t get ipv6 header , or ipver: %d , pkglen: %d , or ip6cid invalid: %d , discard ");
300032,614567936,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_wan_ipv6_invalid_1,P_VALUE,swLogPrintf("NET UL fast path , wan ipv6 invalid , ipv6Cid: %d ");
300032,614570752,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_multi_1,P_VALUE,swLogPrintf("NET UL fast path , PPP ipv6 dest: 0x%lx:0x%lx:0x%lx:0x%lx , multicast , local input ");
300032,614572800,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_local_1,P_VALUE,swLogPrintf("NET UL fast path , PPP ipv6 dest: 0x%lx:0x%lx:0x%lx:0x%lx , to local ");
300032,614574336,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_mtu_1,P_WARNING,swLogPrintf("NET UL fast path , PPP IPv6 pkg len: %d > WAN MTU: %d , need segment ");
300032,614576128,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_none_2,P_INFO,swLogPrintf("NET DL fast path , no fast channel info: %d , all DL PDU need to pass to LWIP ");
300032,614578176,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_eth_rohc_3,P_INFO,swLogPrintf("NET DL fast path , cid: %d , rohc enable , all DL PDU need to pass to LWIP ");
300032,614580224,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_PPP_rohc_3,P_INFO,swLogPrintf("NET DL fast path , cid: %d , rohc enable , all DL PDU need to pass to LWIP ");
300032,614582272,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_none_4,P_VALUE,swLogPrintf("NET DL fast path , cid: %d , not bind any lan , pass to LWIP ");
300032,614584320,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_ipver_1,P_WARNING,swLogPrintf("NET DL fast path , invalid IpVersion: %d ");
300032,614586880,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_input_w_1,P_WARNING,swLogPrintf("NET UL fast path , invalid input , lanType: %d , pUlHdr: 0x%x , pUlChkInfo: 0x%x , discard UL data ");
300032,614588416,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_RNDIS_w_1,P_WARNING,swLogPrintf("NET UL fast path , ETH input , but LAN is not setup , lanType: %d , discard all UL data ");
300032,614590464,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_ethHdr_1,P_WARNING,swLogPrintf("NET UL fast path , RNDIS , can ' t get ETH header , pkgLen: %d ");
300032,614594559,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_bc_1,P_INFO,swLogPrintf("NET UL fast path , eth pkt dest is broad cast , local input ");
300032,614595840,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_dest_mac_1,P_WARNING,swLogPrintf("NET UL fast path , eth pkt dest: %u:%u:%u:%u:%u:%u is not UE MAC interface , discard ");
300032,614596608,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_eth_type_1,P_VALUE,swLogPrintf("NET UL fast path , other ETH type: %d , local input ");
300032,614598656,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_PPP_w_1,P_WARNING,swLogPrintf("NET UL fast path , PPP input , but LAN is not setup , lanType: %d , discard all UL data ");
300032,614600704,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_ppp_ip_ver_1,P_WARNING,swLogPrintf("NET UL fast path , PPP , invalid IP ver: %d , discard ");
300032,614603520,0,0,PLAT_AP,TCPIP_NETADPT,NetFastDelTcpConnInfo_del_s_1,P_SIG,swLogPrintf("NET FAST , RM tcp conn OK: %d , ipType: %d , hostPort: %d , rmtPort: %d ");
300032,614605056,0,0,PLAT_AP,TCPIP_NETADPT,NetGetBindLanNetifByIp4WanNetifAndLanType_1,P_INFO,swLogPrintf("wan neif cid %u is not the same as lan netif cid %u ");
300032,614606848,0,0,PLAT_AP,TCPIP_NETADPT,NetGetBindLanNetifByIp6WanNetifAndLanType_1,P_ERROR,swLogPrintf("wan neif cid %u is not the same as lan netif cid ");
300032,614609664,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_info,P_INFO,swLogPrintf("netif tcp pkg conn source %u , cid %u , source port %u , dest port %u ");
300032,614611712,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_1,P_INFO,swLogPrintf("netif udp pkg dest port transfer from %u , to %u , chksum fron %u to %u ");
300032,614615039,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_checksum_ignore_1,P_INFO,swLogPrintf("netif udp pkg ignor checksum with checksum 0 ");
300032,614615552,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_info_source_invalid,P_ERROR,swLogPrintf("netif udp pkg source port %u , dest port %u , inlavid conn source %u ");
300032,614617856,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_2,P_INFO,swLogPrintf("netif udp pkg dest port transfer from %u , to %u , chksum fron %u to %u ");
300032,614621183,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_checksum_ignore_2,P_INFO,swLogPrintf("netif udp pkg ignor checksum with checksum 0 ");
300032,614621952,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpPkgProcess_info,P_INFO,swLogPrintf("netif tcp pkg conn source %u , cid %u , source port %u , dest port %u ");
300032,614624000,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpPkgProcess_1,P_INFO,swLogPrintf("netif tcp pkg dest port transfer from %u , to %u , chksum fron %u to %u ");
300032,614625792,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpPkgProcess_info_source_invalid,P_ERROR,swLogPrintf("netif udp pkg source port %u , dest port %u , inlavid conn source %u ");
300032,614628096,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpPkgProcess_2,P_INFO,swLogPrintf("netif tcp pkg dest port transfer from %u , to %u , chksum fron %u to %u ");
300032,614631423,0,0,PLAT_AP,TCPIP_NETADPT,NetifIp4PkgFwdWanFromLanSrcAddrProcess_2,P_WARNING,swLogPrintf("dhcp server data is not valid ");
300032,614633471,0,0,PLAT_AP,TCPIP_NETADPT,NetifIp4PkgFwdLanFromWanDestAddrProcess_2,P_WARNING,swLogPrintf("dhcp server data is not valid ");
300032,614635519,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpMssProcess_1,P_INFO,swLogPrintf("tcp sync pkt , check MSS ");
300032,614637567,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpMssProcess_2,P_WARNING,swLogPrintf("tcp sync pkt , invalid MSS option ");
300032,614637824,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpMssProcess_3,P_INFO,swLogPrintf("tcp sync pkt , update MSS from %u to %u ");
300032,614641663,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpMssProcess_4,P_WARNING,swLogPrintf("tcp sync pkt , can not parse MSS option ");
300032,614643711,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlTcpDisableWSOption_2,P_WARNING,swLogPrintf("NET ADPT , tcp sync pkt , invalid windows scale option ");
300032,614644224,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlTcpDisableWSOption_ws_1,P_VALUE,swLogPrintf("NET ADPT , UL syn / syn ack , hostPort: %d , rmtPort: %d , ws: %d , scadisable WS opt ");
300032,614647807,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlTcpDisableWSOption_7,P_INFO,swLogPrintf("NET ADPT , tcp sync pkt , without windows scale option ");
300032,614649855,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayWanProcess_1,P_INFO,swLogPrintf("dns server relay , trans ip src address ");
300032,614651903,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayLanProcess_1,P_INFO,swLogPrintf("dns server relay , fresh wan server info ");
300032,614653951,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayLanProcess_2,P_INFO,swLogPrintf("dns server relay , trans ip dest address ");
300032,614655999,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayLanProcess_3,P_INFO,swLogPrintf("dns server relay , can not find adpt wan dns server ");
300032,614658047,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayWanProcess_4,P_INFO,swLogPrintf("dns server relay , trans ip dest address ");
300032,614660095,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayWanProcess_5,P_WARNING,swLogPrintf("dns server relay , invalid wan dns server ");
300032,614662143,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_fragment_1,P_INFO,swLogPrintf("fragment ip , input ");
300032,614662144,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_1,P_INFO,swLogPrintf("input wan , udp packet dest %u ");
300032,614664192,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_2,P_INFO,swLogPrintf("input wan , tcp packet dest %u ");
300032,614666240,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_3,P_INFO,swLogPrintf("input wan , not udp and tcp packet dest %u ");
300032,614670335,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_4,P_INFO,swLogPrintf("input wan recv loop back or mulicatse pkg , local input ");
300032,614672383,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_5,P_INFO,swLogPrintf("lan recv local pkg , input ");
300032,614674431,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_fragment_2,P_INFO,swLogPrintf("fragment ip , input ");
300032,614674432,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_major_1,P_INFO,swLogPrintf("can not get lan channel major flag , lan type %u ");
300032,614676480,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_6,P_INFO,swLogPrintf("input lan , udp packet dest %u ");
300032,614678784,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_cid_check_1,P_INFO,swLogPrintf("input lan type %u , udp pkg , can not find adpt wan , cid %u ");
300032,614680576,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_7,P_INFO,swLogPrintf("input lan , tcp packet dest %u ");
300032,614682880,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_cid_check_2,P_INFO,swLogPrintf("input lan type %u , tcp pkg , can not find adpt wan , cid %u ");
300032,614684672,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_8,P_INFO,swLogPrintf("input lan , not udp and tcp packet dest %u ");
300032,614686720,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_9,P_INFO,swLogPrintf("input packet result %u ");
300032,614690815,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp6TcpSyncInputPkg_1,P_INFO,swLogPrintf("netif recv wan pkg , but not ipv6 type ");
300032,614690816,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp6TcpSyncInputPkg_4,P_INFO,swLogPrintf("netif recv wan pkg , invalid lan type %u ");
300032,614692864,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_1,P_ERROR,swLogPrintf("netif recv lan pkg , but can not find adpt netif , type %u ");
300032,614695424,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_rohc_only,P_ERROR,swLogPrintf("netif recv lan pkg , need rohc , act: %d , but cid: %d / %d is invalid ");
300032,614696960,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_2,P_ERROR,swLogPrintf("netif recv lan pkg , but allocate pbuf free , dicard the pkglen: %d ");
300032,614699008,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_3,P_ERROR,swLogPrintf("NetifLanTcpipInput PPP invalid ip version %u ");
300032,614701056,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_4,P_ERROR,swLogPrintf("NetifLanTcpipInput invalid lan type %u ");
300032,614703104,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_1,P_WARNING,swLogPrintf("lan type %u channel info is invalid ");
300032,614705920,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_lanchannel_info_1,P_INFO,swLogPrintf("lan channel info type %u ip4BindCid %u , ip6BindCid %u , index %u ");
300032,614707200,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_2,P_INFO,swLogPrintf("channel lan type %u is invalid ");
300032,614709248,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_nettype_1,P_INFO,swLogPrintf("channel lan status %u is invalid ");
300032,614711296,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_3,P_WARNING,swLogPrintf("get lan type %u netif fail ");
300032,614715391,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_4,P_WARNING,swLogPrintf("dhcp server data is not valid ");
300032,614715392,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_nettype_2,P_INFO,swLogPrintf("channel lan status %u is invalid ");
300032,614717440,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_5,P_WARNING,swLogPrintf("get lan type %u netif fail ");
300032,614721535,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetWanInfo_1,P_WARNING,swLogPrintf("NET ADPT , invalid input , can ' t get WAN netif info ");
300032,614723583,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetWanInfo_2,P_WARNING,swLogPrintf("NET ADPT , invalid cid , can ' t get WAN netif info ");
300032,614725631,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetWanInfo_3,P_WARNING,swLogPrintf("NET ADPT , no WAN netif , can ' t get WAN netif info ");
300032,614726400,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_1,P_INFO,swLogPrintf("NetMgrAdptWanIp6Set find ip6 prefix info , source %d , state %d , lifetime %d , active time %d ");
300032,614729727,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_2,P_SIG,swLogPrintf("NetMgrAdptWanIp6Set has find adpt prefix info from hib ip6 context ");
300032,614731775,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_3,P_SIG,swLogPrintf("NetMgrAdptWanIp6Set the hib ip6 prefix liftime has timeout ");
300032,614731776,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_4,P_INFO,swLogPrintf("nd6 prefix entry timer %u ");
300032,614733824,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_5,P_INFO,swLogPrintf("active nd6 address rs refresh timer %u ");
300032,614737919,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_6,P_INFO,swLogPrintf("active nd6 address rs refresh timer has active ");
300032,614739967,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_7,P_SIG,swLogPrintf("new ip6 prefix entry fail ");
300032,614742015,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_8,P_SIG,swLogPrintf("new ip6 prefix entry fail ");
300032,614744063,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_9,P_WARNING,swLogPrintf("NetMgrAdptWanIp6Set invalid ipv6 configuration ");
300032,614746111,0,0,PLAT_AP,TCPIP_NETADPT,PsNetifLinkUp_1,P_WARNING,swLogPrintf("NetMgrAdptWanLinkUp invalid arg ");
300032,614748159,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanLinkUp_1,P_WARNING,swLogPrintf("NetMgrAdptWanLinkUp invalid network type ");
300032,614750207,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanLinkUp_2,P_WARNING,swLogPrintf("NetMgrAdptWanLinkUp netif enter oos ");
300032,614752255,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptInit_1,P_INFO,swLogPrintf("net mgr adpt init success ");
300032,614752512,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanDefaultNetifAutoSet_1,P_INFO,swLogPrintf("NET ADPT auto set , ipv4Cid: %d , ipv6Cid: %d as default netif ");
300032,614754816,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetAtiNetifInfo_type_1,P_WARNING,swLogPrintf("NET ADPT , ipv4Cid: %d , ipv6Cid: %d , netif not default netif , type: %d ");
300032,614756608,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetAtiNetifInfo_invalid_3,P_WARNING,swLogPrintf("NET ADPT , invalid ipv4Cid: %d , ipv6Cid: %d , can ' t get ATI netif info ");
300032,614758400,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_1,P_INFO,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv4 network has been link up cid %u ");
300032,614760448,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_2,P_WARNING,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv6 network has been link up , but ipv4 link with the other cid %u ");
300032,614762496,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_3,P_INFO,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv6 network has been link up cid %u ");
300032,614764544,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_4,P_WARNING,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv4 network has been link up , but ipv6 link with the other cid %u ");
300032,614766592,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_5,P_INFO,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv4&ipv6 network has been link up cid %u ");
300032,614768896,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_6,P_INFO,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv4 network has been link up with cid %u , and ipv6 link up with cid %u ");
300032,614772735,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_7,P_WARNING,swLogPrintf("NetMgrAdptWanRegisterCallback , can not find the bind netif , linkup fail ");
300032,614772736,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_8,P_WARNING,swLogPrintf("NetMgrAdptWanRegisterCallback , can not find the bind netif , cid %u ");
300032,614775296,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptDedWanRegisterCallback_in_w_1,P_WARNING,swLogPrintf("NetMgrAdpt , dedicated BR register callback , invalid input , msg: 0x%x , cid: %d , pcid: %d ");
300032,614777088,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptDedWanRegisterCallback_pcid_w_1,P_WARNING,swLogPrintf("NetMgrAdpt , dedicated BR cid: %d register callback , can not find netif via pcid: %d ");
300032,614778880,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanUnregisterCallback_1,P_WARNING,swLogPrintf("NetMgrAdptWanUnregisterCallback invalid cid %u ");
300032,614780928,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanUnregisterCallback_2,P_WARNING,swLogPrintf("NetMgrAdptWanUnregisterCallback can not find the correct netif by cid %u ");
300032,614782976,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetNetInfoCallback_1,P_WARNING,swLogPrintf("NET ADPT , invalid argument , can ' t get ATI netif info for CID: %d ");
300032,614785024,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetNetInfoCallback_2,P_WARNING,swLogPrintf("NET ADPT , can ' t find netif for CID: %d , try to use default netif ");
300032,614787072,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetNetInfoCallback_3,P_WARNING,swLogPrintf("NET ADPT , can not find any netif for cid: %d ");
300032,614789376,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetWanNetInfoCallback_4,P_SIG,swLogPrintf("NET ADPT , reqCid: %d , ATI netif state: %u ");
300032,614791168,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanServiceStateIndCallback_1,P_INFO,swLogPrintf("NetMgrAdptWanServiceStateIndCallback PSIF Inservice %u ");
300032,614795263,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanServiceStateIndCallback_2,P_INFO,swLogPrintf("NetMgrAdptWanServiceStateIndCallback exit all psif oos state ");
300032,614797311,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanServiceStateIndCallback_3,P_INFO,swLogPrintf("NetMgrAdptWanServiceStateIndCallback enter all psif oos state ");
300032,614799359,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptClearDnsCacheCallback_1,P_ERROR,swLogPrintf("NetMgrAdptClearDnsCacheCallback invalid name ");
300032,614801407,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptClearAllDnsCacheCallback_1,P_INFO,swLogPrintf("NetMgrAdptClearAllDnsCacheCallback clear all dns cache ");
300032,614803455,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptEnableDnsCacheCallback_1,P_ERROR,swLogPrintf("NetMgrAdptEnableDnsCacheCallback ");
300032,614805503,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptDisaableDnsCacheCallback_1,P_INFO,swLogPrintf("NetMgrAdptDisaableDnsCacheCallback ");
300032,614807551,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptSetDnsServerCallback_1,P_WARNING,swLogPrintf("PS IF , invalid argument ");
300032,614807552,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptSetDnsServerCallback_2,P_WARNING,swLogPrintf("PS IF , can not find any netif for cid: %d ");
300032,614811647,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetDnsServerCallback_1,P_WARNING,swLogPrintf("PS IF , invalid argument ");
300032,614811648,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetDnsServerCallback_2,P_WARNING,swLogPrintf("PS IF , can ' t find netif for CID: %d , try to use default netif ");
300032,614813696,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetDnsServerCallback_3,P_WARNING,swLogPrintf("PS IF , can not find any netif for cid: %d ");
300032,614816000,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptTftConfigCallback_in_w_1,P_WARNING,swLogPrintf("Netadpt , netif TFT config , invalid input msg: 0x%x , cid: %d ");
300032,614817792,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptTftConfigCallback_cid_w_1,P_WARNING,swLogPrintf("Netadpt , netif TFT config , can ' t find netif via cid: %d ");
300032,614821887,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp4Linkup , invalid argument ");
300032,614823935,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_2,P_WARNING,swLogPrintf("NetMgrAdptLanIp4Linkup , wan info inavlid ");
300032,614825983,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_dns_relay_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp4Linkup , callocate nds relay server data fail ");
300032,614828031,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_3,P_ERROR,swLogPrintf("NetMgrAdptLanIp4Linkup , start dhcp server fail ");
300032,614830079,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_dns_relay_2,P_WARNING,swLogPrintf("NetMgrAdptLanIp4Linkup , callocate nds relay server data fail ");
300032,614832127,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp6Linkup_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp6Linkup , invalid argument ");
300032,614834175,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp6Linkup_2,P_WARNING,swLogPrintf("NetMgrAdptLanIp6Linkup , enable ipv6 RA server fail ");
300032,614836223,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp6Linkup_3,P_WARNING,swLogPrintf("NetMgrAdptLanIp6Linkup , enable ipv6 RA server fail ");
300032,614838271,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4LinkDown_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp4LinkDown , invalid argument ");
300032,614840319,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp6LinkDown_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp6LinkDown , invalid argument ");
300032,614842367,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanInfo_1,P_WARNING,swLogPrintf("LAN IF , invalid argument ");
300032,614844415,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanInfo_2,P_WARNING,swLogPrintf("LAN IF , hw address length is invalid ");
300032,614846463,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanInfo_3,P_WARNING,swLogPrintf("LAN IF , can not get any WAN info ");
300032,614848511,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanInfo_4,P_WARNING,swLogPrintf("LAN IF , can not get any WAN info ");
300032,614850559,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_1,P_WARNING,swLogPrintf("LAN link up , invalid argument ");
300032,614850560,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_2,P_INFO,swLogPrintf("LAN link up , lan type %u ");
300032,614854655,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_3,P_WARNING,swLogPrintf("LAN link up , can not find lan cfg ");
300032,614856703,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_4,P_WARNING,swLogPrintf("LAN link up , can not find lan channel info ");
300032,614858751,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_5,P_WARNING,swLogPrintf("LAN link up , can not find adpt active wan for none nat mode ");
300032,614858752,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_mem_1,P_WARNING,swLogPrintf("LAN link type %u , can ' t alloc mem for netif ");
300032,614860800,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_6,P_INFO,swLogPrintf("LAN type %u , already link up ");
300032,614864895,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_7,P_ERROR,swLogPrintf("rndis lan IP4 link up false ");
300032,614866943,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_8,P_ERROR,swLogPrintf("rndis lan IP6 link up false ");
300032,614868991,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_9,P_ERROR,swLogPrintf("rndis lan IP4 link up false ");
300032,614871039,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_10,P_ERROR,swLogPrintf("rndis lan IP6 link up false ");
300032,614873087,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_11,P_ERROR,swLogPrintf("rndis lan IP4 link up false ");
300032,614875135,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_12,P_ERROR,swLogPrintf("ppp lan IP4 link up false ");
300032,614877183,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_13,P_ERROR,swLogPrintf("ppp lan IP6 link up false ");
300032,614879231,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_14,P_ERROR,swLogPrintf("ppp lan IP4 link up false ");
300032,614881279,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_15,P_ERROR,swLogPrintf("ppp lan IP6 link up false ");
300032,614883327,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_16,P_ERROR,swLogPrintf("ppp lan IP4 link up false ");
300032,614885375,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkDownCallback_1,P_WARNING,swLogPrintf("LAN link down , invalid argument ");
300032,614887423,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkDownCallback_3,P_ERROR,swLogPrintf("LAN link down , can not find any LAN netif ");
300032,614889471,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLLStatusChangeCallback_1,P_WARNING,swLogPrintf("LAN link layer status change , invalid argument ");
300032,614891519,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLLStatusChangeCallback_3,P_ERROR,swLogPrintf("LAN link layer status change , can not find any LAN channel info ");
300032,614893567,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLLStatusChangeCallback_4,P_ERROR,swLogPrintf("LAN link layer status change , can not find any LAN netif ");
300032,614895615,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanConfigSetCallback_1,P_WARNING,swLogPrintf("LAN set config , invalid argument ");
300032,614897663,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanConfigSetCallback_2,P_WARNING,swLogPrintf("LAN set config , can not find the global lan config ");
300032,614899711,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanConfigSetCallback_3,P_WARNING,swLogPrintf("LAN set config , can not find free channel ");
300032,614901759,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanConfigSetCallback_4,P_INFO,swLogPrintf("LAN set config , find rndis channel ");
300032,614903807,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptClearDnsRelayWanServerInfo_1,P_WARNING,swLogPrintf("NetMgrAdptClearDnsRelayWanServerInfo get dns relay server data fail ");
300032,614903808,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptClearDnsRelayWanServerInfo_2,P_WARNING,swLogPrintf("NetMgrAdptClearDnsRelayWanServerInfo gan not get the netif by lan net type %u ");
300032,614907903,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBindCheck_1,P_WARNING,swLogPrintf("NetMgrAdptLanBindCheck invalid cid ");
300032,614907904,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBindCheck_2,P_ERROR,swLogPrintf("NetMgrAdptLanBindCheck can not find lan channel cfg , lan type %u ");
300032,614910464,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBindCheck_3,P_WARNING,swLogPrintf("NetMgrAdptLanBindCheck ip4Cid %u ip6Cid %u has bind lan type %u , and also passthrough mode ");
300032,614914047,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_1,P_WARNING,swLogPrintf("NetMgrAdptLanBind invalid cid ");
300032,614916095,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_2,P_WARNING,swLogPrintf("NetMgrAdptLanBind can not get lan cfg ");
300032,614918143,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_3,P_WARNING,swLogPrintf("NetMgrAdptLanBind can not find free channel ");
300032,614918144,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_ip4Cid_check_1,P_WARNING,swLogPrintf("NetMgrAdptLanBind , ip4 cid %u wan is not active and non NAT mode ");
300032,614920192,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_ip6Cid_check_1,P_WARNING,swLogPrintf("NetMgrAdptLanBind , ip6 cid %u wan is not active ");
300032,614924287,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_4,P_INFO,swLogPrintf("NetMgrAdptLanBind , find channel ");
300032,614924288,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_ip4Cid_check_3,P_WARNING,swLogPrintf("NetMgrAdptLanBind , ip4 cid %u wan is not active and non NAT mode ");
300032,614926336,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_ip6Cid_check_4,P_WARNING,swLogPrintf("NetMgrAdptLanBind , ip6 cid %u wan is not active ");
300032,614930431,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_5,P_ERROR,swLogPrintf("NetMgrAdptLanBind lan IP4 link up false ");
300032,614930432,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_6,P_INFO,swLogPrintf("NetMgrAdptLanBind get lan type %d netif fail ");
300032,614934527,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_7,P_INFO,swLogPrintf("NetMgrAdptLanBind get wan info fail ");
300032,614936575,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_8,P_ERROR,swLogPrintf("NetMgrAdptLanBind lan IP4 link up false ");
300032,614936576,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_9,P_INFO,swLogPrintf("NetMgrAdptLanBind get lan type %d netif fail ");
300032,614940671,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_10,P_INFO,swLogPrintf("NetMgrAdptLanBind get wan info fail ");
300032,614940672,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_11,P_INFO,swLogPrintf("NetMgrAdptLanBind lan type %d invalid netType for none nat mode ");
300032,614944767,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_12,P_INFO,swLogPrintf("NetMgrAdptLanBind get wan info fail ");
300032,614946815,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_13,P_ERROR,swLogPrintf("NetMgrAdptLanBind lan IP4 link up false ");
300032,614946816,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_14,P_INFO,swLogPrintf("NetMgrAdptLanBind get lan type %d netif fail ");
300032,614950911,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_15,P_INFO,swLogPrintf("NetMgrAdptLanBind get wan info fail ");
300032,614952959,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_1,P_WARNING,swLogPrintf("NetMgrAdptLanUnbind invalid cid ");
300032,614955007,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_2,P_WARNING,swLogPrintf("NetMgrAdptLanUnbind can not find lan cfg ");
300032,614957055,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_3,P_INFO,swLogPrintf("NetMgrAdptLanUnbind find channel ");
300032,614957056,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_4,P_INFO,swLogPrintf("LAN unbind , can not find %d netif ");
300032,614959104,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_5,P_INFO,swLogPrintf("LAN unbind , can not find %d netif ");
300032,614961152,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_6,P_INFO,swLogPrintf("LAN unbind , can not find %d netif ");
300032,614965247,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanCtrlCallback_1,P_WARNING,swLogPrintf("LAN ctrl , invalid argument ");
300032,614967295,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanCtrlCallback_2,P_WARNING,swLogPrintf("LAN ctrl check fail ");
300032,614967296,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanCtrlCallback_3,P_WARNING,swLogPrintf("LAN ctrl , invalid action %d ");
300032,614971391,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp4Info_1,P_WARNING,swLogPrintf("NetMgrGetLanDataPathHostIp4Info invalid argument ");
300032,614973439,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp4Info_2,P_INFO,swLogPrintf("NetMgrGetLanDataPathHostIp4Info pass through mode , can not find channel info , maybe not bind ");
300032,614973440,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp4Info_3,P_INFO,swLogPrintf("NetMgrGetLanDataPathHostIp4Info pass through mode , can not find wan info , bind ip4 cid %u ");
300032,614977535,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp6Info_1,P_INFO,swLogPrintf("NetMgrGetLanDataPathHostIp6Info invalid argument ");
300032,614979583,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp6Info_2,P_INFO,swLogPrintf("NetMgrGetLanDataPathHostIp6Info pass through mode , can not find channel info , maybe not bind ");
300032,614979584,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp6Info_3,P_INFO,swLogPrintf("NetMgrGetLanDataPathHostIp6Info pass through mode , can not find wan info , bind ip4 cid %u ");
300032,614983679,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_1,P_WARNING,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback invalid argument ");
300032,614985727,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_2,P_WARNING,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback can not get lan cfg ");
300032,614985984,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_3,P_INFO,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback get ip4Cid %u , ip6Cid %u ");
300032,614987776,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_4,P_INFO,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback get ip4Cid %u ");
300032,614989824,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_5,P_INFO,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback get ip6Cid %u ");
300032,614993919,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_6,P_WARNING,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback get fail ");
300032,614993920,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpdateByWanLinkDown_1,P_WARNING,swLogPrintf("NetMgrAdptLanLinkUpdateByWanLinkDown invalid cid %u ");
300032,614995968,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpdateByWanLinkDown_2,P_WARNING,swLogPrintf("NetMgrAdptLanLinkUpdateByWanLinkDown can not find lan netif cid %u ");
300032,614998016,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpdateByWanLinkDown_3,P_WARNING,swLogPrintf("NetMgrAdptLanLinkUpdateByWanLinkDown can not find lan netif cid %u ");
300032,615000064,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpdateByWanLinkDown_4,P_WARNING,swLogPrintf("NetMgrAdptLanLinkUpdateByWanLinkDown can not find lan netif cid %u ");
300032,615004159,0,0,PLAT_AP,TCPIP_NETADPT,PsifGetTcpipHibContext_1,P_ERROR,swLogPrintf("PsifGetTcpipHibContext invalid tcpip hib context header point ");
300032,615005184,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreIp6Info_1,P_INFO,swLogPrintf("PsifTcpipStoreIp6Info ip6 prefix %x:%x , life_time %u，active_time %u , cid %u ");
300032,615008255,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreIp6Info_2,P_INFO,swLogPrintf("PsifTcpipStoreIp6Info ip6 prefix info is not invalid ");
300032,615010303,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreIp6Info_3,P_INFO,swLogPrintf("PsifTcpipStoreIp6Info ip6 prefix not exsit ");
300032,615012351,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreTcpContext_1,P_INFO,swLogPrintf("PsifTcpipStoreTcpContext store one tcp context ");
300032,615012352,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreTcpContext_2,P_INFO,swLogPrintf("PsifTcpipStoreTcpContext the tcp context state is not invalid %u ");
300032,615016447,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreTcpContext_3,P_INFO,swLogPrintf("PsifTcpipStoreTcpContext not exist valid tcp context ");
300032,615018495,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreDnsCache_1,P_INFO,swLogPrintf("PsifTcpipStoreDnsCache store one dns cache ");
300032,615020543,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreDnsCache_2,P_INFO,swLogPrintf("PsifTcpipStoreDnsCache not exist valid dns cache ");
300032,615022591,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreUdpContext_1,P_INFO,swLogPrintf("PsifTcpipStoreUdpContext store one udp context ");
300032,615024639,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreUdpContext_2,P_INFO,swLogPrintf("PsifTcpipStoreUdpContext the udp context state is not invalid ");
300032,615026687,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreUdpContext_3,P_INFO,swLogPrintf("PsifTcpipStoreUdpContext not exist valid udp context ");
300032,615028735,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStorePortMgrContext_1,P_WARNING,swLogPrintf("PsifTcpipStorePortMgrContext malloc fail ");
300032,615029760,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStorePortMgrContext_2,P_INFO,swLogPrintf("PsifTcpipStorePortMgrContext port mgr context connSource %connType %u , lastUsedTime %u , mappingPort %u , originalPort %u ");
300032,615032831,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStorePortMgrContext_3,P_INFO,swLogPrintf("PsifTcpipStorePortMgrContext port mgr context not exsit ");
300032,615033856,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverIp6Info_1,P_INFO,swLogPrintf("PsifTcpipRecoverIp6Info ip6 prefix %x:%x , life_time %u，active_time %u , cid %u ");
300032,615036927,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverTcpContext_1,P_INFO,swLogPrintf("PsifTcpipRecoverTcpContext tcp context success ");
300032,615038975,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverTcpContext_2,P_INFO,swLogPrintf("PsifTcpipRecoverTcpContext tcp context fail ");
300032,615041023,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverDnsCache_1,P_INFO,swLogPrintf("PsifTcpipRecoverDnsCache dns cache ");
300032,615043071,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverUdpContext_1,P_INFO,swLogPrintf("PsifTcpipRecoverUdpContext udp context success ");
300032,615045119,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverUdpContext_2,P_INFO,swLogPrintf("PsifTcpipRecoverUdpContext udp context fail ");
300032,615046144,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverPortMgrContext_1,P_INFO,swLogPrintf("PsifTcpipRecoverPortMgrContext context connType %u , connSource %originalPort %u , mappingPort %u , lastUsedTime %u ");
300032,615049215,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_1,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover ip6info ");
300032,615051263,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_2,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover tcp context ");
300032,615053311,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_3,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover dns cache ");
300032,615055359,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_4,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover udp context ");
300032,615057407,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_5,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover port mgr context ");
300032,615059455,0,0,PLAT_AP,TCPIP_NETADPT,PsifIsTcpipAllowEnterHIB_1,P_INFO,swLogPrintf("TCPIP EXIST any pending data , not allow enter hib / sleep2 mode ");
300032,615059456,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipEnterHibCallback_1,P_SIG,swLogPrintf("PsifTcpipEnterHibCallback state %u ");
300032,615063551,0,0,PLAT_AP,TCPIP_NETADPT,PisfCheckTcpipHibContextNeedChang_1,P_INFO,swLogPrintf("LWIP hib context changed ");
300032,615065599,0,0,PLAT_AP,TCPIP_NETADPT,PsifRequestRecoverContextFromHib_1,P_SIG,swLogPrintf("PsifRequestRecoverContextFromHib ");
300032,615067647,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipHibModeInit_1,P_INFO,swLogPrintf("TCPIP HIB mode init ");
300032,615067648,0,0,PLAT_AP,TCPIP_NETADPT,EthifLowLevelOutput_if_link_type_check_1,P_WARNING,swLogPrintf("ETH if link type %u is invalid ");
300032,615071743,0,0,PLAT_AP,TCPIP_NETADPT,EthifLowLevelOutput_if_down,P_WARNING,swLogPrintf("ETH if is not link up ");
300032,615072000,0,0,PLAT_AP,TCPIP_NETADPT,EthifLowLevelOutput_1,P_WARNING,swLogPrintf("UL pkg Len: %d > MTU: %d , ignore this pkg ");
300032,615074048,0,0,PLAT_AP,TCPIP_NETADPT,RndisifLowLevelOutput_2,P_VALUE,swLogPrintf("ETH IF type %u , UE -> Host , len: %u ");
300032,615077887,0,0,PLAT_AP,TCPIP_NETADPT,RndisIfRecvUlPkg_1,P_ERROR,swLogPrintf("RndisIfRecvUlPkg fail ");
300032,615077888,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_1,P_VALUE,swLogPrintf("LanifSendNetifInfo invalid lan type %d ");
300032,615080192,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_info_1,P_VALUE,swLogPrintf("LanifSendNetifInfo lan type %d , cause %d ");
300032,615082240,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_2,P_VALUE,swLogPrintf("LanifSendNetifInfo lan %d invalid netType %d , maybe nat mode ");
300032,615084032,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_3,P_VALUE,swLogPrintf("LanifSendNetifInfo lan %d status deactive ");
300032,615086080,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_4,P_VALUE,swLogPrintf("LanifSendNetifInfo lan %d can not find channel info ");
300032,615088128,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_5,P_VALUE,swLogPrintf("LanifSendNetifInfo lan %d , invalid cause ");
300032,615092223,0,0,PLAT_AP,TCPIP_NETADPT,PppifLowLevelOutput_if_down,P_WARNING,swLogPrintf("PPP if is not link up ");
300032,615092480,0,0,PLAT_AP,TCPIP_NETADPT,PppifUlOutput_1,P_WARNING,swLogPrintf("UL pkg Len: %d > MTU: %d , ignore this pkg ");
300032,615096319,0,0,PLAT_AP,TCPIP_NETADPT,PppIfRecvUlPkg_1,P_ERROR,swLogPrintf("PppIfRecvUlPkg fail ");
300032,615096576,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_4,P_WARNING,swLogPrintf("PS IF %c%u is OOS state ");
300032,615098880,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_1,P_WARNING,swLogPrintf("CID: %d , UL pkg Len: %d > MTU: %d , ignore this pkg ");
300032,615102463,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_2,P_WARNING,swLogPrintf("PS UL highwater , busy ");
300032,615103232,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_3,P_INFO,swLogPrintf("PS UL PDU , esmRai: %u , bExceptData: %u , ticktype: %u ( 0 -NO / 1 -DISCARD / 2 -START ) , systick: %u ");
300032,615104512,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipDlHighWaterChkInput_1,P_ERROR,swLogPrintf("PsifTcpIpDlIpInput invalid ip version %u ");
300032,615108607,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipDlHighWaterChkInput_2,P_INFO,swLogPrintf("PS DL BUFFER high water ");
300032,615108608,0,0,PLAT_AP,TCPIP_NETADPT,PsifDlPkgFastPath_3,P_VALUE,swLogPrintf("PSIF DL fast path , cid: %d not bind a lan ");
300032,615110656,0,0,PLAT_AP,TCPIP_NETADPT,PsifDlPkgFastPath_4,P_WARNING,swLogPrintf("PSIF DL fast path , invalid IpVersion: %d ");
300032,615112960,0,0,PLAT_AP,TCPIP_NETADPT,PsifDlPkgFastPath_5,P_WARNING,swLogPrintf("PSIF DL fast path , can not find correct netif via cid: %u , pdu 0x%x ");
300032,615116799,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_arg_a,P_WARNING,swLogPrintf("PsifTcpIpRohcDecompOnePkg invalid parameter ");
300032,615118847,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_1,P_WARNING,swLogPrintf("ROHC decompress pkg failed ");
300032,615120895,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_2,P_WARNING,swLogDump("ROHC DL recv comped pkg: ");
300032,615121664,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_3,P_INFO,swLogPrintf("ROHC decomp SUCC , decomp header len: %u , pkg payload offset: %u , pkg payload len: %u , feedback len: %u ");
300032,615122944,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_4,P_INFO,swLogPrintf("Test loopback decompressed raw pkg , pkg len: %d ");
300032,615125248,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_1,P_VALUE,swLogPrintf("PSIF , CID: %d , DL ROHC feedback packet , len: %d ");
300032,615127296,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_2,P_WARNING,swLogPrintf("PSIF , CID: %d , pRohcComp: 0x%lx , DL ROHC feedback packet , decomp failed ");
300032,615129344,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_3,P_VALUE,swLogPrintf("PSIF , CID: %d , DL PKG need to ignore ROHC decomp , pkg len: %d ");
300032,615131392,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipDlInput_1,P_WARNING,swLogPrintf("Can not find correct netif , cid %u , pdu 0x%x ");
300032,615133184,0,0,PLAT_AP,TCPIP_NETADPT,PsSuspendIndCallback_1,P_INFO,swLogPrintf("PsGetNetInfoCallback is suspend: %u ");
300032,615135232,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_1,P_WARNING,swLogPrintf("CID: %d , configed ROHC , but not ROCH COMP channel ");
300032,615139327,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_2,P_INFO,swLogDump("ROHC , PKG before compress: ");
300032,615139328,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_3,P_WARNING,swLogPrintf("CID: %d , configed ROHC , no more memory allo from compressed header ");
300032,615141376,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_4,P_WARNING,swLogPrintf("CID: %d , ROHC compress PKG fail , UL pkg send fail ");
300032,615144448,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_5,P_WARNING,swLogPrintf("CID: %d , ROHC compress PKG , RAW PKG len: %d , compressed offset: %d , payload size: %d , compressed header size: %d ");
300032,615145472,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_6,P_WARNING,swLogPrintf("CID: %d , ROHC compress output is not right , discard this UL pkg ");
300032,615148288,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_7,P_INFO,swLogPrintf("PS UL new pdu esmRai %u , bexceptdata %u , ticktype %u , systick %u ");
300032,615150080,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_8,P_INFO,swLogPrintf("PS UL rohc process fail , cid %u , pdu list hdr 0x%x , total len %u ");
300032,615151872,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocUlPkgMem_1,P_WARNING,swLogPrintf("PS IF UL PKG high water: %u , can ' t alloc this new len: %d ");
300032,615153664,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocUlPkgMem_2,P_INFO,swLogPrintf("PsifAllocUlPkgMem alloc success , address 0x%x ");
300032,615155712,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeUlPkgMem_1,P_INFO,swLogPrintf("PsifFreeUlPkgMem free address 0x%x ");
300032,615158016,0,0,PLAT_AP,TCPIP_NETADPT,PsNetifSyncRohcChannel_1,P_INFO,swLogPrintf("PsNetifSyncRohcChannel sync netif 0x%x with cid %u rohc channel ");
300032,615159808,0,0,PLAT_AP,TCPIP_NETADPT,PsifSuspendInd_1,P_SIG,swLogPrintf("PSIF , suspend ( 1 ) / resume ( 0 ) : %u LWIP ");
300032,615161856,0,0,PLAT_AP,TCPIP_NETADPT,PsifSuspendInd_2,P_WARNING,swLogPrintf("PSIF , suspend ( 1 ) / resume ( 0 ) : %u , LWIP FAIL ");
300032,615164672,0,0,PLAT_AP,TCPIP_NETADPT,PsifNetifTftConfig_cid_w_1,P_ERROR,swLogPrintf("PSIF , netif TFT cfg , pfNum: %d , idx: %x , cid: %d ! = %d ");
300032,615165952,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocDlRamBlockMem_1,P_WARNING,swLogPrintf("ps dl ram alloc high water , %u ");
300032,615168000,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocDlRamBlockMem_2,P_WARNING,swLogPrintf("ps dl ram alloc FAIL , %u ");
300032,615170304,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocDlRamBlockMem_3,P_INFO,swLogPrintf("ps dl ram alloc 0x%x success , data len %u ");
300032,615174143,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeDlRamBlockMem_1,P_WARNING,swLogPrintf("ps dl ram free , invalid pbuf ");
300032,615174144,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeDlRamBlockMem_2,P_WARNING,swLogPrintf("ps dl ram free , invalid dl data header point , 0x%x ");
300032,615176448,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_down_1,P_VALUE,swLogPrintf("Netif linkdown , ipv4Cid: %d , ipv6Cid: %d ");
300032,615178496,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_ipv4_down_1,P_VALUE,swLogPrintf("Netif only ipv4 linkdown , ipv4Cid: %d , ipv6Cid: %d ");
300032,615180288,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_ipv4_down_2,P_WARNING,swLogPrintf("Netif only ipv4 linkdown , but no ipv6 exist , iptype: %d ");
300032,615182592,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_ipv6_down_1,P_VALUE,swLogPrintf("Netif only ipv6 linkdown , ipv4Cid: %d , ipv6Cid: %d ");
300032,615184384,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_ipv6_down_2,P_WARNING,swLogPrintf("Netif only ipv6 linkdown , but no ipv4 exist , iptype: %d ");
300032,615186944,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_notify_1,P_SIG,swLogPrintf("Netif change cause: %e<NmNetifStatusChangeCause> , net status: %e<NmNetifStatus> , ipType %e<NmNetIpType> ");
300032,615188480,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrAllocateMappingTable_1,P_INFO,swLogPrintf("PortMgrAllocateMappingTable allocate tcpip port mgr table 0x%x ");
300032,615191552,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrFreeMappingTable_1,P_INFO,swLogPrintf("PortMgrAllocateMappingTable free tcpip port mgr table 0x%x , conn source %u , original port %u , mapping port %u , cid %u ");
300032,615192576,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrMappingTableHighWaterProcess_1,P_INFO,swLogPrintf("PortMgrMappingTableHighWaterProcess context num %u ");
300032,615195648,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrGetMappingTableByOriginalPort_1,P_INFO,swLogPrintf("PortMgrGetMappingTableByOriginalPort get tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615197696,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrGetMappingTableByOriginalPort_2,P_INFO,swLogPrintf("PortMgrGetMappingTableByOriginalPort get tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615199744,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrGetMappingTableByMappingPort_1,P_INFO,swLogPrintf("PortMgrGetMappingTableByMappingPort get tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615201792,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrGetMappingTableByMappingPort_2,P_INFO,swLogPrintf("PortMgrGetMappingTableByMappingPort get tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615203840,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUlProcess_1,P_INFO,swLogPrintf("PortMgrUlProcess add new tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615206911,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUlProcess_2,P_INFO,swLogPrintf("PortMgrUlProcess allocate mapping table fail ");
300032,615208959,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUlProcess_3,P_INFO,swLogPrintf("PortMgrUlProcess get new mapping port fail ");
300032,615208960,0,0,PLAT_AP,TCPIP_NETADPT,dns_enqueue_cid_1,P_WARNING,swLogPrintf("can ' t find netif for CID: %d , try to use default netif ");
300032,615213055,0,0,PLAT_AP,TCPIP_NETADPT,nd6_input_ipv6_ra_server_1,P_WARNING,swLogPrintf("enable ipv6 RA server fail ");
300032,615215103,0,0,PLAT_AP,TCPIP_NETADPT,nd6_input_ipv6_ra_server_2,P_WARNING,swLogPrintf("enable ipv6 RA server fail ");
302080,618663935,0,0,PLAT_AP,TCPIP_APP,AppGetAddrInfoAsync_1,P_ERROR,swLogPrintf("get dns fail , invalid arg ");
302080,618665983,0,0,PLAT_AP,TCPIP_APP,AppGetAddrInfoAsync_3,P_ERROR,swLogPrintf("get dns fail ");
302080,618668031,0,0,PLAT_AP,TCPIP_APP,IperfSetupUdpServerSocket_1,P_WARNING,swLogPrintf("IperfSetupClientSocket input fd point is invalid ");
302080,618670079,0,0,PLAT_AP,TCPIP_APP,IperfSetupUdpServerSocket_2,P_WARNING,swLogPrintf("create udp server socket fail ");
302080,618672127,0,0,PLAT_AP,TCPIP_APP,IperfSetupUdpServerSocket_3,P_WARNING,swLogPrintf("udp server socket bind fail ");
302080,618674175,0,0,PLAT_AP,TCPIP_APP,IperfSetupUdpServerSocket_4,P_WARNING,swLogPrintf("create udp server socket fail ");
302080,618676223,0,0,PLAT_AP,TCPIP_APP,IperfSetupUdpServerSocket_5,P_WARNING,swLogPrintf("udp server socket bind fail ");
302080,618678271,0,0,PLAT_AP,TCPIP_APP,IperfSetupUdpServerSocket_6,P_WARNING,swLogPrintf("create udp server socket fail ");
302080,618680319,0,0,PLAT_AP,TCPIP_APP,IperfSetupUdpServerSocket_7,P_WARNING,swLogPrintf("udp server socket bind fail ");
302080,618682367,0,0,PLAT_AP,TCPIP_APP,IperfSetupUdpServerSocket_8,P_WARNING,swLogPrintf("Setsockopt failed - cancel receive timeout ");
302080,618684415,0,0,PLAT_AP,TCPIP_APP,IperfSetupTcpServerSocket_1,P_WARNING,swLogPrintf("IperfSetupTcpServerSocket input fd point is invalid ");
302080,618686463,0,0,PLAT_AP,TCPIP_APP,IperfSetupTcpServerSocket_3,P_WARNING,swLogPrintf("create tcp server socket fail ");
302080,618688511,0,0,PLAT_AP,TCPIP_APP,IperfSetupTcpServerSocket_4,P_WARNING,swLogPrintf("tcp server socket bind fail ");
302080,618690559,0,0,PLAT_AP,TCPIP_APP,IperfSetupTcpServerSocket_5,P_WARNING,swLogPrintf("create tcp server socket fail ");
302080,618692607,0,0,PLAT_AP,TCPIP_APP,IperfSetupTcpServerSocket_6,P_WARNING,swLogPrintf("tcp server socket bind fail ");
302080,618694655,0,0,PLAT_AP,TCPIP_APP,IperfSetupTcpServerSocket_7,P_WARNING,swLogPrintf("create tcp server socket fail ");
302080,618696703,0,0,PLAT_AP,TCPIP_APP,IperfSetupTcpServerSocket_8,P_WARNING,swLogPrintf("Setsockopt failed - cancel receive timeout ");
302080,618698751,0,0,PLAT_AP,TCPIP_APP,IperfSetupTcpServerSocket_9,P_WARNING,swLogPrintf("iperf tcp server socket listen fail ");
302080,618700799,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_1,P_WARNING,swLogPrintf("IperfSetupClientSocket input fd point is invalid ");
302080,618702847,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_2,P_WARNING,swLogPrintf("iperf tcp client create ipv4 tcp socket fail ");
302080,618704895,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_3,P_WARNING,swLogPrintf("iperf tcp client create ipv4 udp socket fail ");
302080,618706943,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_4,P_WARNING,swLogPrintf("IperfSetupClientSocket paramter invalid ");
302080,618708991,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_5,P_WARNING,swLogPrintf("iperf tcp client socket connect fail ");
302080,618711039,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_6,P_WARNING,swLogPrintf("iperf tcp client create ipv6 tcp socket fail ");
302080,618713087,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_7,P_WARNING,swLogPrintf("iperf tcp client create ipv6 udp socket fail ");
302080,618715135,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_8,P_WARNING,swLogPrintf("IperfSetupClientSocket paramter invalid ");
302080,618717183,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_9,P_WARNING,swLogPrintf("iperf tcp client socket connect fail ");
302080,618719231,0,0,PLAT_AP,TCPIP_APP,IperfSetupClientSocket_10,P_WARNING,swLogPrintf("IperfSetupClientSocket paramter invalid ");
302080,618721279,0,0,PLAT_AP,TCPIP_APP,IperfNatServerSendUdpPkg_1,P_WARNING,swLogPrintf("IperfNatServerSendUdpPkg dst addr invalid ");
302080,618721280,0,0,PLAT_AP,TCPIP_APP,IperfNatServerSendUdpPkg_2,P_INFO,swLogPrintf("Iperf , send one UDP pkg to dest port: %d ");
302080,618725375,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_1,P_SIG,swLogPrintf("iperf udp nat server task start runing ");
302080,618727423,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_2,P_WARNING,swLogPrintf("malloc buffer fail ");
302080,618729471,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_3,P_WARNING,swLogPrintf("setup udp nat server socket fail ");
302080,618731519,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_11,P_WARNING,swLogPrintf("send one packet to client for NAT case fail ");
302080,618733567,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_4,P_WARNING,swLogPrintf("Not CFUN1 , iperf will terminal ");
302080,618733824,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_report_1,P_SIG,swLogPrintf("iperf UDP nat server report , send %u bytes payload packet , bandwidth %u bps ");
302080,618735872,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_report_2,P_SIG,swLogPrintf("iperf UDP nat server report , send %u bytes payload packet , bandwidth %u bps ");
302080,618739711,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_6,P_WARNING,swLogPrintf("Tradeoff mode , client-side not support ");
302080,618741759,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_7,P_WARNING,swLogPrintf("send one packet to client for NAT case fail ");
302080,618743807,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_8,P_WARNING,swLogPrintf("iperf UDP nat server socket rcv error ");
302080,618745855,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_12,P_INFO,swLogPrintf("iperf UDP nat server , maybe detach , try again ");
302080,618746112,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_9,P_SIG,swLogPrintf("iperf UDP nat server report , TOTAL receive %u bytes payload packet , bandwidth %u bps ");
302080,618749951,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunNatServer_10,P_SIG,swLogPrintf("iperf UDP nat server terminal ");
302080,618751999,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_1,P_SIG,swLogPrintf("iperf udp server task start runing ");
302080,618754047,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_2,P_WARNING,swLogPrintf("malloc buffer fail ");
302080,618756095,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_3,P_WARNING,swLogPrintf("setup udp server socket fail ");
302080,618758143,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_4,P_WARNING,swLogPrintf("Not CFUN1 , iperf will terminal ");
302080,618758400,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_report_1,P_SIG,swLogPrintf("iperf udp server report , send %u bytes payload packet , bandwidth %u bps ");
302080,618760448,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_report_2,P_SIG,swLogPrintf("iperf udp server report , send %u bytes payload packet , bandwidth %u bps ");
302080,618764287,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_6,P_WARNING,swLogPrintf("Tradeoff mode , client-side not support ");
302080,618766335,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_7,P_WARNING,swLogPrintf("iperf UDP server socket rcv error ");
302080,618766592,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_8,P_SIG,swLogPrintf("iperf UDP server report , TOTAL receive %u bytes payload packet , bandwidth %u bps ");
302080,618770431,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunServer_9,P_SIG,swLogPrintf("iperf UDP server terminal ");
302080,618772479,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_1,P_SIG,swLogPrintf("iperf tcp server task start runing ");
302080,618774527,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_2,P_WARNING,swLogPrintf("IPERF tcp server malloc buffer fail! ");
302080,618776575,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_3,P_WARNING,swLogPrintf("IPERF tcp server setup socket fail! ");
302080,618778623,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_4,P_WARNING,swLogPrintf("Not Cfun1 , iperf will terminal ");
302080,618780671,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_5,P_WARNING,swLogPrintf("iperf tcp rcv fail ");
302080,618780928,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_report_1,P_SIG,swLogPrintf("iperf tcp server report , send %u bytes payload packet , bandwidth %u bps ");
302080,618782976,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_report_2,P_SIG,swLogPrintf("iperf tcp server report , send %u bytes payload packet , bandwidth %u bps ");
302080,618785024,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_7,P_SIG,swLogPrintf("iperf tcp server report , TOTAL receive %u bytes payload packet , bandwidth %u bps ");
302080,618788863,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunServer_8,P_SIG,swLogPrintf("iperf tcp server terminal ");
302080,618790911,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_1,P_SIG,swLogPrintf("iperf tcp client task start runing ");
302080,618792959,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_2,P_WARNING,swLogPrintf("iperf tcp client malloc buffer fail ");
302080,618795007,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_3,P_WARNING,swLogPrintf("iperf tcp client socket setup fail ");
302080,618797055,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_4,P_WARNING,swLogPrintf("iperf tcp client dest addr is not present ");
302080,618799103,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_5,P_WARNING,swLogPrintf("Not CFUN1 state , iperf will terminal ");
302080,618799104,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_6,P_ERROR,swLogPrintf("iperf tcp client send packet fail , error code %d ");
302080,618801152,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_7,P_ERROR,swLogPrintf("iperf tcp client send packet fail , the error %d is fata error , exist ");
302080,618803456,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_report_1,P_SIG,swLogPrintf("iperf tcp client report , send %u bytes payload packet , bandwidth %u bps ");
302080,618805504,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_report_2,P_SIG,swLogPrintf("iperf tcp client report , send %u bytes payload packet , bandwidth %u bps ");
302080,618809343,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_9,P_SIG,swLogPrintf("iperf tcp client send total packet finish ");
302080,618809600,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_10,P_SIG,swLogPrintf("iperf tcp client report , TOTAL send %u bytes payload packet , bandwidth %u bps ");
302080,618813439,0,0,PLAT_AP,TCPIP_APP,IperfTcpRunClient_11,P_SIG,swLogPrintf("iperf tcp client terminal ");
302080,618815487,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_1,P_SIG,swLogPrintf("iperf udp client task start runing ");
302080,618817535,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_2,P_WARNING,swLogPrintf("iperf udp client malloc buffer fail ");
302080,618819583,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_3,P_WARNING,swLogPrintf("iperf udp client socket setup fail ");
302080,618821631,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_4,P_WARNING,swLogPrintf("iperf udp client dest addr is not present ");
302080,618823679,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_5,P_WARNING,swLogPrintf("Not cfun1 state , iperf will terminal ");
302080,618823680,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_6,P_ERROR,swLogPrintf("iperf udp client send packet fail , error code: %d ");
302080,618825728,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_7,P_ERROR,swLogPrintf("iperf udp client send packet fail , the error %d is fata error , exist ");
302080,618828032,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_report_1,P_SIG,swLogPrintf("iperf udp client report , send %u bytes payload packet , bandwidth %u bps ");
302080,618830080,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_report_2,P_SIG,swLogPrintf("iperf udp client report , send %u bytes payload packet , bandwidth %u bps ");
302080,618833919,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_9,P_SIG,swLogPrintf("iperf udp client send total packet finish ");
302080,618834176,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_10,P_SIG,swLogPrintf("iperf udp client report , TOTAL send %u bytes payload packet , bandwidth %u bps ");
302080,618838015,0,0,PLAT_AP,TCPIP_APP,IperfUdpRunClient_11,P_SIG,swLogPrintf("iperf udp client terminal ");
302080,618840063,0,0,PLAT_AP,TCPIP_APP,IperfInit_1,P_WARNING,swLogPrintf("iperf client is going on , please run it wait a moment ");
302080,618842111,0,0,PLAT_AP,TCPIP_APP,IperfInit_2,P_WARNING,swLogPrintf("iperf server is going on , please run it wait a moment ");
302080,618844159,0,0,PLAT_AP,TCPIP_APP,IperfInit_3,P_WARNING,swLogPrintf("iperf mode is invalid ");
302080,618846207,0,0,PLAT_AP,TCPIP_APP,IperfInit_4,P_WARNING,swLogPrintf("iperf protocol is invalid ");
302080,618848255,0,0,PLAT_AP,TCPIP_APP,IperfInit_5,P_WARNING,swLogPrintf("can not create iperf task ");
302080,618850303,0,0,PLAT_AP,TCPIP_APP,IperfInit_6,P_WARNING,swLogPrintf("iperf protocol is invalid ");
302080,618852351,0,0,PLAT_AP,TCPIP_APP,IperfInit_7,P_WARNING,swLogPrintf("can not create iperf task ");
302080,618852352,0,0,PLAT_AP,TCPIP_APP,ping_send_1,P_ERROR,swLogPrintf("ping_size is too big: %d > 2048 ");
302080,618856447,0,0,PLAT_AP,TCPIP_APP,ping_recv_1,P_ERROR,swLogPrintf("malloc reve buff fail ");
302080,618856448,0,0,PLAT_AP,TCPIP_APP,ping_recv_2,P_SIG,swLogPrintf("Ping recv len: %u ");
302080,618858496,0,0,PLAT_AP,TCPIP_APP,ping_recv_3,P_SIG,swLogPrintf("Ping recv ms %u ");
302080,618860800,0,0,PLAT_AP,TCPIP_APP,ping_recv_4,P_SIG,swLogPrintf("Ping OK , %u ms , ttl %u ");
302080,618862592,0,0,PLAT_AP,TCPIP_APP,ping_recv_5,P_WARNING,swLogPrintf("ping: drop , sequence number %u ");
302080,618866687,0,0,PLAT_AP,TCPIP_APP,ping_recv_9,P_WARNING,swLogPrintf("ping: drop , packet is not ipv4 ping reply ");
302080,618866688,0,0,PLAT_AP,TCPIP_APP,ping_recv_6,P_SIG,swLogPrintf("Ping OK , %u ms , ttl &u ");
302080,618868736,0,0,PLAT_AP,TCPIP_APP,ping_recv_7,P_WARNING,swLogPrintf("ping: drop , sequence number %u ");
302080,618872831,0,0,PLAT_AP,TCPIP_APP,ping_recv_10,P_WARNING,swLogPrintf("ping: drop , packet is not ipv6 ping reply ");
302080,618874879,0,0,PLAT_AP,TCPIP_APP,ping_recv_11,P_WARNING,swLogPrintf("ping: drop , packet is not valid ");
302080,618876927,0,0,PLAT_AP,TCPIP_APP,ping_recv_12,P_WARNING,swLogPrintf("ping:socket set timeout fail ");
302080,618878975,0,0,PLAT_AP,TCPIP_APP,ping_recv_13,P_WARNING,swLogPrintf("ping:has timeout ");
302080,618879232,0,0,PLAT_AP,TCPIP_APP,ping_recv_8,P_WARNING,swLogPrintf("Ping recv failed: %u , in %u ms , timeout ");
302080,618883071,0,0,PLAT_AP,TCPIP_APP,ping_thread_1,P_ERROR,swLogPrintf("Ping thread start error , as ping dest is NULL ");
302080,618885119,0,0,PLAT_AP,TCPIP_APP,ping_thread_2,P_ERROR,swLogPrintf("Ping thread start error , can not get ip from url ");
302080,618887167,0,0,PLAT_AP,TCPIP_APP,ping_thread_11,P_SIG,swLogPrintf("Ping thread resolve url success , it is ipv4 type ");
302080,618889215,0,0,PLAT_AP,TCPIP_APP,ping_thread_12,P_SIG,swLogPrintf("Ping thread resolve url success , it is ipv6 type ");
302080,618891263,0,0,PLAT_AP,TCPIP_APP,ping_thread_10,P_ERROR,swLogPrintf("Ping thread start error , get ip from url is invalid ");
302080,618893311,0,0,PLAT_AP,TCPIP_APP,ping_thread_4,P_ERROR,swLogPrintf("Ping socket create error ");
302080,618893312,0,0,PLAT_AP,TCPIP_APP,ping_thread_bind_cid_1,P_ERROR,swLogPrintf("create the socket with cid %d fali , maybe th cid is invalid ");
302080,618897407,0,0,PLAT_AP,TCPIP_APP,ping_thread_5,P_ERROR,swLogPrintf("setting receive timeout failed ");
302080,618899455,0,0,PLAT_AP,TCPIP_APP,ping_thread_7,P_SIG,swLogPrintf("ping: send ");
302080,618899456,0,0,PLAT_AP,TCPIP_APP,ping_thread_sock_fatal_error_1,P_WARNING,swLogPrintf("ping: socket fatal error %u ");
302080,618901504,0,0,PLAT_AP,TCPIP_APP,ping_thread_sock_fatal_error_2,P_WARNING,swLogPrintf("ping: socket fatal error %u ");
302080,618905599,0,0,PLAT_AP,TCPIP_APP,ping_thread_8,P_WARNING,swLogPrintf("ping: send -error ");
302080,618907647,0,0,PLAT_AP,TCPIP_APP,ping_thread_9,P_SIG,swLogPrintf("ping terminal ");
302080,618909695,0,0,PLAT_AP,TCPIP_APP,ping_init_1,P_ERROR,swLogPrintf("ERROR , ping is ongoing , please try it later ");
302080,618911743,0,0,PLAT_AP,TCPIP_APP,ping_init_2,P_ERROR,swLogPrintf("ERROR , ping dest addr is NULL ");
302080,618912000,0,0,PLAT_AP,TCPIP_APP,ping_init_3,P_WARNING,swLogPrintf("Ping length is too long: %d , cut to : %d ");
302080,618915839,0,0,PLAT_AP,TCPIP_APP,ping_init_4,P_WARNING,swLogPrintf("Ping task create failed ");
302080,618917887,0,0,PLAT_AP,TCPIP_APP,ping_url_init_1,P_ERROR,swLogPrintf("ERROR , ping url address is invalid ");
302080,618919935,0,0,PLAT_AP,TCPIP_APP,ping_url_init_2,P_ERROR,swLogPrintf("ERROR , ping is ongoing , please try it later ");
302080,618920192,0,0,PLAT_AP,TCPIP_APP,ping_url_addr_3,P_WARNING,swLogPrintf("Ping length is too long: %d , cut to : %d ");
302080,618922496,0,0,PLAT_AP,TCPIP_APP,SntpCallResultCallback_openCPU,P_INFO,swLogPrintf("SntpCallResultCallback result %d %d %d ");
302080,618924032,0,0,PLAT_AP,TCPIP_APP,SntpCallResultCallback_1,P_INFO,swLogPrintf("SntpCallResultCallback result %u ");
302080,618928127,0,0,PLAT_AP,TCPIP_APP,SntpRecvResponse_1,P_WARNING,swLogPrintf("SntpRecvResponse: invalid parameter ");
302080,618930175,0,0,PLAT_AP,TCPIP_APP,SntpRecvResponse_2,P_WARNING,swLogPrintf("SntpRecvResponse: Received Kiss-of-Death ");
302080,618932223,0,0,PLAT_AP,TCPIP_APP,SntpRecvResponse_3,P_WARNING,swLogPrintf("SntpRecvResponse: Invalid originate timestamp in response ");
302080,618932480,0,0,PLAT_AP,TCPIP_APP,SntpRecvResponse_4,P_INFO,swLogPrintf("SntpRecvResponse: correct response seconds %u , useconds %u ");
302080,618934272,0,0,PLAT_AP,TCPIP_APP,sntp_recv_3,P_WARNING,swLogPrintf("sntp_recv: Invalid mode in response: %u ");
302080,618938367,0,0,PLAT_AP,TCPIP_APP,SntpSendRequest_1,P_ERROR,swLogPrintf("SntpSendRequest parameter invalid ");
302080,618940415,0,0,PLAT_AP,TCPIP_APP,SntpSendRequest_2,P_ERROR,swLogPrintf("SntpSendRequest parameter invalid ");
302080,618942463,0,0,PLAT_AP,TCPIP_APP,SntpSendRequest_4,P_INFO,swLogPrintf("SntpSendRequest send sntp request success ");
302080,618944511,0,0,PLAT_AP,TCPIP_APP,SntpSendRequest_5,P_ERROR,swLogPrintf("SntpSendRequest send sntp request fail ");
302080,618946559,0,0,PLAT_AP,TCPIP_APP,SntpTask_1,P_ERROR,swLogPrintf("SntpTask start error , as sntp parameter invalid ");
302080,618948607,0,0,PLAT_AP,TCPIP_APP,SntpTask_2,P_ERROR,swLogPrintf("SntpTask start error , can not get ip from url ");
302080,618950655,0,0,PLAT_AP,TCPIP_APP,SntpTask_3,P_SIG,swLogPrintf("SntpTaskresolve url success , it is ipv4 type ");
302080,618952703,0,0,PLAT_AP,TCPIP_APP,SntpTask_4,P_SIG,swLogPrintf("SntpTask resolve url success , it is ipv6 type ");
302080,618954751,0,0,PLAT_AP,TCPIP_APP,SntpTask_5,P_ERROR,swLogPrintf("SntpTask start error , get ip from url is invalid ");
302080,618956799,0,0,PLAT_AP,TCPIP_APP,SntpTask_6,P_ERROR,swLogPrintf("SntpTask socket create error ");
302080,618958847,0,0,PLAT_AP,TCPIP_APP,SntpTask_bind_cid_1,P_ERROR,swLogPrintf("SntpTask socket create with cid fail ");
302080,618960895,0,0,PLAT_AP,TCPIP_APP,SntpTask_7,P_ERROR,swLogPrintf("SntpTask setting receive timeout failed ");
302080,618962943,0,0,PLAT_AP,TCPIP_APP,SntpTask_8,P_SIG,swLogPrintf("SntpTask: send request success ");
302080,618964991,0,0,PLAT_AP,TCPIP_APP,SntpTask_9,P_INFO,swLogPrintf("SntpTask: rcv response success ");
302080,618967039,0,0,PLAT_AP,TCPIP_APP,SntpTask_10,P_WARNING,swLogPrintf("SntpTask: rcv response , but process fail ");
302080,618969087,0,0,PLAT_AP,TCPIP_APP,SntpTask_11,P_WARNING,swLogPrintf("SntpTask: rcv response fail ");
302080,618971135,0,0,PLAT_AP,TCPIP_APP,SntpTask_12,P_WARNING,swLogPrintf("SntpTask: send fail , need rty again ");
302080,618973183,0,0,PLAT_AP,TCPIP_APP,SntpTask_13,P_SIG,swLogPrintf("sntp task terminal ");
302080,618975231,0,0,PLAT_AP,TCPIP_APP,SntpInit_1,P_ERROR,swLogPrintf("ERROR , SntpInit PARAMETER invalid ");
302080,618977279,0,0,PLAT_AP,TCPIP_APP,SntpInit_2,P_ERROR,swLogPrintf("ERROR , SntpInit has run ");
303104,620761087,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsScanOptions_1,P_ERROR,swLogPrintf("bad packet , malformed option field ");
303104,620761088,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsAddBinaryOption_1,P_ERROR,swLogPrintf("option 0x%x did not fit into the packet ");
303104,620763136,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsAddSimpleOption_1,P_ERROR,swLogPrintf("can ' t add option 0x%x ");
303104,620767231,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendOffer_1,P_ERROR,swLogPrintf("create pbuf fail ");
303104,620769279,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendOffer_2,P_INFO,swLogPrintf("sending OFFER ");
303104,620771327,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendNak_1,P_ERROR,swLogPrintf("create pbuf fail ");
303104,620773375,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendNak_2,P_INFO,swLogPrintf("sending NAK ");
303104,620775423,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendAck_1,P_ERROR,swLogPrintf("create pbuf fail ");
303104,620777471,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendAck_2,P_INFO,swLogPrintf("sending ACK ");
303104,620779519,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendInform_1,P_ERROR,swLogPrintf("create pbuf fail ");
303104,620781567,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendInform_2,P_INFO,swLogPrintf("sending NAK ");
303104,620783615,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_1,P_WARNING,swLogPrintf("DhcpdRecv netif or pbuf point is invalid ");
303104,620785663,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_2,P_ERROR,swLogPrintf("DhcpdRecv netif server data is invalid ");
303104,620787711,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_3,P_WARNING,swLogPrintf("DhcpdRecv pbuf copy fail ");
303104,620789759,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_4,P_WARNING,swLogPrintf("DhcpdRecv pbuf allocate fail ");
303104,620791807,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_5,P_ERROR,swLogPrintf("DhcpdRecv MAC length ! = 6 ignoring packet ");
303104,620793855,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_6,P_WARNING,swLogPrintf("DhcpdRecv not a REQUEST ignoring packet ");
303104,620795903,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_7,P_WARNING,swLogPrintf("DhcpdRecv no or bad message type option ignoring packet ");
303104,620797951,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_8,P_WARNING,swLogPrintf("DhcpdRecv server ID doesn ' t match ignoring packet ");
303104,620799999,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_9,P_INFO,swLogPrintf("DhcpdRecv DISCOVER ");
303104,620802047,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_10,P_INFO,swLogPrintf("DhcpdRecv REQUEST ");
303104,620804095,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_11,P_INFO,swLogPrintf("no requested IP and no ciaddr ignore ");
303104,620806143,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_12,P_INFO,swLogPrintf("DhcpdRecv DECLINE ");
303104,620808191,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_13,P_INFO,swLogPrintf("DhcpdRecv DECLINE the lease ip ");
303104,620810239,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_14,P_INFO,swLogPrintf("DhcpdRecv RELEASE ");
303104,620812287,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_15,P_INFO,swLogPrintf("DhcpdRecv RELEASE the lease ip ");
303104,620814335,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_16,P_INFO,swLogPrintf("DhcpdRecv INFORM ");
303104,620814336,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_17,P_INFO,swLogPrintf("DhcpdRecv %u ");
303104,620818431,0,0,PLAT_AP,TCPIP_DHCPD,dhcpd_setup_1,P_ERROR,swLogPrintf("allocate dhcp server pcb fail ");
303104,620820479,0,0,PLAT_AP,TCPIP_DHCPD,dhcpd_setup_2,P_WARNING,swLogPrintf("dhcp server pcb has already setup ");
303104,620822527,0,0,PLAT_AP,TCPIP_DHCPD,DhcpStart_1,P_ERROR,swLogPrintf("allocate dhcp server pcb fail ");
303104,620824575,0,0,PLAT_AP,TCPIP_DHCPD,DhcpStart_2,P_INFO,swLogPrintf("dhcpd_start ( ) : mallocing new DHCP server ");
303104,620826623,0,0,PLAT_AP,TCPIP_DHCPD,DhcpStart_3,P_ERROR,swLogPrintf("dhcpd server allocate fail ");
303104,620828671,0,0,PLAT_AP,TCPIP_DHCPD,DhcpdStop_1,P_ERROR,swLogPrintf("DhcpdStop netif point is invalid ");
303104,620828928,0,0,PLAT_AP,TCPIP_DHCPD,DhcpdStop_2,P_INFO,swLogPrintf("dhcp server stop success netif %c%u ");
304128,622858239,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_1,P_INFO,swLogPrintf("TcpipConnectionCreates invalid param ");
304128,622860287,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_2,P_INFO,swLogPrintf("TcpipConnectionCreates invalid param ");
304128,622862335,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_3,P_INFO,swLogPrintf("TcpipConnectionCreates invalid param ");
304128,622864383,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_4,P_INFO,swLogPrintf("TcpipConnectionCreates local address invalid ");
304128,622866431,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_5,P_INFO,swLogPrintf("TcpipConnectionCreates destAddr invalid ");
304128,622868479,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_6,P_INFO,swLogPrintf("TcpipConnectionCreates protocol invalid ");
304128,622870527,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_7,P_INFO,swLogPrintf("TcpipConnectionCreates send request fail ");
304128,622872575,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_8,P_INFO,swLogPrintf("TcpipConnectionCreates send request timeout ");
304128,622872832,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_9,P_INFO,swLogPrintf("TcpipConnectionCreates recv response success , result %d , cause %d ");
304128,622876671,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionCreate_10,P_INFO,swLogPrintf("TcpipConnectionCreates recv invalid response ");
304128,622878719,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionSend_1,P_INFO,swLogPrintf("TcpipConnectionSend invalid param ");
304128,622880767,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionSend_2,P_INFO,swLogPrintf("TcpipConnectionSend invalid param ");
304128,622882815,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionSend_3,P_INFO,swLogPrintf("TcpipConnectionSend invalid param ");
304128,622884863,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionSend_4,P_INFO,swLogPrintf("TcpipConnectionSend send request fail ");
304128,622886911,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionSend_5,P_INFO,swLogPrintf("TcpipConnectionSend send request timeout ");
304128,622887168,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionSend_6,P_INFO,swLogPrintf("TcpipConnectionSend recv response success , result %d , cause %d ");
304128,622891007,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionSend_7,P_INFO,swLogPrintf("TcpipConnectionSend recv invalid response ");
304128,622893055,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionClose_1,P_INFO,swLogPrintf("TcpipConnectionClose invalid param ");
304128,622895103,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionClose_2,P_INFO,swLogPrintf("TcpipConnectionClose invalid param ");
304128,622897151,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionClose_3,P_INFO,swLogPrintf("TcpipConnectionClose invalid param ");
304128,622899199,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionClose_4,P_INFO,swLogPrintf("TcpipConnectionClose send request fail ");
304128,622901247,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionClose_5,P_INFO,swLogPrintf("TcpipConnectionClose send request timeout ");
304128,622901504,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionClose_6,P_INFO,swLogPrintf("TcpipConnectionClose recv response success , result %d , cause %d ");
304128,622905343,0,0,PLAT_AP,TCPIP_SDK_API,TcpipConnectionClose_7,P_INFO,swLogPrintf("TcpipConnectionClose recv invalid response ");
304128,622907391,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalSendLen_1,P_INFO,swLogPrintf("TcpipGetTotalSendLen invalid param ");
304128,622909439,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalSendLen_2,P_INFO,swLogPrintf("TcpipGetTotalSendLen invalid param ");
304128,622911487,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalSendLen_3,P_INFO,swLogPrintf("TcpipGetTotalSendLen invalid param ");
304128,622913535,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalSendLen_4,P_INFO,swLogPrintf("TcpipGetTotalSendLen send request fail ");
304128,622915583,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalSendLen_5,P_INFO,swLogPrintf("TcpipGetTotalSendLen send request timeout ");
304128,622915840,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalSendLen_6,P_INFO,swLogPrintf("TcpipGetTotalSendLen recv response success , result %d , result %u ");
304128,622919679,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalSendLen_7,P_INFO,swLogPrintf("TcpipGetTotalSendLen recv invalid response ");
304128,622921727,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalAckedLen_1,P_INFO,swLogPrintf("TcpipGetTotalAckedLen invalid param ");
304128,622923775,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalAckedLen_2,P_INFO,swLogPrintf("TcpipGetTotalAckedLen invalid param ");
304128,622925823,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalAckedLen_3,P_INFO,swLogPrintf("TcpipGetTotalAckedLen invalid param ");
304128,622927871,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalAckedLen_4,P_INFO,swLogPrintf("TcpipGetTotalAckedLen send request fail ");
304128,622929919,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalAckedLen_5,P_INFO,swLogPrintf("TcpipGetTotalAckedLen send request timeout ");
304128,622930176,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalAckedLen_6,P_INFO,swLogPrintf("TcpipGetTotalAckedLen recv response success , result %d , result %u ");
304128,622934015,0,0,PLAT_AP,TCPIP_SDK_API,TcpipGetTotalAckedLen_7,P_INFO,swLogPrintf("TcpipGetTotalAckedLen recv invalid response ");
304128,622936063,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendResponse_1,P_ERROR,swLogPrintf("TcpipApiSendResponse invalid parameter ");
304128,622938111,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendResponse_2,P_ERROR,swLogPrintf("TcpipApiCreateConnection atskt is full ");
304128,622940159,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendResponse_3,P_INFO,swLogPrintf("send response to socket handler success ");
304128,622942207,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendResponse_4,P_ERROR,swLogPrintf("send response to socket handler fail ");
304128,622944255,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_1,P_ERROR,swLogPrintf("TcpipApiCreateConnection invalid param ");
304128,622946303,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_2,P_ERROR,swLogPrintf("TcpipApiCreateConnection invalid param ");
304128,622948351,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_3,P_ERROR,swLogPrintf("TcpipApiCreateConnection atskt is full ");
304128,622950399,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_4,P_ERROR,swLogPrintf("TcpipApiCreateConnection invalid address info ");
304128,622950400,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_5,P_ERROR,swLogPrintf("TcpipApiCreateConnection invalid type %d ");
304128,622954495,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_6,P_ERROR,swLogPrintf("TcpipApiCreateConnection create socket fail ");
304128,622956543,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_ul_total_status_1,P_WARNING,swLogPrintf("TcpipApiCreateConnection enable ul total status option fail ");
304128,622958591,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_7,P_ERROR,swLogPrintf("TcpipApiCreateConnection create socket fail ");
304128,622960639,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_8,P_INFO,swLogPrintf("TcpipApiCreateConnection connect success ");
304128,622961152,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_9,P_ERROR,swLogPrintf("TcpipApiCreateConnection request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,622962944,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_10,P_INFO,swLogPrintf("TcpipApiCreateConnection connect is oning , fd %d , current tick %u ");
304128,622966783,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_11,P_ERROR,swLogPrintf("TcpipApiCreateConnection connect fail ");
304128,622967296,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCreateConnection_12,P_ERROR,swLogPrintf("TcpipApiCreateConnection request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,622970879,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_2,P_ERROR,swLogPrintf("TcpipApiSendData request point is null ");
304128,622972927,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_1,P_ERROR,swLogPrintf("TcpipApiSendData invalid param ");
304128,622974975,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_3,P_INFO,swLogPrintf("TcpipApiSendData can not get the socketatcmd ");
304128,622974976,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_4,P_ERROR,swLogPrintf("TcpipApiSendData the seq socket %d is not skapi socket ");
304128,622977024,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_5,P_ERROR,swLogPrintf("TcpipApiSendData the seq socket %d is not connected ");
304128,622979328,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_6,P_WARNING,swLogPrintf("TcpipApiSendData the socket %d sequence %u is reusing ");
304128,622981376,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_7,P_INFO,swLogPrintf("TcpipApiSendData send packet success %u , send total len %u ");
304128,622983680,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_8,P_ERROR,swLogPrintf("TcpipApiSendData request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,622987263,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_9,P_ERROR,swLogPrintf("TcpipApiSendData send fail ");
304128,622989311,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_10,P_ERROR,swLogPrintf("TcpipApiSendData invalid sendLen param ");
304128,622989824,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSendData_12,P_ERROR,swLogPrintf("TcpipApiSendData request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,622993407,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCloseConnection_1,P_ERROR,swLogPrintf("TcpipApiCloseConnection invalid param ");
304128,622995455,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCloseConnection_2,P_ERROR,swLogPrintf("TcpipApiCloseConnection request point is null ");
304128,622997503,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCloseConnection_3,P_INFO,swLogPrintf("TcpipApiCloseConnection can not get the socketatcmd ");
304128,622997504,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCloseConnection_4,P_ERROR,swLogPrintf("TcpipApiCloseConnection socket %d is not ecsoc ");
304128,623001599,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCloseConnection_5,P_INFO,swLogPrintf("TcpipApiCloseConnection close socket success ");
304128,623002112,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCloseConnection_6,P_ERROR,swLogPrintf("TcpipApiCloseConnection request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,623004160,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiCloseConnection_7,P_ERROR,swLogPrintf("AtecSocketHandleConnectReq request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,623007743,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiSendTotalData_1,P_ERROR,swLogPrintf("tcpipApiSendTotalData request point is null ");
304128,623009791,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiSendTotalData_2,P_ERROR,swLogPrintf("tcpipApiSendTotalData invalid param ");
304128,623011839,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiSendTotalData_3,P_INFO,swLogPrintf("tcpipApiSendTotalData can not get the socketatcmd ");
304128,623012352,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiSendTotalData_5,P_ERROR,swLogPrintf("tcpipApiSendTotalData request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,623015935,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiAckedTotalData_1,P_ERROR,swLogPrintf("tcpipApiAckedTotalData request point is null ");
304128,623017983,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiAckedTotalData_2,P_ERROR,swLogPrintf("tcpipApiAckedTotalData invalid param ");
304128,623020031,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiAckedTotalData_3,P_INFO,swLogPrintf("tcpipApiAckedTotalData can not get the socketatcmd ");
304128,623020544,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiAckedTotalData_5,P_ERROR,swLogPrintf("tcpipApiAckedTotalData request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,623024127,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiProessReq_1,P_ERROR,swLogPrintf("TcpipApiProessReq invalid param ");
304128,623026175,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiProessReq_2,P_ERROR,swLogPrintf("TcpipApiProessReq invalid param ");
304128,623026688,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiProessReq_3,P_INFO,swLogPrintf("read tcpipApiReqFd success , req_id %d , reqbody 0x%x , sourcePort %d ");
304128,623028224,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiProessReq_4,P_WARNING,swLogPrintf("process tcpipApi reqeust fail , invalid reqId %d ");
304128,623030272,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiProessReq_5,P_WARNING,swLogPrintf("read tcpipApi fail , source %u check fail ");
304128,623034367,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiStatusEventProcess_1,P_ERROR,swLogPrintf("TcpipApiStatusEventProcess invalid param ");
304128,623034880,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiStatusEventProcess_3,P_ERROR,swLogPrintf("TcpipApiStatusEventProcess request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,623036928,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiStatusEventProcess_4,P_ERROR,swLogPrintf("TcpipApiStatusEventProcess request has timeout , can not send response , reqticks %u , timeout %u , now %u ");
304128,623040511,0,0,PLAT_AP,TCPIP_SDK_API,TcpipDlEventProcess_1,P_ERROR,swLogPrintf("TcpipDlEventProcess callback is invalid ");
304128,623042559,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiSockErrorEventProcess_1,P_ERROR,swLogPrintf("TcpipApiSockErrorEventProcess callback is invalid ");
304128,623044607,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiUlStatusEventProcess_1,P_ERROR,swLogPrintf("TcpipApiUlStatusEventProcess callback is invalid ");
304128,623044864,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiUlStatusEventProcess_2,P_WARNING,swLogPrintf("TcpipApiUlStatusEventProcess the socket %d , sequence %d status invalid ");
304128,623046912,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiUlStatusEventProcess_3,P_WARNING,swLogPrintf("TcpipApiUlStatusEventProcess the socket %d , sequence %d status invalid ");
304128,623048960,0,0,PLAT_AP,TCPIP_SDK_API,tcpipApiUlTotalStatusEventProcess_1,P_INFO,swLogPrintf("tcpipApiUlTotalStatusEventProcess the socket %d , ul total ack len %u ");
304128,623051008,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiEventCallback_1,P_INFO,swLogPrintf("TcpipApiEventCallback socketid %d , event %d ");
304128,623054847,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiStoreConnHibContext_1,P_WARNING,swLogPrintf("TcpipApiStoreConnHibContext context is invalid ");
304128,623055104,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiStoreConnHibContext_2,P_WARNING,swLogPrintf("TcpipApiStoreConnHibContext private hib context len %d bit than %d ");
304128,623058943,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiStoreConnHibContext_3,P_WARNING,swLogPrintf("TcpipApiStoreConnHibContext private context is invalid ");
304128,623060991,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_1,P_WARNING,swLogPrintf("TcpipApiRecoverConnContext context is invalid ");
304128,623061248,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_2,P_WARNING,swLogPrintf("TcpipApiRecoverConnContext private hib context len %d bit than %d ");
304128,623065087,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_3,P_WARNING,swLogPrintf("TcpipApiRecoverConnContext private hib context is invalid ");
304128,623067135,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_4,P_ERROR,swLogPrintf("TcpipApiRecoverConnContext atskt is full ");
304128,623067136,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_5,P_ERROR,swLogPrintf("TcpipApiRecoverConnContext rebuild socket id %d fail ");
304128,623069184,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_6,P_ERROR,swLogPrintf("TcpipApiRecoverConnContext rebuild socket id %d success , but status is not valid ");
304128,623071232,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_7,P_INFO,swLogPrintf("TcpipApiRecoverConnContext rebuild socket id %d success ");
304128,623073280,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_91,P_INFO,swLogPrintf("TcpipApiRecoverConnContext rebuild socket id %d success ");
304128,623075328,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_92,P_INFO,swLogPrintf("TcpipApiRecoverConnContext rebuild socket id %d success ");
304128,623077632,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_11,P_ERROR,swLogPrintf("TcpipApiRecoverConnContext hib socket id %d status %dis invalid ");
304128,623079424,0,0,PLAT_AP,TCPIP_SDK_API,TcpipApiRecoverConnContext_12,P_ERROR,swLogPrintf("TcpipApiRecoverConnContext rebuild socket id %d is invalid ");
305152,624955391,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_ps_ul,P_VALUE,swLogDump("PS UL: ");
305152,624957439,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_ppp_ul,P_VALUE,swLogDump("PPP UL: ");
305152,624959487,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_rndis_ul,P_VALUE,swLogDump("RNDIS UL: ");
305152,624961535,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_ps_dl,P_VALUE,swLogDump("PS DL: ");
305152,624963583,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_ppp_dl,P_VALUE,swLogDump("PPP DL: ");
305152,624965631,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_rndis_dl,P_VALUE,swLogDump("RNDIS DL: ");
306176,627051264,0,0,PLAT_AP,ROHC,RohcCreateRohcChannel_1,P_INFO,swLogPrintf("RohcCreateRohcChannel , cid %u , profile 0x%x , maxcid %u , onlyuplink %u ");
306176,627052544,0,0,PLAT_AP,ROHC,RohcCreateRohcChannel_2,P_WARNING,swLogPrintf("RohcCreateRohcChannel alloc msg buffer fail , cid %u ");
306176,627054592,0,0,PLAT_AP,ROHC,RohcCreateRohcChannel_3,P_WARNING,swLogPrintf("RohcCreateRohcChannel tcpip_callback_with_block fail , cid %u ");
306176,627056640,0,0,PLAT_AP,ROHC,RohcDestroyRohcChannel_1,P_INFO,swLogPrintf("RohcDestroyRohcChannel cid %u ");
306176,627058688,0,0,PLAT_AP,ROHC,RohcDestroyRohcChannel_2,P_WARNING,swLogPrintf("RohcDestroyRohcChannel alloc msg buffer fail , cid %u ");
306176,627060736,0,0,PLAT_AP,ROHC,RohcDestroyRohcChannel_3,P_WARNING,swLogPrintf("RohcDestroyRohcChannel tcpip_callback_with_block fail , cid %u ");
306176,627062784,0,0,PLAT_AP,ROHC,RohcRestRohcChannel_1,P_INFO,swLogPrintf("RohcCreateRohcChannel cid %u ");
306176,627064832,0,0,PLAT_AP,ROHC,RohcRestRohcChannel_2,P_WARNING,swLogPrintf("RohcCreateRohcChannel alloc msg buffer fail , cid %u ");
306176,627066880,0,0,PLAT_AP,ROHC,RohcResetRohcChannel_3,P_WARNING,swLogPrintf("PsifResetRohcCallback tcpip_callback_with_block fail , cid %u ");
306176,627069184,0,0,PLAT_AP,ROHC,RohcReCompDataPdu_1,P_INFO,swLogPrintf("RohcReCompDataPdu cid %u , pdu 0x%x ");
306176,627071232,0,0,PLAT_AP,ROHC,RohcReCompDataPdu_2,P_WARNING,swLogPrintf("RohcReCompDataPdu alloc msg buffer fail , cid %u , pdu 0x%x ");
306176,627073024,0,0,PLAT_AP,ROHC,RohcReCompDataPdu_3,P_WARNING,swLogPrintf("RohcReCompDataPdu tcpip_callback_with_block fail , cid %u ");
313344,641730816,0,0,PLAT_AP,LFS,fileWriteInputData1,P_INFO,swLogPrintf("....total len = %d..........len = %d... ");
313344,641732864,0,0,PLAT_AP,LFS,fileReadCnf_1,P_INFO,swLogPrintf("..............rspCount = %d..cnfMsgPtr->retLen = %d. ");
313344,641734912,0,0,PLAT_AP,LFS,atApplFileProcCmsCnf_1,P_INFO,swLogPrintf("....srcHandler = 0x%x..rc = %d. ");
313344,641737216,0,0,PLAT_AP,LFS,fileFindExistFile_1,P_INFO,swLogPrintf(".......%d...fileHandler = %d..ecfileHandler = %d. ");
313344,641739264,0,0,PLAT_AP,LFS,fileFindExistFile_2,P_INFO,swLogPrintf(".......%d...fileHandler = %d..ecfileHandler = %d. ");
313344,641740801,0,0,PLAT_AP,LFS,fileFindExistFile_3,P_DEBUG,swLogPrintf(".......fileName:...%s ");
313344,641742849,0,0,PLAT_AP,LFS,fileFindExistFile_4,P_DEBUG,swLogPrintf(".......ecfileName:...%s ");
313344,641744896,0,0,PLAT_AP,LFS,fileFindExistFile_5,P_INFO,swLogPrintf("....addr.. = 0x%x. ");
313344,641746945,0,0,PLAT_AP,LFS,fileFreeExistFile_1,P_DEBUG,swLogPrintf(".......fileName:...%s ");
313344,641748993,0,0,PLAT_AP,LFS,fileFreeExistFile_2,P_DEBUG,swLogPrintf(".......fileName:...%s ");
313344,641751552,0,0,PLAT_AP,LFS,fileFreeExistFile_3,P_INFO,swLogPrintf("....%d...fileHandler = %d..ecfileHandler = %d. ");
313344,641753600,0,0,PLAT_AP,LFS,fileFreeExistFile_4,P_INFO,swLogPrintf("....%d...fileHandler = %d..ecfileHandler = %d. ");
313344,641755392,0,0,PLAT_AP,LFS,fileSaveFileToExist_1,P_INFO,swLogPrintf("...%d..addr.. = 0x%x. ");
313344,641757440,0,0,PLAT_AP,LFS,fileClientTaskProcess_1,P_INFO,swLogPrintf("..............msgType = %d..reqhandle = 0x%x. ");
313344,641759232,0,0,PLAT_AP,LFS,fileClientTaskProcess_open0,P_INFO,swLogPrintf("..............fileInfoTemp.0x%x. ");
313344,641761280,0,0,PLAT_AP,LFS,fileClientTaskProcess_open00,P_INFO,swLogPrintf("..............APPL_FILE_OPEN_CNF = %d... ");
313344,641763328,0,0,PLAT_AP,LFS,fileClientTaskProcess_open1,P_INFO,swLogPrintf("..............APPL_FILE_OPEN_CNF = %d... ");
313344,641765632,0,0,PLAT_AP,LFS,fileClientTaskProcess_open2,P_INFO,swLogPrintf("..............APPL_FILE_OPEN_CNF = %d..0x%x. ");
313344,641767424,0,0,PLAT_AP,LFS,fileClientTaskProcess_open3,P_INFO,swLogPrintf("..............APPL_FILE_OPEN_CNF = %d... ");
313344,641769728,0,0,PLAT_AP,LFS,fileClientTaskProcess_open4,P_INFO,swLogPrintf("..............APPL_FILE_OPEN_CNF = %d..0x%x. ");
313344,641771520,0,0,PLAT_AP,LFS,fileClientTaskProcess_open5,P_INFO,swLogPrintf("..............APPL_FILE_OPEN_CNF = %d... ");
313344,641773824,0,0,PLAT_AP,LFS,fileClientTaskProcess_open6,P_INFO,swLogPrintf("..............APPL_FILE_OPEN_CNF = %d..0x%x. ");
313344,641776128,0,0,PLAT_AP,LFS,fileClientTaskProcess_read0,P_INFO,swLogPrintf("......fileSysHandle = 0x%x........reqMsg.length = %d..len = %d. ");
313344,641778176,0,0,PLAT_AP,LFS,fileClientTaskProcess_read,P_INFO,swLogPrintf("......fileSysHandle = 0x%x........reqMsg.length = %d..len = %d. ");
313344,641781759,0,0,PLAT_AP,LFS,fileClientTaskProcess_read1ww,P_INFO,swLogPrintf("acquire the flowMutex ");
313344,641781761,0,0,PLAT_AP,LFS,fileClientTaskProcess_write,P_DEBUG,swLogPrintf(".......reqBuff:...%s ");
313344,641783808,0,0,PLAT_AP,LFS,fileClientTaskProcess_write2,P_INFO,swLogPrintf("..............len = %d... ");
313344,641785856,0,0,PLAT_AP,LFS,fileClientInterface_1,P_INFO,swLogPrintf("..............cmdType = %d... ");
313344,641787905,0,0,PLAT_AP,LFS,fileClientInterface_2,P_DEBUG,swLogPrintf(".......reqMsg.fileName: %s ");
313344,641789953,0,0,PLAT_AP,LFS,fileClientInterface_3,P_DEBUG,swLogPrintf(".......reqMsg.filePattern: %s ");
313344,641794047,0,0,PLAT_AP,LFS,lfs_bd_flush_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641796095,0,0,PLAT_AP,LFS,lfs_dir_getread_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641796352,0,0,PLAT_AP,LFS,lfs_dir_fetchmatch_0,P_ERROR,swLogPrintf("Corrupted dir pair at %x %x ");
313344,641800191,0,0,PLAT_AP,LFS,lfs_dir_commitcrc_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641802239,0,0,PLAT_AP,LFS,lfs_dir_compact_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641804287,0,0,PLAT_AP,LFS,lfs_dir_compact_1,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641806335,0,0,PLAT_AP,LFS,lfs_dir_compact_2,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641808383,0,0,PLAT_AP,LFS,lfs_dir_compact_3,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641810431,0,0,PLAT_AP,LFS,lfs_dir_compact_4,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641812479,0,0,PLAT_AP,LFS,lfs_dir_compact_5,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641814527,0,0,PLAT_AP,LFS,lfs_ctz_extend_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641816575,0,0,PLAT_AP,LFS,lfs_ctz_extend_1,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641818623,0,0,PLAT_AP,LFS,lfs_ctz_extend_2,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641820671,0,0,PLAT_AP,LFS,lfs_file_opencfg,P_WARNING,swLogPrintf("Can ' t malloc for name field ");
313344,641822719,0,0,PLAT_AP,LFS,lfs_file_relocate_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641824767,0,0,PLAT_AP,LFS,lfs_file_relocate_1,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641826815,0,0,PLAT_AP,LFS,lfs_file_flush_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641828863,0,0,PLAT_AP,LFS,lfs_file_write_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641829120,0,0,PLAT_AP,LFS,LFS_Reply_0,P_INFO,swLogPrintf("LFS reply , ret:%d , threadId:%x ");
313344,641831168,0,0,PLAT_AP,LFS,LFS_daemonTaskEntry,P_INFO,swLogPrintf("LFS Daemon task recv a request , type:%d , threadId:%x ");
313344,641832961,0,0,PLAT_AP,LFS,fs_remove,P_DEBUG,swLogPrintf("LFS remove , path: %s ");
313344,641835267,0,0,PLAT_AP,LFS,fs_rename,P_DEBUG,swLogPrintf("LFS rename , old path: %s , new path: %s ");
313344,641837057,0,0,PLAT_AP,LFS,fs_file_open,P_DEBUG,swLogPrintf("LFS file open , path: %s ");
313344,641839105,0,0,PLAT_AP,LFS,fs_file_close,P_DEBUG,swLogPrintf("LFS file close , file name: %s ");
313344,641841153,0,0,PLAT_AP,LFS,fs_file_read,P_DEBUG,swLogPrintf("LFS file read , file name: %s ");
313344,641843201,0,0,PLAT_AP,LFS,fs_file_write,P_DEBUG,swLogPrintf("LFS file write , file name: %s ");
313344,641845249,0,0,PLAT_AP,LFS,fs_file_seek,P_DEBUG,swLogPrintf("LFS file seek , file name: %s ");
313344,641847297,0,0,PLAT_AP,LFS,fs_file_sync,P_DEBUG,swLogPrintf("LFS file sync , file name: %s ");
313344,641849345,0,0,PLAT_AP,LFS,fs_file_truncate,P_DEBUG,swLogPrintf("LFS file truncate , file name: %s ");
313344,641851393,0,0,PLAT_AP,LFS,fs_file_rewind,P_DEBUG,swLogPrintf("LFS file rewind , file name: %s ");
314368,643829759,0,0,PLAT_AP,CEMM,ProcessServiceReject_1,P_WARNING,swLogPrintf("SERVICE REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643831807,0,0,PLAT_AP,CEMM,ProcessAttachReject_1,P_WARNING,swLogPrintf("ATTACH REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643833855,0,0,PLAT_AP,CEMM,ProcessAttachReject_2,P_WARNING,swLogPrintf("ATTACH REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643835903,0,0,PLAT_AP,CEMM,MtDetachRequest_1,P_WARNING,swLogPrintf("MT DETACH without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643837951,0,0,PLAT_AP,CEMM,MtDetachRequest_2,P_WARNING,swLogPrintf("MT DETACH without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643839999,0,0,PLAT_AP,CEMM,ProcessTauchReject_1,P_WARNING,swLogPrintf("TAU REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643842047,0,0,PLAT_AP,CEMM,ProcessTauchReject_2,P_WARNING,swLogPrintf("TAU REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643844095,0,0,PLAT_AP,CEMM,CemmEsmUnitDataRequestMsg_7,P_INFO,swLogPrintf("ESM DATA TRANSPORT message is blocked by T3440 , pending it. ");
314368,643844097,0,0,PLAT_AP,MQTT,mqtt_task_0,P_SIG,swLogPrintf(".........MQTT_messageArrived is:%s ");
314368,643848191,0,0,PLAT_AP,MQTT,mqtt_task_read,P_INFO,swLogPrintf("...mqttReadPacket.. ");
314368,643848192,0,0,PLAT_AP,MQTT,mqtt_msg_89,P_INFO,swLogPrintf("...get socket stat..socket_stat = %d.. ");
314368,643852287,0,0,PLAT_AP,MQTT,mqtt_msg_90,P_INFO,swLogPrintf("...start tcp disconnect .. ");
314368,643852288,0,0,PLAT_AP,MQTT,mqtt_msg_91,P_INFO,swLogPrintf("...tcp disconnect fail!!!.rc = %d.. ");
314368,643854336,0,0,PLAT_AP,MQTT,mqtt_msg_92,P_INFO,swLogPrintf("...tcp disconnect ok!!!....%d. ");
314368,643858431,0,0,PLAT_AP,MQTT,mqtt_msg_93,P_INFO,swLogPrintf("...start tcp connect ... ");
314368,643860479,0,0,PLAT_AP,MQTT,mqtt_msg_94,P_INFO,swLogPrintf("...tcp socket set timeout fail... ");
314368,643862527,0,0,PLAT_AP,MQTT,mqtt_msg_95,P_INFO,swLogPrintf("...tcp connect ok... ");
314368,643864575,0,0,PLAT_AP,MQTT,mqtt_msg_96,P_INFO,swLogPrintf("...tcp reconnect fail!!!... \r \n ");
314368,643866623,0,0,PLAT_AP,MQTT,mqtt_msg_97,P_INFO,swLogPrintf("...start mqtt connect .. ");
314368,643866624,0,0,PLAT_AP,MQTT,mqtt_task_1,P_INFO,swLogPrintf("...get socket stat..socket_stat = %d.. ");
314368,643870719,0,0,PLAT_AP,MQTT,mqtt_task_2,P_INFO,swLogPrintf("...start tcp disconnect .. ");
314368,643870720,0,0,PLAT_AP,MQTT,mqtt_task_3,P_INFO,swLogPrintf("...tcp disconnect fail!!!.rc = %d.. ");
314368,643874815,0,0,PLAT_AP,MQTT,mqtt_task_11,P_INFO,swLogPrintf("...tcp disconnect ok!!!... ");
314368,643876863,0,0,PLAT_AP,MQTT,mqtt_task_12,P_INFO,swLogPrintf("...start tcp connect ... ");
314368,643878911,0,0,PLAT_AP,MQTT,mqtt_task_13,P_INFO,swLogPrintf("...tcp socket set timeout fail... ");
314368,643880959,0,0,PLAT_AP,MQTT,mqtt_task_14,P_INFO,swLogPrintf("...tcp connect ok... ");
314368,643883007,0,0,PLAT_AP,MQTT,mqtt_task_15,P_INFO,swLogPrintf("...tcp reconnect fail!!!... \r \n ");
314368,643885055,0,0,PLAT_AP,MQTT,mqtt_task_16,P_INFO,swLogPrintf("...start mqtt connect .. ");
314368,643887103,0,0,PLAT_AP,MQTT,mqtt_task_17,P_INFO,swLogPrintf("...mqtt reconnect fial!!!... ");
314368,643889151,0,0,PLAT_AP,MQTT,mqtt_task_18,P_INFO,swLogPrintf("...mqtt reconnect ok!!!... ");
314368,643889152,0,0,PLAT_AP,MQTT,mqtt_msg_88,P_INFO,swLogPrintf("..mqttPublish.len.%d ");
314368,643891201,0,0,PLAT_AP,MQTT,mqtt_task_19,P_SIG,swLogPrintf(".........MQTT_messageArrived is:%s ");
314368,643893248,0,0,PLAT_AP,MQTT,mqtt_client_config_59,P_INFO,swLogPrintf(".....keepalive = %d....... ");
314368,643897343,0,0,PLAT_AP,MQTT,mqtt_msg_98,P_INFO,swLogPrintf(".....mqttDeleteContext client....... ");
314368,643899391,0,0,PLAT_AP,MQTT,mqtt_task_22,P_INFO,swLogPrintf("...mqtt socket connect fail!!!... \r \n ");
314368,643901439,0,0,PLAT_AP,MQTT,mqtt_task_23,P_INFO,swLogPrintf("...mqtt socket connect fail... \r \n ");
314368,643903487,0,0,PLAT_AP,MQTT,mqtt_task_24,P_INFO,swLogPrintf("...mqtt socket connect ok!!!... \r \n ");
314368,643905535,0,0,PLAT_AP,MQTT,mqtt_task_25,P_INFO,swLogPrintf("...mqtt connect ok!!!... \r \n ");
314368,643907583,0,0,PLAT_AP,MQTT,mqtt_task_26,P_INFO,swLogPrintf("...mqtt close fail!!!... \r \n ");
314368,643909631,0,0,PLAT_AP,MQTT,mqtt_task_27,P_INFO,swLogPrintf("...mqtt close ok!!!... \r \n ");
314368,643911679,0,0,PLAT_AP,MQTT,mqtt_task_28,P_INFO,swLogPrintf("...mqtt connect fail!!!... \r \n ");
314368,643913727,0,0,PLAT_AP,MQTT,mqtt_task_29hh,P_INFO,swLogPrintf("...mqtt connect ok!!!... \r \n ");
314368,643915775,0,0,PLAT_AP,MQTT,mqtt_task_29,P_INFO,swLogPrintf("...mqtt connect ok!!!... \r \n ");
314368,643917823,0,0,PLAT_AP,MQTT,mqtt_task_30,P_INFO,swLogPrintf("...mqtt disconnect fail!!!... \r \n ");
314368,643919871,0,0,PLAT_AP,MQTT,mqtt_task_31,P_INFO,swLogPrintf("...mqtt disconnect ok!!!... \r \n ");
314368,643921919,0,0,PLAT_AP,MQTT,mqtt_msg_32,P_ERROR,swLogPrintf("...mqtt keep alive ping resp timeout... ");
314368,643921920,0,0,PLAT_AP,MQTT,mqtt_msg_33,P_INFO,swLogPrintf("...mqtt readPacket packet_type = %d... ");
314368,643923968,0,0,PLAT_AP,MQTT,mqtt_msg_34,P_INFO,swLogPrintf(".....now , need reconnect mqtt server , when read packet...err = %d.... ");
314368,643928063,0,0,PLAT_AP,MQTT,mqtt_msg_101,P_INFO,swLogPrintf(".....now , recv connack....... ");
314368,643928320,0,0,PLAT_AP,MQTT,mqtt_msg_102,P_INFO,swLogPrintf(".....send mqtt conn packet ok...connData.rc = %d..rc = %d.. ");
314368,643932159,0,0,PLAT_AP,MQTT,mqtt_msg_35,P_INFO,swLogPrintf(".....now , recv puback....... ");
314368,643934207,0,0,PLAT_AP,MQTT,mqtt_msg_36,P_INFO,swLogPrintf(".....send mqtt pub packet ok....... ");
314368,643936255,0,0,PLAT_AP,MQTT,mqtt_msg_37,P_INFO,swLogPrintf(".....now , recv suback....... ");
314368,643938303,0,0,PLAT_AP,MQTT,mqtt_msg_38,P_INFO,swLogPrintf(".....recv mqtt suback packet ok....... ");
314368,643940351,0,0,PLAT_AP,MQTT,mqtt_msg_39,P_INFO,swLogPrintf(".....now , recv unsuback....... ");
314368,643942399,0,0,PLAT_AP,MQTT,mqtt_msg_100,P_INFO,swLogPrintf(".....recv mqtt unsuback packet ok....... ");
314368,643944447,0,0,PLAT_AP,MQTT,mqtt_msg_40,P_INFO,swLogPrintf(".....now , recv publish....... ");
314368,643944449,0,0,PLAT_AP,MQTT,hh11tt,P_INFO,swLogPrintf(".........device_secret......:%s ");
314368,643946497,0,0,PLAT_AP,MQTT,hh11tt1,P_INFO,swLogPrintf(".........device_token......:%s ");
314368,643948545,0,0,PLAT_AP,MQTT,hh11tt11,P_INFO,swLogPrintf(".........client_id......:%s ");
314368,643950593,0,0,PLAT_AP,MQTT,hh1qq,P_INFO,swLogPrintf(".........clientID......:%s ");
314368,643952641,0,0,PLAT_AP,MQTT,hh2qqq,P_INFO,swLogPrintf(".........username......:%s ");
314368,643954689,0,0,PLAT_AP,MQTT,hh3qqqq,P_INFO,swLogPrintf(".........password......:%s ");
314368,643956737,0,0,PLAT_AP,MQTT,mqttDeliverMessage0,P_INFO,swLogPrintf(".........mqttDeliverMessage......:%s ");
314368,643960831,0,0,PLAT_AP,MQTT,mqtt_msg_41,P_INFO,swLogPrintf(".....now , recv pubrec or pubrel....... ");
314368,643962879,0,0,PLAT_AP,MQTT,mqtt_msg_42,P_INFO,swLogPrintf(".....now , recv pubcomp....... ");
314368,643964927,0,0,PLAT_AP,MQTT,mqtt_msg_43,P_INFO,swLogPrintf(".....send mqtt pub packet ok....... ");
314368,643966975,0,0,PLAT_AP,MQTT,mqtt_msg_44,P_INFO,swLogPrintf(".....mqtt recv keeplive ack ok....... ");
314368,643969023,0,0,PLAT_AP,MQTT,mqtt_msg_45,P_INFO,swLogPrintf(".....now , need keepalive....... ");
314368,643971071,0,0,PLAT_AP,MQTT,mqtt_msg_46,P_INFO,swLogPrintf(".....now , need reconnect....... ");
314368,643973119,0,0,PLAT_AP,MQTT,mqtt_msg_47,P_INFO,swLogPrintf(".....now , need reconnect....... ");
314368,643975167,0,0,PLAT_AP,MQTT,mqtt_msg_48,P_INFO,swLogPrintf(".....now , need keepalive....... ");
314368,643977215,0,0,PLAT_AP,MQTT,mqtt_msg_49,P_ERROR,swLogPrintf("....mqtt close session ");
314368,643977216,0,0,PLAT_AP,MQTT,mqttTaskSendProcess_0,P_INFO,swLogPrintf("...mqttTaskSendProcess apply vote fail , vote_ret = %d... ");
314368,643979264,0,0,PLAT_AP,MQTT,mqttTaskSendProcess_1,P_INFO,swLogPrintf("...mqttTaskSendProcess apply vote fail , vote_ret = %d... ");
314368,643983359,0,0,PLAT_AP,MQTT,mqtt_msg_50,P_INFO,swLogPrintf(".....start open mqtt client....... ");
314368,643985407,0,0,PLAT_AP,MQTT,mqtt_msg_51,P_INFO,swLogPrintf(".....open mqtt client ok....... ");
314368,643987455,0,0,PLAT_AP,MQTT,mqtt_msg_52,P_INFO,swLogPrintf(".....open mqtt client fail....... ");
314368,643989503,0,0,PLAT_AP,MQTT,mqtt_msg_53,P_INFO,swLogPrintf(".....start close mqtt client....... ");
314368,643991551,0,0,PLAT_AP,MQTT,mqtt_msg_54,P_INFO,swLogPrintf(".....close mqtt client ok....... ");
314368,643993599,0,0,PLAT_AP,MQTT,mqtt_msg_55,P_INFO,swLogPrintf(".....close mqtt client fail....... ");
314368,643995647,0,0,PLAT_AP,MQTT,mqtt_msg_56,P_INFO,swLogPrintf(".....start connect mqtt client....... ");
314368,643997695,0,0,PLAT_AP,MQTT,mqtt_msg_57,P_INFO,swLogPrintf(".....connect mqtt client ok....... ");
314368,643999743,0,0,PLAT_AP,MQTT,mqtt_msg_58,P_INFO,swLogPrintf(".....connect mqtt client fail....... ");
314368,644001791,0,0,PLAT_AP,MQTT,mqtt_msg_59,P_INFO,swLogPrintf(".....start disconnect mqtt client....... ");
314368,644003839,0,0,PLAT_AP,MQTT,mqtt_msg_60,P_INFO,swLogPrintf(".....disconnect mqtt client ok....... ");
314368,644005887,0,0,PLAT_AP,MQTT,mqtt_msg_61,P_INFO,swLogPrintf(".....disconnect mqtt client fail....... ");
314368,644007935,0,0,PLAT_AP,MQTT,mqtt_msg_ali_00,P_INFO,swLogPrintf(".....start connect mqtt client....... ");
314368,644009983,0,0,PLAT_AP,MQTT,mqtt_msg_ali_01,P_INFO,swLogPrintf(".....ali open ok....... ");
314368,644012031,0,0,PLAT_AP,MQTT,mqtt_msg_57hh,P_INFO,swLogPrintf(".....connect mqtt client ok....... ");
314368,644014079,0,0,PLAT_AP,MQTT,mqtt_msg_58hhh,P_INFO,swLogPrintf(".....connect mqtt client fail....... ");
314368,644016127,0,0,PLAT_AP,MQTT,mqtt_msg_62,P_INFO,swLogPrintf(".....start send mqtt sub packet....... ");
314368,644018175,0,0,PLAT_AP,MQTT,mqtt_msg_63,P_INFO,swLogPrintf(".....send mqtt sub packet ok....... ");
314368,644020223,0,0,PLAT_AP,MQTT,mqtt_msg_64,P_INFO,swLogPrintf(".....send mqtt sub packet fail....... ");
314368,644022271,0,0,PLAT_AP,MQTT,mqtt_msg_65,P_INFO,swLogPrintf(".....find need reconnect when send sub packet....... ");
314368,644024319,0,0,PLAT_AP,MQTT,mqtt_msg_66,P_INFO,swLogPrintf(".....start send mqtt unsub packet....... ");
314368,644026367,0,0,PLAT_AP,MQTT,mqtt_msg_67,P_INFO,swLogPrintf(".....send mqtt unsub packet ok....... ");
314368,644028415,0,0,PLAT_AP,MQTT,mqtt_msg_68,P_INFO,swLogPrintf(".....send mqtt unsub packet fail....... ");
314368,644030463,0,0,PLAT_AP,MQTT,mqtt_msg_69,P_INFO,swLogPrintf(".....find need reconnect when send unsub packet....... ");
314368,644030464,0,0,PLAT_AP,MQTT,mqtt_msg_70,P_INFO,swLogPrintf(".....start send mqtt publish packet...msg_id = %d.... ");
314368,644032512,0,0,PLAT_AP,MQTT,mqtt_msg_71,P_INFO,swLogPrintf(".....send mqtt publish packet ok..msg_id = %d...... ");
314368,644036607,0,0,PLAT_AP,MQTT,mqtt_msg_72,P_INFO,swLogPrintf(".....send mqtt publish packet fail....... ");
314368,644038655,0,0,PLAT_AP,MQTT,mqtt_msg_73,P_INFO,swLogPrintf(".....find need reconnect when publish packet....... ");
314368,644038656,0,0,PLAT_AP,MQTT,mqtt_msg_74,P_INFO,swLogPrintf(".....start send mqtt pub rec / rel / comp / ack packet....%d... ");
314368,644042751,0,0,PLAT_AP,MQTT,mqtt_msg_75,P_INFO,swLogPrintf(".....send mqtt pub rec / rel / comp / ack packet ok....... ");
314368,644044799,0,0,PLAT_AP,MQTT,mqtt_msg_76,P_INFO,swLogPrintf(".....send mqtt pub rec / rel / comp / ack packet fail....... ");
314368,644046847,0,0,PLAT_AP,MQTT,mqtt_msg_77,P_INFO,swLogPrintf(".....find need reconnect when send pub rec / rel / comp / ack packet....... ");
314368,644048895,0,0,PLAT_AP,MQTT,mqtt_msg_78,P_INFO,swLogPrintf(".....start send mqtt keeplive packet....... ");
314368,644050943,0,0,PLAT_AP,MQTT,mqtt_msg_79,P_INFO,swLogPrintf(".....mqtt keeplive send ok....... ");
314368,644052991,0,0,PLAT_AP,MQTT,mqtt_msg_80,P_INFO,swLogPrintf(".....find need reconnect when send keeplive packet....... ");
314368,644055039,0,0,PLAT_AP,MQTT,mqtt_msg_81,P_INFO,swLogPrintf(".....mqtt send keeplive Packet fail ");
314368,644057087,0,0,PLAT_AP,MQTT,mqtt_msg_82,P_INFO,swLogPrintf(".....connect is shut down by server....... ");
314368,644059135,0,0,PLAT_AP,MQTT,mqtt_msg_83,P_INFO,swLogPrintf(".....find need reconnect when read packet....... ");
314368,644061183,0,0,PLAT_AP,MQTT,mqtt_msg_84,P_INFO,swLogPrintf(".....start reconnect mqtt server....... ");
314368,644063231,0,0,PLAT_AP,MQTT,mqtt_msg_85,P_INFO,swLogPrintf(".....reconnect mqtt server ok....... ");
314368,644065279,0,0,PLAT_AP,MQTT,mqtt_msg_86,P_INFO,swLogPrintf(".....reconnect mqtt server fail....... ");
314368,644065280,0,0,PLAT_AP,MQTT,mqttTaskSendProcess_2,P_INFO,swLogPrintf("...mqttTaskSendProcess apply vote fail , vote_ret = %d... ");
314368,644067328,0,0,PLAT_AP,MQTT,mqttTaskSendProcess_3,P_INFO,swLogPrintf("...mqttTaskSendProcess apply vote fail , vote_ret = %d... ");
314368,644071423,0,0,PLAT_AP,MQTT,mqtt_msg_11011,P_INFO,swLogPrintf(".....mqtt_client_open...NULL.0.... ");
314368,644073471,0,0,PLAT_AP,MQTT,mqtt_msg_110111,P_INFO,swLogPrintf(".....mqtt_client_open...NULL.0.... ");
314368,644075519,0,0,PLAT_AP,MQTT,mqtt_msg_110,P_INFO,swLogPrintf(".....mqtt_client_open...NULL.0.... ");
314368,644077567,0,0,PLAT_AP,MQTT,mqtt_msg_111,P_INFO,swLogPrintf(".....mqtt_client_open...NULL.1.... ");
314368,644077568,0,0,PLAT_AP,MQTT,mqtt_msg_112,P_INFO,swLogPrintf(".....mqtt_client_open...%d.... ");
314368,644081663,0,0,PLAT_AP,MQTT,mqtt_task_86,P_INFO,swLogPrintf("...mqtt_task start init.. ");
314368,644083711,0,0,PLAT_AP,MQTT,mqtt_task_87,P_INFO,swLogPrintf("...mqtt_task create fail... ");
314368,644085759,0,0,PLAT_AP,MQTT,mqtt_task_88,P_INFO,swLogPrintf("...start send first create client msg... ");
314368,644087807,0,0,PLAT_AP,MQTT,mqtt_task_89,P_INFO,swLogPrintf("...start send create client msg... ");
314368,644089855,0,0,PLAT_AP,MQTT,mqtt_msg_113,P_INFO,swLogPrintf(".....mqtt_client_connect...NULL.... ");
314368,644089856,0,0,PLAT_AP,MQTT,mqtt_msg_114,P_INFO,swLogPrintf(".....mqtt_client_connect...%d.... ");
314368,644091905,0,0,PLAT_AP,MQTT,hh11,P_INFO,swLogPrintf(".........hmac_source......:%s ");
314368,644093953,0,0,PLAT_AP,MQTT,hh12,P_INFO,swLogPrintf(".........product_name......:%s ");
314368,644096001,0,0,PLAT_AP,MQTT,hh13,P_INFO,swLogPrintf(".........product_key......:%s ");
314368,644098049,0,0,PLAT_AP,MQTT,hh14,P_INFO,swLogPrintf(".........product_secret......:%s ");
314368,644100097,0,0,PLAT_AP,MQTT,hh15,P_INFO,swLogPrintf(".........device_name......:%s ");
314368,644102145,0,0,PLAT_AP,MQTT,hh16,P_INFO,swLogPrintf(".........auth_type......:%s ");
314368,644104193,0,0,PLAT_AP,MQTT,hh17,P_INFO,swLogPrintf(".........sign_method......:%s ");
314368,644106241,0,0,PLAT_AP,MQTT,hh18,P_INFO,swLogPrintf(".........auth_mode......:%s ");
314368,644108289,0,0,PLAT_AP,MQTT,hh19,P_INFO,swLogPrintf(".........secure_mode......:%s ");
314368,644110337,0,0,PLAT_AP,MQTT,hh1,P_INFO,swLogPrintf(".........clientID......:%s ");
314368,644112385,0,0,PLAT_AP,MQTT,hh2,P_INFO,swLogPrintf(".........username......:%s ");
314368,644114433,0,0,PLAT_AP,MQTT,hh3,P_INFO,swLogPrintf(".........password......:%s ");
314368,644116736,0,0,PLAT_AP,MQTT,mqtt_task_90,P_INFO,swLogPrintf("...mqtt is not connected...%d..%d..... \r \n ");
314368,644118784,0,0,PLAT_AP,MQTT,mqtt_task_91,P_INFO,swLogPrintf("...mqtt is not connected...%d..%d..... \r \n ");
314368,644120832,0,0,PLAT_AP,MQTT,mqtt_task_92,P_INFO,swLogPrintf("...mqtt is not connected...%d..%d..... \r \n ");
314368,644122880,0,0,PLAT_AP,MQTT,mqtt_task_93,P_INFO,swLogPrintf("...mqtt send pub msg...0x%x..0x%x..... \r \n ");
314368,644124928,0,0,PLAT_AP,MQTT,mqtt_task_93jj,P_INFO,swLogPrintf("...mqtt send pub msg...0x%x..0x%x..... \r \n ");
314368,644126976,0,0,PLAT_AP,MQTT,mqtt_task_94,P_INFO,swLogPrintf("...mqtt send pub msg...0x%x..0x%x..... \r \n ");
314368,644129024,0,0,PLAT_AP,MQTT,mqtt_task_95,P_INFO,swLogPrintf("...mqtt send pub msg...0x%x..0x%x..... \r \n ");
314368,644131072,0,0,PLAT_AP,MQTT,mqtt_task_99,P_INFO,swLogPrintf("...mqtt send pub msg...0x%x..0x%x..... \r \n ");
314368,644134911,0,0,PLAT_AP,MQTT,mqtt_demo_onenet0,P_INFO,swLogPrintf("mqtt_demo........ ");
314368,644136959,0,0,PLAT_AP,MQTT,mqtt_demo_onenet1,P_INFO,swLogPrintf("mqtt_demo socket connect ok ");
314368,644139007,0,0,PLAT_AP,MQTT,mqtt_demo_onenet2,P_INFO,swLogPrintf("mqtt_demo connect fail ");
314368,644141055,0,0,PLAT_AP,MQTT,mqtt_demo_onenet3,P_INFO,swLogPrintf("mqtt_demo send data ");
314368,644141573,0,0,PLAT_AP,MQTT,mqttTls_00,P_INFO,swLogPrintf("%s ( %d ) :%s ");
314368,644143104,0,0,PLAT_AP,MQTT,mqttTlsConn_0,P_INFO,swLogPrintf("mbedtls_ctr_drbg_seed failed , value:-0x%x. ");
314368,644147199,0,0,PLAT_AP,MQTT,mqttTlsConn_1,P_INFO,swLogPrintf("STEP 0 . Loading the CA root certificate ... ");
314368,644147200,0,0,PLAT_AP,MQTT,mqttTlsConn_2,P_INFO,swLogPrintf("failed ! value:-0x%x ");
314368,644151295,0,0,PLAT_AP,MQTT,mqttTlsConn_3,P_INFO,swLogPrintf("STEP 0 . start prepare client cert ... ");
314368,644151296,0,0,PLAT_AP,MQTT,mqttTlsConn_4,P_INFO,swLogPrintf("failed! mbedtls_x509_crt_parse returned -0x%x \n ");
314368,644153344,0,0,PLAT_AP,MQTT,mqttTlsConn_5,P_INFO,swLogPrintf("context->clientPkLen = %d ");
314368,644155392,0,0,PLAT_AP,MQTT,mqttTlsConn_6,P_INFO,swLogPrintf("failed ! mbedtls_pk_parse_key returned -0x%x \n ");
314368,644159487,0,0,PLAT_AP,MQTT,mqttTlsConn_7,P_INFO,swLogPrintf("user set verify none ");
314368,644159489,0,0,PLAT_AP,MQTT,mqttTlsConn_8_0,P_INFO,swLogPrintf("STEP 1 . host:%s ");
314368,644161536,0,0,PLAT_AP,MQTT,mqttTlsConn_8_1,P_INFO,swLogPrintf("STEP 1 . Connecting to PORT:%d ");
314368,644163585,0,0,PLAT_AP,MQTT,mqttTlsConn_8_2,P_INFO,swLogPrintf("STEP 1 . port:%s ");
314368,644165632,0,0,PLAT_AP,MQTT,mqttTlsConn_9,P_INFO,swLogPrintf("failed ! mbedtls_net_connect returned -0x%x ");
314368,644169727,0,0,PLAT_AP,MQTT,mqttTlsConn_10,P_INFO,swLogPrintf("STEP 2 . Setting up the SSL / TLS structure... ");
314368,644169728,0,0,PLAT_AP,MQTT,mqttTlsConn_11,P_INFO,swLogPrintf("failed! mbedtls_ssl_config_defaults returned -0x%x ");
314368,644171776,0,0,PLAT_AP,MQTT,mqttTlsConn_13,P_INFO,swLogPrintf("failed! mbedtls_ssl_conf_own_cert returned -0x%x ");
314368,644173824,0,0,PLAT_AP,MQTT,mqttTlsConn_14,P_INFO,swLogPrintf("conf ciphersuite 0x%x ");
314368,644175872,0,0,PLAT_AP,MQTT,mqttTlsConn_15,P_INFO,swLogPrintf("failed! mbedtls_ssl_setup returned -0x%x ");
314368,644179967,0,0,PLAT_AP,MQTT,mqttTlsConn_16,P_INFO,swLogPrintf("STEP 3 . Performing the SSL / TLS handshake... ");
314368,644179968,0,0,PLAT_AP,MQTT,mqttTlsConn_17,P_INFO,swLogPrintf("failed ! mbedtls_ssl_handshake returned -0x%x ");
314368,644184063,0,0,PLAT_AP,MQTT,mqttTlsConn_18,P_INFO,swLogPrintf("STEP 4 . Verifying peer X.509 certificate.. ");
314368,644186111,0,0,PLAT_AP,MQTT,mqttTlsConn_19,P_INFO,swLogPrintf("failed ! verify result not confirmed. ");
314368,644188159,0,0,PLAT_AP,MQTT,mqttTlsConn_20,P_INFO,swLogPrintf("caCert varification ok ");
314368,644188160,0,0,PLAT_AP,MQTT,mqttTls_0,P_SIG,swLogPrintf("mbedtls_ctr_drbg_seed failed , value:-0x%x. ");
314368,644192255,0,0,PLAT_AP,MQTT,mqttTls_1,P_SIG,swLogPrintf("STEP 0 . Loading the CA root certificate ... ");
314368,644192256,0,0,PLAT_AP,MQTT,mqttTls_2,P_SIG,swLogPrintf("failed ! value:-0x%x ");
314368,644194304,0,0,PLAT_AP,MQTT,mqttTls_3,P_SIG,swLogPrintf("ok ( %d skipped ) ");
314368,644198399,0,0,PLAT_AP,MQTT,mqttTls_4,P_SIG,swLogPrintf("STEP 0 . start prepare client cert ... ");
314368,644198400,0,0,PLAT_AP,MQTT,mqttTls_5,P_SIG,swLogPrintf("failed! mbedtls_x509_crt_parse returned -0x%x \n ");
314368,644200449,0,0,PLAT_AP,MQTT,mqttTls_6,P_SIG,swLogPrintf("STEP 0 . start mbedtls_pk_parse_key [ %s ] ");
314368,644202496,0,0,PLAT_AP,MQTT,mqttTls_7,P_SIG,swLogPrintf("failed \n ! mbedtls_pk_parse_key returned -0x%x \n ");
314368,644204803,0,0,PLAT_AP,MQTT,mqttTls_8,P_SIG,swLogPrintf("STEP 1 . Connecting to / %s / %s... ");
314368,644206592,0,0,PLAT_AP,MQTT,mqttTls_9,P_SIG,swLogPrintf("failed ! mbedtls_net_connect returned -0x%x ");
314368,644210687,0,0,PLAT_AP,MQTT,mqttTls_10,P_SIG,swLogPrintf("ok ");
314368,644212735,0,0,PLAT_AP,MQTT,mqttTls_11,P_SIG,swLogPrintf("STEP 2 . Setting up the SSL / TLS structure... ");
314368,644212736,0,0,PLAT_AP,MQTT,mqttTls_12,P_SIG,swLogPrintf("failed! mbedtls_ssl_config_defaults returned %d ");
314368,644214784,0,0,PLAT_AP,MQTT,mqttTls_14,P_SIG,swLogPrintf("failed \n ! mbedtls_ssl_conf_own_cert returned %d \n ");
314368,644216832,0,0,PLAT_AP,MQTT,mqttTls_14_1,P_INFO,swLogPrintf("conf ciphersuite 0x%x ");
314368,644218880,0,0,PLAT_AP,MQTT,mqttTls_15,P_SIG,swLogPrintf("failed! mbedtls_ssl_setup returned %d ");
314368,644222975,0,0,PLAT_AP,MQTT,mqttTls_16,P_SIG,swLogPrintf("ok ");
314368,644225023,0,0,PLAT_AP,MQTT,mqttTls_17,P_SIG,swLogPrintf("STEP 3 . Performing the SSL / TLS handshake... ");
314368,644225024,0,0,PLAT_AP,MQTT,mqttTls_18,P_SIG,swLogPrintf("failed ! mbedtls_ssl_handshake returned -0x%x \n ");
314368,644229119,0,0,PLAT_AP,MQTT,mqttTls_19,P_SIG,swLogPrintf("ok ");
314368,644231167,0,0,PLAT_AP,MQTT,mqttTls_20,P_SIG,swLogPrintf("STEP 4 . Verifying peer X.509 certificate.. ");
314368,644233215,0,0,PLAT_AP,MQTT,mqttTls_21,P_SIG,swLogPrintf("failed ! verify result not confirmed. ");
314368,644235263,0,0,PLAT_AP,MQTT,mqttTls_22,P_SIG,swLogPrintf("caCert varification ok ");
314368,644237311,0,0,PLAT_AP,MQTT,mqttTls_23,P_SIG,swLogPrintf("mqtt_client ( ssl ) : send failed \n ");
314368,644237568,0,0,PLAT_AP,MQTT,mqttTls_24,P_INFO,swLogPrintf("Trying to read between %d and %d bytes ");
314368,644239360,0,0,PLAT_AP,MQTT,mqttTls_30,P_INFO,swLogPrintf("mbedtls_ssl_read [ blocking ] return:0x%x ");
314368,644243455,0,0,PLAT_AP,MQTT,mqttTls_31,P_INFO,swLogPrintf("mbedtls_ssl_read [ blocking ] return 0 connect error ");
314368,644243456,0,0,PLAT_AP,MQTT,mqttTls_32,P_INFO,swLogPrintf("mbedtls_ssl_read [ not blocking ] return:0x%x ");
314368,644247551,0,0,PLAT_AP,MQTT,mqttTls_33,P_INFO,swLogPrintf("mbedtls_ssl_read [ not blocking ] errno = = EWOULDBLOCK ");
314368,644247552,0,0,PLAT_AP,MQTT,mqttTls_34,P_INFO,swLogPrintf("Connection error ( recv returned %d ) ");
314368,644249600,0,0,PLAT_AP,MQTT,mqttTls_35,P_INFO,swLogPrintf("Read %d bytes ");
314368,644253695,0,0,PLAT_AP,MQTT,mqttTls_36,P_INFO,swLogPrintf("mqtt tls close ok ");
315392,645924864,0,0,PLAT_AP,HTTP,httpUrlInputData_1,P_INFO,swLogPrintf("come datalen = %d ");
315392,645928959,0,0,PLAT_AP,HTTP,httpGET_2,P_INFO,swLogPrintf("has request head , need input head ");
315392,645931007,0,0,PLAT_AP,HTTP,httpGET_1,P_INFO,swLogPrintf("no request head ");
315392,645933055,0,0,PLAT_AP,HTTP,httpSTOP_1,P_INFO,swLogPrintf("stop request process ");
315392,645933056,0,0,PLAT_AP,HTTP,httpSTOP_2,P_INFO,swLogPrintf("gHttpAtCxt.status = %d , return Ok directly ");
315392,645935104,0,0,PLAT_AP,HTTP,httpFotadlCnf_1,P_INFO,swLogPrintf("rc = %d ");
315392,645939199,0,0,PLAT_AP,HTTP,httpResultInd_1,P_ERROR,swLogPrintf("invalid paras ");
315392,645941247,0,0,PLAT_AP,HTTP,httpReadInd_2,P_ERROR,swLogPrintf("invalid paras ");
315392,645943295,0,0,PLAT_AP,HTTP,fota_begin_1,P_ERROR,swLogPrintf("clear flash: failure! ");
315392,645945343,0,0,PLAT_AP,HTTP,fota_begin_2,P_INFO,swLogPrintf("clear flash: success ");
315392,645947391,0,0,PLAT_AP,HTTP,httpClrCustNewContext_0,P_INFO,swLogPrintf("has remaining gptCustheadbody clean it ");
315392,645947392,0,0,PLAT_AP,HTTP,httpClrCustNewContext_1,P_INFO,swLogPrintf("to malloc gptCustheadbody ( %d ) ");
315392,645949696,0,0,PLAT_AP,HTTP,httpSetSSL_1,P_INFO,swLogPrintf("sslCxtID = %d , ciphersuite = 0x%X ");
315392,645951489,0,0,PLAT_AP,HTTP,httpFillPostContentByFile_1,P_INFO,swLogPrintf("fail to open such file:%s ");
315392,645953537,0,0,PLAT_AP,HTTP,httpFillPostContentByFile_1_1,P_INFO,swLogPrintf("file:%s ");
315392,645955584,0,0,PLAT_AP,HTTP,httpFillPostContentByFile_1_2,P_INFO,swLogPrintf("filesize = %x ");
315392,645957632,0,0,PLAT_AP,HTTP,httpFillPostContentByFile_2,P_INFO,swLogPrintf("filesize = %d ");
315392,645961727,0,0,PLAT_AP,HTTP,httpFillPostContentByFile_2_1,P_INFO,swLogPrintf("read failed ");
315392,645961984,0,0,PLAT_AP,HTTP,httpFotaDownload_fotaH_1,P_INFO,swLogPrintf("gfotasize = %d , recvContentLength = %d ");
315392,645965823,0,0,PLAT_AP,HTTP,httpFotaDownload_fotaH_2,P_INFO,swLogPrintf("fota size is error! ");
315392,645965824,0,0,PLAT_AP,HTTP,httpFotaDownload_1,P_INFO,swLogPrintf("fota contentlength = %d ");
315392,645967872,0,0,PLAT_AP,HTTP,httpFotaDownload_1_1,P_INFO,swLogPrintf("rspcode = %d , can ' t start fota ");
315392,645969920,0,0,PLAT_AP,HTTP,httpFotaDownload_2,P_INFO,swLogPrintf("CONTENT blockContentLen = %d ");
315392,645974015,0,0,PLAT_AP,HTTP,httpFotaDownload_2_1,P_INFO,swLogPrintf("write_flash error! ");
315392,645974272,0,0,PLAT_AP,HTTP,httpFotaDownload_3,P_INFO,swLogPrintf("has download = %d , percent = %d ");
315392,645978111,0,0,PLAT_AP,HTTP,httpOutputRsp_1_1,P_INFO,swLogPrintf("memory not enough , close connection ");
315392,645980159,0,0,PLAT_AP,HTTP,httpOutputRsp_1_2,P_INFO,swLogPrintf("memory not enough , close connection ");
315392,645980160,0,0,PLAT_AP,HTTP,httpOutputRsp_1,P_INFO,swLogPrintf("current output = %d ");
315392,645984255,0,0,PLAT_AP,HTTP,httpOutputRsp_0_1,P_INFO,swLogPrintf("can ' t open / create NVM: httpcache.nvm , save NVM failed ");
315392,645986303,0,0,PLAT_AP,HTTP,httpOutputRsp_0_2,P_INFO,swLogPrintf("' httpcache.nvm ' , write the header failed ");
315392,645988351,0,0,PLAT_AP,HTTP,httpOutputRsp_0_3,P_INFO,swLogPrintf("' httpcache.nvm ' , write the content failed ");
315392,645988352,0,0,PLAT_AP,HTTP,httpClientRecvTask_1,P_INFO,swLogPrintf("socket:%d , readFs ");
315392,645992447,0,0,PLAT_AP,HTTP,httpClientRecvTask_1_3,P_INFO,swLogPrintf("all data recevied , to close socket ");
315392,645992704,0,0,PLAT_AP,HTTP,httpClientRecvTask_1_6,P_INFO,swLogPrintf("chkDelta.isValid = %d , chkBase.isMatched = %d ");
315392,645996543,0,0,PLAT_AP,HTTP,httpClientRecvTask_1_4,P_INFO,swLogPrintf("fota get par failed stop connect ");
315392,645998591,0,0,PLAT_AP,HTTP,httpClientRecvTask_1_5,P_INFO,swLogPrintf("fota get par failed stop connect ");
315392,646000639,0,0,PLAT_AP,HTTP,httpClientRecvTask_1_1,P_INFO,swLogPrintf("httpRecvResponse return HTTP_CONN release mutex try recv data again ");
315392,646000896,0,0,PLAT_AP,HTTP,httpClientRecvTask_1_2,P_INFO,swLogPrintf("httpRecvResponse return %d error = %d , close socket ");
315392,646002944,0,0,PLAT_AP,HTTP,httpClientRecvTask_2,P_INFO,swLogPrintf("selected fatal error socket:%d , errno:%d ");
315392,646004992,0,0,PLAT_AP,HTTP,httpClientRecvTask_2_1,P_INFO,swLogPrintf("selected not fatal error socket:%d , errno:%d ");
315392,646007040,0,0,PLAT_AP,HTTP,httpClientRecvTask_3,P_INFO,swLogPrintf("recv select return:%d , errno:%d ");
315392,646008832,0,0,PLAT_AP,HTTP,httpClientRecvTask_3_1,P_INFO,swLogPrintf("no valid socket exit recv task , errno:%d ");
315392,646010880,0,0,PLAT_AP,HTTP,httpClientRecvTask_4,P_INFO,swLogPrintf("in HTTPSTAT_CONNECTED socket invalid exit recv task , errno:%d ");
315392,646012928,0,0,PLAT_AP,HTTP,httpClientRecvTask_5,P_INFO,swLogPrintf(".httpStatus:%d ");
315392,646017023,0,0,PLAT_AP,HTTP,httpClientRecvTask_6,P_INFO,swLogPrintf("http recv task no need running ");
315392,646019071,0,0,PLAT_AP,HTTP,httpClientSendTask_2,P_INFO,swLogPrintf("recv send command ");
315392,646021119,0,0,PLAT_AP,HTTP,httpClientSendTask_2_1,P_INFO,swLogPrintf("connect peer OK ");
315392,646023167,0,0,PLAT_AP,HTTP,httpClientSendTask_2_2,P_INFO,swLogPrintf("send HTTP request OK ");
315392,646023168,0,0,PLAT_AP,HTTP,httpClientSendTask_2_3,P_INFO,swLogPrintf("send HTTP request failed , result = %d , disconnect peer ");
315392,646027263,0,0,PLAT_AP,HTTP,httpClientSendTask_3_1,P_INFO,swLogPrintf("socketclose by peer addr or network reason ");
315392,646029311,0,0,PLAT_AP,HTTP,httpClientSendTask_4,P_INFO,swLogPrintf("recv stop command httpMutexAcquire ");
315392,646029312,0,0,PLAT_AP,HTTP,httpClientSendTask_4_1,P_INFO,swLogPrintf("http close 0x%x ");
315392,646033407,0,0,PLAT_AP,HTTP,httpClientSendTask_4_2,P_INFO,swLogPrintf("wait recv task deleted tiemout ");
315392,646033408,0,0,PLAT_AP,HTTP,httpClientSendTask_4_3,P_INFO,swLogPrintf("wait recv task deleted %d and send task exit ");
315392,646037503,0,0,PLAT_AP,HTTP,httpClientSendTask_0,P_INFO,swLogPrintf("recv error cmd ");
315392,646039551,0,0,PLAT_AP,HTTP,httpRestoreUrl_0_1,P_INFO,swLogPrintf("no save ' httpUrl.nvm ' before ");
315392,646041599,0,0,PLAT_AP,HTTP,httpRestoreUrl_0_2,P_INFO,swLogPrintf("can ' t read header , restore url fail ");
315392,646041600,0,0,PLAT_AP,HTTP,httpRestoreUrl_1,P_ERROR,swLogPrintf("url len = %d ");
315392,646045695,0,0,PLAT_AP,HTTP,httpRestoreUrl_0_3,P_INFO,swLogPrintf("can ' t read body ");
315392,646047743,0,0,PLAT_AP,HTTP,httpSaveUrltoNvm_0_1,P_INFO,swLogPrintf("can ' t open / create NVM: httpUrl.nvm , save NVM failed ");
315392,646049791,0,0,PLAT_AP,HTTP,httpSaveUrltoNvm_0_2,P_INFO,swLogPrintf("httpUrl.nvm , write the file header failed ");
315392,646051839,0,0,PLAT_AP,HTTP,httpSaveUrltoNvm_0_3,P_INFO,swLogPrintf("httpUrl.nvm , write the file body failed ");
315392,646051840,0,0,PLAT_AP,HTTP,httpSaveUrltoNvm_1,P_ERROR,swLogPrintf("url len = %d ");
315392,646055935,0,0,PLAT_AP,HTTP,httpRestoreConfig_0_1,P_INFO,swLogPrintf("can ' t open NVM: ' httpConfig.nvm ' , restore config fail ");
315392,646057983,0,0,PLAT_AP,HTTP,httpRestoreConfig_0_2,P_INFO,swLogPrintf("can ' t read header , restore config fail ");
315392,646060031,0,0,PLAT_AP,HTTP,httpRestoreConfig_0_3,P_INFO,swLogPrintf("can ' t read body ");
315392,646062079,0,0,PLAT_AP,HTTP,httpSaveConfig_0_1,P_INFO,swLogPrintf("can ' t open / create NVM: httpConfig.nvm , save NVM failed ");
315392,646064127,0,0,PLAT_AP,HTTP,httpSaveConfig_0_2,P_INFO,swLogPrintf("httpConfig.nvm , write the file header failed ");
315392,646066175,0,0,PLAT_AP,HTTP,httpSaveConfig_0_3,P_INFO,swLogPrintf("httpConfig.nvm , write the file body failed ");
315392,646066176,0,0,PLAT_AP,HTTP,httpSleepVote,P_INFO,swLogPrintf("vote ( %d ) ");
315392,646070271,0,0,PLAT_AP,HTTP,httpEngineInit_1,P_INFO,swLogPrintf("no config yet , use default config ");
315392,646072319,0,0,PLAT_AP,HTTP,httpEngineInit_2,P_INFO,swLogPrintf("has restore config from lfs ");
315392,646074367,0,0,PLAT_AP,HTTP,httpEngineInit_3,P_INFO,swLogPrintf("wakeup to restore url ");
315392,646076415,0,0,PLAT_AP,HTTP,httpEngineInit_4,P_INFO,swLogPrintf("reboot to clean url ");
315392,646076417,0,0,PLAT_AP,HTTP,parseURL_1,P_INFO,swLogPrintf("url = %s ");
315392,646078720,0,0,PLAT_AP,HTTP,parseURL_2,P_INFO,swLogPrintf("has port = %d , hostLen = %d ");
315392,646080512,0,0,PLAT_AP,HTTP,parseURL_3,P_INFO,swLogPrintf("no port , hostLen = %d ");
315392,646082560,0,0,PLAT_AP,HTTP,parseURL_4,P_INFO,swLogPrintf("has path , hostLen = %d ");
315392,646084609,0,0,PLAT_AP,HTTP,parseURL_5,P_INFO,swLogPrintf("host = %s ");
315392,646086657,0,0,PLAT_AP,HTTP,parseURL_6,P_INFO,swLogPrintf("path = %s ");
315392,646088704,0,0,PLAT_AP,HTTP,httpSendInter_1,P_INFO,swLogPrintf("%d bytes data has sent to server ");
315392,646090752,0,0,PLAT_AP,HTTP,httpSendInter_2,P_INFO,swLogPrintf("http_client: send failed ( errno:%d ) ");
315392,646093056,0,0,PLAT_AP,HTTP,httpSendInter_3,P_INFO,swLogPrintf("preSelTime: %d , current tick %d ");
315392,646096895,0,0,PLAT_AP,HTTP,httpRecv_2_1,P_INFO,swLogPrintf("recv return 0 fatal error return HTTP_CLOSED ");
315392,646098943,0,0,PLAT_AP,HTTP,httpRecv_2_2,P_INFO,swLogPrintf("recv return 0 connect error ");
315392,646098944,0,0,PLAT_AP,HTTP,httpRecv_4,P_INFO,swLogPrintf("recv [ not blocking ] return:%d ");
315392,646103039,0,0,PLAT_AP,HTTP,httpRecv_4_1,P_INFO,swLogPrintf("recv [ not blocking ] errno = = EWOULDBLOCK ");
315392,646103040,0,0,PLAT_AP,HTTP,httpRecv_8,P_INFO,swLogPrintf("mbedtls_ssl_read [ blocking ] return:-0x%x ");
315392,646107135,0,0,PLAT_AP,HTTP,httpRecv_9,P_INFO,swLogPrintf("mbedtls_ssl_read [ blocking ] return 0 connect error ");
315392,646107136,0,0,PLAT_AP,HTTP,httpRecv_a,P_INFO,swLogPrintf("mbedtls_ssl_read [ not blocking ] return:-0x%x ");
315392,646111231,0,0,PLAT_AP,HTTP,httpRecv_b,P_INFO,swLogPrintf("mbedtls_ssl_read [ not blocking ] errno = = EWOULDBLOCK ");
315392,646111232,0,0,PLAT_AP,HTTP,httpRecv_6,P_INFO,swLogPrintf("Connection error ( recv returned -0x%x ) ");
315392,646115327,0,0,PLAT_AP,HTTP,httpRecv_6_1,P_INFO,swLogPrintf("recv return 0 fatal error return HTTP_CLOSED ");
315392,646117375,0,0,PLAT_AP,HTTP,httpRecv_6_2,P_INFO,swLogPrintf("recv return 0 connect error ");
315392,646117376,0,0,PLAT_AP,HTTP,httpRecv_7,P_INFO,swLogPrintf("Read %d bytes ");
315392,646119680,0,0,PLAT_AP,HTTP,httpSendHeader_1,P_INFO,swLogPrintf("Range:bytes = %d-%d ");
315392,646121472,0,0,PLAT_AP,HTTP,httpSendUserdata_2,P_INFO,swLogPrintf("data->postBufLen = %d ");
315392,646123521,0,0,PLAT_AP,HTTP,httpSendUserdata_3,P_INFO,swLogPrintf("data->postBuf = %s ");
315392,646125568,0,0,PLAT_AP,HTTP,check_timeout_ret_1,P_INFO,swLogPrintf("wait %d x 20 s ");
315392,646129663,0,0,PLAT_AP,HTTP,check_timeout_ret_2,P_INFO,swLogPrintf("give up return HTTP_TIMEOUT ");
315392,646131711,0,0,PLAT_AP,HTTP,httpParseContent_2,P_INFO,swLogPrintf("all data are here ");
315392,646133759,0,0,PLAT_AP,HTTP,httpParseContent_3,P_INFO,swLogPrintf("still has more data on the way ");
315392,646134016,0,0,PLAT_AP,HTTP,httpParseContent_4,P_INFO,swLogPrintf("receive data len:%d , total:%d ");
315392,646135808,0,0,PLAT_AP,HTTP,httpParseContent_5,P_INFO,swLogPrintf("ret:%d ");
315392,646139903,0,0,PLAT_AP,HTTP,httpParseContent_6,P_INFO,swLogPrintf("no more data read ");
315392,646141951,0,0,PLAT_AP,HTTP,httpParseContent_7,P_INFO,swLogPrintf("content is chunked code ");
315392,646143999,0,0,PLAT_AP,HTTP,httpParseContent_7_2,P_INFO,swLogPrintf("no find crlf to read more ");
315392,646146047,0,0,PLAT_AP,HTTP,httpParseContent_7_1,P_INFO,swLogPrintf("Could not read chunk length ");
315392,646146304,0,0,PLAT_AP,HTTP,httpParseContent_8,P_INFO,swLogPrintf("need to obtaining %d bytes trfLen = %d ");
315392,646148352,0,0,PLAT_AP,HTTP,httpParseContent_9,P_INFO,swLogPrintf("trfLen = %d , readLen = %d ");
315392,646150400,0,0,PLAT_AP,HTTP,httpParseContent_9_1,P_INFO,swLogPrintf("templen = %d data->needObtainLen = %d ");
315392,646152192,0,0,PLAT_AP,HTTP,httpParseContent_9_2_1,P_WARNING,swLogPrintf("data->respBufLen = %d is too small , data has overflowed ");
315392,646154496,0,0,PLAT_AP,HTTP,httpParseContent_9_2,P_INFO,swLogPrintf("data->needObtainLen = %d total = %d ");
315392,646156544,0,0,PLAT_AP,HTTP,httpParseContent_9_3,P_INFO,swLogPrintf("return 12 moredata data->blockContentLen = %d , seqNum = %d ");
315392,646158592,0,0,PLAT_AP,HTTP,httpParseContent_9_4,P_INFO,swLogPrintf("templen = %d total = %d ");
315392,646160384,0,0,PLAT_AP,HTTP,httpParseContent_9_5,P_INFO,swLogPrintf("trfLen = %d data->needObtainLen and readLen set 0 ");
315392,646162432,0,0,PLAT_AP,HTTP,httpParseContent_9_6,P_INFO,swLogPrintf("readLen = %d ");
315392,646164480,0,0,PLAT_AP,HTTP,httpParseContent_9_7,P_INFO,swLogPrintf("to read maxlen = %d ");
315392,646166784,0,0,PLAT_AP,HTTP,httpParseContent_9_8,P_INFO,swLogPrintf("httpRecv return: %d , trfLen:%d ");
315392,646170623,0,0,PLAT_AP,HTTP,httpParseContent_10,P_INFO,swLogPrintf("search end of chunk ");
315392,646172671,0,0,PLAT_AP,HTTP,httpParseContent_10_1,P_INFO,swLogPrintf("Format error ");
315392,646174719,0,0,PLAT_AP,HTTP,httpParseContent_11,P_INFO,swLogPrintf("no more content ");
315392,646174720,0,0,PLAT_AP,HTTP,httpParseContent_12,P_INFO,swLogPrintf("all content over , seqNum = %d ");
315392,646178815,0,0,PLAT_AP,HTTP,httpParseHeader_1,P_INFO,swLogPrintf("Not a correct HTTP answer ");
315392,646178816,0,0,PLAT_AP,HTTP,httpParseHeader_2,P_INFO,swLogPrintf("Response code %d ");
315392,646180864,0,0,PLAT_AP,HTTP,httpParseHeader_5,P_INFO,swLogPrintf("End of headers , trfLen = %d ");
315392,646184959,0,0,PLAT_AP,HTTP,httpParseHeader_7,P_INFO,swLogPrintf("data->isChunked = true ");
315392,646185472,0,0,PLAT_AP,HTTP,httpParseHeader_6_1,P_INFO,swLogPrintf("data->contentRange = %d , current head = %d tail = %d ");
315392,646189055,0,0,PLAT_AP,HTTP,httpParseHeader_8,P_INFO,swLogPrintf("Could not parse header ");
315392,646189056,0,0,PLAT_AP,HTTP,httpConnectTimeout_2,P_INFO,swLogPrintf("select error fd set get errno = %d ");
315392,646193151,0,0,PLAT_AP,HTTP,httpConnectTimeout_3,P_INFO,swLogPrintf("errno = 115 ( EINPROGRESS ) connect success in time ( 10 s ) ");
315392,646195199,0,0,PLAT_AP,HTTP,httpConnectSocket_1,P_INFO,swLogPrintf("httpConnectSocket connect success ");
315392,646197247,0,0,PLAT_AP,HTTP,httpConnectSocket_2,P_ERROR,swLogPrintf("httpConnectSocket connect is ongoing ");
315392,646199295,0,0,PLAT_AP,HTTP,AhttpConnectSocket_3,P_INFO,swLogPrintf("httpConnectSocket connect success ");
315392,646199296,0,0,PLAT_AP,HTTP,httpConnectSocket_4,P_ERROR,swLogPrintf("httpConnectSocket connect fail , error code %d ");
315392,646201344,0,0,PLAT_AP,HTTP,httpConnectSocket_5,P_ERROR,swLogPrintf("httpConnectSocket connect fail %d ");
315392,646205439,0,0,PLAT_AP,HTTP,httpConn_1,P_INFO,swLogPrintf("HTTP connect unresolved dns ");
315392,646207487,0,0,PLAT_AP,HTTP,httpConn_2,P_INFO,swLogPrintf("HTTP connect success ");
315392,646208005,0,0,PLAT_AP,HTTP,sslDebug,P_INFO,swLogPrintf("%s ( %d ) :%s ");
315392,646209536,0,0,PLAT_AP,HTTP,httpSslConn_0,P_INFO,swLogPrintf("mbedtls_ctr_drbg_seed failed , value:-0x%x. ");
315392,646213631,0,0,PLAT_AP,HTTP,httpSslConn_1,P_INFO,swLogPrintf("STEP 0 . Loading the CA root certificate ... ");
315392,646213632,0,0,PLAT_AP,HTTP,httpSslConn_1_0,P_INFO,swLogPrintf("failed ! value:-0x%x ");
315392,646217727,0,0,PLAT_AP,HTTP,httpSslConn_1_1,P_INFO,swLogPrintf("STEP 0 . start prepare client cert ... ");
315392,646217728,0,0,PLAT_AP,HTTP,httpSslConn_1_2,P_INFO,swLogPrintf("failed! mbedtls_x509_crt_parse returned -0x%x \n ");
315392,646219776,0,0,PLAT_AP,HTTP,httpSslConn_test_2,P_INFO,swLogPrintf("context->clientPkLen = %d ");
315392,646221824,0,0,PLAT_AP,HTTP,httpSslConn_1_3,P_INFO,swLogPrintf("failed ! mbedtls_pk_parse_key returned -0x%x \n ");
315392,646225919,0,0,PLAT_AP,HTTP,httpSslConn_1_4,P_INFO,swLogPrintf("user set verify none ");
315392,646227967,0,0,PLAT_AP,HTTP,httpSslConn_1_5,P_INFO,swLogPrintf("set sni ");
315392,646230015,0,0,PLAT_AP,HTTP,httpSslConn_1_6,P_INFO,swLogPrintf("not ignore the crt ' s valid time ");
315392,646232063,0,0,PLAT_AP,HTTP,httpSslConn_1_7,P_INFO,swLogPrintf("ignore the crt ' s valid time ");
315392,646232064,0,0,PLAT_AP,HTTP,httpSslConn_2,P_INFO,swLogPrintf("STEP 1 . Connecting to PORT:%d ");
315392,646234112,0,0,PLAT_AP,HTTP,httpSslConn_2_1,P_INFO,swLogPrintf("failed ! mbedtls_net_connect returned -0x%x ");
315392,646238207,0,0,PLAT_AP,HTTP,httpSslConn_3,P_INFO,swLogPrintf("STEP 2 . Setting up the SSL / TLS structure... ");
315392,646238208,0,0,PLAT_AP,HTTP,httpSslConn_3_1,P_INFO,swLogPrintf("failed! mbedtls_ssl_config_defaults returned -0x%x ");
315392,646240256,0,0,PLAT_AP,HTTP,httpSslConn_3_3,P_INFO,swLogPrintf("failed! mbedtls_ssl_conf_own_cert returned -0x%x ");
315392,646242304,0,0,PLAT_AP,HTTP,httpSslConn_3_4,P_INFO,swLogPrintf("conf ciphersuite 0x%x ");
315392,646244352,0,0,PLAT_AP,HTTP,httpSslConn_3_5,P_INFO,swLogPrintf("failed! mbedtls_ssl_setup returned -0x%x ");
315392,646248447,0,0,PLAT_AP,HTTP,httpSslConn_6,P_INFO,swLogPrintf("has set cache and saved session ");
315392,646250495,0,0,PLAT_AP,HTTP,httpSslConn_6_1,P_INFO,swLogPrintf("current connect is the same ");
315392,646252543,0,0,PLAT_AP,HTTP,httpSslConn_6_2,P_INFO,swLogPrintf("session_load success ");
315392,646252544,0,0,PLAT_AP,HTTP,httpSslConn_6_4,P_INFO,swLogPrintf("failed! mbedtls_ssl_set_session returned -0x%x ");
315392,646254592,0,0,PLAT_AP,HTTP,httpSslConn_6_5,P_INFO,swLogPrintf("failed! mbedtls_ssl_session_load returned -0x%x no session resumption ");
315392,646258687,0,0,PLAT_AP,HTTP,httpSslConn_4,P_INFO,swLogPrintf("STEP 3 . Performing the SSL / TLS handshake... ");
315392,646258688,0,0,PLAT_AP,HTTP,httpSslConn_4_1,P_INFO,swLogPrintf("failed ! mbedtls_ssl_handshake returned -0x%x ");
315392,646262783,0,0,PLAT_AP,HTTP,httpSslConn_5,P_INFO,swLogPrintf("STEP 4 . Verifying peer X.509 certificate.. ");
315392,646264831,0,0,PLAT_AP,HTTP,httpSslConn_5_1,P_INFO,swLogPrintf("failed ! verify result not confirmed. ");
315392,646264832,0,0,PLAT_AP,HTTP,httpSslConn_7_1,P_INFO,swLogPrintf("not save session yet ( %d ) ");
315392,646268927,0,0,PLAT_AP,HTTP,httpSslConn_7_2,P_INFO,swLogPrintf("current connect is the same ");
315392,646270975,0,0,PLAT_AP,HTTP,httpSslConn_7_3,P_INFO,swLogPrintf("server has give a new ticket , save it ");
315392,646273023,0,0,PLAT_AP,HTTP,httpSslConn_7_4,P_INFO,swLogPrintf("current connect is diff save new session ");
315392,646273024,0,0,PLAT_AP,HTTP,httpSslConn_7_5,P_INFO,swLogPrintf("new session need %d bytes ");
315392,646275072,0,0,PLAT_AP,HTTP,httpSslConn_7_6,P_INFO,swLogPrintf("failed ! mbedtls_ssl_session_saved returned -0x%x ");
315392,646279167,0,0,PLAT_AP,HTTP,httpSslConn_7_7,P_INFO,swLogPrintf("new session get success ");
315392,646281215,0,0,PLAT_AP,HTTP,httpParseURL_0,P_INFO,swLogPrintf("parseURL fail ");
315392,646281216,0,0,PLAT_AP,HTTP,httpParseURL_1,P_INFO,swLogPrintf("isHttps = %d ");
315392,646283264,0,0,PLAT_AP,HTTP,httpClose,P_INFO,swLogPrintf("httpClose , ret = %d ");
315392,646287359,0,0,PLAT_AP,HTTP,httpRecvResponse_1,P_INFO,swLogPrintf("Receiving response ");
315392,646289407,0,0,PLAT_AP,HTTP,httpRecvResponse_2,P_INFO,swLogPrintf("data->isMoreContent is true continue parseContent ");
315392,646289408,0,0,PLAT_AP,HTTP,httpRecvResponse_3,P_INFO,swLogPrintf("has read %d bytes ");
315392,646291712,0,0,PLAT_AP,HTTP,mbedtls_ssl_prepare_handshake_record,P_INFO,swLogPrintf("in_msglen:%d , in_hslen:%d ");
315392,646293760,0,0,PLAT_AP,HTTP,ssl_parse_record_header_1,P_INFO,swLogPrintf("record data len:%d data_offset:%d ");
315392,646295552,0,0,PLAT_AP,HTTP,ssl_parse_record_header_2,P_INFO,swLogPrintf("record buf_len:%d ");
315392,646299647,0,0,PLAT_AP,HTTP,ssl_get_next_record_1,P_INFO,swLogPrintf("to fetch head ");
315392,646299648,0,0,PLAT_AP,HTTP,ssl_get_next_record_2,P_INFO,swLogPrintf("to fetch content rec.buf_len:%d ");
315392,646301696,0,0,PLAT_AP,HTTP,ssl_get_next_record_3,P_INFO,swLogPrintf("ssl->in_msglen = %d ");
316416,648022272,0,0,PLAT_AP,SMS,SearchForTIValue_1,P_VALUE,swLogPrintf("Can ' t found matched TI value %d , TI flag %d ");
316416,648026111,0,0,PLAT_AP,SMS,CesmscmFindEntity_1,P_WARNING,swLogPrintf("Can ' t find free TI value! ");
316416,648026113,0,0,PLAT_AP,SSL,sslCFG_1,P_INFO,swLogPrintf("ciphstr = %s ");
316416,648030207,0,0,PLAT_AP,SSL,sslpUrcInd_1,P_ERROR,swLogPrintf("invalid paras ");
316416,648032255,0,0,PLAT_AP,SSL,sslOutputInd_1,P_ERROR,swLogPrintf("invalid paras ");
316416,648032512,0,0,PLAT_AP,SSL,sslFlowMutexCreate_1,P_INFO,swLogPrintf("reqhandle:0x%x , pid = 0x%x ");
316416,648034304,0,0,PLAT_AP,SSL,sslFlowMutexDelete_1,P_INFO,swLogPrintf("pid = 0x%x ");
316416,648036608,0,0,PLAT_AP,SSL,setSSL_1,P_INFO,swLogPrintf("sslCxtID = %d , ciphersuite = 0x%X ");
316416,648038917,0,0,PLAT_AP,SSL,sslDebug,P_INFO,swLogPrintf("%s ( %d ) :%s ");
316416,648040448,0,0,PLAT_AP,SSL,sslConnect_0,P_INFO,swLogPrintf("mbedtls_ctr_drbg_seed failed , value:-0x%x. ");
316416,648044543,0,0,PLAT_AP,SSL,sslConnect_1,P_INFO,swLogPrintf("STEP 0 . Loading the CA root certificate ... ");
316416,648044544,0,0,PLAT_AP,SSL,sslConnect_1_0,P_INFO,swLogPrintf("failed ! value:-0x%x ");
316416,648048639,0,0,PLAT_AP,SSL,sslConnect_1_1,P_INFO,swLogPrintf("STEP 0 . start prepare client cert ... ");
316416,648048640,0,0,PLAT_AP,SSL,sslConnect_1_2,P_INFO,swLogPrintf("failed! mbedtls_x509_crt_parse returned -0x%x \n ");
316416,648050688,0,0,PLAT_AP,SSL,sslConnect_1_3,P_INFO,swLogPrintf("failed ! mbedtls_pk_parse_key returned -0x%x \n ");
316416,648054783,0,0,PLAT_AP,SSL,sslConnect_1_4,P_INFO,swLogPrintf("user set verify none ");
316416,648056831,0,0,PLAT_AP,SSL,sslConnect_1_5,P_INFO,swLogPrintf("set sni ");
316416,648058879,0,0,PLAT_AP,SSL,sslConnect_1_6,P_INFO,swLogPrintf("not ignore the crt ' s valid time ");
316416,648060927,0,0,PLAT_AP,SSL,sslConnect_1_7,P_INFO,swLogPrintf("ignore the crt ' s valid time ");
316416,648060928,0,0,PLAT_AP,SSL,sslConnect_2,P_INFO,swLogPrintf("STEP 1 . Connecting to PORT:%d ");
316416,648062976,0,0,PLAT_AP,SSL,sslConnect_2_1,P_INFO,swLogPrintf("failed ! mbedtls_net_connect returned -0x%x ");
316416,648067071,0,0,PLAT_AP,SSL,sslConnect_3,P_INFO,swLogPrintf("STEP 2 . Setting up the SSL / TLS structure... ");
316416,648067072,0,0,PLAT_AP,SSL,sslConnect_3_1,P_INFO,swLogPrintf("failed! mbedtls_ssl_config_defaults returned -0x%x ");
316416,648069120,0,0,PLAT_AP,SSL,sslConnect_3_3,P_INFO,swLogPrintf("failed! mbedtls_ssl_conf_own_cert returned -0x%x ");
316416,648071168,0,0,PLAT_AP,SSL,sslConnect_3_4,P_INFO,swLogPrintf("conf ciphersuite 0x%x ");
316416,648073216,0,0,PLAT_AP,SSL,sslConnect_3_5,P_INFO,swLogPrintf("failed! mbedtls_ssl_setup returned -0x%x ");
316416,648077311,0,0,PLAT_AP,SSL,sslConnect_7,P_INFO,swLogPrintf("has set cache and saved session ");
316416,648079359,0,0,PLAT_AP,SSL,sslConnect_7_1,P_INFO,swLogPrintf("current connect is the same ");
316416,648081407,0,0,PLAT_AP,SSL,sslConnect_7_2,P_INFO,swLogPrintf("session_load success ");
316416,648081408,0,0,PLAT_AP,SSL,sslConnect_7_4,P_INFO,swLogPrintf("failed! mbedtls_ssl_set_session returned -0x%x ");
316416,648083456,0,0,PLAT_AP,SSL,sslConnect_7_5,P_INFO,swLogPrintf("failed! mbedtls_ssl_session_load returned -0x%x no session resumption ");
316416,648087551,0,0,PLAT_AP,SSL,sslConnect_4,P_INFO,swLogPrintf("STEP 3 . Performing the SSL / TLS handshake... ");
316416,648087552,0,0,PLAT_AP,SSL,sslConnect_4_1,P_INFO,swLogPrintf("failed ! mbedtls_ssl_handshake returned -0x%x ");
316416,648091647,0,0,PLAT_AP,SSL,sslConnect_5_1,P_INFO,swLogPrintf("failed ! verify result not confirmed. ");
316416,648091648,0,0,PLAT_AP,SSL,sslConnect_6_1,P_INFO,swLogPrintf("not save session yet ( %d ) ");
316416,648095743,0,0,PLAT_AP,SSL,sslConnect_6_2,P_INFO,swLogPrintf("current connect is the same ");
316416,648097791,0,0,PLAT_AP,SSL,sslConnect_6_3,P_INFO,swLogPrintf("server has give a new ticket , save it ");
316416,648099839,0,0,PLAT_AP,SSL,sslConnect_6_4,P_INFO,swLogPrintf("current connect is diff save new session ");
316416,648099840,0,0,PLAT_AP,SSL,sslConnect_6_5,P_INFO,swLogPrintf("new session need %d bytes ");
316416,648101888,0,0,PLAT_AP,SSL,sslConnect_6_6,P_INFO,swLogPrintf("failed ! mbedtls_ssl_session_saved returned -0x%x ");
316416,648105983,0,0,PLAT_AP,SSL,sslConnect_6_7,P_INFO,swLogPrintf("new session get success ");
316416,648108031,0,0,PLAT_AP,SSL,sslClose_0,P_INFO,swLogPrintf("ssl = = NULL ");
316416,648110079,0,0,PLAT_AP,SSL,sslClose_1,P_INFO,swLogPrintf("free ssl ");
316416,648112127,0,0,PLAT_AP,SSL,sslOutputRecvData_0,P_INFO,swLogPrintf("memory not enough , close connection ");
316416,648112128,0,0,PLAT_AP,SSL,sslOutputRecvData_1,P_INFO,swLogPrintf("output:%d bytes ");
316416,648114176,0,0,PLAT_AP,SSL,sslRecv_1,P_INFO,swLogPrintf("mbedtls_ssl_read [ blocking ] return:-0x%x ");
316416,648118271,0,0,PLAT_AP,SSL,sslRecv_2,P_INFO,swLogPrintf("mbedtls_ssl_read [ blocking ] return 0 connect error ");
316416,648118272,0,0,PLAT_AP,SSL,sslRecv_3,P_INFO,swLogPrintf("mbedtls_ssl_read [ not blocking ] return:-0x%x ");
316416,648122367,0,0,PLAT_AP,SSL,sslRecv_4,P_INFO,swLogPrintf("mbedtls_ssl_read [ not blocking ] errno = = EWOULDBLOCK ");
316416,648122368,0,0,PLAT_AP,SSL,sslRecv_5,P_INFO,swLogPrintf("Connection error ( recv returned -0x%x ) ");
316416,648124416,0,0,PLAT_AP,SSL,sslRecv_6,P_INFO,swLogPrintf("Read %d bytes ");
316416,648126464,0,0,PLAT_AP,SSL,sslSleepVote,P_INFO,swLogPrintf("vote ( %d ) ");
316416,648128512,0,0,PLAT_AP,SSL,sslRecvTask_1_0,P_INFO,swLogPrintf("client ( %d ) read timeout , out read loop ");
316416,648130560,0,0,PLAT_AP,SSL,sslRecvTask_1_1,P_INFO,swLogPrintf("client ( %d ) peer close , out read loop ");
316416,648132864,0,0,PLAT_AP,SSL,sslRecvTask_1_2,P_INFO,swLogPrintf("client ( %d ) ret = -0x%x , out read loop ");
316416,648136703,0,0,PLAT_AP,SSL,sslRecvTask_debug,P_INFO,swLogPrintf("release mutex ");
316416,648136960,0,0,PLAT_AP,SSL,sslRecvTask_2_1,P_INFO,swLogPrintf("client ( %d ) socket meet fatal err:%d , to disconnet status ");
316416,648139008,0,0,PLAT_AP,SSL,sslRecvTask_2_2,P_INFO,swLogPrintf("selected not fatal error client:%d , errno:%d ");
316416,648142847,0,0,PLAT_AP,SSL,sslRecvTask_3,P_INFO,swLogPrintf("no socket connect exit recv task ");
316416,648144895,0,0,PLAT_AP,SSL,sslRecvTask_4,P_INFO,swLogPrintf("no client connect break ");
316416,648146943,0,0,PLAT_AP,SSL,sslRecvTask_5,P_INFO,swLogPrintf("recv task exit ");
316416,648148991,0,0,PLAT_AP,SSL,sslNewClientContext_0,P_INFO,swLogPrintf("ssl not null ");
316416,648148993,0,0,PLAT_AP,SSL,sslNewClientContext_1,P_INFO,swLogPrintf("serverAddr ( %s ) ");
316416,648151040,0,0,PLAT_AP,SSL,sslNewClientContext_2,P_INFO,swLogPrintf("serverPort ( %d ) ");
316416,648153088,0,0,PLAT_AP,SSL,sslClientTask_1_1,P_INFO,swLogPrintf("set SSL failed %d ");
316416,648157183,0,0,PLAT_AP,SSL,sslClientTask_1,P_INFO,swLogPrintf("SSL connect and handshake OK ");
316416,648157184,0,0,PLAT_AP,SSL,sslClientTask_1_2,P_INFO,swLogPrintf("ssl connect failed %d ");
316416,648161279,0,0,PLAT_AP,SSL,sslClientTask_4,P_INFO,swLogPrintf("SSL send data OK ");
316416,648161280,0,0,PLAT_AP,SSL,sslClientTask_5,P_INFO,swLogPrintf("SSL send data failed %d ");
316416,648163328,0,0,PLAT_AP,SSL,sslClientTask_6,P_INFO,swLogPrintf("socketclose by peer addr or network reason , client:%d ");
316416,648165376,0,0,PLAT_AP,SSL,sslClientTask_7,P_INFO,swLogPrintf("recv close command from AT close client:%d ");
316416,648167424,0,0,PLAT_AP,SSL,sslClientTask_a,P_INFO,swLogPrintf("recv disconnect command current passthrough client:%d ");
316416,648171519,0,0,PLAT_AP,SSL,sslClientTask_a_1,P_INFO,swLogPrintf("go command state ");
316416,648171521,0,0,PLAT_AP,SSL,sslClientTask_8,P_INFO,swLogPrintf("handle SSLSTATE command %s ");
316416,648175615,0,0,PLAT_AP,SSL,sslClientTask_8_1,P_INFO,swLogPrintf("it is ipv4 type ");
316416,648177663,0,0,PLAT_AP,SSL,sslClientTask_8_2,P_INFO,swLogPrintf("it is ipv6 type ");
316416,648179711,0,0,PLAT_AP,SSL,sslClientTask_8_3,P_INFO,swLogPrintf("get ip failed ");
316416,648181759,0,0,PLAT_AP,SSL,sslClientTask_9,P_INFO,swLogPrintf("recv error cmd ");
316416,648183807,0,0,PLAT_AP,SSL,sslClientTask_10,P_INFO,swLogPrintf("no client in use sslclienttask exit ");
316416,648183808,0,0,PLAT_AP,SSL,sslClientOpen_1,P_INFO,swLogPrintf("TO SEND AT+SSLOPEN reqHandle:0x%x ");
316416,648187903,0,0,PLAT_AP,SSL,sslClientSend_1,P_INFO,swLogPrintf("TO SEND AT+SSLSEND ");
316416,648189951,0,0,PLAT_AP,SSL,sslClientClose_1,P_INFO,swLogPrintf("TO SEND AT+SSLCLOSE ");
316416,648191999,0,0,PLAT_AP,SSL,sslClientDisconncet_1,P_INFO,swLogPrintf("out the passthrough state and disconncet with server ");
316416,648194047,0,0,PLAT_AP,SSL,sslClientState_1,P_INFO,swLogPrintf("TO SEND AT+SSLSTATE ");
316416,648194048,0,0,PLAT_AP,SSL,sslPsthResume_1,P_INFO,swLogPrintf("channelId:%d enter online data state ");
316416,648196096,0,0,PLAT_AP,SSL,sslInputPSTHData_1,P_INFO,swLogPrintf("under PASSTHROUGH mode , send datalen:%d ");
316416,648200191,0,0,PLAT_AP,SSL,sslInputPSTHData_2,P_INFO,swLogPrintf("received +++ operation , exit passthrough mode ");
316416,648200448,0,0,PLAT_AP,SSL,sslPSTHAndOnlineCmdCallback_1,P_WARNING,swLogPrintf("AT CHAN: %d , chanState: %d not right , should not enter ssl bypass data mode ");
316416,648202496,0,0,PLAT_AP,SSL,sslPSTHAndOnlineCmdCallback_2,P_WARNING,swLogPrintf("AT CHAN: %d , chanState: %d not ATC_SSL_PASSTHROUGH_STATE , should not enter here ");
316416,648206335,0,0,PLAT_AP,SSL,sslPSTHAndOnlineCmdCallback_2_1,P_INFO,swLogPrintf("go to online command state ");
316416,648208383,0,0,PLAT_AP,SSL,sslPSTHAndOnlineCmdCallback_2_2,P_INFO,swLogPrintf("call sslClientDisconncet ");
316416,648208640,0,0,PLAT_AP,SSL,sslPSTHAndOnlineCmdCallback_3,P_WARNING,swLogPrintf("AT CHAN: %d , chanState: %d not ATC_ONLINE_COMMAND_STATE , should not enter here ");
316416,648210944,0,0,PLAT_AP,SSL,sslPSTHAndOnlineCmdCallback_4,P_WARNING,swLogPrintf("AT CHAN: %d , chanState: %d , can ' t proc evtId: %d ");
316416,648214527,0,0,PLAT_AP,SSL,sslRestoreCxtList_0_1,P_INFO,swLogPrintf("can ' t open NVM: ' sslcxtlist.nvm ' , restore list fail ");
316416,648216575,0,0,PLAT_AP,SSL,sslRestoreCxtList_0_2,P_INFO,swLogPrintf("can ' t read header , restore list fail ");
316416,648216576,0,0,PLAT_AP,SSL,sslRestoreCxtList_1,P_INFO,swLogPrintf("itemNumber = %d ");
316416,648220671,0,0,PLAT_AP,SSL,sslRestoreCxtList_0_3,P_INFO,swLogPrintf("can ' t read body ");
316416,648222719,0,0,PLAT_AP,SSL,sslSaveCxtList_0_1,P_INFO,swLogPrintf("can ' t open / create NVM: sslcxtlist.nvm , save NVM failed ");
316416,648224767,0,0,PLAT_AP,SSL,sslSaveCxtList_0_2,P_INFO,swLogPrintf("sslcxtlist.nvm , write the file header failed ");
316416,648226815,0,0,PLAT_AP,SSL,sslSaveCxtList_0_3,P_INFO,swLogPrintf("sslcxtlist.nvm , write the file body failed ");
316416,648226816,0,0,PLAT_AP,SSL,sslSaveCxtList_1,P_INFO,swLogPrintf("save the cxtId:%d ");
316416,648230911,0,0,PLAT_AP,SSL,sslEngineInit_1,P_INFO,swLogPrintf("wakeup from hib or slp2 ");
316416,648232959,0,0,PLAT_AP,SSL,sslEngineInit_2,P_INFO,swLogPrintf("system reboot ");
316416,648235007,0,0,PLAT_AP,SSL,sslEngineInit_3,P_INFO,swLogPrintf("restore context fail , use default params ");
316416,648235008,0,0,PLAT_AP,SSL,sslListFind_1,P_INFO,swLogPrintf("find the cxtId:%d ");
316416,648237057,0,0,PLAT_AP,SSL,loadFile2Buff_0,P_INFO,swLogPrintf("fail to open such file:%s ");
316416,648239105,0,0,PLAT_AP,SSL,loadFile2Buff_1,P_INFO,swLogPrintf("file:%s ");
316416,648241152,0,0,PLAT_AP,SSL,loadFile2Buff_0_1,P_INFO,swLogPrintf("filesize = %x ");
316416,648243200,0,0,PLAT_AP,SSL,loadFile2Buff_2,P_INFO,swLogPrintf("filesize = %d ");
316416,648247295,0,0,PLAT_AP,SSL,loadFile2Buff_0_2,P_INFO,swLogPrintf("read failed ");
316416,648249343,0,0,PLAT_AP,SSL,sslRestoreSession_0_1,P_INFO,swLogPrintf("can ' t open NVM: ' ssi.nvm ' ");
316416,648251391,0,0,PLAT_AP,SSL,sslRestoreSession_0_2,P_INFO,swLogPrintf("can ' t read header , restore session fail ");
316416,648251392,0,0,PLAT_AP,SSL,sslRestoreSession_1,P_INFO,swLogPrintf("read sslSessionCxt , malloc it = 0x%x ");
316416,648255487,0,0,PLAT_AP,SSL,sslRestoreSession_0_3,P_INFO,swLogPrintf("can ' t read body ");
316416,648257535,0,0,PLAT_AP,SSL,sslSaveSession_0_1,P_INFO,swLogPrintf("can ' t open / create NVM: ssi.nvm , save NVM failed ");
316416,648259583,0,0,PLAT_AP,SSL,sslSaveSession_0_2,P_INFO,swLogPrintf("ssi.nvm , write the file header failed ");
316416,648261631,0,0,PLAT_AP,SSL,sslSaveSession_0_3,P_INFO,swLogPrintf("ssi.nvm , write the file body failed ");
316416,648263679,0,0,PLAT_AP,SSL,sslSaveSession_1,P_INFO,swLogPrintf("ssi.nvm save success ");
316416,648263680,0,0,PLAT_AP,SSL,mbedtls_net_send_1,P_INFO,swLogPrintf("%d bytes data has sent to server ");
316416,648265728,0,0,PLAT_AP,SSL,mbedtls_net_send_2,P_INFO,swLogPrintf("send failed ( errno:%d ) ");
316416,648268032,0,0,PLAT_AP,SSL,mbedtls_net_send_3,P_INFO,swLogPrintf("preSelTime: %d , current tick %d ");
316416,648269824,0,0,PLAT_AP,SSL,mbedtls_ssl_handshake_client_step_1,P_INFO,swLogPrintf("client state: %d ");
316416,648273919,0,0,PLAT_AP,SSL,mbedtls_ssl_parse_certificate_1,P_INFO,swLogPrintf("enter ");
316416,648273921,0,0,PLAT_AP,SSL,mbedtls_x509_time_is_past_1,P_INFO,swLogPrintf("now time = %s ");
316416,648275968,0,0,PLAT_AP,SSL,mbedtls_x509_time_is_past_2,P_INFO,swLogPrintf("expire year = %d ");
316416,648280063,0,0,PLAT_AP,SSL,mbedtls_x509_time_is_past_3,P_INFO,swLogPrintf("get time failed ");
316416,648282111,0,0,PLAT_AP,SSL,mbedtls_x509_time_is_past_4,P_INFO,swLogPrintf("no check ");
316416,648282113,0,0,PLAT_AP,SSL,mbedtls_x509_time_is_future_1,P_INFO,swLogPrintf("now time = %s ");
316416,648284160,0,0,PLAT_AP,SSL,mbedtls_x509_time_is_future_2,P_INFO,swLogPrintf("valid begin year = %d ");
316416,648288255,0,0,PLAT_AP,SSL,mbedtls_x509_time_is_future_3,P_INFO,swLogPrintf("get time failed ");
316416,648290303,0,0,PLAT_AP,SSL,mbedtls_x509_time_is_future_4,P_INFO,swLogPrintf("no check ");
316416,648292351,0,0,PLAT_AP,SSL,x509_crt_verifycrl_1,P_INFO,swLogPrintf("check the crl_list ");
316416,648294399,0,0,PLAT_AP,SSL,x509_crt_find_parent_in_1,P_INFO,swLogPrintf("check the parent ");
316416,648296447,0,0,PLAT_AP,SSL,x509_crt_verify_chain_1,P_INFO,swLogPrintf("check the child ");
316416,648296448,0,0,PLAT_AP,SSL,x509_crt_verify_chain_2,P_INFO,swLogPrintf("* flags = 0x%x ");
316416,648298496,0,0,PLAT_AP,SSL,x509_crt_verify_restartable_ca_cb_1,P_INFO,swLogPrintf("* flags = 0x%x , verify cert failed ");
317440,650120192,0,0,PLAT_AP,PLA_MIDWARE,smsCSCAGetCnf_1,P_INFO,swLogPrintf("SC address present:%d , Type:%d , Address Len:%d , bcd [ 0 ] :%c , bcd [ 1 ] :%c ");
317440,650121216,0,0,PLAT_AP,PLA_MIDWARE,smsCMGLSmsMsgRecordCnf_1,P_WARNING,swLogPrintf("PDU of index: %d is wrong ");
317440,650125311,0,0,PLAT_AP,PLA_MIDWARE,mwAonSockInfoChanged_s_1,P_SIG,swLogPrintf("MW AON , socket AON info changed ");
317440,650127359,0,0,PLAT_AP,PLA_MIDWARE,mwAonPsDialInfoChanged_s_1,P_SIG,swLogPrintf("MW AON , PS DIAL AON info changed ");
317440,650129407,0,0,PLAT_AP,PLA_MIDWARE,mwAonSetDefaultAonDnsCfgAndSave_1,P_ERROR,swLogPrintf("MW AON , can not find adpt dns aon ");
317440,650129408,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgAccessLock_e_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t lock the mutex , retErr: %d ");
317440,650131456,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgAccessUnLock_e_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t unlock the mutex , retErr: %d ");
317440,650133504,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmParseParamValue_id_w_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t parse paramId: %d ");
317440,650135808,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmParseParamValue_unkown_param_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t parse paramID: %d , type: %d , ignore it ");
317440,650137601,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_w_1,P_WARNING,swLogPrintf("MW NVM CFG , NVM file: %s , can ' t read , using default value ");
317440,650139905,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_s_1,P_SIG,swLogPrintf("MW NVM CFG , NVM file: %s , read OK , bodySize: %d ");
317440,650141696,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_parse_e_1,P_ERROR,swLogPrintf("MW CFG NVM , get next parameter err: %d ");
317440,650144000,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_rm_w_1,P_WARNING,swLogPrintf("MW CFG NVM , can ' t parse paramId: %d , type: %d , remove this param ");
317440,650147839,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_parse_e_2,P_WARNING,swLogPrintf("MW CFG NVM , parse file error , all param reset to default , and delete NVM file ");
317440,650149887,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_rm_w_2,P_WARNING,swLogPrintf("MW CFG NVM , some param removed , need write back to flash ");
317440,650150656,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_input_e_1,P_ERROR,swLogPrintf("MW CFG NVM , save param , input error , paramId: %d , cfgTpe: %d , paramLen: %d , pParamValue: 0x%x ");
317440,650152192,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_input_e_2,P_ERROR,swLogPrintf("MW CFG NVM , save param , input error , paramId: %d , cfgTpe: TV , but paramLen: %d > 2 ");
317440,650154240,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_input_e_3,P_ERROR,swLogPrintf("MW CFG NVM , save param , input error , paramId: %d , cfgTpe: TLV , but paramLen: %d < = 2 ");
317440,650156033,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_read_w_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t read NVM file: %s ");
317440,650158336,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_update_w_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t update / add paramId: %d into NVM buf , retErr: %d ");
317440,650160384,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_write_w_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t write paramId: %d into NVM file , retErr: %d ");
317440,650164223,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgInit_e_1,P_ERROR,swLogPrintf("MW NVM CFG , can ' t create mutex ");
317440,650164224,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveAtChanConfig_e_1,P_ERROR,swLogPrintf("MW NVM CFG , invalid AT chanId: %d , can ' t update AtChanCfg into NVM ");
317440,650167040,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgGetCsmpConfig_1,P_INFO,swLogPrintf("MW NVM CFG , Read CSMP param from NVM , FO: %d , VP: %d , PID: %d , DCS: %d ");
317440,650168832,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgGetCpmsConfig_1,P_INFO,swLogPrintf("MW NVM CFG , Read CPMS param , mem1:%d , mem2:%d , mem3:%d ");
317440,650170880,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgGetCscaConfig_1,P_INFO,swLogPrintf("MW NVM CFG , Read CSCA param , SC address present:%d , Type:%d , Address Len:%d ");
317440,650173440,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgGetCnmiConfig_1,P_INFO,swLogPrintf("MW NVM CFG , Read CNMI param from NVM , mode:%d , mt:%d , bm:%d , ds:%d , bfr:%d ");
317440,650174464,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSetAndSavePowerOnCfun_e_1,P_ERROR,swLogPrintf("MW NVM CFG , invalid power on CFUN: %d , can ' t set ");
317440,650176513,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoRead_w_1,P_WARNING,swLogPrintf("MW NVM INFO , NVM file: %s , can ' t read , using default value ");
317440,650179585,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoRead_w_2,P_WARNING,swLogPrintf("MW NVM INFO , NVM file: %s , file size not right: %d / %d , or version not right: %d / %d , using default value ");
317440,650182655,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoGetPhyDebugAtCmdInfo_w_1,P_WARNING,swLogPrintf("MW NVM INFO , can ' t get PHY debug AT info , as NVM not read ");
317440,650183168,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoSetPhyDebugAtCmdInfo_w_1,P_WARNING,swLogPrintf("MW NVM INFO , PHY AY debug info size: %d > bufSize: %d , only could write: %d into NVM ");
317440,650186751,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoSetPhyDebugAtCmdInfo_w_2,P_WARNING,swLogPrintf("MW NVM INFO , can ' t set PHY debug AT info , as NVM not read ");
317440,650186753,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsRead_1,P_DEBUG,swLogPrintf("MW NVM SMS , NVM file: %s , can ' t read , using default value ");
317440,650189825,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsRead_2,P_DEBUG,swLogPrintf("MW NVM INFO , NVM file: %s , file size not right: %d / %d , or version not right: %d / %d , using default value ");
317440,650190848,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsGetRecByIndex_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid index: %d , can ' t get SMS record from NVM ");
317440,650194943,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsGetRecByIndex_2,P_WARNING,swLogPrintf("MW NVM SMS , No memory to get SMS storage information from NVRAM ");
317440,650196991,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsGetRecByIndex_3,P_WARNING,swLogPrintf("MW NVM SMS , Read SMS Storage memory failure! ");
317440,650197248,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsGetRecByIndex_4,P_WARNING,swLogPrintf("MW NVM SMS , index:%d , stored number:%d , there is no SMS message. ");
317440,650199040,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid index: %d , can ' t update SMS record ");
317440,650203135,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_2,P_WARNING,swLogPrintf("MW NVM SMS , memory allocate fail when saveing SMS to NVRAM! ");
317440,650205183,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_3,P_WARNING,swLogPrintf("MW NVM SMS , read SMS Storage memory fail! ");
317440,650205440,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_4,P_WARNING,swLogPrintf("MW NVM SMS , index:%d , stored number:%d , the specificed stored SMS message record is NULL. ");
317440,650207232,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_5,P_INFO,swLogPrintf("MW NVM SMS , Updated SMS Record with the index ( %d ) Done and Saved to NVRAM ");
317440,650211327,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_1,P_WARNING,swLogPrintf("MW NVM SMS , No memory to get SMS storage information from NVRAM ");
317440,650213375,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_2,P_WARNING,swLogPrintf("MW NVM SMS , Read SMS Storage memory failure , try again ! ");
317440,650215423,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_3,P_WARNING,swLogPrintf("MW NVM SMS , Read SMS Storage memory failure ! ");
317440,650217471,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_4,P_WARNING,swLogPrintf("MW NVM SMS , SMS Record Box is full , can ' t add SMS record to NVM ");
317440,650219519,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_5,P_WARNING,swLogPrintf("MW NVM SMS , SMS Record Box is full , can ' t add SMS record to NVM ");
317440,650219776,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_6,P_INFO,swLogPrintf("MW NVM SMS , added SMS success , index:%d , stored Counter:%d ");
317440,650221568,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid index: %d , can ' t delete SMS record from NVM ");
317440,650225663,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_2,P_WARNING,swLogPrintf("MW NVM SMS , memory allocate failed when get SMS storage information from NVRAM ");
317440,650227711,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_3,P_WARNING,swLogPrintf("MW NVM SMS , read SMS Storage memory failure ! ");
317440,650227712,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_4,P_INFO,swLogPrintf("MW NVM SMS , the specificed index: %d SMS record has been Deleted! ");
317440,650230016,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_5,P_INFO,swLogPrintf("MW NVM SMS , deleted SMS specified index ( %d ) success , SMS stored number:%d ");
317440,650231808,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelRecByStatus_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid Status: %d , can ' t delete SMS records from NVM ");
317440,650233856,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelRecByStatus_2,P_INFO,swLogPrintf("MW NVM SMS , No need to Deleted: %d , SMS records list is NULL ");
317440,650236160,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelRecByStatus_3,P_INFO,swLogPrintf("MW NVM SMS , Deleted the specified Status SMS done , delete Statu:%d success , remaining SMS number:%d ");
317440,650237952,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByStatus_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid Status: %d , can ' t delete SMS records from NVM ");
317440,650242047,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByStatus_2,P_WARNING,swLogPrintf("MW NVM SMS , No memory to get SMS storage information from NVRAM ");
317440,650244095,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByStatus_3,P_WARNING,swLogPrintf("MW NVM SMS , Read SMS Storage memory failure ! ");
317440,650246143,0,0,PLAT_AP,PLA_MIDWARE,npiLoadNvmConfig_1,P_ERROR,swLogPrintf("Can ' t open NVM: ' npiconfig.nvm ' , use the defult value ");
317440,650248191,0,0,PLAT_AP,PLA_MIDWARE,npiLoadNvmConfig_2,P_ERROR,swLogPrintf("NPI NVM: ' npiconfig.nvm ' , can ' t read header , use the defult value ");
317440,650248704,0,0,PLAT_AP,PLA_MIDWARE,npiLoadNvmConfig_3,P_ERROR,swLogPrintf("' npiconfig.nvm ' version:%d file body size not right: ( %u / %u ) , use the defult value ");
317440,650252287,0,0,PLAT_AP,PLA_MIDWARE,npiSaveNvmConfig_1,P_ERROR,swLogPrintf("NPI NVM , can ' t open / create NVM: ' npiconfig.nvm ' , save NVM failed ");
317440,650254335,0,0,PLAT_AP,PLA_MIDWARE,npiSaveNvmConfig_2,P_ERROR,swLogPrintf("NPI NVM: ' npiconfig.nvm ' , write the file header failed ");
317440,650256383,0,0,PLAT_AP,PLA_MIDWARE,npiSaveNvmConfig_3,P_ERROR,swLogPrintf("NPI NVM: ' npiconfig.nvm ' , write the file body failed ");
318464,652216320,0,0,PLAT_AP,PLA_APP,CpStatusTask_0,P_VALUE,swLogPrintf("AP: Test task loop-%d ");
318464,652218368,0,0,PLAT_AP,PLA_APP,funcTestGetPinValue_0,P_VALUE,swLogPrintf("WakeupPinValue = %d ");
318464,652222463,0,0,PLAT_AP,PLA_APP,appInit_0,P_VALUE,swLogPrintf("AP: CP Power Off ");
318464,652224511,0,0,PLAT_AP,PLA_APP,appInit_1,P_VALUE,swLogPrintf("AP: CP Power On ");
318464,652226559,0,0,PLAT_AP,PLA_APP,funcTestAPAonReadTimeTest_1,P_VALUE,swLogPrintf("AP: End aon Read Time Test ");
318464,652226816,0,0,PLAT_AP,PLA_APP,hibTimerGlobalCntGet6P25HZ_0,P_VALUE,swLogPrintf("HibTimer: CurHibCnt = %d , HibCntStore = %d ");
318464,652228864,0,0,PLAT_AP,PLA_APP,hibTimerGlobalCntGet6P25HZ_1,P_VALUE,swLogPrintf("HibTimer: Offset = %d , Global Cnt Value = %d ");
318464,652231168,0,0,PLAT_AP,NAS_PLMN,CcmPsCheckAutoSaveDataCounterTimerWakeUpFromDeepSleep_2,P_INFO,swLogPrintf("CCM PS , currHibSC is %d , ExpiredHibSC is %d , Wakeup from deep sleep , Re-Start CCM_PS_AUTO_SAVE_DATA_COUNTER_PERIOD_TIMER with remain seconds: %d ");
318464,652234751,0,0,PLAT_AP,NAS_PLMN,CePlmnCurPlmnSearchDone_5,P_WARNING,swLogPrintf("PLMN , no valid PLMN found , since PLMN is currently blocked ");
318464,652236799,0,0,PLAT_AP,NAS_PLMN,CePlmnDelPhyCellId_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t delete the PHY cell id ");
318464,652238847,0,0,PLAT_AP,NAS_PLMN,CePlmnDelPhyCellId_2,P_VALUE,swLogPrintf("CE PLMN , delete the PHY cell id ");
318464,652240895,0,0,PLAT_AP,PLA_APP,prvUartCallback_2,P_WARNING,swLogPrintf("gps recv nmea , send event fail ");
318464,652240897,0,0,PLAT_AP,PLA_APP,prvGpsAppTask_1,P_DEBUG,swLogPrintf("%s ");
318464,652244991,0,0,PLAT_AP,PLA_APP,prvUartCallback_99,P_WARNING,swLogPrintf("cxz gps recv nmea , send event fail ");
318464,652247039,0,0,PLAT_AP,PLA_APP,synctime_1,P_INFO,swLogPrintf("CTZU: 0 , not need to update UTC by NITZ ");
318464,652249087,0,0,PLAT_AP,PLA_APP,synctime100,P_INFO,swLogPrintf("sync NITZ time fail ");
318464,652249600,0,0,PLAT_AP,PLA_APP,appSetPinOperationSync_1,P_INFO,swLogPrintf("PIN oper mode %d , pinStrLen %d , newPinStrLen %d ");
318464,652253183,0,0,PLAT_AP,PLA_APP,ApUserAppTask_0,P_VALUE,swLogPrintf("SIM Plug In ");
318464,652255231,0,0,PLAT_AP,PLA_APP,ApUserAppTask_1,P_VALUE,swLogPrintf("SIM Plug Out ");
318464,652255233,0,0,PLAT_AP,PLA_APP,EC_CHIP_VERSION_1,P_INFO,swLogPrintf("%s ");
318464,652259327,0,0,PLAT_AP,PLA_APP,enter_NMI_handler,P_ERROR,swLogPrintf("WDT timeout!!! Enter NMI Handler!!! ");
318464,652259328,0,0,PLAT_AP,PLA_APP,UART_DTR_ISR,P_WARNING,swLogPrintf("uart ( %d ) : DTR GPIO is not inited!!! ");
318464,652263423,0,0,PLAT_AP,PLA_APP,appBeforeSleep_1,P_SIG,swLogPrintf("Before Sleep1 ");
318464,652265471,0,0,PLAT_AP,PLA_APP,appBeforeSleep_2,P_SIG,swLogPrintf("Before Sleep2 ");
318464,652267519,0,0,PLAT_AP,PLA_APP,appBeforeSleep_3,P_SIG,swLogPrintf("Before Hibernate ");
318464,652269567,0,0,PLAT_AP,PLA_APP,appAfterSleep_1,P_SIG,swLogPrintf("After Sleep1 ");
318464,652271615,0,0,PLAT_AP,PLA_APP,appAfterSleep_2,P_SIG,swLogPrintf("After Sleep2 ");
318464,652273663,0,0,PLAT_AP,PLA_APP,appAfterSleep_3,P_SIG,swLogPrintf("After Hibernate ");
318464,652275711,0,0,PLAT_AP,PLA_APP,UserAppTask_0,P_SIG,swLogPrintf("Wakeup from Power On , and Set CFUN = 0 ");
318464,652275712,0,0,PLAT_AP,PLA_APP,UserAppTask_1,P_SIG,swLogPrintf("Wakeup From state = %u ");
318464,652277760,0,0,PLAT_AP,PLA_APP,UserAppTask_80,P_SIG,swLogPrintf("Wakeup Source is = %e<slpManWakeSrc_e> ");
318464,652281855,0,0,PLAT_AP,PLA_APP,UserAppTask_2,P_SIG,swLogPrintf("Example Step1: Disable Sleep1 / 2 to keep in IDLE ");
318464,652283903,0,0,PLAT_AP,PLA_APP,UserAppTask_3,P_SIG,swLogPrintf("Example 1 : Enable sleep1 to enter sleep1 ");
318464,652285951,0,0,PLAT_AP,PLA_APP,UserAppTask_4,P_SIG,swLogPrintf("Example 1 : We can check vote state and vote counter ");
318464,652286208,0,0,PLAT_AP,PLA_APP,UserAppTask_5,P_SIG,swLogPrintf("Check Vote State , state = %u , cnt = %u ");
318464,652288256,0,0,PLAT_AP,PLA_APP,UserAppTask_6,P_SIG,swLogPrintf("Check Vote State Again , state = %u , cnt = %u ");
318464,652292095,0,0,PLAT_AP,PLA_APP,UserAppTask_7,P_SIG,swLogPrintf("Example 1 : Now we can enter Hibernate ");
318464,652294143,0,0,PLAT_AP,PLA_APP,UserAppTask_81,P_SIG,swLogPrintf("Example 2 : Enter Hibernate and test for wakeup ");
318464,652296191,0,0,PLAT_AP,PLA_APP,UserAppTask_9,P_SIG,swLogPrintf("Example 4 : Empty ");
323584,662702080,0,0,PLAT_AP,UICC,DecodeSms_1,P_INFO,swLogPrintf("invalid sms status %d , set as free space ");
323584,662704128,0,0,PLAT_AP,UICC,ReadPreferLanguage_1,P_INFO,swLogPrintf("Reset command status: %d as ok. ");
323584,662708223,0,0,PLAT_AP,UICC,UsatProcSendSmRsp_0,P_WARNING,swLogPrintf("ME problem is absent ");
323584,662708480,0,0,PLAT_AP,UICC,UsatProcSendSmRsp_1,P_WARNING,swLogPrintf("abnormal result smsProblemPresent %d smsProblem 0x%x ");
323584,662710272,0,0,PLAT_AP,UICC,UsatProcTimerExpiration_0,P_INFO,swLogPrintf("Check if busy statusWords %x ");
324608,664801279,0,0,PLAT_AP,DM,gps_set_nmea_01,P_INFO,swLogPrintf("set nmea enter ");
324608,664801280,0,0,PLAT_AP,DM,gps_set_nmea_02,P_INFO,swLogPrintf("set nmea mode: %d ");
324608,664805375,0,0,PLAT_AP,DM,gps_set_nmea_03,P_INFO,swLogPrintf("set nmea_type ");
324608,664805377,0,0,PLAT_AP,DM,gps_set_nmea_03_01,P_INFO,swLogPrintf("set nmea_type: %s ");
324608,664809471,0,0,PLAT_AP,DM,gps_set_nmea_04,P_INFO,swLogPrintf("set nmea over ");
324608,664811519,0,0,PLAT_AP,DM,prvGpsEngineInit_01,P_INFO,swLogPrintf("save failed when init ");
324608,664813567,0,0,PLAT_AP,DM,prvGpsEngineInit_02,P_INFO,swLogPrintf("write sucess ");
324608,664815615,0,0,PLAT_AP,DM,prvGpsEngineInit_03,P_INFO,swLogPrintf("read failed when init ");
324608,664815616,0,0,PLAT_AP,DM,cisnet_setNBStatus_0,P_INFO,swLogPrintf("onenet netStatus = %d ");
324608,664819711,0,0,PLAT_AP,DM,cisnet_destroy_1,P_INFO,swLogPrintf("stop recv_task ");
324608,664819712,0,0,PLAT_AP,DM,cisnet_connect_0_1,P_ERROR,swLogPrintf("Failed to open socket , errno = %d free sessionH ");
324608,664823807,0,0,PLAT_AP,DM,cisnet_connect_0_2,P_ERROR,swLogPrintf("cisnet_connect already has recvThread ");
324608,664825855,0,0,PLAT_AP,DM,cisnet_connect_1,P_SIG,swLogPrintf("cisnet_connect start recvThread ");
324608,664827903,0,0,PLAT_AP,DM,cisnet_write_1,P_INFO,swLogDump("send data: ");
324608,664828416,0,0,PLAT_AP,DM,cisnet_write_2,P_INFO,swLogPrintf("( %x ) %d has sent ( raiflag = %d ) ");
324608,664831999,0,0,PLAT_AP,DM,cisnet_read_ex_1,P_INFO,swLogPrintf("netctx->g_packetlist has node ");
324608,664834047,0,0,PLAT_AP,DM,cisnet_read_ex_2,P_INFO,swLogPrintf("netctx->g_packetlist still has node ");
324608,664834048,0,0,PLAT_AP,DM,cisnet_free_1,P_INFO,swLogPrintf("buffer: 0x%x ");
324608,664836096,0,0,PLAT_AP,DM,callbackRecvThread_1,P_INFO,swLogPrintf("callbackRecvThread start---quit = %d ");
324608,664838144,0,0,PLAT_AP,DM,callbackRecvThread_2,P_INFO,swLogPrintf("Error in select ( ) : %d ");
324608,664840192,0,0,PLAT_AP,DM,callbackRecvThread_3,P_INFO,swLogPrintf("Error in recvfrom ( ) : %d ");
324608,664842240,0,0,PLAT_AP,DM,callbackRecvThread_4,P_INFO,swLogPrintf("recv %d ");
324608,664844288,0,0,PLAT_AP,DM,callbackRecvThread_4_1,P_INFO,swLogPrintf("packetlist is NULL add to head ( 0x%x ) ");
324608,664846336,0,0,PLAT_AP,DM,callbackRecvThread_4_2,P_INFO,swLogPrintf("packetlist not NULL add to tail ( 0x%x ) ");
324608,664848384,0,0,PLAT_AP,DM,callbackRecvThread,P_INFO,swLogPrintf("callbackRecvThread exit.user control:%d ");
324608,664852479,0,0,PLAT_AP,DM,callbackRecvThread_5,P_INFO,swLogPrintf("free the packet still in g_packetlist ");
324608,664852736,0,0,PLAT_AP,DM,cissys_setCoapMaxTransmitWaitTime,P_INFO,swLogPrintf("coapAckTimeout = %d , set coapMaxTransmitWaitTime = %d ");
324608,664854529,0,0,PLAT_AP,DM,cissys_getIMSI_0,P_INFO,swLogPrintf("Get real IMSI: %s ");
324608,664856576,0,0,PLAT_AP,DM,cissys_getCellId_1,P_INFO,swLogPrintf("OTA: Cell ID = %d ");
324608,664858624,0,0,PLAT_AP,DM,cissys_getRadioSignalStrength_1,P_INFO,swLogPrintf("OTA: Signal Strength = %d ");
324608,664860673,0,0,PLAT_AP,DM,bootstrap_step_1,P_INFO,swLogPrintf("bootstrap step status: %s ");
324608,664862721,0,0,PLAT_AP,DM,bootstrap_step_2,P_INFO,swLogPrintf("bootstrap step status finish: %s ");
324608,664866815,0,0,PLAT_AP,DM,bootstrap_init_1,P_INFO,swLogPrintf("make serverlist ");
324608,664866817,0,0,PLAT_AP,DM,bootstrap_init_2,P_INFO,swLogPrintf("bootstrapServer = %s ");
324608,664870911,0,0,PLAT_AP,DM,bootstrap_init_3,P_INFO,swLogPrintf("bootstrapServer = NULL ");
324608,664872959,0,0,PLAT_AP,DM,bootstrap_create_1,P_INFO,swLogPrintf("get bserver to create network ");
324608,664875007,0,0,PLAT_AP,DM,bootstrap_create_2,P_INFO,swLogPrintf("create session failed !!! ");
324608,664877055,0,0,PLAT_AP,DM,bootstrap_connect_1,P_INFO,swLogPrintf("get bserver to connect network ");
324608,664879103,0,0,PLAT_AP,DM,bootstrap_connect_2,P_INFO,swLogPrintf("connect network failed !!! ");
324608,664881151,0,0,PLAT_AP,DM,cis_config_init_1,P_INFO,swLogPrintf("context = = NULL , return -1 ");
324608,664881408,0,0,PLAT_AP,DM,cis_config_init_2,P_INFO,swLogPrintf("config_ptr = %d || config_len = %d , return default ");
324608,664883456,0,0,PLAT_AP,DM,prvNetParser_1,P_INFO,swLogPrintf("parser net config bootstrap = %d , dtls = %d ");
324608,664887295,0,0,PLAT_AP,DM,cis_init_1,P_INFO,swLogPrintf("cis_init ");
324608,664889343,0,0,PLAT_AP,DM,cis_init_1_1,P_INFO,swLogPrintf("cis_config_init error ");
324608,664889344,0,0,PLAT_AP,DM,cis_init_2,P_INFO,swLogPrintf("( %x ) start DM ");
324608,664891393,0,0,PLAT_AP,DM,cis_init_2_1,P_INFO,swLogPrintf("rn = %s ");
324608,664893441,0,0,PLAT_AP,DM,cis_init_2_2,P_INFO,swLogPrintf("un = %s ");
324608,664895488,0,0,PLAT_AP,DM,cis_init_3,P_INFO,swLogPrintf("( %x ) no DM to get endpoint ");
324608,664897537,0,0,PLAT_AP,DM,cis_init_4,P_INFO,swLogPrintf("auth code = %s ");
324608,664901631,0,0,PLAT_AP,DM,cis_register_1,P_INFO,swLogPrintf("api cis_register ");
324608,664903679,0,0,PLAT_AP,DM,cis_register_2,P_ERROR,swLogPrintf("cis_register request failed.invalid parameters ");
324608,664905727,0,0,PLAT_AP,DM,cis_register_3,P_ERROR,swLogPrintf("invalid lifetime parameter ");
324608,664905728,0,0,PLAT_AP,DM,cis_pump_0_0,P_INFO,swLogPrintf("tv_sec = %d ");
324608,664909823,0,0,PLAT_AP,DM,cis_pump_0_1,P_INFO,swLogPrintf("BOOTSTRAP is disabled ");
324608,664911871,0,0,PLAT_AP,DM,cis_pump_1,P_INFO,swLogPrintf("start make bootstrapServer ");
324608,664911873,0,0,PLAT_AP,DM,cis_pump_1_1,P_INFO,swLogPrintf("bootstrap status = %s ");
324608,664914176,0,0,PLAT_AP,DM,cis_pump_1_6,P_INFO,swLogPrintf("bootstrap pending timeout. lasttime = %d , regTimeout = %d ");
324608,664918015,0,0,PLAT_AP,DM,cis_pump_1_7,P_INFO,swLogPrintf("Bootstrap finish. ");
324608,664920063,0,0,PLAT_AP,DM,cis_pump_1_8,P_INFO,swLogPrintf("Bootstrap failed. ");
324608,664920064,0,0,PLAT_AP,DM,cis_pump_1_9,P_INFO,swLogPrintf("what bstatus:%d ");
324608,664922113,0,0,PLAT_AP,DM,cis_pump_3_1,P_INFO,swLogPrintf("host = %s ");
324608,664924416,0,0,PLAT_AP,DM,cis_pump_2,P_INFO,swLogPrintf("( %x ) server->status = %d ");
324608,664926209,0,0,PLAT_AP,DM,cis_pump_2_1,P_SIG,swLogPrintf("server->status = %s ");
324608,664928512,0,0,PLAT_AP,DM,cis_pump_3_2,P_INFO,swLogPrintf("( %x ) server->status = %d , fotaNeedUpdate ");
324608,664932351,0,0,PLAT_AP,DM,cis_pump_3_3,P_INFO,swLogPrintf("when restoreing connection receive AT+MIPLCLOSE , do the unregister ");
324608,664932353,0,0,PLAT_AP,DM,cis_pump_3_4,P_INFO,swLogPrintf("DM restore set location = %s ");
324608,664934401,0,0,PLAT_AP,DM,cis_pump_2_2,P_SIG,swLogPrintf("server->status = %s ");
324608,664938495,0,0,PLAT_AP,DM,cis_pump_2_3,P_WARNING,swLogPrintf("won ' t come here ");
324608,664940543,0,0,PLAT_AP,DM,cis_pump_2_4,P_WARNING,swLogPrintf("server connect failed. ");
324608,664942591,0,0,PLAT_AP,DM,cis_pump_4,P_WARNING,swLogPrintf("server disconnected. ");
324608,664944639,0,0,PLAT_AP,DM,cis_pump_5,P_WARNING,swLogPrintf("handle UNREGISTER. ");
324608,664946687,0,0,PLAT_AP,DM,cis_pump_7,P_INFO,swLogPrintf("ERROR:pump got STATE_REG_FAILED ");
324608,664946944,0,0,PLAT_AP,DM,cis_update_reg_1,P_INFO,swLogPrintf("withObjects = %d , raiflag = %d ");
324608,664948736,0,0,PLAT_AP,DM,cis_notify_1,P_INFO,swLogPrintf("add notify to notifyList messageid = %d ");
324608,664952831,0,0,PLAT_AP,DM,cis_notify_ec_1,P_INFO,swLogPrintf("context = = NULL ");
324608,664952832,0,0,PLAT_AP,DM,cis_notify_ec_2,P_INFO,swLogPrintf("ctx->stateStep = %d ");
324608,664954880,0,0,PLAT_AP,DM,cis_notify_ec_3,P_INFO,swLogPrintf("add notify to notifyList messageid = %d ");
324608,664957184,0,0,PLAT_AP,DM,core_updatePumpState_0,P_INFO,swLogPrintf("( %x ) stateStep = %d ");
324608,664958977,0,0,PLAT_AP,DM,core_updatePumpState_1,P_INFO,swLogPrintf("Update State To %s ");
324608,664961024,0,0,PLAT_AP,DM,prv_onNetEventHandler_1,P_INFO,swLogPrintf("cisnet event handle id = %d ");
324608,664965119,0,0,PLAT_AP,DM,prv_onNetEventHandler_2,P_INFO,swLogPrintf("PUMP_STATE_BOOTSTRAPPING ( 1 ) bootstrap status is STATE_CONNECTED ( 4 ) ");
324608,664967167,0,0,PLAT_AP,DM,prv_onNetEventHandler_3,P_INFO,swLogPrintf("PUMP_STATE_CONNECTING ( 2 ) server status is STATE_CONNECTED ( 4 ) ");
324608,664967680,0,0,PLAT_AP,DM,notify_handleResponse_1,P_INFO,swLogPrintf("notifyP ' s obsv id = %d notifyP ' s lastmid = %d message->mid = %d ");
324608,664971263,0,0,PLAT_AP,DM,notify_handleResponse_2,P_INFO,swLogPrintf("find the content notify show event 26 ");
324608,664973311,0,0,PLAT_AP,DM,notify_handleResponse_3,P_INFO,swLogPrintf("find the notify ' s ack delete the notify ");
324608,664975359,0,0,PLAT_AP,DM,notify_handleResponse_4,P_INFO,swLogPrintf("has another notify ");
324608,664975872,0,0,PLAT_AP,DM,notify_handle_1,P_INFO,swLogPrintf("currentTime = %d , notifyP first send , next transTime = %d , send counter = %d ");
324608,664977920,0,0,PLAT_AP,DM,notify_handle_2,P_INFO,swLogPrintf("currentTime = %d , notifyP hasn ' t get ack , next send transTime = %d , send counter = %d ");
324608,664979456,0,0,PLAT_AP,DM,notify_handle_3,P_INFO,swLogPrintf("retransTime up , notifyP reach the MAX retansmit times %d , abandon it ");
324608,664981505,0,0,PLAT_AP,DM,management_createNetwork_1,P_INFO,swLogPrintf("create network to %s ");
324608,664983553,0,0,PLAT_AP,DM,management_createNetwork_2,P_INFO,swLogPrintf("created network to ' %s ' ");
324608,664987647,0,0,PLAT_AP,DM,management_connectServer_1,P_INFO,swLogPrintf("to connect server ");
324608,664989695,0,0,PLAT_AP,DM,management_connectServer_2,P_INFO,swLogPrintf("connect failed ");
324608,664991743,0,0,PLAT_AP,DM,management_connectServer_3,P_INFO,swLogPrintf("waiting for connected. ");
324608,664991744,0,0,PLAT_AP,DM,management_makeServerList_1,P_INFO,swLogPrintf("make %d ");
324608,664993793,0,0,PLAT_AP,DM,management_makeServerList_2,P_INFO,swLogPrintf("add targetServer = %s ");
324608,664996352,0,0,PLAT_AP,DM,object_read_0,P_INFO,swLogPrintf("ObjRead:%d / %d / %d ");
324608,664997888,0,0,PLAT_AP,DM,object_read_1,P_INFO,swLogPrintf("ObjRead result is 0x%x ");
324608,664999936,0,0,PLAT_AP,DM,cis_object_write_1,P_VALUE,swLogPrintf("MIPLRD->cis_object_write_1 , totalLen = %d ");
324608,665001984,0,0,PLAT_AP,DM,cis_object_excute_1,P_VALUE,swLogPrintf("MIPLRD->cis_object_excute_1 , totalLen = %d ");
324608,665004288,0,0,PLAT_AP,DM,observe_asynAckNodata_1,P_INFO,swLogPrintf("observed->tokenLen = %d , observed->msgid = %d , call observe_save_retention_data ");
324608,665008127,0,0,PLAT_AP,DM,prv_getObserved_1,P_INFO,swLogPrintf("observe new ");
324608,665008128,0,0,PLAT_AP,DM,observe_write_retention_data_1,P_INFO,swLogPrintf("observedP->tokenLen = %d ");
324608,665012223,0,0,PLAT_AP,DM,observe_save_retention_data_1,P_INFO,swLogPrintf("update uri.retention ");
324608,665014271,0,0,PLAT_AP,DM,observe_save_retention_data_2,P_SIG,swLogPrintf("save data retention. ");
324608,665016319,0,0,PLAT_AP,DM,observe_save_retention_data_3,P_INFO,swLogPrintf("can ' t save , up to max count. \n ");
324608,665017088,0,0,PLAT_AP,DM,observe_read_retention_data_1,P_INFO,swLogPrintf("g_observed_backup [ %d ] is used.URI: / %d / %d / %d ");
324608,665020415,0,0,PLAT_AP,DM,observe_read_retention_data_2,P_INFO,swLogPrintf("observedP is NULL \n ");
324608,665022463,0,0,PLAT_AP,DM,observe_read_retention_data_3,P_INFO,swLogPrintf("Add observedP \n ");
324608,665022464,0,0,PLAT_AP,DM,prv_handleReset_1,P_INFO,swLogPrintf("recv onenet ' s reset cmd , msgid:%d ");
324608,665026559,0,0,PLAT_AP,DM,prv_notifyObserveReport_0_1,P_INFO,swLogPrintf("invalid uri ");
324608,665028607,0,0,PLAT_AP,DM,prv_notifyObserveReport_0_2,P_INFO,swLogPrintf("invalid value ");
324608,665030655,0,0,PLAT_AP,DM,prv_notifyObserveReport_0_3,P_INFO,swLogPrintf("last request not finish ");
324608,665032703,0,0,PLAT_AP,DM,prv_notifyObserveReport_0_4,P_INFO,swLogPrintf("first package ");
324608,665034751,0,0,PLAT_AP,DM,prv_notifyObserveReport_0_5,P_INFO,swLogPrintf("continue package ");
324608,665034752,0,0,PLAT_AP,DM,prv_notifyObserveReport_1,P_INFO,swLogPrintf("ObserveReport 231 _Continue id:%d ");
324608,665038847,0,0,PLAT_AP,DM,prv_notifyObserveReport_2,P_INFO,swLogPrintf("free observe->reportData ");
324608,665039616,0,0,PLAT_AP,DM,prv_notifyReadReport_0,P_INFO,swLogPrintf("request->uri flag = 0x%x , objId = %d , insId = %d , resId = %d ");
324608,665040896,0,0,PLAT_AP,DM,prv_notifyReadReport_1,P_INFO,swLogPrintf("new request->respData , respDataCount = %d ");
324608,665044991,0,0,PLAT_AP,DM,prv_notifyReadReport_2,P_INFO,swLogPrintf("for single instance and single resource ");
324608,665047039,0,0,PLAT_AP,DM,prv_notifyReadReport_3,P_INFO,swLogPrintf("fill the respData ");
324608,665049087,0,0,PLAT_AP,DM,prv_notifyReadReport_3_1,P_INFO,swLogPrintf("first package ");
324608,665051135,0,0,PLAT_AP,DM,prv_notifyReadReport_3_2,P_INFO,swLogPrintf("continue package ");
324608,665051136,0,0,PLAT_AP,DM,prv_notifyReadReport_4,P_INFO,swLogPrintf("ReadResponse 231 _Continue id:%d ");
324608,665053184,0,0,PLAT_AP,DM,prv_notifyReadReport_5,P_INFO,swLogPrintf("ReadResponse Done id:%d ");
324608,665055232,0,0,PLAT_AP,DM,packet_handle_packet_1,P_INFO,swLogPrintf("receive ACK message->mid:%d call notify_handleResponse ");
324608,665057280,0,0,PLAT_AP,DM,packet_step_1_3,P_INFO,swLogPrintf("ERROR:response not exist uri , request by removed , id:0x%x ");
324608,665061375,0,0,PLAT_AP,DM,packet_step_1_2,P_INFO,swLogPrintf("CALLBACK_TYPE_DISCOVER call prv_notifyDiscoverReport ");
324608,665063423,0,0,PLAT_AP,DM,packet_step_1_5,P_INFO,swLogPrintf("CALLBACK_TYPE_WRITE / EXECUTE call object_asynAckNodata ");
324608,665065471,0,0,PLAT_AP,DM,packet_step_1_1,P_INFO,swLogPrintf("CALLBACK_TYPE_OBSERVE call observe_asynAckNodata ");
324608,665065472,0,0,PLAT_AP,DM,packet_step_1_4,P_INFO,swLogPrintf("ERROR:notify response invalid id:0x%x ");
324608,665067776,0,0,PLAT_AP,DM,packet_step_1,P_INFO,swLogPrintf("notifyNode->mid = %d , result = 0x%x ");
324608,665071615,0,0,PLAT_AP,DM,packet_step_6,P_INFO,swLogPrintf("notify not exist uri show event 25 ");
324608,665073663,0,0,PLAT_AP,DM,packet_step_3,P_INFO,swLogPrintf("notify has send ");
324608,665073664,0,0,PLAT_AP,DM,packet_step_7,P_INFO,swLogPrintf("notify result = 0x%x waiting for assembly ");
324608,665077759,0,0,PLAT_AP,DM,packet_step_4,P_INFO,swLogPrintf("notify ( with no ack ) has send ");
324608,665077760,0,0,PLAT_AP,DM,packet_step_5,P_INFO,swLogPrintf("notify ( with no ack ) error result = 0x%x ");
324608,665081855,0,0,PLAT_AP,DM,packet_step_8,P_INFO,swLogPrintf("abandon this notify ");
324608,665083903,0,0,PLAT_AP,DM,packet_step_9,P_INFO,swLogPrintf("observe not found ");
324608,665084160,0,0,PLAT_AP,DM,packet_step_10,P_INFO,swLogPrintf("get next notify id:%d , mid:%d ");
324608,665085952,0,0,PLAT_AP,DM,packet_step_11,P_INFO,swLogPrintf("delete the request mid:%d ");
324608,665088256,0,0,PLAT_AP,DM,packet_read_1,P_INFO,swLogPrintf("( %x ) -Recv Buffer %d bytes--- ");
324608,665092095,0,0,PLAT_AP,DM,packet_read_2,P_INFO,swLogDump("Recv data: ");
324608,665092097,0,0,PLAT_AP,DM,prv_handleRegistrationReply_1,P_SIG,swLogPrintf("Registration successful save location = %s ");
324608,665096191,0,0,PLAT_AP,DM,prv_handleRegistrationReply_2,P_SIG,swLogPrintf("Registr failed callbackEvent ");
324608,665096192,0,0,PLAT_AP,DM,prv_handleRegistrationUpdateReply_1,P_INFO,swLogPrintf("( %x ) update reply come ");
324608,665098240,0,0,PLAT_AP,DM,prv_handleRegistrationUpdateReply_2,P_INFO,swLogPrintf("( %x ) targetP->status = = STATE_REG_UPDATE_PENDING ");
324608,665100288,0,0,PLAT_AP,DM,prv_handleRegistrationUpdateReply_3,P_INFO,swLogPrintf("( %x ) Registration update successful ");
324608,665102336,0,0,PLAT_AP,DM,prv_handleRegistrationUpdateReply_4,P_INFO,swLogPrintf("( %x ) packet ! = null ERROR:Registration update failed ");
324608,665104384,0,0,PLAT_AP,DM,prv_handleRegistrationUpdateReply_5,P_INFO,swLogPrintf("( %x ) ERROR:Registration update failed ");
324608,665108479,0,0,PLAT_AP,DM,registration_update_registration_1,P_INFO,swLogPrintf("ERROR: no server found for update registration! ");
324608,665108480,0,0,PLAT_AP,DM,registration_update_registration_2,P_INFO,swLogPrintf("targetP->status = %d not STATE_REGISTERED ");
324608,665111040,0,0,PLAT_AP,DM,registration_step_1_3,P_INFO,swLogPrintf("EVNET_UPDATE_NEED , currenttime = %d , warningtime = %d , interval = %d ");
324608,665112576,0,0,PLAT_AP,DM,registration_step_1_4,P_INFO,swLogPrintf("and now warningtime = %d ");
324608,665114624,0,0,PLAT_AP,DM,registration_step_2,P_INFO,swLogPrintf("lifetimeWarnningTime = %d , lifetime timeout occurred. ");
324608,665116928,0,0,PLAT_AP,DM,registration_step_3,P_INFO,swLogPrintf("EVNET_UPDATE_NEED , update now.warningtime = %d , currenttime = %d ");
324608,665120767,0,0,PLAT_AP,DM,registration_step_4,P_INFO,swLogPrintf("set targetP->status = = STATE_REG_UPDATE_NEEDED call prv_updateRegistration ");
324608,665120768,0,0,PLAT_AP,DM,registration_step_5,P_INFO,swLogPrintf("( %x ) set targetP->status = = STATE_REG_UPDATE_NEEDED_WITHOBJECTS call prv_updateRegistration ");
324608,665123072,0,0,PLAT_AP,DM,prv_checkFinished_1,P_INFO,swLogPrintf("checkFinish invalid message code:%d , ret:%d ");
324608,665124864,0,0,PLAT_AP,DM,prv_checkFinished_2,P_INFO,swLogPrintf("checkFinish no token option , ret:%d ");
324608,665126912,0,0,PLAT_AP,DM,prv_checkFinished_3,P_INFO,swLogPrintf("checkFinish different token , ret:%d ");
324608,665131007,0,0,PLAT_AP,DM,transaction_handleResponse_1,P_INFO,swLogPrintf("transacP->ackReceived = = NULL ");
324608,665131264,0,0,PLAT_AP,DM,transaction_handleResponse_2,P_INFO,swLogPrintf("trans resp id:%x , reset:%d ");
324608,665133312,0,0,PLAT_AP,DM,transaction_handleResponse_3,P_INFO,swLogPrintf("trans resp mid with ( T%X vs M%X ) ");
324608,665137151,0,0,PLAT_AP,DM,transaction_handleResponse_4,P_INFO,swLogPrintf("call transac ' s callback reg before ");
324608,665137408,0,0,PLAT_AP,DM,transaction_send,P_INFO,swLogPrintf("first send the package currentTime = %d next retry time = %d ");
324608,665139456,0,0,PLAT_AP,DM,transaction_send_1,P_INFO,swLogPrintf("next times send Time on %d at %d times ");
324608,665141760,0,0,PLAT_AP,DM,transaction_step_1,P_INFO,swLogPrintf("transacP->retransTime = %d less than currentTime = %d %d times send ");
324608,665143552,0,0,PLAT_AP,DM,transaction_step_2,P_INFO,swLogPrintf("now = %d greater than regTimeoutTarget = %d reg timeout ");
324608,665145345,0,0,PLAT_AP,DM,std_security_write_1,P_SIG,swLogPrintf("hostRestor = %s ");
324608,665147392,0,0,PLAT_AP,DM,dmTaskThread_1,P_INFO,swLogPrintf("g_dmcallbackList has sth. get a node and flag is %d ");
324608,665151487,0,0,PLAT_AP,DM,dmTaskThread_2,P_INFO,swLogPrintf("call prv_dm_readResponse ( ) , after readresponse enable sleep ");
324608,665151744,0,0,PLAT_AP,DM,_dm_sample_dm_entry_1,P_SIG,swLogPrintf("lifetime:%d , testmode:%d ");
324608,665155583,0,0,PLAT_AP,DM,_dm_sample_dm_entry_1_1,P_INFO,swLogPrintf("cis entry init failed. ");
324608,665157631,0,0,PLAT_AP,DM,_dm_sample_dm_entry_1_2,P_INFO,swLogPrintf("cis entry init failed. ");
324608,665159679,0,0,PLAT_AP,DM,_dm_sample_dm_entry_2,P_INFO,swLogPrintf("needRestore ignoreRegistration ");
324608,665159680,0,0,PLAT_AP,DM,_dm_sample_dm_entry_3,P_INFO,swLogPrintf("cis_addobject obj = %d ");
324608,665163775,0,0,PLAT_AP,DM,_dm_sample_dm_entry_4,P_INFO,swLogPrintf("open client ");
324608,665165823,0,0,PLAT_AP,DM,_dm_sample_dm_entry_4_2,P_INFO,swLogPrintf("close client ");
324608,665165824,0,0,PLAT_AP,DM,_dm_sample_dm_entry_5,P_INFO,swLogPrintf("g_needUpdate = %d , PUMP_STATE_READY call cis_update_reg ");
324608,665167872,0,0,PLAT_AP,DM,_dm_sample_dm_entry_5_1,P_INFO,swLogPrintf("cis_update_reg failed return %x go sleep and wakeup next update ");
324608,665171967,0,0,PLAT_AP,DM,prv_dm_readResponse_0,P_INFO,swLogPrintf("object = = NULL!!! ");
324608,665171968,0,0,PLAT_AP,DM,prv_dm_readResponse_1,P_INFO,swLogPrintf("read all object:%d ");
324608,665174272,0,0,PLAT_AP,DM,prv_dm_readResponse_2,P_INFO,swLogPrintf("read object:%d ; instance:%d ");
324608,665176320,0,0,PLAT_AP,DM,prv_dm_readResponse_3,P_INFO,swLogPrintf("inst:%x , enabled:%d ");
324608,665178112,0,0,PLAT_AP,DM,prv_dm_readResponse_4,P_INFO,swLogPrintf("resourceid:%d ");
324608,665180672,0,0,PLAT_AP,DM,dm_onRead,P_INFO,swLogPrintf("Read: ( %d / %d / %d ) ");
324608,665182720,0,0,PLAT_AP,DM,dm_onDiscover,P_INFO,swLogPrintf("Discover: ( %d / %d / %d ) ");
324608,665184256,0,0,PLAT_AP,DM,_dm_onEvent_1,P_SIG,swLogPrintf("DM need to update , reserve time:%ds ");
324608,665188351,0,0,PLAT_AP,DM,_dm_onEvent_1_1,P_INFO,swLogPrintf("no deepSleepTimer auto update reg ");
324608,665190399,0,0,PLAT_AP,DM,_dm_onEvent_1_2,P_INFO,swLogPrintf("deepSleepTimer is work not update reg ");
324608,665192447,0,0,PLAT_AP,DM,_dm_onEvent_2,P_SIG,swLogPrintf("DM register success. save context , start deep sleep timer ");
324608,665192448,0,0,PLAT_AP,DM,_dm_onEvent_3,P_SIG,swLogPrintf("DM register failed ( %d ) . save regstat DM_REG_FAIL_STATE , enable sleeep ");
324608,665196543,0,0,PLAT_AP,DM,_dm_onEvent_4,P_SIG,swLogPrintf("DM update success , start deep sleep timer , enable sleep ");
324608,665198591,0,0,PLAT_AP,DM,_dm_onEvent_5,P_SIG,swLogPrintf("DM update failed , save regstat DM_REG_FAIL_STATE , enable sleep ");
324608,665198848,0,0,PLAT_AP,DM,_dm_onEvent_6,P_SIG,swLogPrintf("event:%d , param:%d ");
324608,665202687,0,0,PLAT_AP,DM,ifNeedTask_1,P_INFO,swLogPrintf("before has dm connected , need restore task ");
324608,665202689,0,0,PLAT_AP,DM,dmPSUrcCallback_1_1,P_INFO,swLogPrintf("sim is ready:%s ");
324608,665206783,0,0,PLAT_AP,DM,dmPSUrcCallback_1_2,P_INFO,swLogPrintf("it ' s test card , abort autoreg ");
324608,665208831,0,0,PLAT_AP,DM,dmPSUrcCallback_2_1,P_INFO,swLogPrintf("PSIF network active change statemachine to DM_IPREADY_STATE ");
324608,665210879,0,0,PLAT_AP,DM,dmPSUrcCallback_2_2,P_INFO,swLogPrintf("PSIF network OOS ");
324608,665212927,0,0,PLAT_AP,DM,dmPSUrcCallback_2_3,P_INFO,swLogPrintf("PSIF network deactive ");
324608,665214975,0,0,PLAT_AP,DM,checkNetworkReady_1,P_INFO,swLogPrintf("network ready ");
324608,665217023,0,0,PLAT_AP,DM,checkNetworkReady_2,P_INFO,swLogPrintf("no network ");
324608,665217025,0,0,PLAT_AP,DM,dmConnectTask_0,P_INFO,swLogPrintf("handle stateMachine:%s ");
324608,665221119,0,0,PLAT_AP,DM,dmConnectTask_1,P_INFO,swLogPrintf("start dmTask and exit dmConnectTask ");
324608,665223167,0,0,PLAT_AP,DM,dmConnectTask_2_1,P_ERROR,swLogPrintf("app update network connect error enable sleep go idle ");
324608,665225215,0,0,PLAT_AP,DM,dmConnectTask_2,P_INFO,swLogPrintf("network ok send heartbeat ");
324608,665227263,0,0,PLAT_AP,DM,dmConnectTask_3,P_INFO,swLogPrintf("not cmcc card exit connecttask ");
324608,665229311,0,0,PLAT_AP,DM,dmConnectTask_4,P_INFO,swLogPrintf("nothing to do exit connecttask ");
324608,665231359,0,0,PLAT_AP,DM,dmConnectTask_5,P_INFO,swLogPrintf("unknown state exit connecttask ");
324608,665231360,0,0,PLAT_AP,DM,deepSleepCb_1,P_SIG,swLogPrintf("callback ID:%d come , disable slp2 ");
324608,665233664,0,0,PLAT_AP,DM,cmccAutoRegisterInit_0,P_INFO,swLogPrintf("slpState = %d , needRestoreDMTask = %d ");
324608,665237503,0,0,PLAT_AP,DM,cmccAutoRegisterInit_0_1,P_INFO,swLogPrintf("wakeup from deep sleep ");
324608,665239551,0,0,PLAT_AP,DM,cmccAutoRegisterInit_0_2,P_INFO,swLogPrintf("system reset , register DM ");
324608,665241599,0,0,PLAT_AP,DM,ctdmPSUrcCallback_1_1,P_INFO,swLogPrintf("sim is ready and it ' s ctcc card ");
324608,665243647,0,0,PLAT_AP,DM,ctdmPSUrcCallback_1_2,P_INFO,swLogPrintf("it ' s not ctcc card , abort autoreg ");
324608,665245695,0,0,PLAT_AP,DM,ctdmPSUrcCallback_2,P_INFO,swLogPrintf("PSIF network active change statemachine to DM_IPREADY_STATE ");
324608,665245696,0,0,PLAT_AP,DM,ctdmPSUrcCallback_2_1,P_INFO,swLogPrintf("PSIF network active but state is:%d ");
324608,665249791,0,0,PLAT_AP,DM,ctdmPSUrcCallback_2_2,P_INFO,swLogPrintf("PSIF network OOS ");
324608,665251839,0,0,PLAT_AP,DM,ctdmPSUrcCallback_2_3,P_INFO,swLogPrintf("PSIF network deactive ");
324608,665251840,0,0,PLAT_AP,DM,ctdmGetCellid_1,P_INFO,swLogPrintf("Cell ID = %d ");
324608,665255935,0,0,PLAT_AP,DM,ctdmGetCellid_2,P_INFO,swLogPrintf("get cellid failed use default ");
324608,665256192,0,0,PLAT_AP,DM,ctdmhttppost_1,P_INFO,swLogPrintf("respCode = %d , recvContentLength = %d ");
324608,665257984,0,0,PLAT_AP,DM,ctdmhttppost_2,P_INFO,swLogPrintf("ret = %d ");
324608,665260033,0,0,PLAT_AP,DM,ctdmhttppost_3,P_INFO,swLogPrintf("resp:%s ");
324608,665264127,0,0,PLAT_AP,DM,ctdmhttppost_3_1,P_INFO,swLogPrintf("parse resposne fail ");
324608,665266175,0,0,PLAT_AP,DM,ctdmhttppost_4,P_INFO,swLogPrintf("autoreg success ");
324608,665266176,0,0,PLAT_AP,DM,ctdmhttppost_5,P_INFO,swLogPrintf("autoreg code = %d ");
324608,665268225,0,0,PLAT_AP,DM,ctdmAutoRegHttp_1,P_INFO,swLogPrintf("time = %s ");
324608,665270273,0,0,PLAT_AP,DM,ctdmIfAutoRegister_1_1,P_INFO,swLogPrintf("current iccid is %s ");
324608,665272321,0,0,PLAT_AP,DM,ctdmIfAutoRegister_1_2,P_INFO,swLogPrintf("previous iccid is %s ");
324608,665276415,0,0,PLAT_AP,DM,ctdmIfAutoRegister_2,P_INFO,swLogPrintf("new sim iccid , need auto register ");
324608,665276416,0,0,PLAT_AP,DM,ctdmIfAutoRegister_3,P_INFO,swLogPrintf("same iccid , has autoreg = %d ");
324608,665280511,0,0,PLAT_AP,DM,ctccAutoRegisterTask_1_1,P_INFO,swLogPrintf("autoReg sucess , record current iccid to NV ");
324608,665282559,0,0,PLAT_AP,DM,ctccAutoRegisterTask_1_2,P_INFO,swLogPrintf("autoReg failed , start deeptimer retry autoreg after 1 hour ");
324608,665284607,0,0,PLAT_AP,DM,ctccAutoRegisterTask_2,P_INFO,swLogPrintf("give back vote handle , ctdmAutoRegisterTask exit ");
324608,665284608,0,0,PLAT_AP,DM,ctdmConnectTask_0_0,P_INFO,swLogPrintf("running = %d ");
324608,665286657,0,0,PLAT_AP,DM,ctdmConnectTask_0,P_INFO,swLogPrintf("handle stateMachine:%s ");
324608,665290751,0,0,PLAT_AP,DM,ctdmConnectTask_0_1,P_INFO,swLogPrintf("need autoreg disable sleep ");
324608,665292799,0,0,PLAT_AP,DM,ctdmConnectTask_0_2,P_INFO,swLogPrintf("no need autoreg exit connectTask ");
324608,665294847,0,0,PLAT_AP,DM,ctdmConnectTask_1,P_INFO,swLogPrintf("start ctccAutoReg task and exit connectTask ");
324608,665296895,0,0,PLAT_AP,DM,ctdmConnectTask_2,P_INFO,swLogPrintf("not cmcc card give back vote handle exit connecttask ");
324608,665298943,0,0,PLAT_AP,DM,ctdmConnectTask_3,P_INFO,swLogPrintf("nothing to do exit connecttask ");
324608,665300991,0,0,PLAT_AP,DM,ctdmConnectTask_4_1,P_INFO,swLogPrintf("network not ready give up autoreg this time ");
324608,665303039,0,0,PLAT_AP,DM,ctdmConnectTask_4,P_INFO,swLogPrintf("network ok go IPREADY_STATE ");
324608,665305087,0,0,PLAT_AP,DM,ctdmConnectTask_5,P_INFO,swLogPrintf("unknown state exit connecttask ");
324608,665307135,0,0,PLAT_AP,DM,ctccAutoRegisterInit,P_INFO,swLogPrintf("start connect task ");
324608,665309183,0,0,PLAT_AP,DM,ctccAutoRegisterInit_0_1,P_INFO,swLogPrintf("wakeup from deep sleep ");
324608,665311231,0,0,PLAT_AP,DM,ctccAutoRegisterInit_0_2,P_INFO,swLogPrintf("system reset ");
324608,665313279,0,0,PLAT_AP,DM,cuccAutoReg_100,P_SIG,swLogPrintf("autoReg will exit ");
324608,665315327,0,0,PLAT_AP,DM,cuccDmAutoRegInitTask0,P_SIG,swLogPrintf("autoReg..starting task ");
324608,665317375,0,0,PLAT_AP,DM,cuccDmAutoRegInitTask1,P_ERROR,swLogPrintf("CUCC_DM vote handle give back failed ");
324608,665319423,0,0,PLAT_AP,DM,cuccDmAutoRegInitTask2,P_VALUE,swLogPrintf("CUCC_DM vote handle give back success ");
324608,665321471,0,0,PLAT_AP,DM,cuccDmNetWorkStatusCallback_1,P_INFO,swLogPrintf("dm network is ready ");
324608,665323519,0,0,PLAT_AP,DM,cuccDmNetWorkStatusCallback_2,P_ERROR,swLogPrintf("dm network dmMsgHandle is NULL ");
324608,665325567,0,0,PLAT_AP,DM,cuccDmNetWorkStatusCallback_3,P_INFO,swLogPrintf("dm sim is ready ");
324608,665327615,0,0,PLAT_AP,DM,cuccDmNetWorkStatusCallback_4,P_ERROR,swLogPrintf("dm sim dmMsgHandle is NULL ");
324608,665327872,0,0,PLAT_AP,DM,cuccAutoRegisterTask0,P_INFO,swLogPrintf("dm network is ready %d %d ");
324608,665329920,0,0,PLAT_AP,DM,cuccAutoRegisterTask1,P_INFO,swLogPrintf("dm sim is ready %d %d ");
324608,665331968,0,0,PLAT_AP,DM,cuccAutoRegisterTask2,P_INFO,swLogPrintf("dm network or sim is not ready %d %d ");
324608,665335807,0,0,PLAT_AP,DM,cuccAutoReg_0,P_SIG,swLogPrintf("autoReg this is CUCC SIM card ");
324608,665335809,0,0,PLAT_AP,DM,cuccAutoReg_1,P_SIG,swLogPrintf("autoReg get imei ok , imei is %s ");
324608,665337857,0,0,PLAT_AP,DM,cuccAutoReg_2,P_SIG,swLogPrintf("autoReg get imsi is %s ");
324608,665339905,0,0,PLAT_AP,DM,cuccAutoReg_3,P_SIG,swLogPrintf("autoReg get current iccid is %s ");
324608,665341953,0,0,PLAT_AP,DM,cuccAutoReg_4,P_SIG,swLogPrintf("autoReg get previous iccid is %s ");
324608,665346047,0,0,PLAT_AP,DM,cuccAutoReg_5,P_SIG,swLogPrintf("autoReg find new sim iccid , start auto register ");
324608,665348095,0,0,PLAT_AP,DM,cuccAutoReg_6,P_SIG,swLogPrintf("autoReg find same sim iccid ");
324608,665350143,0,0,PLAT_AP,DM,cuccAutoReg_7,P_SIG,swLogPrintf("autoReg not register before , start register ");
324608,665352191,0,0,PLAT_AP,DM,cuccAutoReg_8,P_SIG,swLogPrintf("autoReg has done before , ignore register ");
324608,665354239,0,0,PLAT_AP,DM,cuccAutoReg_9,P_SIG,swLogPrintf("autoReg this MNC is not supported SIM card ");
324608,665354241,0,0,PLAT_AP,DM,cuccAutoReg_10,P_SIG,swLogPrintf("autoReg the SIM card is %s , it is not ' 460 ' SIM card , exit now ");
324608,665358335,0,0,PLAT_AP,DM,cuccAutoRegisterInit0,P_SIG,swLogPrintf("autoReg..starting task ");
324608,665360383,0,0,PLAT_AP,DM,cuccAutoRegisterInit1,P_ERROR,swLogPrintf("CUCC_DM vote handle give back failed ");
324608,665362431,0,0,PLAT_AP,DM,cuccAutoRegisterInit2,P_VALUE,swLogPrintf("CUCC_DM vote handle give back success ");
324608,665364479,0,0,PLAT_AP,DM,ecAutoRegisterInit_1,P_SIG,swLogPrintf("autoReg CMCC is enable call init ");
324608,665366527,0,0,PLAT_AP,DM,ecAutoRegisterInit_2,P_SIG,swLogPrintf("autoReg CMCC is disable ");
324608,665368575,0,0,PLAT_AP,DM,ecAutoRegisterInit_3,P_SIG,swLogPrintf("autoReg CTCC is enable call init ");
324608,665370623,0,0,PLAT_AP,DM,ecAutoRegisterInit_4,P_SIG,swLogPrintf("autoReg CTCC is disable ");
324608,665372671,0,0,PLAT_AP,DM,ecAutoRegisterInit_5,P_SIG,swLogPrintf("autoReg CUCC is enable call init ");
324608,665374719,0,0,PLAT_AP,DM,ecAutoRegisterInit_6,P_SIG,swLogPrintf("autoReg CUCC is disable ");
325632,666898431,0,0,PLAT_AP,FOTA,INIT_TASK_1,P_SIG,swLogPrintf("create a FWUPD task... ");
325632,666898432,0,0,PLAT_AP,FOTA,INIT_TASK_2,P_SIG,swLogPrintf("And succ! tid ( 0x%x ) ");
325632,666902527,0,0,PLAT_AP,FOTA,INIT_TASK_3,P_INFO,swLogPrintf("apply slp vote handle failed! ");
325632,666904575,0,0,PLAT_AP,FOTA,INIT_TASK_4,P_SIG,swLogPrintf("But failed , have to do some clearing... ");
325632,666904576,0,0,PLAT_AP,FOTA,DEINIT_TASK_1,P_SIG,swLogPrintf("FWUPD task ( 0x%x ) terminated succ! ");
325632,666906624,0,0,PLAT_AP,FOTA,SEND_MESSAGE_1,P_WARNING,swLogPrintf("fwupd send queue error ( %d ) ");
325632,666908672,0,0,PLAT_AP,FOTA,DFU_TIMER_EXPIRED_1,P_SIG,swLogPrintf("DFU timer ( %d ) expired! ");
325632,666911232,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_1,P_INFO,swLogPrintf("downloading FW: sn ( %d ) , nbytes ( %d ) , rcvd bytes ( %d ) before ");
325632,666914815,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_2,P_INFO,swLogPrintf("Do erase the flash first! ");
325632,666914816,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_3,P_INFO,swLogPrintf("Invalid pkg nbytes ( %d ) ! ");
325632,666917120,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_4,P_INFO,swLogPrintf("PkgSn ( %d ) is not consecutive! expected is ( %d ) ");
325632,666918912,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_5,P_INFO,swLogPrintf("PkgSn ( %d ) is not started with zero! ");
325632,666921216,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_6,P_INFO,swLogPrintf("Pkg crc8 check error! real_cs8 ( %x ) , in_cs8 ( %x ) ");
325632,666923264,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_7,P_INFO,swLogPrintf("delta overflow! recvBytes ( %d ) , pkgBytes ( %d ) ! ");
325632,666927103,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_8,P_INFO,swLogPrintf("Pkg write flash error! ");
325632,666927104,0,0,PLAT_AP,FOTA,VERIFY_FW_1,P_ERROR,swLogPrintf("validate delta err! errno ( %d ) ");
325632,666931199,0,0,PLAT_AP,FOTA,VERIFY_FW_2,P_SIG,swLogPrintf("validate delta ok! ");
325632,666933247,0,0,PLAT_AP,FOTA,VERIFY_FW_3,P_WARNING,swLogPrintf("however , base fw is unmatched! ");
325632,666935295,0,0,PLAT_AP,FOTA,REBOOT_FOR_UPD,P_SIG,swLogPrintf("system reboot --> upgrade... ");
325632,666937343,0,0,PLAT_AP,FOTA,UPGRADE_FW,P_ERROR,swLogPrintf("create reboot timer error! ");
325632,666937344,0,0,PLAT_AP,FOTA,DOWNLOAD_FW_10,P_INFO,swLogPrintf("All pkg downloaded! fw totalSize ( %d ) ");
325632,666940160,0,0,PLAT_AP,FOTA,OSA_ULFC_TIMER,P_SIG,swLogPrintf("UlfcMem ( %d ) : task ( %d / 0x%x ) unset ( %d ) timer event! ");
325632,666941440,0,0,PLAT_AP,FOTA,FOTA_INIT_CHKSUM,P_WARNING,swLogPrintf("chksum: unsupported algo ( %d ) ! \n ");
325632,666943488,0,0,PLAT_AP,FOTA,FOTA_CALC_CHKSUM,P_WARNING,swLogPrintf("chksum: unsupported algo ( %d ) ! \n ");
325632,666945792,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_0,P_ERROR,swLogPrintf("clr: invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666947840,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_1,P_ERROR,swLogPrintf("clr: no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,666949888,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_2,P_WARNING,swLogPrintf("clr zone ( %d ) : offset ( %d ) should be aligned by 4 K! \n ");
325632,666952192,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_3,P_WARNING,swLogPrintf("clr zone ( %d ) : len ( %d ) overflowed! set it with max ( %d ) ! \n ");
325632,666954240,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_4,P_ERROR,swLogPrintf("clr zone ( %d ) : invalid offset ( %d ) ! max ( %d ) \n ");
325632,666956032,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_5,P_ERROR,swLogPrintf("clr zone ( %d ) : error! currLen ( 0x%x ) is invalid! \n ");
325632,666958336,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_6,P_ERROR,swLogPrintf("clr zone ( %d ) : error! currAddr ( 0x%x ) , errno ( %d ) \n ");
325632,666960128,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_1,P_ERROR,swLogPrintf("wr: invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666962176,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_2,P_ERROR,swLogPrintf("wr: no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,666964480,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_3,P_WARNING,swLogPrintf("wr zone ( %d ) : len ( %d ) overflowed! set it with max ( %d ) ! \n ");
325632,666966528,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_4,P_ERROR,swLogPrintf("wr zone ( %d ) : invalid offset ( %d ) ! max ( %d ) \n ");
325632,666968320,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_1,P_ERROR,swLogPrintf("rd: invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666970368,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_2,P_ERROR,swLogPrintf("rd: no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,666972672,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_3,P_WARNING,swLogPrintf("rd zone ( %d ) : len ( %d ) overflowed! set it with max ( %d ) ! \n ");
325632,666974720,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_4,P_ERROR,swLogPrintf("rd zone ( %d ) : invalid offset ( %d ) ! max ( %d ) \n ");
325632,666978303,0,0,PLAT_AP,FOTA,FOTA_NVM_SET_DFU_0,P_ERROR,swLogPrintf("set DFU: null result ptr! \n ");
325632,666980351,0,0,PLAT_AP,FOTA,FOTA_NVM_SET_DFU_1,P_ERROR,swLogPrintf("set DFU: clear bkup zone failure! \n ");
325632,666980609,0,0,PLAT_AP,FOTA,FOTA_NVM_SET_DFU_2,P_ERROR,swLogPrintf("set DFU: ' %s ' , errno ( %d ) ! \n ");
325632,666984447,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_0,P_ERROR,swLogPrintf("get DFU: null result ptr! \n ");
325632,666986495,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_1,P_ERROR,swLogPrintf("get DFU: read bkup zone failure! \n ");
325632,666988543,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_2,P_INFO,swLogPrintf("get DFU: ' success ' \n ");
325632,666990591,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_3,P_INFO,swLogPrintf("get DFU: ' failure ' \n ");
325632,666992639,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_4,P_INFO,swLogPrintf("get DFU: ' no result ' \n ");
325632,666992896,0,0,PLAT_AP,FOTA,FOTA_CHK_DELTA_1,P_SIG,swLogPrintf("delta: not a par! pmagic ( %x%x ) \n ");
325632,666996735,0,0,PLAT_AP,FOTA,FOTA_CHK_DELTA_2,P_ERROR,swLogPrintf("delta: parh non-sha padding cs calc fail! \n ");
325632,666998783,0,0,PLAT_AP,FOTA,FOTA_CHK_DELTA_3,P_ERROR,swLogPrintf("delta: par-pl cs calc fail! \n ");
325632,667000831,0,0,PLAT_AP,FOTA,FOTA_CHK_DELTA_4,P_ERROR,swLogPrintf("delta: unmatched par cs! calc & set as follows: \n ");
325632,667000832,0,0,PLAT_AP,FOTA,FOTA_IS_IDENTICAL_1,P_ERROR,swLogPrintf("image ( %d ) : fw chksum calc fail! \n ");
325632,667002880,0,0,PLAT_AP,FOTA,FOTA_IS_IDENTICAL_2,P_ERROR,swLogPrintf("image ( %d ) : non-identical fw cs! calc & set as follows: \n ");
325632,667005184,0,0,PLAT_AP,FOTA,FOTA_CHK_IMAGE_1,P_SIG,swLogPrintf("image: not a * .par! pmagic ( %x%x ) \n ");
325632,667007232,0,0,PLAT_AP,FOTA,FOTA_CHK_IMAGE_2,P_SIG,swLogPrintf("image: * .par len ( %d ) err , maxsize ( %d ) \n ");
325632,667009280,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_SZ_1,P_ERROR,swLogPrintf("get size: invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,667011328,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_SZ_2,P_ERROR,swLogPrintf("get size: no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,667013376,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_HNDL_1,P_ERROR,swLogPrintf("get handle: invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,667015424,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_HNDL_2,P_ERROR,swLogPrintf("get handle: no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,667017472,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_XTRAS_1,P_ERROR,swLogPrintf("get xtras: invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,667019520,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_XTRAS_2,P_ERROR,swLogPrintf("get xtras: no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,667021312,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_FLASH_1,P_ERROR,swLogPrintf("error! non-last data , not aligned by %d bytes! \n ");
325632,667023360,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_FLASH_2,P_ERROR,swLogPrintf("sha256sum: alloc buffer ( %d ) failure! \n ");
325632,667025408,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_FLASH_3,P_ERROR,swLogPrintf("zid ( %d ) flash read failure! \n ");
325632,667029503,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_FLASH_4,P_ERROR,swLogPrintf("flash cs-calc fail! \n ");
325632,667029504,0,0,PLAT_AP,FOTA,FOTA_DUMP_OCTETS_1,P_INFO,swLogPrintf("total length ( %d ) : \n ");
325632,667032068,0,0,PLAT_AP,FOTA,FOTA_DUMP_OCTETS_2,P_INFO,swLogPrintf("[ %d / %d ] %s \n ");
325632,667034116,0,0,PLAT_AP,FOTA,FOTA_DUMP_OCTETS_3,P_INFO,swLogPrintf("[ %d / %d ] %s \n ");
328704,673187840,0,0,PLAT_AP,CTWING,FreeRTOS_disconnect_0,P_INFO,swLogPrintf("FreeRTOS_disconnect my_socket %d ");
328704,673189888,0,0,PLAT_AP,CTWING,NetworkSetConnTimeout_0,P_INFO,swLogPrintf("NetworkSetConnTimeout my_socket fail %d ");
328704,673191936,0,0,PLAT_AP,CTWING,NetworkSetConnTimeout_1,P_INFO,swLogPrintf("NetworkSetConnTimeout send fail %d ");
328704,673193984,0,0,PLAT_AP,CTWING,NetworkSetConnTimeout_2,P_INFO,swLogPrintf("NetworkSetConnTimeout recv fail %d ");
328704,673196032,0,0,PLAT_AP,CTWING,NetworkSetConnTimeout_3,P_INFO,swLogPrintf("NetworkSetConnTimeout fcntl fail %d ");
334848,685772799,0,0,PLAT_AP,CCM_REG,CcmRegProcCemmrNwServiceStatusIndSig_2,P_SIG,swLogPrintf("CCM REG , UE is OUT OF SERVICE ");
336896,689965312,0,0,PLAT_AP,CCM_PS,CcmPsCheckAutoSaveDataCounterTimerWakeUpFromDeepSleep_1,P_INFO,swLogPrintf("CCM PS , currHibSC is %d , ExpiredHibSC is %d , CCM_PS_AUTO_SAVE_DATA_COUNTER_PERIOD_TIMER had expired under deep sleep , need to save into nvm! ");
337920,692064255,0,0,PLAT_AP,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_7,P_WARNING,swLogPrintf("CCM SMS , CcmSmsGetUserDatafromPdu return wrong ");
344064,704645120,0,0,PLAT_AP,MCI,MG_TRACE_Printf_MCI_1,P_INFO,swLogPrintf("nLen:%d ");
344064,704647169,0,0,PLAT_AP,MCI,MCI_USER,P_INFO,swLogPrintf("%s ");
344064,704649472,0,0,PLAT_AP,MCI,HTTP_DELETE_MCI_1,P_INFO,swLogPrintf("line [ %d ] : list_rq %X ");
344064,704651520,0,0,PLAT_AP,MCI,HTTP_CLOSE_MCI_1,P_INFO,swLogPrintf("line [ %d ] : list_rq %X ");
344064,704653568,0,0,PLAT_AP,MCI,HTTP_LOG_MCI_1,P_INFO,swLogPrintf("line [ %d ] : fail %X ");
344064,704655360,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_1,P_INFO,swLogPrintf("line [ %d ] :protocol not supported ");
344064,704657408,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_2,P_INFO,swLogPrintf("line [ %d ] :url error ");
344064,704659456,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_4,P_INFO,swLogPrintf("line [ %d ] :request method not supported ");
344064,704661504,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_6,P_INFO,swLogPrintf("line [ %d ] :connect fail ");
344064,704663552,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_8,P_INFO,swLogPrintf("line [ %d ] :get socket id fail ");
344064,704665600,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_10,P_INFO,swLogPrintf("line [ %d ] :send first line fail ");
344064,704667648,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_12,P_INFO,swLogPrintf("line [ %d ] :send default header fail ");
344064,704669696,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_16,P_INFO,swLogPrintf("line [ %d ] :send usr header fail ");
344064,704671744,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_18,P_INFO,swLogPrintf("line [ %d ] :send header end mark fail ");
344064,704673792,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_20,P_INFO,swLogPrintf("line [ %d ] :send content fail ");
344064,704675840,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_22,P_INFO,swLogPrintf("line [ %d ] :read first line fail ");
344064,704677888,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_26,P_INFO,swLogPrintf("line [ %d ] :read header fail ");
344064,704679936,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_28,P_INFO,swLogPrintf("line [ %d ] :read header fail ");
344064,704681984,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_35,P_INFO,swLogPrintf("line [ %d ] :read content fail ");
344064,704684032,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_36,P_INFO,swLogPrintf("line [ %d ] :_net_response_chunk_get_length fail ");
344064,704686080,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_38,P_INFO,swLogPrintf("line [ %d ] :sock->handler.onRecv fail ");
344064,704688640,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_39,P_INFO,swLogPrintf("line [ %d ] : nRecvLen: %d , %d ");
344064,704690176,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_40,P_INFO,swLogPrintf("line [ %d ] :read content fail ");
344064,704692480,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_44,P_INFO,swLogPrintf("line [ %d ] :_net_readline len: %d ");
344064,704694272,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_48,P_INFO,swLogPrintf("line [ %d ] :sock->handler.onRecv fail ");
344064,704696320,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_49,P_INFO,swLogPrintf("line [ %d ] :read content fail ");
344064,704698624,0,0,PLAT_AP,MCI,HTTP_REQUEST_MCI_55,P_INFO,swLogPrintf("line [ %d ] :http request fail %d ");
344064,704700416,0,0,PLAT_AP,MCI,MG_HTTP_Create_MCI_1,P_INFO,swLogPrintf("line [ %d ] :memory request failed ");
344064,704702464,0,0,PLAT_AP,MCI,MG_HTTP_Create_MCI_2,P_INFO,swLogPrintf("line [ %d ] :Mutex Create failed ");
344064,704704512,0,0,PLAT_AP,MCI,MG_HTTP_Create_MCI_3,P_INFO,swLogPrintf("line [ %d ] :request header list Create failed ");
344064,704706560,0,0,PLAT_AP,MCI,MG_HTTP_Create_MCI_4,P_INFO,swLogPrintf("line [ %d ] : TCP socket create failed ");
344064,704708608,0,0,PLAT_AP,MCI,MG_HTTP_Create_MCI_5,P_INFO,swLogPrintf("line [ %d ] : TCP socket create failed ");
344064,704710656,0,0,PLAT_AP,MCI,HTTP_HEADER_NEW_MCI_1,P_INFO,swLogPrintf("header : %x ");
344064,704712704,0,0,PLAT_AP,MCI,HTTP_HEADERLIST_NEW_MCI_1,P_INFO,swLogPrintf("headerlist : %x ");
344064,704714752,0,0,PLAT_AP,MCI,HTTP_HEADERLIST_GET_MCI_1,P_INFO,swLogPrintf("headerList length : %d ");
344064,704717568,0,0,PLAT_AP,MCI,HTTP_HEADERLIST_CLEAR_MCI_2,P_INFO,swLogPrintf("headerList :%x , pCurHead : %x , headFlag:%d , nTurns : %d ");
344064,704718848,0,0,PLAT_AP,MCI,HTTP_HEADERLIST_CLEAR_MCI_1,P_INFO,swLogPrintf("pNextList is null , nTurns : %d ");
344064,704720896,0,0,PLAT_AP,MCI,HTTP_HEADERLIST_DELETE_MCI_1,P_INFO,swLogPrintf("headerList : %x ");
344064,704722944,0,0,PLAT_AP,MCI,HTTP_SOCKET_CONNECT_MCI_2,P_INFO,swLogPrintf("iRet : %d ");
344064,704724992,0,0,PLAT_AP,MCI,HTTP_SOCKET_CONNECT_MCI_3,P_INFO,swLogPrintf("socket iRet : %d ");
344064,704727040,0,0,PLAT_AP,MCI,HttpNetTcpConnect_1,P_INFO,swLogPrintf("fd : %d ");
344064,704729088,0,0,PLAT_AP,MCI,MQTT_HEADER_NEW_MCI_1,P_INFO,swLogPrintf("header : %x ");
344064,704731136,0,0,PLAT_AP,MCI,MQTT_HEADERLIST_NEW_MCI_1,P_INFO,swLogPrintf("headerlist : %x ");
344064,704733184,0,0,PLAT_AP,MCI,MQTT_HEADERLIST_FIND_MCI_1,P_INFO,swLogPrintf("pNextList is null , nTurns : %d ");
344064,704735232,0,0,PLAT_AP,MCI,MQTT_HEADERLIST_FIND_MCI_3,P_INFO,swLogPrintf("pNextList type error , nTurns : %d ");
344064,704737280,0,0,PLAT_AP,MCI,MQTT_SOCKET_CONNECT_MCI_2,P_INFO,swLogPrintf("iRet : %d ");
344064,704739328,0,0,PLAT_AP,MCI,MQTT_SOCKET_CONNECT_MCI_3,P_INFO,swLogPrintf("socket iRet : %d ");
344064,704741376,0,0,PLAT_AP,MCI,MqttNetTcpConnect_1,P_INFO,swLogPrintf("fd : %d ");
344064,704743681,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Create_MCI_1,P_INFO,swLogPrintf("%s [ %d ] :info is null ");
344064,704745729,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Create_MCI_2,P_INFO,swLogPrintf("%s [ %d ] :parameter is not supported ");
344064,704747777,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Create_MCI_3,P_INFO,swLogPrintf("%s [ %d ] :memory request failed ");
344064,704750081,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Create_MCI_4,P_INFO,swLogPrintf("%s [ %d ] :seed init failed %d ");
344064,704752129,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Create_MCI_5,P_INFO,swLogPrintf("%s [ %d ] :ca parse failed %d ");
344064,704754177,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Create_MCI_6,P_INFO,swLogPrintf("%s [ %d ] :clicert parse failed %d ");
344064,704756225,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Create_MCI_7,P_INFO,swLogPrintf("%s [ %d ] :public key parse failed %d ");
344064,704758529,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Connect_MCI_1,P_INFO,swLogPrintf("%s [ %d ] :connect failed %d cid = %d ");
344064,704760321,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Connect_MCI_2,P_INFO,swLogPrintf("%s [ %d ] :config defaults failed %d ");
344064,704762369,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Connect_MCI_3,P_INFO,swLogPrintf("%s [ %d ] :conf own cert failed %d ");
344064,704764417,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Connect_MCI_4,P_INFO,swLogPrintf("%s [ %d ] :setup failed %d ");
344064,704766465,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Connect_MCI_5,P_INFO,swLogPrintf("%s [ %d ] :set hostname failed %d ");
344064,704768513,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Connect_MCI_6,P_INFO,swLogPrintf("%s [ %d ] :handshake failed %d ");
344064,704770561,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Connect_MCI_7,P_INFO,swLogPrintf("%s [ %d ] :verify_result %d ");
344064,704772609,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Write_MCI_1,P_INFO,swLogPrintf("%s [ %d ] :write nRet %d ");
344064,704774657,0,0,PLAT_AP,MCI,MG_SOCK_SSL_Read_MCI_1,P_INFO,swLogPrintf("%s [ %d ] :read nRet %d ");
344064,704776448,0,0,PLAT_AP,MCI,MG_NETCALLBACK_SENDEVENT_MCI_1,P_INFO,swLogPrintf("send event:%x bret:%d ");
344064,704780287,0,0,PLAT_AP,MCI,evCallback_MCI_1,P_INFO,swLogPrintf("PS_URC_ID_SIM_READY ");
344064,704782335,0,0,PLAT_AP,MCI,evCallback_MCI_2,P_INFO,swLogPrintf("PS_URC_ID_SIM_REMOVED ");
344064,704782592,0,0,PLAT_AP,MCI,evCallback_MCI_3,P_INFO,swLogPrintf("PS_URC_ID_PS_BEARER_ACTED sim %d , cid %d ");
344064,704784640,0,0,PLAT_AP,MCI,evCallback_MCI_4,P_INFO,swLogPrintf("PS_URC_ID_PS_BEARER_DEACTED sim:%d cid:%d ");
344064,704786432,0,0,PLAT_AP,MCI,evCallback_MCI_5,P_INFO,swLogPrintf("PS_URC_ID_PS_CEREG_CHANGED state:%d ");
344064,704789248,0,0,PLAT_AP,MCI,evCallback_MCI_6,P_INFO,swLogPrintf("PS_URC_ID_PS_NETINFO indCause:%d netStatus:%d netifType:%d ipType:%d ");
344064,704792575,0,0,PLAT_AP,MCI,MG_NETCALLBACK_WAITEVENT_MCI_1,P_INFO,swLogPrintf("network callback threadId IS NULL ");
344064,704792832,0,0,PLAT_AP,MCI,MG_NETCALLBACK_WAITEVENT_MCI_2,P_INFO,swLogPrintf("network callback eventID:%x bret:%d ");
344064,704794880,0,0,PLAT_AP,MCI,MG_PM_set_MCI_1,P_INFO,swLogPrintf("[ %d ] : is_sleep_en %d ");
344064,704796928,0,0,PLAT_AP,MCI,MG_PM_set_MCI_2,P_INFO,swLogPrintf("[ %d ] : pwrKeyCb %X ");
344064,704798976,0,0,PLAT_AP,MCI,MG_PM_set_MCI_3,P_INFO,swLogPrintf("[ %d ] : WakeupInCb %X ");
344064,704801024,0,0,PLAT_AP,MCI,opentest,P_INFO,swLogPrintf("open fd = %d , pfhdler = %d ");
344064,704803072,0,0,PLAT_AP,MCI,MG_OS_MutexUnlock_MCI_1,P_INFO,swLogPrintf("mutex :%x , nState:%d ");
344064,704805120,0,0,PLAT_AP,MCI,MG_OS_MutexDelete_MCI_1,P_INFO,swLogPrintf("mutex :%x , nState:%d ");
344064,704807168,0,0,PLAT_AP,MCI,MG_OS_SemaphoreRelease_MCI_1,P_INFO,swLogPrintf("Semaphore :%x , nState:%d ");
344064,704809216,0,0,PLAT_AP,MCI,MG_OS_SemaphoreDelete_MCI_1,P_INFO,swLogPrintf("Semaphore :%x , nState:%d ");
344064,704811008,0,0,PLAT_AP,MCI,MG_OS_ThreadSleep_MCI_1,P_INFO,swLogPrintf("nState:%d ");
344064,704813568,0,0,PLAT_AP,MCI,MG_OS_EventWait_MCI_1,P_INFO,swLogPrintf("osIsInISRContext:%d thread:%x , event:%x ");
344064,704817151,0,0,PLAT_AP,MCI,MG_OS_EventWait_MCI_2,P_INFO,swLogPrintf("hQueue is NULL ");
344064,704817408,0,0,PLAT_AP,MCI,MG_OS_EventWait_MCI_3,P_INFO,swLogPrintf("thread :%x , nState:%d ");
344064,704819456,0,0,PLAT_AP,MCI,MG_OS_EventSend_MCI_1,P_INFO,swLogPrintf("thread :%x , event:%x ");
344064,704823295,0,0,PLAT_AP,MCI,MG_OS_EventSend_MCI_2,P_INFO,swLogPrintf("hQueue is NULL ");
344064,704823552,0,0,PLAT_AP,MCI,MG_OS_EventSend_MCI_3,P_INFO,swLogPrintf("thread :%x , nState:%d ");
344064,704825600,0,0,PLAT_AP,MCI,MG_OS_EventSendISR_MCI_1,P_INFO,swLogPrintf("thread :%x , event:%x ");
344064,704829439,0,0,PLAT_AP,MCI,MG_OS_EventSendISR_MCI_2,P_INFO,swLogPrintf("hQueue is NULL ");
344064,704829697,0,0,PLAT_AP,MCI,MG_SYSTEM_1,P_INFO,swLogPrintf("%s line [ %d ] :Error:Not enough buffer ");
344064,704831745,0,0,PLAT_AP,MCI,MG_SYSTEM_2,P_INFO,swLogPrintf("%s line [ %d ] :Error:Not enough buffer ");
344064,704834048,0,0,PLAT_AP,MCI,MG_SYSTEM_GetBootMode_MCI_1,P_INFO,swLogPrintf("line [ %d ] :AP:%d , CP:%d ");
344064,704835584,0,0,PLAT_AP,MCI,MG_TRACE_PrintfEX_MCI_1,P_INFO,swLogPrintf("nLen:%d ");
344064,704837633,0,0,PLAT_AP,MCI,showBootInfo_mci_1,P_INFO,swLogPrintf("version:%s ");
344064,704839936,0,0,PLAT_AP,MCI,showBootInfo_mci_2,P_INFO,swLogPrintf("boot cause: AP:%d , CP:%d ");
345088,706744319,0,0,PLAT_AP,CAM_DEV,CacDevGetWifiScanCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_WIFISCAN_REQ ' pending , when process the WifiScan CNF ");
345088,706746367,0,0,PLAT_AP,CAM_DEV,CamDevGetWifiScanCfgCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_WIFISCAN_REQ ' pending , when process the WifiScan Cfg CNF ");
349184,715130880,0,0,PLAT_AP,CAM_SMS,CamSmsCmiSetCscbSettingReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support cscb setting <mode>: %d ");
349184,715134975,0,0,PLAT_AP,CAM_SMS,CamSmsCmiSetCscbSettingReqFunc_2,P_WARNING,swLogPrintf("CAM SMS , fail to update the CSCB setting to NVM ");
349184,715137023,0,0,PLAT_AP,CAM_SMS,CamSmsGetCscbSettingCnf_1,P_WARNING,swLogPrintf("CAM SMS , no ' CmiSmsGetCscbSettingReq ' pending , when process the get CscbSetting CNF ");
394240,807405569,0,0,PLAT_CP,PLA_STRING,StackOverflow,P_ERROR,swLogPrintf("\r \n!!!error!!!..task:%s..stack.over.flow!!! \r \n ");
396288,811601919,0,0,PLAT_CP,PLA_DRIVER,ShareInfoGetCpAdcValue_0,P_ERROR,swLogPrintf("Request Read AuxADC when result is invalid! ");
396288,811602176,0,0,PLAT_CP,PLA_DRIVER,CLOCK_clockEnable_1,P_WARNING,swLogPrintf("Clock Enable Failed , id = 0x%x counter = %d ");
396288,811603968,0,0,PLAT_CP,PLA_DRIVER,CLOCK_clockDisable_0,P_WARNING,swLogPrintf("Clock Disable check failed , id = 0x%x ");
396288,811606272,0,0,PLAT_CP,PLA_DRIVER,cpmuTryCPSleep_3,P_VALUE,swLogPrintf("XIC0 0x%x XIC1 0x%x \r \n ");
396288,811608064,0,0,PLAT_CP,PLA_DRIVER,cpmuTranslatePhyInitState_6,P_WARNING,swLogPrintf("Phy Init State Error: wakeupBm = 0x%x ");
396288,811610880,0,0,PLAT_CP,PLA_DRIVER,CAIpcAlone1Isr_1,P_INFO,swLogPrintf("CP RECV IPC ID: 0x%x , msgLen: %d , bFast: %d , gA2CReadAddr_cp_rw = 0x%X ");
396288,811612160,0,0,PLAT_CP,PLA_DRIVER,C2ASendAonIpcMsg_1,P_WARNING,swLogExcep("Warning , Last IPC0 Message not pop out , last msg = 0x%x ");
396288,811616255,0,0,PLAT_CP,PLA_DRIVER,C2ASendAonIpcMsg_2,P_WARNING,swLogExcep("Warning , CP write IPC0 fail ");
396288,811616256,0,0,PLAT_CP,PLA_DRIVER,WaitC2AIpcCnf_0,P_INFO,swLogPrintf("MSG ( id:0x%X ) send to AP in paging image , wait for response! ");
396288,811618304,0,0,PLAT_CP,PLA_DRIVER,WaitC2AIpcCnf_1,P_INFO,swLogPrintf("MSG response ( id:0x%X ) received from AP in paging image! ");
396288,811620352,0,0,PLAT_CP,PLA_DRIVER,WaitC2AIpcCnf_2,P_INFO,swLogPrintf("wait in while loop! and msg in aon is 0x%X ");
396288,811622915,0,0,PLAT_CP,PLA_DRIVER,assert_func_1,P_ERROR,swLogPrintf("Assert , expr:%s , file: %s , line: %d \r \n ");
398336,815796223,0,0,PLAT_CP,EXCEP_PRINT,check_excep_func_call_1,P_ERROR,swLogExcep("try to parse exception call stack by address compare! ");
398336,815796224,0,0,PLAT_CP,EXCEP_PRINT,check_excep_func_call_2,P_ERROR,swLogExcep("maybe function address @ 0x%x ");
398336,815800319,0,0,PLAT_CP,EXCEP_PRINT,excepCheckFaultType_1,P_ERROR,swLogExcep("hardfault: casued by vector fetch error! ");
398336,815802367,0,0,PLAT_CP,EXCEP_PRINT,excepCheckFaultType_2,P_ERROR,swLogExcep("hardfault: casued by debug event! ");
398336,815804415,0,0,PLAT_CP,EXCEP_PRINT,mmfault_1,P_ERROR,swLogExcep("mem fault: instruction access violatio ");
398336,815806463,0,0,PLAT_CP,EXCEP_PRINT,mmfault_2,P_ERROR,swLogExcep("mem fault: data access violation ");
398336,815808511,0,0,PLAT_CP,EXCEP_PRINT,mmfault_3,P_ERROR,swLogExcep("mem fault: unstacking error ");
398336,815810559,0,0,PLAT_CP,EXCEP_PRINT,mmfault_4,P_ERROR,swLogExcep("mem fault: stacking error ");
398336,815810560,0,0,PLAT_CP,EXCEP_PRINT,mmfault_5,P_ERROR,swLogExcep("memory manage fault address @ 0x%x ");
398336,815814655,0,0,PLAT_CP,EXCEP_PRINT,busfault_1,P_ERROR,swLogExcep("bus fault: instrunction acess error ");
398336,815816703,0,0,PLAT_CP,EXCEP_PRINT,busfault_2,P_ERROR,swLogExcep("bus fault: precise data acess error ");
398336,815818751,0,0,PLAT_CP,EXCEP_PRINT,busfault_3,P_ERROR,swLogExcep("bus fault: imprecise data acess error ");
398336,815820799,0,0,PLAT_CP,EXCEP_PRINT,busfault_4,P_ERROR,swLogExcep("bus fault: unstacking error ");
398336,815822847,0,0,PLAT_CP,EXCEP_PRINT,busfault_5,P_ERROR,swLogExcep("bus fault: stacking error ");
398336,815822848,0,0,PLAT_CP,EXCEP_PRINT,busfault_6,P_ERROR,swLogExcep("bus fault address @ 0x%x ");
398336,815826943,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_1,P_ERROR,swLogExcep("usage fault: try to execute undefined instruction ");
398336,815828991,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_2,P_ERROR,swLogExcep("usage fault: try to switch to wrong state ( ARM ) ");
398336,815831039,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_3,P_ERROR,swLogExcep("usage fault: execute EXC_RETURN error ");
398336,815833087,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_4,P_ERROR,swLogExcep("usage fault: try to execute coprocessor instruction ");
398336,815835135,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_5,P_ERROR,swLogExcep("usage fault: unaligned access ");
398336,815837183,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_6,P_ERROR,swLogExcep("usage fault: divide by zero ");
398336,815839231,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_1,P_ERROR,swLogExcep("dump regs start: ");
398336,815839232,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_2,P_ERROR,swLogExcep("dump reg: r0: 0x%x ! ");
398336,815841280,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_3,P_ERROR,swLogExcep("dump reg: r1: 0x%x ! ");
398336,815843328,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_4,P_ERROR,swLogExcep("dump reg: r2: 0x%x ! ");
398336,815845376,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_5,P_ERROR,swLogExcep("dump reg: r3: 0x%x ! ");
398336,815847424,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_6,P_ERROR,swLogExcep("dump reg: r4: 0x%x ! ");
398336,815849472,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_7,P_ERROR,swLogExcep("dump reg: r5: 0x%x ! ");
398336,815851520,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_8,P_ERROR,swLogExcep("dump reg: r6: 0x%x ! ");
398336,815853568,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_9,P_ERROR,swLogExcep("dump reg: r7: 0x%x ! ");
398336,815855616,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_10,P_ERROR,swLogExcep("dump reg: r8: 0x%x ! ");
398336,815857664,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_11,P_ERROR,swLogExcep("dump reg: r9: 0x%x ! ");
398336,815859712,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_12,P_ERROR,swLogExcep("dump reg: r10: 0x%x ! ");
398336,815861760,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_13,P_ERROR,swLogExcep("dump reg: r11: 0x%x ! ");
398336,815863808,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_14,P_ERROR,swLogExcep("dump reg: r12: 0x%x ! ");
398336,815865856,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_15,P_ERROR,swLogExcep("dump reg: sp: 0x%x ! ");
398336,815867904,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_16,P_ERROR,swLogExcep("dump reg: msp: 0x%x ! ");
398336,815869952,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_17,P_ERROR,swLogExcep("dump reg: psp: 0x%x ! ");
398336,815872000,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_18,P_ERROR,swLogExcep("dump reg: lr: 0x%x ! ");
398336,815874048,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_19,P_ERROR,swLogExcep("dump reg: exception pc: 0x%x ! ");
398336,815876096,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_20,P_ERROR,swLogExcep("dump reg: psr: 0x%x ! ");
398336,815878144,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_21,P_ERROR,swLogExcep("dump reg: exc_return: 0x%x ! ");
398336,815880192,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_22,P_ERROR,swLogExcep("dump reg BASEPRI: 0x%x ! ");
398336,815882240,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_23,P_ERROR,swLogExcep("dump reg PRIMASK: 0x%x ! ");
398336,815884288,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_24,P_ERROR,swLogExcep("dump reg FAULTMASK: 0x%x ! ");
398336,815886336,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_25,P_ERROR,swLogExcep("dump reg CONTROL: 0x%x ! ");
398336,815890431,0,0,PLAT_CP,EXCEP_PRINT,hardfault_enter1,P_ERROR,swLogExcep("CP hard fault triggered!! ");
398336,815890688,0,0,PLAT_CP,EXCEP_PRINT,excepHardFaultHandler_3,P_WARNING,swLogExcep("CP: Min of max free block in histroy: [ %d , %d ) ");
398336,815892992,0,0,PLAT_CP,EXCEP_PRINT,excepHardFaultHandler_4,P_WARNING,swLogExcep("CP: Current max free block size: %d in [ %d , %d ) ");
398336,815894529,0,0,PLAT_CP,EXCEP_PRINT,exception_task,P_ERROR,swLogExcep("hardfault task: %s ");
398336,815896577,0,0,PLAT_CP,EXCEP_PRINT,unilogAssertInfo_1,P_ERROR,swLogExcep("ASSERT , FUNC: %s ");
398336,815898625,0,0,PLAT_CP,EXCEP_PRINT,unilogAssertInfo_2,P_ERROR,swLogExcep("ASSERT , FILE : %s ");
398336,815901440,0,0,PLAT_CP,EXCEP_PRINT,unilogAssertInfo_3,P_ERROR,swLogExcep("ASSERT line: %d , val is 0x%x , 0x%x , 0x%x ");
398336,815903232,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_0,P_ERROR,swLogExcep("CP assert triggered!!SP = 0x%x , PSP = 0x%x , MSP = 0x%x ");
398336,815904769,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_1,P_ERROR,swLogExcep("Assert INFO : %s ");
398336,815907072,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_001,P_WARNING,swLogExcep("CP: Min of max free block in histroy: [ %d , %d ) ");
398336,815909376,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_002,P_WARNING,swLogExcep("CP: Current max free block size: %d in [ %d , %d ) ");
398336,815910913,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_2,P_ERROR,swLogExcep("assert in: %s ");
399360,817892353,0,0,PLAT_CP,OSA,OsaCheckDebugFalse_e_1,P_ERROR,swLogPrintf("Debug Error , func: %s , line: %d , ( 0x%x , 0x%x , 0x%x ) ");
400384,819988736,0,0,PLAT_CP,PMU,cpmuSaveWakeupSrc_4,P_VALUE,swLogPrintf("CPmu: Recover Wakeup_type from Hw = 0x%x , bootFlag = %d ");
400384,819992575,0,0,PLAT_CP,PMU,cpmuHasIPCInt_1,P_VALUE,swLogPrintf("CP has IPC1 Int Pending in SmallImg ");
400384,819994623,0,0,PLAT_CP,PMU,cpmuTryCPSleep_1,P_VALUE,swLogPrintf("CP: Go DeepSleep ");
400384,819994880,0,0,PLAT_CP,PMU,cpmuTryCPSleep_2,P_WARNING,swLogPrintf("CP: Sleep Failed , NVIC ISPR 0x%x ICSR 0x%x \r \n ");
400384,819996928,0,0,PLAT_CP,PMU,cpmuInit1,P_INFO,swLogPrintf("cp share:0x%x , len:0x%x \r \n ");
400384,819998720,0,0,PLAT_CP,PMU,excepCPEnterLoop_1,P_ERROR,swLogExcep("AP Dump , CP enter exception loop , reason = %e<ACIPC0MSGID> ");
400384,820000768,0,0,PLAT_CP,PMU,testTask_1,P_VALUE,swLogPrintf("CP: Test task loop-%d ");
400384,820002816,0,0,PLAT_CP,PMU,cp_main_01,P_WARNING,swLogPrintf("CP found unexpected reset , Reset Src = 0x%x ");
400384,820005376,0,0,PLAT_CP,PMU,cp_main_1,P_VALUE,swLogPrintf("CP Wakeup Bitmap ( 0 :sw 1 :rt ; 2 :bc 3 -5:ipc ) = 0x%x , CP Actual Sleep State = %e<CPSleepState> , Pending ipc1 = %d ");
400384,820007424,0,0,PLAT_CP,PMU,cp_main_2,P_VALUE,swLogPrintf("CP Power On IPC NVIC Status , ipc0 = %d , ipc1 = %d , CurSc = %d ");
400384,820011007,0,0,PLAT_CP,PMU,cp_main_3,P_INFO,swLogPrintf("Cp Sleep in paging Img ");
400384,820011776,0,0,PLAT_CP,PMU,cp_main_4,P_SIG,swLogPrintf("CP: Transfer to FullImage , ipc1 Int = %d , IPCPending = ( %d , %d ) , cp Need FullImage = %d ");
449536,920653823,0,0,PLAT_CP,PLA_APP,enter_NMI_handler,P_ERROR,swLogPrintf("WDT timeout!!! Enter NMI Handler!!! ");
524288,1073745919,0,0,PS1,PS_DUMP,CerrcCheckIfBandSupported_list,P_INFO,swLogDump("Supported Band List: ");
524288,1073747967,0,0,PS1,PS_DUMP,CerrcUpdateSimInfo_imsi,P_INFO,swLogDump("IMSI: ");
524288,1073750015,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB2_else,P_INFO,swLogDump("SIB2: ");
524288,1073752063,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB3_else,P_INFO,swLogDump("SIB3: ");
524288,1073754111,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB4_else,P_INFO,swLogDump("SIB4: ");
524288,1073756159,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB5_else,P_INFO,swLogDump("SIB5: ");
524288,1073758207,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB14_else,P_INFO,swLogDump("SIB14: ");
524288,1073760255,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB16_else,P_INFO,swLogDump("SIB16: ");
524288,1073762303,0,0,PS1,PS_DUMP,CerrcDeriveKeNB_Kasme,P_INFO,swLogDump("Kasme ( 256 -bit ) : ");
524288,1073764351,0,0,PS1,PS_DUMP,CerrcDeriveKeNB_ulCount,P_INFO,swLogDump("NAS UL COUNT ( 32 -bit ) : ");
524288,1073766399,0,0,PS1,PS_DUMP,CerrcDeriveKeNB_KeNB,P_INFO,swLogDump("KeNB ( 256 -bit ) : ");
524288,1073768447,0,0,PS1,PS_DUMP,CerrcDeriveAsKey_asKey,P_INFO,swLogDump("AS Key ( 128 -bit ) : ");
524288,1073770495,0,0,PS1,PS_DUMP,CerrcSyncNH_KeNBInit,P_INFO,swLogDump("KeNBInitial ( 256 -bit ) : ");
524288,1073772543,0,0,PS1,PS_DUMP,CerrcSyncNH_preNH,P_INFO,swLogDump("Previous NH ( 256 -bit ) : ");
524288,1073774591,0,0,PS1,PS_DUMP,CerrcSyncNH_string,P_INFO,swLogDump("Input String: ");
524288,1073776639,0,0,PS1,PS_DUMP,CerrcSyncNH_syncNH,P_INFO,swLogDump("The sync NH ( 256 -bit ) : ");
524288,1073778687,0,0,PS1,PS_DUMP,CerrcDeriveNewKeNB_input,P_INFO,swLogDump("The input Key ( 256 -bit ) : ");
524288,1073780735,0,0,PS1,PS_DUMP,CerrcDeriveNewKeNB_string,P_INFO,swLogDump("The input String: ");
524288,1073782783,0,0,PS1,PS_DUMP,CerrcDeriveNewKeNB_output,P_INFO,swLogDump("The output KeNB * ( 256 -bit ) : ");
524288,1073784831,0,0,PS1,PS_DUMP,CerrcCalcXmacI_data,P_INFO,swLogDump("The input data: ");
524288,1073786879,0,0,PS1,PS_DUMP,CerrcCalcXmacI_key,P_INFO,swLogDump("The KRRCint ( 128 -bit ) : ");
524288,1073788927,0,0,PS1,PS_DUMP,CerrcCalcXmacI_xMacIArray,P_INFO,swLogDump("The xMacIArray ( 32 -bit ) : ");
524288,1073790975,0,0,PS1,PS_DUMP,CerrcDlPduSoftEeaThenEia_input,P_INFO,swLogDump("The input data: ");
524288,1073793023,0,0,PS1,PS_DUMP,CerrcDlPduSoftEeaThenEia_output,P_INFO,swLogDump("The output data: ");
524288,1073795071,0,0,PS1,PS_DUMP,CamSimCmiSimRestrictedAccessReqFunc_0,P_VALUE,swLogDump("CmiSimRestrictedAccessReq: ");
524288,1073797119,0,0,PS1,PS_DUMP,CamSimCmiSimGenLogicalChAccessReqFunc_0,P_VALUE,swLogDump("CmiSimGenLogicalChannelAccessReq: ");
524288,1073799167,0,0,PS1,PS_DUMP,CamSimCmiSimGenLogicalChAccessCnfFunc_2,P_VALUE,swLogDump("CmiSimGenLogicalChannelAccessCnf: ");
524288,1073801215,0,0,PS1,PS_DUMP,RandomizeDownlinkEmmMessage_2,P_INFO,swLogDumpPolling("Original DL PDU is: ");
524288,1073803263,0,0,PS1,PS_DUMP,RandomizeDownlinkEmmMessage_4,P_INFO,swLogDumpPolling("Random value is: ");
524288,1073805311,0,0,PS1,PS_DUMP,RandomizeDownlinkEmmMessage_5,P_INFO,swLogDumpPolling("Randomized DL PDU is: ");
524288,1073807359,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_8,P_INFO,swLogDump("decypered data content is: ");
524288,1073809407,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_9,P_INFO,swLogDump("data content is: ");
524288,1073811455,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_10,P_INFO,swLogDump("nasEncKey is: ");
524288,1073813503,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_11,P_INFO,swLogDump("nasIntKey is: ");
524288,1073815551,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_12,P_INFO,swLogDump("DL NAS COUNT is: ");
524288,1073817599,0,0,PS1,PS_DUMP,CemmIsNeedIngoreDlEmmMsg_4,P_INFO,swLogDump("Last Dl Emm Msg Hash Value: ");
524288,1073819647,0,0,PS1,PS_DUMP,CemmIsNeedIngoreDlEmmMsg_5,P_INFO,swLogDump("Current Dl Emm Msg Hash Value: ");
524288,1073821695,0,0,PS1,PS_DUMP,CemmNasMsgInd_5,P_INFO,swLogDumpPolling("cerrcNasMsgInd PDU is: ");
524288,1073823743,0,0,PS1,PS_DUMP,CemmNasMsgInd_7,P_INFO,swLogDumpPolling("NAS DL PDU: ");
524288,1073825791,0,0,PS1,PS_DUMP,CemmSimReady_2,P_INFO,swLogDumpPolling("EFepsloci GUTI is: ");
524288,1073827839,0,0,PS1,PS_DUMP,CesmGetFullIpv6AddrFromNetif_1,P_VALUE,swLogDump("CESM , EPS FULL IPV6 ADDR: ");
524288,1073829887,0,0,PS1,PS_DUMP,CeSmcmProcessMoEstReqData_4,P_INFO,swLogDumpPolling("SMCM send SMS pdu to EMM: ");
524288,1073831935,0,0,PS1,PS_DUMP,CeSmcmSendEmmSmsUnitDataReq_5,P_INFO,swLogPrintf("SMCM SEND CP DATA / ACK / ERROR TO CEMM: ");
524288,1073833983,0,0,PS1,PS_DUMP,SmcmSendSmcmDataIndToSmrl_1,P_INFO,swLogDumpPolling("SMCM send CP DATA / ACK / ERROR to SMRL: ");
524288,1073836031,0,0,PS1,PS_DUMP,SmcmSendSmcmEstIndFromEmmData_1,P_INFO,swLogPrintf("SMCM send MT CP-DATA to SMRL: ");
524288,1073838079,0,0,PS1,PS_DUMP,CemmSmrlSendDataIndtoSmtl_1,P_INFO,swLogPrintf("SMRL SEND MT SMS PDU TO SMTL: ");
524288,1073840127,0,0,PS1,PS_DUMP,CemmSmstlProcCemmSmsSendMessageSig_1,P_INFO,swLogPrintf("SMTL SEND SMS PDU: ");
524288,1073842175,0,0,PS1,PS_DUMP,CemmSmstlProcCemmSmsCommandReqSig_1,P_INFO,swLogPrintf("SMTL SEND SMS PDU: ");
524288,1073844223,0,0,PS1,PS_DUMP,CemmSmstlProcCemmSmsSendSMMASig_1,P_INFO,swLogPrintf("SMTL SEND SMMA ");
524288,1073846271,0,0,PS1,PS_DUMP,UiccCtrlStart3GSession_acl_dump,P_VALUE,swLogDump("CemmsimAppReadyInd pAclRawData: ");
524288,1073848319,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_iccid1,P_VALUE,swLogDump("current UICC iccid: ");
524288,1073850367,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_iccid2,P_VALUE,swLogDump("saved tinyCtx iccid: ");
524288,1073852415,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_imsi1,P_VALUE,swLogDump("current UICC imsi: ");
524288,1073854463,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_imsi2,P_VALUE,swLogDump("saved tinyCtx imsi: ");
524288,1073856511,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_epsloci1,P_VALUE,swLogDump("current UICC Epsloci: ");
524288,1073858559,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_epsloci2,P_VALUE,swLogDump("saved tinyCtx EpsLoci: ");
524288,1073860607,0,0,PS1,PS_DUMP,UsatEncSmsPpDownload_0,P_VALUE,swLogDump("SMS user data: ");
524288,1073862655,0,0,PS1,PS_DUMP,UiccDecodeATRContent_1,P_VALUE,swLogDump("ATR content: ");
524288,1073864703,0,0,PS1,PS_DUMP,UiccPPSProcedure_1,P_VALUE,swLogDump("PPS response: ");
524288,1073866751,0,0,PS1,PS_DUMP,UiccDllDelProcedureByteInRxBuffer_1,P_VALUE,swLogDump("R-TPDU ( del ) : ");
524288,1073868799,0,0,PS1,PS_DUMP,UiccDllSendHandler_2,P_VALUE,swLogDump("C-TPDU: ");
524288,1073870847,0,0,PS1,PS_DUMP,UiccDllSendHandler_3,P_VALUE,swLogDump("C-TPDU: ");
524288,1073872895,0,0,PS1,PS_DUMP,UiccDllSendHandler_4,P_VALUE,swLogDump("PPS request: ");
524288,1073874943,0,0,PS1,PS_DUMP,UiccDllSendHandler_dump,P_VALUE,swLogDump("C-TPDU: ");
524288,1073876991,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase12_softsim_1,P_VALUE,swLogDump("C-TPDU: ");
524288,1073879039,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase12_1,P_VALUE,swLogDump("R-TPDU: ");
524288,1073881087,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase34_softsim_1,P_VALUE,swLogDump("C-TPDU: ");
524288,1073883135,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase34_1,P_VALUE,swLogDump("R-TPDU: ");
524288,1073885183,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase34_softsim_2,P_VALUE,swLogDump("C-TPDU: ");
524288,1073887231,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase34_4,P_VALUE,swLogDump("R-TPDU: ");
524288,1073889279,0,0,PS1,PS_DUMP,UiccPmuDeepSlpEnterCallBack_2,P_INFO,swLogDump("STATUS command response: ");
524288,1073891327,0,0,PS1,PS_DUMP,UiccPmuDeepSlpEnterCallBack_3,P_INFO,swLogDump("STATUS command response: ");
524288,1073893375,0,0,PS1,PS_DUMP,UiccPmuDeepSlpEnterCallBack_4,P_INFO,swLogDump("Select USIM AID ( termiante ) response: ");
524288,1073895423,0,0,PS1,PS_DUMP,UiccPmuDeepSlpEnterCallBack_5,P_INFO,swLogDump("Select USIM AID ( termiante ) response: ");
524288,1073897471,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_1,P_INFO,swLogDump("cmd apdu: ");
524288,1073899519,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_2,P_INFO,swLogDump("response apdu: ");
524288,1073901567,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_3,P_INFO,swLogDump("cmd apdu: ");
524288,1073903615,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_4,P_INFO,swLogDump("response apdu: ");
524288,1073905663,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_5,P_INFO,swLogDump("cmd apdu: ");
524288,1073907711,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_6,P_INFO,swLogDump("response apdu: ");
524288,1073909759,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_7,P_INFO,swLogDump("cmd apdu: ");
524288,1073911807,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_8,P_INFO,swLogDump("response apdu: ");
524288,1073913855,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_9,P_INFO,swLogDump("cmd apdu: ");
524288,1073915903,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_10,P_INFO,swLogDump("response apdu: ");
524288,1073917951,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_11,P_INFO,swLogDump("cmd apdu: ");
524288,1073919999,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_12,P_INFO,swLogDump("response apdu: ");
524288,1073922047,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_1,P_INFO,swLogDump("cmd apdu: ");
524288,1073924095,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_2,P_INFO,swLogDump("response apdu: ");
524288,1073926143,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_3,P_INFO,swLogDump("cmd apdu: ");
524288,1073928191,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_4,P_INFO,swLogDump("response apdu: ");
524288,1073930239,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_5,P_INFO,swLogDump("cmd apdu: ");
524288,1073932287,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_6,P_INFO,swLogDump("response apdu: ");
524288,1073934335,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_7,P_INFO,swLogDump("cmd apdu: ");
524288,1073936383,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_8,P_INFO,swLogDump("response apdu: ");
524288,1073938431,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_9,P_INFO,swLogDump("cmd apdu: ");
524288,1073940479,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_10,P_INFO,swLogDump("response apdu: ");
524288,1073942527,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_11,P_INFO,swLogDump("cmd apdu: ");
524288,1073944575,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_12,P_INFO,swLogDump("response apdu: ");
524288,1073946623,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_13,P_INFO,swLogDump("cmd apdu: ");
524288,1073948671,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_14,P_INFO,swLogDump("response apdu: ");
524288,1073950719,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_15,P_INFO,swLogDump("cmd apdu: ");
524288,1073952767,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_16,P_INFO,swLogDump("response apdu: ");
524288,1073954815,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_17,P_INFO,swLogDump("cmd apdu: ");
524288,1073956863,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_18,P_INFO,swLogDump("response apdu: ");
524288,1073958911,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_19,P_INFO,swLogDump("cmd apdu: ");
524288,1073960959,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_20,P_INFO,swLogDump("response apdu: ");
524288,1073963007,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_21,P_INFO,swLogDump("cmd apdu: ");
524288,1073965055,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_22,P_INFO,swLogDump("response apdu: ");
524288,1073967103,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_23,P_INFO,swLogDump("cmd apdu: ");
524288,1073969151,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_24,P_INFO,swLogDump("response apdu: ");
524288,1073971199,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_25,P_INFO,swLogDump("cmd apdu: ");
524288,1073973247,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_26,P_INFO,swLogDump("response apdu: ");
524288,1073975295,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_27,P_INFO,swLogDump("cmd apdu: ");
524288,1073977343,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_28,P_INFO,swLogDump("response apdu: ");
524288,1073979391,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_29,P_INFO,swLogDump("cmd apdu: ");
524288,1073981439,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_30,P_INFO,swLogDump("response apdu: ");
524288,1073983487,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_31,P_INFO,swLogDump("cmd apdu: ");
524288,1073985535,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_32,P_INFO,swLogDump("response apdu: ");
524288,1073987583,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_33,P_INFO,swLogDump("cmd apdu: ");
524288,1073989631,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_34,P_INFO,swLogDump("response apdu: ");
524288,1073991679,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_35,P_INFO,swLogDump("cmd apdu: ");
524288,1073993727,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_36,P_INFO,swLogDump("response apdu: ");
524288,1073995775,0,0,PS1,PS_DUMP,CatMacDlProcCephyDlDataIndSig_dump_discard,P_INFO,swLogDump("DISCARD MAC DL PDU: ");
524288,1073997823,0,0,PS1,PS_DUMP,CatMacDlProcCephyDlDataIndSig_dump_1,P_INFO,swLogDump("MAC DL PDU: ");
524288,1073999871,0,0,PS1,PS_DUMP,CatMacDlProcCephyDlDataIndSig_dump_2,P_INFO,swLogDump("DISCARD MAC DL PDU: ");
524288,1074001919,0,0,PS1,PS_DUMP,CatMacUlSegPduCheck_1,P_INFO,swLogDump("MAC UL PDU: ");
524288,1074003967,0,0,PS1,PS_DUMP,CerrcBootCheckPagingUeIdentity_wrongImsi,P_INFO,swLogDump("Mismatch UE IMSI: ");
524288,1074006015,0,0,PS1,PS_DUMP,CerrcBootUpDueToPaging_data,P_VALUE,swLogDump("Normal Paging: ");
532480,1090523135,0,0,PS1,LTE_RRC_BCCH_BCH_DUMP,EcommDumpErrcMessage_MIB,P_SIG,swLogDumpPolling("MIB ");
533504,1092620287,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB2,P_SIG,swLogDumpPolling("SIB2 ");
533504,1092622335,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB3,P_SIG,swLogDumpPolling("SIB3 ");
533504,1092624383,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB4,P_SIG,swLogDumpPolling("SIB4 ");
533504,1092626431,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB5,P_SIG,swLogDumpPolling("SIB5 ");
533504,1092628479,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB14,P_SIG,swLogDumpPolling("SIB14 -- EAB parameters ");
533504,1092630527,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB16,P_SIG,swLogDumpPolling("SIB16 -- GPS time and UTC ");
533504,1092632575,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB10,P_SIG,swLogDumpPolling("SIB10 -- ETWS primary notification ");
533504,1092634623,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB11,P_SIG,swLogDumpPolling("SIB11 -- ETWS secondary notification ");
533504,1092636671,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB12,P_SIG,swLogDumpPolling("SIB12 -- CMAS notification ");
533504,1092638719,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB6,P_SIG,swLogDumpPolling("SIB6 -- UTRA cell re-selection information ");
533504,1092640767,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB7,P_SIG,swLogDumpPolling("SIB7 -- GERAN cell re-selection information ");
533504,1092642815,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB8,P_SIG,swLogDumpPolling("SIB8 -- CDMA2000 cell re-selection information ");
533504,1092644863,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB9,P_SIG,swLogDumpPolling("SIB9 -- home eNB name ");
533504,1092646911,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB13,P_SIG,swLogDumpPolling("SIB13 ");
533504,1092648959,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB15,P_SIG,swLogDumpPolling("SIB15 ");
533504,1092651007,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB17,P_SIG,swLogDumpPolling("SIB17 ");
533504,1092653055,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB18,P_SIG,swLogDumpPolling("SIB18 ");
533504,1092655103,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB19,P_SIG,swLogDumpPolling("SIB19 ");
533504,1092657151,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB20,P_SIG,swLogDumpPolling("SIB20 ");
533504,1092659199,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB21,P_SIG,swLogDumpPolling("SIB21 ");
533504,1092661247,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SI,P_SIG,swLogDumpPolling("Unsupported BCCH_Message ");
533504,1092663295,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB1,P_SIG,swLogDumpPolling("SIB1 ");
533504,1092665343,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_Bcch,P_SIG,swLogDumpPolling("Invalid BCCH_Message ");
535552,1096814591,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_Reest,P_SIG,swLogDumpPolling("RrcConnectionReestablishment ");
535552,1096816639,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_ReestRej,P_SIG,swLogDumpPolling("RrcConnectionReestablishmentReject ");
535552,1096818687,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_ConnRej,P_SIG,swLogDumpPolling("RrcConnectionReject ");
535552,1096820735,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_Setup,P_SIG,swLogDumpPolling("RrcConnectionSetup ");
535552,1096822783,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_DlCcch,P_SIG,swLogDumpPolling("Invalid DL_CCCH_Message ");
535552,1096823301,0,0,PS1,ATCMD_PARSER,atcFindPreDefinedAtInfo_ps_w_1,P_WARNING,swLogPrintf("AT CMD , AT: %s , index: %d , grep map found , but not same: %s ");
535552,1096825345,0,0,PS1,ATCMD_PARSER,atcFindPreDefinedAtInfo_ps_w_2,P_WARNING,swLogPrintf("AT CMD , AT: %s , index: %d , grep map found , but extend the AT table size: %d ");
535552,1096827397,0,0,PS1,ATCMD_PARSER,atcFindPreDefinedAtInfo_cust_w_1,P_WARNING,swLogPrintf("AT CMD , AT: %s , index: %d , cust grep map found , but not same: %s ");
535552,1096829441,0,0,PS1,ATCMD_PARSER,atcFindPreDefinedAtInfo_cust_w_2,P_WARNING,swLogPrintf("AT CMD , AT: %s , index: %d , cust grep map found , but extend the AT table size: %d ");
535552,1096830977,0,0,PS1,ATCMD_PARSER,atcFindPreDefinedAtInfo_w_1,P_WARNING,swLogPrintf("AT CMD , AT: %s , grep map not found AT info , try string compare ");
536576,1098911743,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_DlTrans,P_SIG,swLogDumpPolling("DlInformationTransfer ");
536576,1098913791,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Recfg,P_SIG,swLogDumpPolling("RrcConnectionReconfiguration ");
536576,1098915839,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Rel,P_SIG,swLogDumpPolling("RrcConnectionRelease ");
536576,1098917887,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_SMC,P_SIG,swLogDumpPolling("SecurityModeCommand ");
536576,1098919935,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Cap,P_SIG,swLogDumpPolling("UeCapabilityEnquiry ");
536576,1098921983,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Count,P_SIG,swLogDumpPolling("CounterCheck ");
536576,1098924031,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Rsm,P_SIG,swLogDumpPolling("RrcConnectionResume ");
536576,1098926079,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_UeInfo,P_SIG,swLogDumpPolling("UeInformationRequest ");
536576,1098928127,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_LogMeas,P_SIG,swLogDumpPolling("LoggedMeasurementConfiguration ");
536576,1098930175,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_DlDcch,P_SIG,swLogDumpPolling("Unsupported DL_DCCH_Message ");
537600,1101008895,0,0,PS1,LTE_RRC_DL_PCCH_DUMP,EcommDumpErrcMessage_Paging,P_VALUE,swLogDumpPolling("Paging ");
537600,1101010943,0,0,PS1,LTE_RRC_DL_PCCH_DUMP,EcommDumpErrcMessage_PagingSig,P_SIG,swLogDumpPolling("Paging ");
539648,1105203199,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_ReestReq,P_SIG,swLogDumpPolling("RrcConnectionReestablishmentRequest ");
539648,1105205247,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_ConnReq,P_SIG,swLogDumpPolling("RrcConnectionRequest ");
539648,1105207295,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_UlCcch,P_SIG,swLogDumpPolling("Invalid UL_CCCH_Message ");
539648,1105209343,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_RsmReq,P_SIG,swLogDumpPolling("RrcConnectionResumeRequest ");
539648,1105211391,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_UlCcch2,P_SIG,swLogDumpPolling("Invalid UL_CCCH_Message ");
539648,1105213439,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_UlCcch1,P_SIG,swLogDumpPolling("Invalid UL_CCCH_Message ");
540672,1107300351,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_MR,P_SIG,swLogDumpPolling("MeasurementReport ");
540672,1107302399,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_RecfgComp,P_SIG,swLogDumpPolling("RrcConnectionReconfigurationComplete ");
540672,1107304447,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_ReestComp,P_SIG,swLogDumpPolling("RrcConnectionReestablishmentComplete ");
540672,1107306495,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_SetupComp,P_SIG,swLogDumpPolling("RrcConnectionSetupComplete ");
540672,1107308543,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_SMComp,P_SIG,swLogDumpPolling("SecurityModeComplete ");
540672,1107310591,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_SMF,P_SIG,swLogDumpPolling("SecurityModeFailure ");
540672,1107312639,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_Cap,P_SIG,swLogDumpPolling("UeCapabilityInformation ");
540672,1107314687,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_UlTrans,P_SIG,swLogDumpPolling("UlInformationTransfer ");
540672,1107316735,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_CountRsp,P_SIG,swLogDumpPolling("CounterCheckResponse ");
540672,1107318783,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_UeInfoRsp,P_SIG,swLogDumpPolling("UeInformationResponse ");
540672,1107320831,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_ProInd,P_SIG,swLogDumpPolling("ProximityIndication ");
540672,1107322879,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_Rstd,P_SIG,swLogDumpPolling("InterFreqRSTDMeasurementIndication ");
540672,1107324927,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_UlDcch,P_SIG,swLogDumpPolling("Unsupported UL_DCCH_Message ");
540672,1107326975,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_RsmComp,P_SIG,swLogDumpPolling("RrcConnectionResumeComplete ");
540672,1107329023,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_UlDcch2,P_SIG,swLogDumpPolling("Unsupported UL_DCCH_Message ");
541696,1109397503,0,0,PS1,LTE_RRC_VAR_MEASCONFIG_DUMP,EcommDumpErrcMessage_VarMeasConfig,P_VALUE,swLogDumpPolling("VarMeasConfig ");
543744,1113591807,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_1,P_SIG,swLogDumpPolling("Sending ATTACH_REQUEST: ");
543744,1113593855,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_2,P_SIG,swLogDumpPolling("Receiving ATTACH_ACCEPT: ");
543744,1113595903,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_3,P_SIG,swLogDumpPolling("Sending ATTACH_COMPLETE: ");
543744,1113597951,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_4,P_SIG,swLogDumpPolling("Receiving ATTACH_REJECT: ");
543744,1113599999,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_5,P_SIG,swLogDumpPolling("Sending DETACH_REQUEST: ");
543744,1113602047,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_6,P_SIG,swLogDumpPolling("Receiving DETACH_REQUEST: ");
543744,1113604095,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_7,P_SIG,swLogDumpPolling("Sending DETACH_ACCEPT: ");
543744,1113606143,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_8,P_SIG,swLogDumpPolling("Receiving DETACH_ACCEPT: ");
543744,1113608191,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_9,P_SIG,swLogDumpPolling("Sending TA_UPDATE_REQUEST: ");
543744,1113610239,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_10,P_SIG,swLogDumpPolling("Receiving TA_UPDATE_ACCEPT: ");
543744,1113612287,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_11,P_SIG,swLogDumpPolling("Sending TA_UPDATE_COMPLETE: ");
543744,1113614335,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_12,P_SIG,swLogDumpPolling("Receiving TA_UPDATE_REJECT: ");
543744,1113616383,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_13,P_SIG,swLogDumpPolling("Sending EXTENDED_SERVICE_REQUEST: ");
543744,1113618431,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_14,P_SIG,swLogDumpPolling("Sending CONTROL_PLANE_SERVICE_REQUEST: ");
543744,1113620479,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_15,P_SIG,swLogDumpPolling("Receiving SERVICE_REJECT: ");
543744,1113622527,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_16,P_SIG,swLogDumpPolling("Receiving SERVICE_ACCEPT: ");
543744,1113624575,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_17,P_SIG,swLogDumpPolling("Receiving GUTI_REALLOC_COMMAND: ");
543744,1113626623,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_18,P_SIG,swLogDumpPolling("Sending GUTI_REALLOC_COMPLETE: ");
543744,1113628671,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_19,P_SIG,swLogDumpPolling("Receiving AUTHENTICATION_REQUEST: ");
543744,1113630719,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_20,P_SIG,swLogDumpPolling("Sending AUTHENTICATION_RESPONSE: ");
543744,1113632767,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_21,P_SIG,swLogDumpPolling("Receiving AUTHENTICATION_REJECT: ");
543744,1113634815,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_22,P_SIG,swLogDumpPolling("Sending AUTHENTICATION_FAILURE: ");
543744,1113636863,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_23,P_SIG,swLogDumpPolling("Receiving IDENTITY_REQUEST: ");
543744,1113638911,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_24,P_SIG,swLogDumpPolling("Sending IDENTITY_RESPONSE: ");
543744,1113640959,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_25,P_SIG,swLogDumpPolling("Receiving SECURITY_MODE_COMMAND: ");
543744,1113643007,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_26,P_SIG,swLogDumpPolling("Sending SECURITY_MODE_COMPLETE: ");
543744,1113645055,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_27,P_SIG,swLogDumpPolling("Sending SECURITY_MODE_REJECT: ");
543744,1113647103,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_28,P_SIG,swLogDumpPolling("Sending EMM_STATUS: ");
543744,1113649151,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_29,P_SIG,swLogDumpPolling("Receiving EMM_STATUS: ");
543744,1113651199,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_30,P_SIG,swLogDumpPolling("Receiving EMM_INFORMATION: ");
543744,1113653247,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_31,P_SIG,swLogDumpPolling("Receiving DOWNLINK_NAS_TRANSPORT: ");
543744,1113655295,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_32,P_SIG,swLogDumpPolling("Sending UPLINK_NAS_TRANSPORT: ");
543744,1113657343,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_33,P_SIG,swLogDumpPolling("Receiving DOWNLINK_GENERIC_NAS_TRANSPORT: ");
543744,1113659391,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_34,P_SIG,swLogDumpPolling("Sending UPLINK_GENERIC_NAS_TRANSPORT: ");
543744,1113661439,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_35,P_SIG,swLogDumpPolling("Sending SERVICE_REQUEST: ");
543744,1113663487,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_1,P_SIG,swLogDumpPolling("Receiving ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST: ");
543744,1113665535,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_2,P_SIG,swLogDumpPolling("Sending ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_ACCEPT: ");
543744,1113667583,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_3,P_SIG,swLogDumpPolling("Sending ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REJECT: ");
543744,1113669631,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_4,P_SIG,swLogDumpPolling("Receiving ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REQUEST: ");
543744,1113671679,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_5,P_SIG,swLogDumpPolling("Sending ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_ACCEPT: ");
543744,1113673727,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_6,P_SIG,swLogDumpPolling("Sending ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REJECT: ");
543744,1113675775,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_7,P_SIG,swLogDumpPolling("Receiving MODIFY_EPS_BEARER_CONTEXT_REQUEST: ");
543744,1113677823,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_8,P_SIG,swLogDumpPolling("Sending MODIFY_EPS_BEARER_CONTEXT_ACCEPT: ");
543744,1113679871,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_9,P_SIG,swLogDumpPolling("Sending MODIFY_EPS_BEARER_CONTEXT_REJECT: ");
543744,1113681919,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_10,P_SIG,swLogDumpPolling("Receiving DEACTIVATE_EPS_BEARER_CONTEXT_REQUEST: ");
543744,1113683967,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_11,P_SIG,swLogDumpPolling("Sending DEACTIVATE_EPS_BEARER_CONTEXT_ACCEPT: ");
543744,1113686015,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_12,P_SIG,swLogDumpPolling("Sending PDN_CONNECTIVITY_REQUEST: ");
543744,1113688063,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_13,P_SIG,swLogDumpPolling("Receiving PDN_CONNECTIVITY_REJECT: ");
543744,1113690111,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_14,P_SIG,swLogDumpPolling("Sending PDN_DISCONNECT_REQUEST: ");
543744,1113692159,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_15,P_SIG,swLogDumpPolling("Receiving PDN_DISCONNECT_REJECT: ");
543744,1113694207,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_16,P_SIG,swLogDumpPolling("Sending BEARER_RESOURCE_ALLOCATION_REQUEST: ");
543744,1113696255,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_17,P_SIG,swLogDumpPolling("Receiving BEARER_RESOURCE_ALLOCATION_REJECT: ");
543744,1113698303,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_18,P_SIG,swLogDumpPolling("Sending BEARER_RESOURCE_MODIFICATION_REQUEST: ");
543744,1113700351,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_19,P_SIG,swLogDumpPolling("Receiving BEARER_RESOURCE_MODIFICATION_REJECT: ");
543744,1113702399,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_20,P_SIG,swLogDumpPolling("Receiving ESM_INFORMATION_REQUEST: ");
543744,1113704447,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_21,P_SIG,swLogDumpPolling("Sending ESM_INFORMATION_RESPONSE: ");
543744,1113706495,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_22,P_SIG,swLogDumpPolling("Receiving ESM_NOTIFICATION: ");
543744,1113708543,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_23,P_SIG,swLogDumpPolling("Sending ESM_DUMMY_MESSAGE: ");
543744,1113710591,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_24,P_SIG,swLogDumpPolling("Receiving ESM_DUMMY_MESSAGE: ");
543744,1113712639,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_25,P_SIG,swLogDumpPolling("Sending ESM_STATUS: ");
543744,1113714687,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_26,P_SIG,swLogDumpPolling("Receiving ESM_STATUS: ");
543744,1113716735,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_27,P_SIG,swLogDumpPolling("Sending REMOTE_UE_REPORT: ");
543744,1113718783,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_28,P_SIG,swLogDumpPolling("Receiving REMOTE_UE_REPORT_RESPONSE: ");
543744,1113720831,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_29,P_SIG,swLogDumpPolling("Sending ESM_DATA_TRANSPORT: ");
543744,1113722879,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_30,P_SIG,swLogDumpPolling("Receiving ESM_DATA_TRANSPORT: ");
543744,1113724927,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_2,P_SIG,swLogDumpPolling("Receiving CLOSE_UE_TEST_LOOP ");
543744,1113726975,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_4,P_SIG,swLogDumpPolling("Sending CLOSE_UE_TEST_LOOP_COMPLETE ");
543744,1113729023,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_6,P_SIG,swLogDumpPolling("Receiving OPEN_UE_TEST_LOOP ");
543744,1113731071,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_8,P_SIG,swLogDumpPolling("Sending OPEN_UE_TEST_LOOP_COMPLETE ");
543744,1113733119,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_10,P_SIG,swLogDumpPolling("Receiving ACTIVATE_TEST_MODE ");
543744,1113735167,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_12,P_SIG,swLogDumpPolling("Sending ACTIVATE_TEST_MODE_COMPLETE ");
543744,1113737215,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_14,P_SIG,swLogDumpPolling("Receiving DEACTIVATE_TEST_MODE ");
543744,1113739263,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_16,P_SIG,swLogDumpPolling("Sending DEACTIVATE_TEST_MODE_COMPLETE ");
543744,1113741311,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_18,P_SIG,swLogDumpPolling("Receiving RESET_UE_POSITIONING_STORED_INFORMATION ");
555008,1136658944,0,0,PS1,PS,PsNvmRead_1,P_WARNING,swLogPrintf("PS NVM , NVM file: %d , file size ( %d ) ! = input buffer size ( %d ) , can ' t read NVM ");
555008,1136660481,0,0,PS1,PS,PsNvmRead_osa_w_1,P_WARNING,swLogPrintf("PS NVM , NVM file: %s , can ' t read , using default value ");
555008,1136663041,0,0,PS1,PS,PsNvmRead_ver_w_1,P_WARNING,swLogPrintf("PS NVM , read NVM file: %s , version in NVM: %d , but curVersion: %d , reset to default value ");
555008,1136665345,0,0,PS1,PS,PsNvmRead_size_w_1,P_WARNING,swLogPrintf("PS NVM , read NVM file: %s , read pBuf: 0x%x , readSize: %d , wantedSize: %d , reset to default value ");
555008,1136667136,0,0,PS1,PS,PsNvmWrite_1,P_ERROR,swLogPrintf("PS NVM , NVM file ID: %d , file size ( %d ) ! = input buffer size ( %d ) , can ' t write NVM ");
555008,1136668929,0,0,PS1,PS,PsNvmSave_1,P_SIG,swLogPrintf("PS NVM , File: %s , id: %d , need to write back to flash ");
555008,1136670976,0,0,PS1,PS,HmacSha256Sct_key_w_1,P_WARNING,swLogPrintf("PS , SHA256 calc HMAC key failed: %d , inputLen: %d ");
555008,1136673024,0,0,PS1,PS,HmacSha256Sct_calc_w_1,P_WARNING,swLogPrintf("PS , HMAX SHA 256 SCT calc failed: %d , inputLen: %d ");
555008,1136675072,0,0,PS1,PS,HmacSha256Sct_calc_w_2,P_WARNING,swLogPrintf("PS , HMAX SHA 256 SCT final calc failed: %d , inputLen: %d ");
555008,1136678911,0,0,PS1,PS,HmacSha256_sct_w_1,P_WARNING,swLogPrintf("PS , can ' t calc HMAC by SCT , try calc by software ");
555008,1136678912,0,0,PS1,PS,PsTftRouteUlPkg_ipver_w_1,P_WARNING,swLogPrintf("PS , invalid ipVer: %d , when check TFT ");
555008,1136681216,0,0,PS1,PS,PsTftRouteUlPkg_ipv4_w_1,P_WARNING,swLogPrintf("PS , pkg length: %d < ipv4 hdr length: %d , maybe segment ");
555008,1136683264,0,0,PS1,PS,PsTftRouteUlPkg_ipv6_w_1,P_WARNING,swLogPrintf("PS , pkg length: %d < ipv6 hdr length: %d , maybe segment ");
555008,1136685568,0,0,PS1,PS,PsTftRouteUlPkg_ip_udp_w_1,P_WARNING,swLogPrintf("PS , pkg length: %d < ip hdr length: %d + udp hdr length: %d , maybe segment ");
555008,1136687616,0,0,PS1,PS,PsTftRouteUlPkg_ip_tcp_w_1,P_WARNING,swLogPrintf("PS , pkg length: %d < ip hdr length: %d + tcp hdr length: %d , maybe segment ");
555008,1136689664,0,0,PS1,PS,PsTftRouteUlPkg_ip_esp_w_1,P_WARNING,swLogPrintf("PS , pkg length: %d < ip hdr length: %d + esp hdr length: %d , maybe segment ");
555008,1136691456,0,0,PS1,PS,PsTftRouteUlPkg_debug_1,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , dir: %d , not for UL ");
555008,1136693504,0,0,PS1,PS,PsTftRouteUlPkg_debug_2,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , remote ipv4 , but pkg not IPv4 type: %d ");
555008,1136696320,0,0,PS1,PS,PsTftRouteUlPkg_debug_3,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , remote i: %d ipv4: %d , mask: %d , but pkg ipv4 daddr: %d ");
555008,1136697856,0,0,PS1,PS,PsTftRouteUlPkg_debug_4,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , remote iptype: %d , but current pkg not ipv6: %d ");
555008,1136700416,0,0,PS1,PS,PsTftRouteUlPkg_debug_5,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , remote i: %d ipv6: %d , mask: %d , but pkg ipv6 daddr: %d ");
555008,1136702464,0,0,PS1,PS,PsTftRouteUlPkg_debug_6,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , remote i: %d ipv6: %d , prefixmask: %d , but pkg ipv6 daddr: %d ");
555008,1136704000,0,0,PS1,PS,PsTftRouteUlPkg_debug_7,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , protId: %d , pkg protId: %d ");
555008,1136706304,0,0,PS1,PS,PsTftRouteUlPkg_debug_7_1,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , ipv4 tc: 0x%x , mask: 0x%x , pkg tc: 0x%x ");
555008,1136708352,0,0,PS1,PS,PsTftRouteUlPkg_debug_8,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , ipv6 tc: 0x%x , mask: 0x%x , pkg tc: 0x%x ");
555008,1136710144,0,0,PS1,PS,PsTftRouteUlPkg_debug_9,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , ipv6 FL: 0x%lx , pkg FL: 0x%lx ");
555008,1136712448,0,0,PS1,PS,PsTftRouteUlPkg_debug_10,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , localport: 0x%lx , 0x%lx , UDP pkg sport: 0x%lx ");
555008,1136714496,0,0,PS1,PS,PsTftRouteUlPkg_debug_11,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , localport: 0x%lx , 0x%lx , TCP pkg sport: 0x%lx ");
555008,1136716288,0,0,PS1,PS,PsTftRouteUlPkg_debug_12,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , localport: 0x%lx , 0x%lx , but not UDP / TCP ");
555008,1136718592,0,0,PS1,PS,PsTftRouteUlPkg_debug_13,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , remoteport: 0x%lx , 0x%lx , UDP pkg dport: 0x%lx ");
555008,1136720640,0,0,PS1,PS,PsTftRouteUlPkg_debug_14,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , remoteport: 0x%lx , 0x%lx , TCP pkg dport: 0x%lx ");
555008,1136722432,0,0,PS1,PS,PsTftRouteUlPkg_debug_15,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , remoteport: 0x%lx , 0x%lx , but not UDP / TCP ");
555008,1136724480,0,0,PS1,PS,PsTftRouteUlPkg_debug_16,P_DEBUG,swLogPrintf("PS , TFT filter evID: %d , ESP SPI: 0x%lx , PKG SPI: 0x%lx ");
555008,1136726016,0,0,PS1,PS,PsTftRouteUlPkg_ip_sec_w_1,P_WARNING,swLogPrintf("PS , TFT IP sec needed , but not support IP Proto: %d ");
555008,1136728064,0,0,PS1,PS,PsTftRouteUlPkg_match_1,P_INFO,swLogPrintf("PS , TFT packet filter matched , UL to CID: %d ");
555008,1136730112,0,0,PS1,PS,PsTftRouteUlPkg_ipv4_def_1,P_INFO,swLogPrintf("PS , no TFT matched , UL to default IPv4 CID: %d ");
555008,1136732160,0,0,PS1,PS,PsTftRouteUlPkg_ipv6_def_1,P_INFO,swLogPrintf("PS , no TFT matched , UL to default IPv6 CID: %d ");
555008,1136736255,0,0,PS1,PS,PsTftRouteUlPkg_discard_1,P_WARNING,swLogPrintf("PS , no TFT matched , and default bearer has TFT , can ' t send this PDU ");
555008,1136736256,0,0,PS1,PS,PsTftRouteUlPkg_ipv6_def_2,P_WARNING,swLogPrintf("PS , no TFT matched , and default bearer has TFT , for safe , UL to default IPv6 CID: %d ");
555008,1136738304,0,0,PS1,PS,PsTftRouteUlPkg_ipv4_def_2,P_WARNING,swLogPrintf("PS , no TFT matched , and default bearer has TFT , for safe , UL to default IPv4 CID: %d ");
555008,1136741120,0,0,PS1,PS,PsUlDataBeOutDate_1,P_WARNING,swLogPrintf("PS , UL PDU out of date , tickType: %d , curtick: 0x%lx , endtick: 0x%lx , bMustDiscard: %d ");
555008,1136744447,0,0,PS1,PS,PsClearUlPendingPduList_1,P_WARNING,swLogPrintf("PS , discard one UL PKG , as out of date ");
555008,1136744960,0,0,PS1,PS,PsClearUlPendingPduList_2,P_WARNING,swLogPrintf("PS , UL only could pending ( %d ) pkg , or ( %d ) bytes , discard one old pkg with len: %d ");
555008,1136746496,0,0,PS1,PS,PsDlPkgAlloc_1,P_WARNING,swLogPrintf("PS DL MEM , want size: %d > MAX ( PS_DL_PKG_MEM_DATA_MAX_SIZE ) , ERROR ! ");
555008,1136748544,0,0,PS1,PS,PsDlPkgAlloc_high_w_1,P_WARNING,swLogPrintf("PS DL MEM , = = = high water: %d = = = ");
555008,1136750848,0,0,PS1,PS,PsDlPkgAlloc_w_2,P_WARNING,swLogPrintf("PS DL MEM , no mem allocated for size: %d , bShort: %d ");
555008,1136752896,0,0,PS1,PS,PsSlp2Malloc_w_1,P_WARNING,swLogPrintf("PS SLP2 HEAP , no memory left , want: %d , left: %d ");
555008,1136754944,0,0,PS1,PS,PsTinyVarAddrInit_lwip_1,P_VALUE,swLogPrintf("TCPIP tiny RAM , used: %d , MAX: %d ");
555008,1136756992,0,0,PS1,PS,PsTinyVarAddrInit_rrc_1,P_VALUE,swLogPrintf("RRC tiny RAM , used: %d , MAX: %d ");
555008,1136759040,0,0,PS1,PS,PsTinyVarAddrInit_ps2_1,P_VALUE,swLogPrintf("PS tiny RAM 2 , used: %d , MAX: %d ");
555008,1136761088,0,0,PS1,PS,PsL1BootVarAddrInit_1,P_VALUE,swLogPrintf("RRC Boot tiny RAM , used: %d , MAX: %d ");
555008,1136763136,0,0,PS1,PS,PsSleep2VarAddrInit_1,P_VALUE,swLogPrintf("RRC Sleep2 RAM , used: %d , MAX: %d ");
555008,1136765184,0,0,PS1,PS,PsL1TinyVarAddrInit_rrc_1,P_VALUE,swLogPrintf("RRCL1 tiny RAM , used: %d , MAX: %d ");
555008,1136767233,0,0,PS1,PS,PsCfgReadUeConfig_w_1,P_WARNING,swLogPrintf("PS NVM CFG , NVM file: %s , can ' t read , retId: %d , using default value ");
555008,1136769281,0,0,PS1,PS,PsCfgReadUeConfig_s_1,P_SIG,swLogPrintf("PS NVM CFG , NVM file: %s , read OK , bodySize: %d ");
556032,1138757631,0,0,PS1,PS_SIG_DUMP,DUMP_SIG_HEADER,P_INFO,swLogDumpPolling("Sig = > ");
556032,1138757888,0,0,PS1,PS_SIG_DUMP,PsRamLogSigDump_1,P_INFO,swLogPrintf("Signal: 0x%lx , is not large: %d > 512 , can ' t dump to RAM log ");
556032,1138761727,0,0,PS1,PS_SIG_DUMP,DUMP_FULL_SIGNAL,P_INFO,swLogDumpPolling("Sig = > ");
557056,1140854783,0,0,PS1,PS_INTER_MSG,DUMP_INTERNAL_MSG,P_INFO,swLogDumpPolling("Msg = > ");
558080,1142950144,0,0,PS1,UP,CatUpProcCephyTimerExpiryIndSig_1,P_VALUE,swLogPrintf("Timer expiry , userId: %d , timerId: 0x%x ");
558080,1142953983,0,0,PS1,UP,CatUpProcCcmSetTrafficIdleMonitorReqSig_1,P_DEBUG,swLogPrintf("Disable traffic idle monitor feature , stop trafficIdleMonitorTimerId. ");
558080,1142955009,0,0,PS1,UP,CatCheck_asset,P_ERROR,swLogPrintf("UP assert , func: %s , line: %d , v1: 0x%x , v2: 0x%x , v3: 0x%x ");
558080,1142958079,0,0,PS1,UP,CeUpTaskEntry_1,P_VALUE,swLogPrintf("UP no RACH , and no LC , could enter HIB state ");
558080,1142960127,0,0,PS1,UP,CeUpTaskEntry_2,P_VALUE,swLogPrintf("UP no RACH , and no LC , could enter SLEEP2 state ");
558080,1142962175,0,0,PS1,UP,CeUpTaskEntry_3,P_VALUE,swLogPrintf("UP cannot enter HIB state ");
558080,1142964223,0,0,PS1,UP,CeUpTaskEntry_4,P_VALUE,swLogPrintf("UP cannot enter SLEEP2 state ");
559104,1145047296,0,0,PS1,MAC,CatMacProcMacMainConfigReqSig_1,P_INFO,swLogPrintf("CAT MAC , LC SR Prohibit Timer not changed: %d , %d ");
559104,1145049088,0,0,PS1,MAC,CatMacProcMacMainConfigReqSig_2,P_INFO,swLogPrintf("CAT MAC , LC SR Prohibit Timer setup / modify to: %d ");
559104,1145051136,0,0,PS1,MAC,CatMacProcMacMainConfigReqSig_3,P_INFO,swLogPrintf("CAT MAC , LC SR Prohibit Timer release / invalid: %d ");
559104,1145053696,0,0,PS1,MAC,CatMacLcConfigReq_1,P_SIG,swLogPrintf("LC: %d ; priority is changed from %d to %d ");
559104,1145055232,0,0,PS1,MAC,CatMacProcMacResetReqSig_1,P_VALUE,swLogPrintf("CAT MAC RESET , cause: %d ");
559104,1145057536,0,0,PS1,MAC,CatMacProcMacResetCnfSig_1,P_WARNING,swLogPrintf("The lastest mac reset cause: %e<MacResetReason> , now rcv reset cause: %e<CatPhyMacResetReason> , ignore this sig! ");
559104,1145059840,0,0,PS1,MAC,CatMacPhyUlGrantInd_1,P_WARNING,swLogPrintf("CAT MAC , too many UL grant pending , insert index: %d , proc index: %d , just drop grant size: %d ");
559104,1145061376,0,0,PS1,MAC,CatMacDlDecodeMacCeAndSdu_1,P_INFO,swLogPrintf("RCV TA CMD , TA VALUE: %d ");
559104,1145063424,0,0,PS1,MAC,CatMacDlDecodeMacCeAndSdu_2,P_INFO,swLogPrintf("RCV DRX CMD , DRX TYPE: %d ");
559104,1145065472,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_crc_error,P_INFO,swLogPrintf("MAC DL , harqId: %d , crc check error , DISCARD MAC DL PDU! ");
559104,1145067776,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_len_error,P_WARNING,swLogPrintf("MAC DL , harqId: %d , PDU length: %d , check error , discard it!!! ");
559104,1145069568,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_1,P_VALUE,swLogPrintf("DL CCCH PDU , Len: %d ");
559104,1145071872,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_unexpect_ccch_msg,P_WARNING,swLogPrintf("Ra Status is %d , discard this unexpect Dl CCCH Msg with len: %d ");
559104,1145074176,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_2,P_VALUE,swLogPrintf("MAC DL , harqId: %d , one DL RLC PDU , LCID: %d , Len: %d ");
559104,1145075712,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_3,P_WARNING,swLogPrintf("Too many: %d padding MAC PDU ..... ");
559104,1145079807,0,0,PS1,MAC,CatMacRaRandomAccessSucc_1,P_SIG,swLogPrintf("PRACH SUCC ");
559104,1145079808,0,0,PS1,MAC,CatMacRaProcPdcchOrderIndSig_1,P_WARNING,swLogPrintf("Another RACH is ongoing: %d ; ignore this PDCCH ORDER RA ");
559104,1145081856,0,0,PS1,MAC,CatMacRaProcPreambleTransMaxIndSig_1,P_WARNING,swLogPrintf("PRACH MAX Times: %d ");
559104,1145085951,0,0,PS1,MAC,CatMacRaProcRecvRARIndSig_1,P_INFO,swLogPrintf("RAR received ; RA is not CR based ; RA succ... ");
559104,1145087999,0,0,PS1,MAC,CatMacRaProcRecvRARIndSig_2,P_WARNING,swLogPrintf("non-contention based , and grantSize is 0 ! ");
559104,1145090047,0,0,PS1,MAC,CatMacRaProcRachCancelIndSig_1,P_WARNING,swLogPrintf("RACH cannceled by PHY ");
559104,1145090048,0,0,PS1,MAC,CatMacRaRachReq_1,P_SIG,swLogPrintf("Trigger PRACH , cause: %d , CCCH ( 0 ) / PDCCH_ORDER ( 1 ) / HAND_OVER ( 2 ) / UL_DATA ( 3 ) ");
559104,1145092096,0,0,PS1,MAC,CatMacRaCRFailRetryRach_1,P_WARNING,swLogPrintf("RACH CR Failed: %d need to retry RACH ");
559104,1145094144,0,0,PS1,MAC,CatMacUlBeCancelZeroBSR_1,P_INFO,swLogPrintf("CAT MAC UL , Rai Activation is %d , and zero BSR could be sent ");
559104,1145098239,0,0,PS1,MAC,CatMacUlSendSchedulingRequestSig_SR_1,P_INFO,swLogPrintf("MAC UL , scheduling request ");
559104,1145098752,0,0,PS1,MAC,CatMacUlOneLcScheduling_Cut_Bsr,P_VALUE,swLogPrintf("MAC UL , LCID: %d , should Cut Long BSR to Short , grant: %d , BSR grant: %d ");
559104,1145100800,0,0,PS1,MAC,CatMacUlOneLcScheduling_1,P_VALUE,swLogPrintf("MAC UL , LCID: %d , should BSR Cancel , grant: %d , BSR grant: %d ");
559104,1145102848,0,0,PS1,MAC,CatMacUlOneLcScheduling_2,P_VALUE,swLogPrintf("UL LCID: %d , assign grant: %d , total grant: %d ");
559104,1145104384,0,0,PS1,MAC,CatMacUlLcScheduling_1,P_WARNING,swLogPrintf("LC: %d ; is suspened ");
559104,1145106432,0,0,PS1,MAC,CatMacUlLcScheduling_3,P_WARNING,swLogPrintf("LC: %d ; is suspened ");
559104,1145108480,0,0,PS1,MAC,CatMacUlLcScheduling_2,P_WARNING,swLogPrintf("LC: %d ; is suspened ");
559104,1145110784,0,0,PS1,MAC,CatMacUlReConstructCrntiMsg3DataWithDiffGrant_1,P_WARNING,swLogPrintf("Retx msg3 with crnti , grantsize become bigger ( %d -> %d ) , for simplicity , just re-assemble mac hdr! ");
559104,1145112832,0,0,PS1,MAC,CatMacUlReConstructCrntiMsg3DataWithDiffGrant_2,P_WARNING,swLogPrintf("Retx msg3 with crnti , grantsize become smaller ( %d -> %d ) , for simplicity , just re-assemble mac hdr! ");
559104,1145114624,0,0,PS1,MAC,CatMacUlLcDataBecomeAvaiable_suspend,P_ERROR,swLogPrintf("LC: %d is suspend , should not send this data to MAC! ");
559104,1145116672,0,0,PS1,MAC,CatMacUlLcDataBecomeAvaiable_1,P_VALUE,swLogPrintf("BSR had been triggered , no need to trigger BSR on LC: %d again ");
559104,1145118720,0,0,PS1,MAC,CatMacUlLcDataBecomeAvaiable_2,P_WARNING,swLogPrintf("TA expiry , LC: %d , UL data trigger RACH... ");
559104,1145120768,0,0,PS1,MAC,CatMacUlLcDataBecomeAvaiable_3,P_WARNING,swLogPrintf("LC: %d , disable SR triggering for logicalChannelSR-Mask is True! ");
559104,1145123328,0,0,PS1,MAC,CatMacUlProcRetxBsrTimerExpiry_1,P_INFO,swLogPrintf("pendingSr: %d , raStatus: %d , raCause: %d , Another Sr or Rach procedure is ongoing , nothing to do! ");
559104,1145126911,0,0,PS1,MAC,CatMacUlProcPeriodPHRTimerExpiry_1,P_INFO,swLogPrintf("PeriodicPHR-Timer expires , PHR Trigger! ");
559104,1145128959,0,0,PS1,MAC,CatMacUlProcProhibitPHRTimerExpiry_1,P_SIG,swLogPrintf("PHR Trigger! ");
559104,1145128960,0,0,PS1,MAC,CatUpResumeSuspendAllLcExceptSrb1_1,P_VALUE,swLogPrintf("bSuspend: %d , Resume ( 0 ) or Suspend ( 1 ) All Lc Except Srb1 ");
560128,1147144448,0,0,PS1,RLC,CatRlcAmLcSetupConfig_1,P_SIG,swLogPrintf("RLC AM , LCID: %d , pollPdu too large: 0x%x , cut to: 64 ");
560128,1147146496,0,0,PS1,RLC,CatRlcAmLcSetupConfig_2,P_SIG,swLogPrintf("RLC AM , LCID: %d , pollByte too large: 0x%x , cut to: 100 kB ");
560128,1147148288,0,0,PS1,RLC,CatRlcAmLcModifyConfig_1,P_WARNING,swLogPrintf("LC: %d , Some Rlc parameters can ' t be modified , Please Check it! ");
560128,1147150848,0,0,PS1,RLC,CatRlcAmLcModifyConfig_pollPdu,P_WARNING,swLogPrintf("LC: %d , pollPdu has been modified from 0x%x to 0x%x! ");
560128,1147152640,0,0,PS1,RLC,CatRlcAmLcModifyConfig_2,P_SIG,swLogPrintf("RLC AM , LCID: %d , pollPdu too large: 0x%x , cut to: 64 ");
560128,1147154944,0,0,PS1,RLC,CatRlcAmLcModifyConfig_pollByte,P_SIG,swLogPrintf("LC: %d , pollByte has been modified from 0x%x to 0x%x! ");
560128,1147156736,0,0,PS1,RLC,CatRlcAmLcSetupConfig_3,P_SIG,swLogPrintf("RLC AM , LCID: %d , pollByte too large: 0x%x , cut to: 100 kB ");
560128,1147159040,0,0,PS1,RLC,CatRlcAmLcModifyConfig_tPollRetransmit,P_SIG,swLogPrintf("LC: %d , tPollRetransmit has been modified from %d to %d! ");
560128,1147161088,0,0,PS1,RLC,CatRlcAmLcModifyConfig_tReordering,P_SIG,swLogPrintf("LC: %d , tReordering has been modified from %d to %d! ");
560128,1147163136,0,0,PS1,RLC,CatRlcAmLcModifyConfig_tStatusProhibit,P_SIG,swLogPrintf("LC: %d , tStatusProhibit has been modified from %d to %d! ");
560128,1147164672,0,0,PS1,RLC,CatRlcUmBiDirLcModifyConfig_1,P_WARNING,swLogPrintf("LC: %d , Some Rlc parameters can ' t be modified , Please Check it! ");
560128,1147167232,0,0,PS1,RLC,CatRlcUmBiDirLcModifyConfig_tReordering,P_WARNING,swLogPrintf("LC: %d , tReordering has been modified from %d to %d! ");
560128,1147168768,0,0,PS1,RLC,CatRlcUmUniDirDlLcModifyConfig_1,P_WARNING,swLogPrintf("LC: %d , Some Rlc parameters can ' t be modified , Please Check it! ");
560128,1147171328,0,0,PS1,RLC,CatRlcUmUniDirDlLcModifyConfig_tReordering,P_WARNING,swLogPrintf("LC: %d , tReordering has been modified from %d to %d! ");
560128,1147172864,0,0,PS1,RLC,CatRlcLcConfigReq_1,P_SIG,swLogPrintf("LC: %d , Nw Modify Rlc Configuration! ");
560128,1147174912,0,0,PS1,RLC,CatRlcLcConfigReq_2,P_WARNING,swLogPrintf("LC: %d , should not modify Rlc mode , Please Check it! ");
560128,1147177216,0,0,PS1,RLC,CatRlcLcConfigReq_3,P_WARNING,swLogPrintf("LC: %d , Rlc Mode: %d , not support modify Rlc parameters , Please Check it! ");
560128,1147181055,0,0,PS1,RLC,CatRlcAllLcReleaseInd_1,P_WARNING,swLogPrintf("ALL LC released ; but CONN_REL_ACKED_TIMER still running ; stop it ");
560128,1147183103,0,0,PS1,RLC,CatRlcAllLcReleaseInd_2,P_WARNING,swLogPrintf("ALL LC released ; but CONN_REL_ACK_SENT_TIMER still running ; stop it ");
560128,1147185151,0,0,PS1,RLC,CatRlcAllLcReleaseInd_3,P_VALUE,swLogPrintf("RLC aLL LC released ");
560128,1147185152,0,0,PS1,RLC,CatRlcProcDlRlcPduInd_1,P_ERROR,swLogPrintf("RLC UM LC: %d , only config ul mode , can ' t receive dl data , discard it!!! ");
560128,1147189247,0,0,PS1,RLC,CatRlcProcGrantInd_1,P_VALUE,swLogPrintf("RLC STATUS RPT for RrcConnectionRelease sent in this grant ");
560128,1147189760,0,0,PS1,RLC,CatRlcProcTimerExpiry_0,P_ERROR,swLogPrintf("AM RLC timer: 0x%x expiry ; LCID: %d ; timer Id: %d ; can ' t find the LC context , maybe released by nw ");
560128,1147191808,0,0,PS1,RLC,CatRlcProcTimerExpiry_1,P_ERROR,swLogPrintf("AM RLC timer: 0x%x expiry ; LCID: %d ; timer Id: %d ; can ' t find the LC context ");
560128,1147193856,0,0,PS1,RLC,CatRlcProcTimerExpiry_2,P_ERROR,swLogPrintf("UM RLC timer: 0x%x expiry ; LCID: %d ; timer Id: %d ; can ' t find the LC context ");
560128,1147195392,0,0,PS1,RLC,CatRlcProcConnectReleaseAckReqSig_1,P_INFO,swLogPrintf("LCID: %d , still has UL STATUS pending , start the release ack timer ");
560128,1147197440,0,0,PS1,RLC,CatRlcProcConnectReleaseAckReqSig_2,P_INFO,swLogPrintf("LCID: %d , CONN REL ACK STATUS PDU sent , waiting for UL HARQ transmit ind ");
560128,1147201535,0,0,PS1,RLC,CatRlcOperaAfterUlGrant_1,P_VALUE,swLogPrintf("RRC RELEASE has been ACKed ");
560128,1147201792,0,0,PS1,RLC,CatRlcProcPdcpStatusReport_e_1,P_ERROR,swLogPrintf("RLC , lcid: %d , is not AM mode: %d , can ' t proc PDCP status report ");
560128,1147203584,0,0,PS1,RLC,CatRlcAmAllocDlPduInfoMem_1,P_ERROR,swLogPrintf("AM UL , no pool mem for RLC DL PDU block , more than: %d , need to abort connection ");
560128,1147205632,0,0,PS1,RLC,CatRlcAmAllocDlSegInfoMem_1,P_ERROR,swLogPrintf("AM UL , no pool mem for RLC DL SEG block , more than: %d , need to abort connection ");
560128,1147208192,0,0,PS1,RLC,CatRlcAmDiscardDlPdu_1,P_WARNING,swLogPrintf("LC: %d , DL AM PDU SN: %d , pBit: %d , need to discard ");
560128,1147211775,0,0,PS1,RLC,CatRlcAmDiscardDlPdu_2,P_WARNING,swLogPrintf("DL AM , discard PDU , and status report need ");
560128,1147211776,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_1,P_WARNING,swLogPrintf("AM DL , status PDU length too short: %d , invalid PDU ");
560128,1147214080,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_ackSn,P_INFO,swLogPrintf("AM DL , LC: %d , RECV STATUS REPORT , ACK SN: %d ");
560128,1147216640,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_invalid_ackSn,P_ERROR,swLogPrintf("AM , LC: %d , received a invalid ackSn: %d , not in range: VTA: %d ~ VTMS: %d ");
560128,1147218432,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_4,P_WARNING,swLogPrintf("AM DL , LC: %d , E1: 1 , but total PDU len: %d < required: %d / 8 ");
560128,1147220480,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_5,P_WARNING,swLogPrintf("AM DL , LC: %d , E2: 1 , but total PDU len: %d < required: %d / 8 ");
560128,1147223040,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_6,P_INFO,swLogPrintf("AM DL , LC: %d , RECV STATUS REPORT , ACK SN: %d , NACK SN: %d , soStart: %d , soEnd: %d ");
560128,1147224320,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_odd_w_1,P_WARNING,swLogPrintf("CAT RLC , DL , invalid ODD LI header , leftLen: %d , pduLen: %d ");
560128,1147226368,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_even_w_1,P_WARNING,swLogPrintf("CAT RLC , DL , invalid EVEN LI header , leftLen: %d , pduLen: %d ");
560128,1147230207,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_even_3,P_INFO,swLogPrintf("CAT RLC , DL , EVEN LI headers , no more LI left ");
560128,1147232255,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_odd_4,P_INFO,swLogPrintf("CAT RLC , DL , ODD LI headers , no more LI left ");
560128,1147232512,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_extli_1,P_WARNING,swLogPrintf("CAT RLC , DL , extended LI , leftLen: %d , pduLen: %d ");
560128,1147236351,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_extli_2,P_INFO,swLogPrintf("CAT RLC , DL , extended LI , no more LI left ");
560128,1147236608,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_w_1,P_WARNING,swLogPrintf("CAT RLC , DL , invalid LI header , left Len: %d , or too much LI headers: %d ");
560128,1147240447,0,0,PS1,RLC,CatRlcAmDecodeDlWholePdu_li_w_1,P_WARNING,swLogPrintf("CAT RLC , AM DL , invalid LI header field ");
560128,1147241216,0,0,PS1,RLC,CatRlcAmMergeContSegPdu_w_1,P_WARNING,swLogPrintf("RLC AM DL , curSeg soStart: %d , soEnd: %d is last , but a nextSeg soStart: %d , soEnd: %d still followed , discard next seg ");
560128,1147244543,0,0,PS1,RLC,CatRlcAmParseUsefulPartFromSegPduData_mem_1,P_WARNING,swLogPrintf("AM DL , no pool mem left , to store: CatRlcAmDlSegList ");
560128,1147244800,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_1,P_WARNING,swLogPrintf("AM DL , this RLC SEG data partly reported to PDCP , and new SEG data all received before , parseSoEnd: %d , oldSoEnd: %d ");
560128,1147248639,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_2,P_WARNING,swLogPrintf("AM DL , NW IS WRONG , the discard SEG is the last SEG ");
560128,1147248896,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_part_w_1,P_WARNING,swLogPrintf("AM DL , decode seg part failed: %d , curPduAddIdx: %d ");
560128,1147251456,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_done_1,P_INFO,swLogPrintf("AM DL , new RLC SEG PDU: soStart ( %d ) ~ soEnd ( %d ) , all insert before OLD SEG: soStart ( %d ) ~ soEnd ( %d ) ");
560128,1147253504,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_dup_1,P_WARNING,swLogPrintf("AM DL , new RECV SEG , soStart: %d - soEnd: %d , already RECV before , OLD SoStart: %d - soEnd: %d ");
560128,1147256831,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_dup_w_1,P_WARNING,swLogPrintf("AM DL , NW IS WRONG , all SEG RECV before , but not the LSF ");
560128,1147257088,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_part_w_2,P_WARNING,swLogPrintf("AM DL , decode last seg part failed: %d , curPduAddIdx: %d ");
560128,1147258880,0,0,PS1,RLC,CatRlcAmDecodeDlSegPdu_li_1,P_WARNING,swLogPrintf("AM DL , SEG PDU , SN: %d , invalid LI header field ");
560128,1147261696,0,0,PS1,RLC,CatRlcAmDecodeDlSegPdu_data_e_1,P_WARNING,swLogPrintf("AM DL , REG PDU data part decode failed: %d , sn: %d , soStart: %d , soEnd: %d ");
560128,1147263488,0,0,PS1,RLC,CatRlcAmDecodeDlSegPdu_2,P_WARNING,swLogPrintf("AM DL , REG PDU useless , maybe all received before , sn: %d , soStart: %d , soEnd: %d ");
560128,1147265024,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_w_1,P_WARNING,swLogPrintf("AM DL , recv a invalid RLC PDU with size: %d < CAT_RLC_AM_MIN_PDU_LEN ( 3 ) ");
560128,1147267072,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_w_2,P_WARNING,swLogPrintf("AM DL , extSn , recv a invalid RLC PDU with size: %d < CAT_RLC_AM_16_SN_MIN_PDU_LEN ( 4 ) ");
560128,1147269632,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_size_w_1,P_WARNING,swLogPrintf("AM DL , recv a invalid RLC SEG PDU SN: %d , size: %d < CAT_RLC_AM_MIN_SEG_PDU_LEN ( %d ) ");
560128,1147271680,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_w_3,P_WARNING,swLogPrintf("AM DL , recv a SN: %d PDU , fall out of window: [ %d ~ %d ) ");
560128,1147273728,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_buf_w_1,P_WARNING,swLogPrintf("AM DL , SRB , recv a SN: %d PDU , fall out of buf: [ %d ~ %d ) ");
560128,1147275776,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_buf_w_2,P_WARNING,swLogPrintf("AM DL , DRB , recv a SN: %d PDU , fall out of buf: [ %d ~ %d ) ");
560128,1147277312,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_recv_w_1,P_WARNING,swLogPrintf("AM DL , whole SN ( %d ) PDU already recv before , discard current one ");
560128,1147279360,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_recv_w_2,P_WARNING,swLogPrintf("AM DL , part of SN ( %d ) SEG already report to PDCP , while RECV a whole RLC PDU here ");
560128,1147281664,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_whole_1,P_INFO,swLogPrintf("AM DL , LCID: %d , RECV WHOLE PDU SN: %d ");
560128,1147283712,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_dec_w_1,P_WARNING,swLogPrintf("AM DL , SN ( %d ) PDU decode error , errId: %d , discard it ");
560128,1147285504,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_dec_e_1,P_ERROR,swLogPrintf("AM DL , VRR = SN ( %d ) , but no memory left , need to abort connection ");
560128,1147288064,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_seg_1,P_INFO,swLogPrintf("AM DL , LCID: %d , RECV SEG PDU SN: %d , SO: %d ");
560128,1147289856,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_dec_seg_w_1,P_WARNING,swLogPrintf("AM DL , SN ( %d ) seg PDU decode error , errId: %d , discard it ");
560128,1147291648,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_dec_seg_e_1,P_ERROR,swLogPrintf("AM DL , VRR = SN ( %d ) , seg PDU , but no memory left , need to abort connection ");
560128,1147294464,0,0,PS1,RLC,CatRlcAmDlDiscardAllPdu_w_1,P_WARNING,swLogPrintf("RLC AM DL , LCID: %d , discard DL PDU SN: %d > VRH: %d , VRR: %d ");
560128,1147296768,0,0,PS1,RLC,CatRlcAmAssembleLcDlSdu_reorder_1,P_WARNING,swLogPrintf("RLC AM DL , LCID: %d , VRH: %d > VRR: %d , set VRX: %d , start T_Reordering: %d ");
560128,1147298304,0,0,PS1,RLC,CatRlcAmAssembleLcDlSdu_reordering_2,P_WARNING,swLogPrintf("RLC AM DL , LCID: %d , VRH : %d > VRR: %d ");
560128,1147300352,0,0,PS1,RLC,CatRlcAmAssembleLcDlSdu_reordering_3,P_WARNING,swLogPrintf("AM LC: %d , VRH: %d > VRR: %d , trigger the status report ");
560128,1147302656,0,0,PS1,RLC,CatRlcAmAssembleLcDlSdu_pbit_1,P_INFO,swLogPrintf("AM LC: %d , P bit set , and CUR SN: %d < VRMS: %d , or > = VRMR: %d , trigger the status report ");
560128,1147304704,0,0,PS1,RLC,CatRlcAmDlLcReestablishReq_w_1,P_WARNING,swLogPrintf("RLC AM DL , LCID: %d , Re-Est DL PDU SN: %d > VRH: %d , VRR: %d ");
560128,1147305984,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_err,P_WARNING,swLogPrintf("AM LC: %d , t-Reordering is not running , ignore it! ");
560128,1147308800,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_1,P_WARNING,swLogPrintf("AM LC: %d , SRB , vrx: %d , fall out of buf: [ %d ~ %d ) , just set vrms to vrx ");
560128,1147310848,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_2,P_WARNING,swLogPrintf("AM LC: %d , DRB , vrx: %d , fall out of buf: [ %d ~ %d ) , just set vrms to vrx ");
560128,1147313152,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_3,P_WARNING,swLogPrintf("AM LC: %d , set VRX: %d , VRH: %d > VRMS: %d , start T_Reording: %d ");
560128,1147314688,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_4,P_WARNING,swLogPrintf("AM LC: %d , t-Reordering expiry , VRH: %d > VRR: %d , trigger the status report ");
560128,1147316224,0,0,PS1,RLC,CatRlcAmAllocUlPduBlockMem_1,P_ERROR,swLogPrintf("AM UL , no pool mem for RLC UL PDU block , more than: %d , need to abort connection ");
560128,1147318272,0,0,PS1,RLC,CatRlcAmCheckSetPBit_1,P_INFO,swLogPrintf("AM UL , LC: %d , no UL data pending , set ' P ' bit ");
560128,1147321088,0,0,PS1,RLC,CatRlcAmCheckSetPBit_2,P_INFO,swLogPrintf("AM UL , LC: %d , VTS out of window , vts: %d , vta: %d , vtms: %d , set ' P ' bit ");
560128,1147322368,0,0,PS1,RLC,CatRlcAmCheckSetPBit_3,P_INFO,swLogPrintf("AM UL , LC: %d , t-PollRetransmit timer expired before , set ' P ' bit ");
560128,1147324928,0,0,PS1,RLC,CatRlcAmCheckSetPBit_4,P_INFO,swLogPrintf("AM UL , LC: %d , pduWithoutPoll: %d > = pollPdu: %d , set ' P ' bit ");
560128,1147326976,0,0,PS1,RLC,CatRlcAmCheckSetPBit_5,P_INFO,swLogPrintf("AM UL , LC: %d , byteWithoutPoll: %d > = pollByte: %d , set ' P ' bit ");
560128,1147328768,0,0,PS1,RLC,CatRlcAmCheckSetPBit_6,P_INFO,swLogPrintf("AM UL , LC: %d , L2B high water , and UL RLC / PDCP only pending: %d , set ' P ' bit ");
560128,1147331584,0,0,PS1,RLC,CatRlcAmMergeNackSo_2,P_WARNING,swLogPrintf("AM PDU SN: %d , insert nack so: [ %d - %d ] before old so: [ %d - %d ] ");
560128,1147334144,0,0,PS1,RLC,CatRlcAmMergeNackSo_3,P_WARNING,swLogPrintf("AM PDU SN: %d , lots if nack sostart / soend ; need to merge from: [ %d - %d ] + [ %d - %d ] -> [ %d - %d ] ");
560128,1147336192,0,0,PS1,RLC,CatRlcAmMergeNackSo_4,P_INFO,swLogPrintf("AM PDU SN: %d , NACK SO merge from: [ %d - %d ] + [ %d - %d ] -> [ %d - %d ] ");
560128,1147338240,0,0,PS1,RLC,CatRlcAmMergeNackSo_5,P_INFO,swLogPrintf("AM PDU SN: %d ; NACK SO merge from: [ %d - %d ] + [ %d - %d ] -> [ %d - %d ] ");
560128,1147340288,0,0,PS1,RLC,CatRlcAmMergeNackSo_6,P_INFO,swLogPrintf("AM PDU SN: %d , NACK SO merge from: [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147342336,0,0,PS1,RLC,CatRlcAmMergeNackSo_7,P_INFO,swLogPrintf("AM PDU SN: %d , NACK SO merge from: [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147344384,0,0,PS1,RLC,CatRlcAmMergeNackSo_8,P_INFO,swLogPrintf("AM PDU SN: %d , NACK SO merge from: [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147346432,0,0,PS1,RLC,CatRlcAmMergeNackSo_9,P_INFO,swLogPrintf("AM PDU SN: %d , NACK SO merge from: [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147348480,0,0,PS1,RLC,CatRlcAmMergeNackSo_10,P_WARNING,swLogPrintf("AM PDU SN: %d , lots if nack sostart / soend , need to merge from: [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147350016,0,0,PS1,RLC,CatRlcAmMergeNackSo_11,P_WARNING,swLogPrintf("AM PDU SN: %d , insert the NACK SO: [ %d , %d ] after old: [ %d , %d ] ");
560128,1147352576,0,0,PS1,RLC,CatRlcAmMergeNackSo_12,P_INFO,swLogPrintf("AM PDU SN: %d , NACK SO merge from: [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147353856,0,0,PS1,RLC,CatRlcAmMergeNackSo_13,P_INFO,swLogPrintf("AM PDU SN: %d , merge NACK SO: [ %d , %d ] , all datalenght: %d , all PDU need to retx ");
560128,1147355392,0,0,PS1,RLC,CatRlcAmInsertPduIntoRetxList_1,P_WARNING,swLogPrintf("AM UL , LC: %d , SN:%d is exist in retx buffer , can ' t insert again! ");
560128,1147357184,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_1,P_INFO,swLogPrintf("AM UL , LC: %d , no UL RLC SDU left ");
560128,1147360000,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_2,P_WARNING,swLogPrintf("AM UL , LC: %d , SN window stalling , VTA: %d , VTS: %d , VTMS: %d ");
560128,1147361536,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_3,P_VALUE,swLogPrintf("AM UL , UL ExtSn: %d , left grant size: %d is not enough for a new RLC PDU ");
560128,1147363584,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_4,P_WARNING,swLogPrintf("AM UL , LC: %d , too much RLC PDU ( %d ) construct this time ");
560128,1147366144,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_buf_w_1,P_WARNING,swLogPrintf("AM DL , SRB LCID: %d , new PDU SN: %d , fall out of buf: [ %d ~ %d ) ");
560128,1147368192,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_buf_w_2,P_WARNING,swLogPrintf("AM DL , DRB LCID: %d , new PDU SN: %d , fall out of buf: [ %d ~ %d ) ");
560128,1147369728,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_buf_w_3,P_WARNING,swLogPrintf("AM DL , LCID: %d , No PDU info mem for new PDU SN: %d , not construct ");
560128,1147372288,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_5,P_INFO,swLogPrintf("AM UL , LC: %d , no more grant , PDU total grant: %d , pduDataLen: %d , preHdrLen: %d ");
560128,1147374080,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_6,P_WARNING,swLogPrintf("AM UL , LC: %d , RLC header too long: %d > memSize: %d ");
560128,1147375872,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_7,P_INFO,swLogPrintf("AM UL , LC: %d , UL RLC SDU all sent , no more pending , this PDU datalen: %d ");
560128,1147378176,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_8,P_INFO,swLogPrintf("AM UL , LC: %d , New RLC PDU SN: %d , P Bit: %d ");
560128,1147379712,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_tStatusProhibit,P_INFO,swLogPrintf("AM UL , LC: %d , t-StatusProhibit is running , can ' t send Status Report! ");
560128,1147382016,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_1,P_WARNING,swLogPrintf("RLC AM , LC: %d , not enough grant: %d , to ASSEM status PDU ");
560128,1147384064,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_extSn_1,P_WARNING,swLogPrintf("RLC AM , LC: %d , extSN , not enough grant: %d , to ASSEM status PDU ");
560128,1147386624,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_2,P_WARNING,swLogPrintf("AM UL , not enought grant: %d , for LC: %d Status PDU , NACK_SN: %d , bitOffset: %d ");
560128,1147388672,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_3,P_WARNING,swLogPrintf("AM UL , not enought STATUS PDU buffer size: %d , for LC: %d Status PDU , NACK_SN: %d , bitOffset: %d ");
560128,1147390208,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_4,P_WARNING,swLogPrintf("AM UL , LC: %d , UL STATUS NACK: %d ");
560128,1147393280,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_6,P_WARNING,swLogPrintf("AM UL , not enought grant: %d , for LC: %d Status PDU , NACK_SN: %d , soStart: %d , soEnd: %d , bitOffset: %d ");
560128,1147394048,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_7,P_WARNING,swLogPrintf("AM UL , a soStart / soEnd exist for some NACK_SN: %d , set the pre soEnd to: 0x7FFF / 0xFFFF ");
560128,1147397376,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_8,P_WARNING,swLogPrintf("AM UL , not enought STATUS PDU buffer size: %d , for LC: %d Status PDU , NACK_SN: %d , soStart: %d , soEnd: %d , bitOffset: %d ");
560128,1147398144,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_9,P_WARNING,swLogPrintf("AM UL , a soStart / soEnd exist for some NACK_SN: %d , set the pre soEnd to: 0x7FFF / 0xFFFF ");
560128,1147400960,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_10,P_WARNING,swLogPrintf("AM UL , LC: %d , UL STATUS NACK: %d , soStart: %d , soEnd: %d ");
560128,1147402496,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_16,P_VALUE,swLogPrintf("AM UL , LC: %d , UL STATUS ACK SN: %d ");
560128,1147404544,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_17,P_WARNING,swLogPrintf("AM UL , LC: %d , not enough grant to send STATUS PDU , grant left: %d , need to continue to send STATUS PDU in next grant ");
560128,1147406592,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_18,P_INFO,swLogPrintf("AM LC: %d , Status reporting has been triggered , start T_StatusProhibit: %d ms ");
560128,1147409152,0,0,PS1,RLC,CatRlcAmUlAssembleOneSegPdu_1,P_INFO,swLogPrintf("AM UL , LC: %d , no more grant for more SEG SDU , SEG total grant: %d , segDataLen: %d , reqHdrSize: %d ");
560128,1147410688,0,0,PS1,RLC,CatRlcAmUlAssembleOneSegPdu_2,P_WARNING,swLogPrintf("AM UL , LC: %d , SEG PDU RLC header too long: %d ");
560128,1147412736,0,0,PS1,RLC,CatRlcAmUlRetxSegRlcPdu_w_1,P_WARNING,swLogPrintf("AM UL , LC: %d , already construct: %d segment PDU in current HARQ , can ' t any more ");
560128,1147414784,0,0,PS1,RLC,CatRlcAmUlRetxSegRlcPdu_1,P_WARNING,swLogPrintf("AM UL , LC: %d , already construct: %d MAC SDU , can ' t any more ");
560128,1147417088,0,0,PS1,RLC,CatRlcAmUlRetxSegRlcPdu_2,P_WARNING,swLogPrintf("AM UL , LC: %d , RE-SEG , no more grant ( %d ) reserved for MAC LC Header length ( %d ) ");
560128,1147418880,0,0,PS1,RLC,CatRlcAmUlRetxSegRlcPdu_3,P_WARNING,swLogPrintf("AM UL , LC: %d , RE-SEG , no more grant ( %d ) for a new seg PDU ");
560128,1147420672,0,0,PS1,RLC,CatRlcAmUlAssembleRetxPdu_1,P_INFO,swLogPrintf("AM UL , LC: %d , no RETX RLC PDU ");
560128,1147422976,0,0,PS1,RLC,CatRlcAmUlAssembleRetxPdu_2,P_WARNING,swLogPrintf("AM UL , LC: %d , too much RLC PDU ( %d ) construct this time , can ' t construct any more ");
560128,1147425280,0,0,PS1,RLC,CatRlcAmUlAssembleRetxPdu_3,P_WARNING,swLogPrintf("AM UL , LC: %d , no more grant ( %d ) reserved for MAC LC Header length ( %d ) ");
560128,1147427072,0,0,PS1,RLC,CatRlcAmUlAssembleRetxPdu_4,P_WARNING,swLogPrintf("AM UL , LC: %d , no more grant ( %d ) left for SEG PDU ");
560128,1147429120,0,0,PS1,RLC,CatRlcAmUlEstimateAllRetxPduGrant_1,P_WARNING,swLogPrintf("Estimate the UL grant for LC: %d , SN: %d need to SEG , todo in future ");
560128,1147431680,0,0,PS1,RLC,CatRlcAmUlRecvAckSn_1,P_WARNING,swLogPrintf("AM , LC: %d , received a invalid ackSn: %d , not in range: VTA: %d ~ VTS: %d ");
560128,1147434240,0,0,PS1,RLC,CatRlcAmUlRecvNackList_1,P_WARNING,swLogPrintf("AM , LC: %d , recv a invalid nackSn: %d , SO: [ %d - %d ] , not in range: VTA: %d ~ VTS: %d ");
560128,1147435776,0,0,PS1,RLC,CatRlcAmUlRecvNackList_2,P_WARNING,swLogPrintf("AM , LC: %d , recv a invalid nackSn: %d , not in range: VTA: %d ~ VTS: %d ");
560128,1147438336,0,0,PS1,RLC,CatRlcAmUlRecvNackList_invaid_sn_1,P_WARNING,swLogPrintf("AM , LC: %d , recv a invalid nackSn: %d , SO: [ %d - %d ] , VTA: %d ~ VTS: %d , but UL PDU not available , maybe ACKed before ");
560128,1147439872,0,0,PS1,RLC,CatRlcAmUlRecvNackList_invaid_sn_2,P_WARNING,swLogPrintf("AM , LC: %d , recv a invalid nackSn: %d , VTA: %d ~ VTS: %d , but UL PDU not available , maybe ACKed before ");
560128,1147441152,0,0,PS1,RLC,CeRlcAmEstimateStatusPduLen_1,P_WARNING,swLogPrintf("LC: %d , status report is not need ");
560128,1147443200,0,0,PS1,RLC,CeRlcAmEstimateStatusPduLen_2,P_INFO,swLogPrintf("LC: %d , t-StatusProhibit is running , no need to calc status report len ");
560128,1147445248,0,0,PS1,RLC,CatRlcAmTriggerStatusReport_highwater_1,P_WARNING,swLogPrintf("RLC AM LC: %d , t-StatusProhibit is running , but DL L2B highwater , trigger STATUS report at once ");
560128,1147447296,0,0,PS1,RLC,CatRlcAmTriggerStatusReport_prohibit_1,P_VALUE,swLogPrintf("RLC AM LC: %d , t-StatusProhibit is running , delay STATUS report ");
560128,1147449344,0,0,PS1,RLC,CatRlcAmTriggerStatusReport_1,P_VALUE,swLogPrintf("RLC AM LC: %d , AM trigger STATUS report ");
560128,1147451392,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_1,P_INFO,swLogPrintf("AM UL , LC: %d , no more new PDU or retx PDU pending ");
560128,1147454208,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_2,P_INFO,swLogPrintf("AM UL , LC: %d , VTS out of window , vts: %d , vta: %d , vtms: %d ");
560128,1147456256,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_buf_w_1,P_WARNING,swLogPrintf("AM UL , SRB LCID: %d , VTS is %d , fall out of buf: [ %d ~ %d ) ");
560128,1147458304,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_buf_w_2,P_WARNING,swLogPrintf("AM UL , DRB LCID: %d , VTS is %d , fall out of buf: [ %d ~ %d ) ");
560128,1147459584,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_3,P_VALUE,swLogPrintf("AM UL , LC: %d , put last PDU into retx buffer ");
560128,1147461888,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_4,P_VALUE,swLogPrintf("AM UL , LC: %d , VT (S ) -1 has been acked , put the SN:%d into retx buffer ");
560128,1147464448,0,0,PS1,RLC,CatRlcAmUlCheckPdcpDiscardTimer_1_1,P_WARNING,swLogPrintf("LCID: %d , PDCP PDU count: %d , discard timer expiry , curTick: 0x%x , discardEndTick: 0x%x , need to discard it ");
560128,1147465728,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_e_1,P_ERROR,swLogPrintf("RLC AM , LCID: %d , is for SRB , can ' t proc PDCP status report ");
560128,1147468032,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_p_1,P_SIG,swLogPrintf("RLC AM , proc PDCP status report , FMS: %d , bitmapSize: %d ");
560128,1147470080,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_p_2,P_SIG,swLogPrintf("RLC AM , continue to proc PDCP status report , FMS: %d , bitmapSize: %d ");
560128,1147473919,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_dump_1,P_SIG,swLogDump("RLC AM , proc PDCP status report bitmap: ");
560128,1147475967,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_dump_2,P_SIG,swLogDump("RLC AM , continue to proc PDCP status report bitmap: ");
560128,1147476224,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_discard_1,P_SIG,swLogPrintf("RLC AM , PDCP count: %d < fmsCount: %d , need to discard ");
560128,1147478016,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_discard_2,P_SIG,swLogPrintf("RLC AM , PDCP count: %d , status report bitmap value 1 , try to discard from RLC SDU list ");
560128,1147480320,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_odd_w_1,P_WARNING,swLogPrintf("CAT RLC , DL , invalid ODD LI header , leftLen: %d , pduLen: %d ");
560128,1147482368,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_even_w_1,P_WARNING,swLogPrintf("CAT RLC , DL , invalid EVEN LI header , leftLen: %d , pduLen: %d ");
560128,1147486207,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_even_3,P_INFO,swLogPrintf("CAT RLC , DL , EVEN LI headers , no more LI left ");
560128,1147488255,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_odd_4,P_INFO,swLogPrintf("CAT RLC , DL , ODD LI headers , no more LI left ");
560128,1147488512,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_w_1,P_WARNING,swLogPrintf("CAT RLC , DL , invalid LI header , left Len: %d , or too much LI headers: %d ");
560128,1147492351,0,0,PS1,RLC,CatRlcUmDecodeDlWholePdu_li_w_1,P_WARNING,swLogPrintf("CAT RLC , UM DL , invalid LI header field ");
560128,1147492352,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_w_1,P_WARNING,swLogPrintf("UM DL , SN SIZE 5 , recv a invalid RLC PDU with size: %d < CAT_RLC_UM_5_SN_MIN_PDU_LEN ( 2 ) ");
560128,1147494400,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_w_2,P_WARNING,swLogPrintf("UM DL , SN SIZE 10 , recv a invalid RLC PDU with size: %d < CAT_RLC_UM_10_SN_MIN_PDU_LEN ( 3 ) ");
560128,1147496960,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_w_3,P_WARNING,swLogPrintf("UM DL , recv a SN: %d PDU , VR ( UH ) -UM_Window_Size:%d < = SN < VR ( UR ) :%d , diacard it! ");
560128,1147499008,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_buf_w_1,P_WARNING,swLogPrintf("UM DL , DRB ( SN 10 Bits ) , recv a SN: %d PDU , fall out of buf: [ %d ~ %d ) , diacard it! ");
560128,1147501056,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_recv_w_1,P_WARNING,swLogPrintf("UM DL , VR ( UR ) :%d < SN:%d < VR ( UH ) %d , and the whole SN PDU already recv before , discard it! ");
560128,1147502848,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_whole_1,P_INFO,swLogPrintf("UM DL , LCID: %d , RECV WHOLE PDU SN: %d ");
560128,1147504896,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_dec_w_1,P_WARNING,swLogPrintf("UM DL , SN ( %d ) PDU decode error , errId: %d , discard it! ");
560128,1147506688,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_dec_e_1,P_ERROR,swLogPrintf("UM DL , VR ( UR ) = SN ( %d ) , but no memory left , need to abort connection ");
560128,1147509248,0,0,PS1,RLC,CatRlcUmAssembleLcDlSdu_reordering_1,P_WARNING,swLogPrintf("RLC UM DL , LCID: %d , VRUH : %d > VRUR: %d ");
560128,1147511808,0,0,PS1,RLC,CatRlcUmAssembleLcDlSdu_reorder_2,P_WARNING,swLogPrintf("RLC UM DL , LCID: %d , VRUH: %d > VRUR: %d , set VRUX: %d , start T_Reordering: %d ");
560128,1147512832,0,0,PS1,RLC,CatRlcUmTReorderingTimerExpiry_err,P_WARNING,swLogPrintf("UM LC: %d , t-Reordering is not running , ignore it! ");
560128,1147515648,0,0,PS1,RLC,CatRlcUmTReorderingTimerExpiry_1,P_WARNING,swLogPrintf("UM DL , LC: %d , ( SN 10 Bits ) , vrux: %d , fall out of buf: [ %d ~ %d ) , just set vrur to vrux ");
560128,1147517952,0,0,PS1,RLC,CatRlcUmTReorderingTimerExpiry_4,P_WARNING,swLogPrintf("UM DL , LC: %d , set VRUX: %d , VRUH: %d > VRUR: %d , start T_Reording: %d ");
560128,1147518976,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_1,P_INFO,swLogPrintf("UM UL , LC: %d , no UL RLC SDU left ");
560128,1147521280,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_2,P_VALUE,swLogPrintf("UM UL , UL SN size: %d , left grant size: %d is not enough for a new RLC PDU ");
560128,1147523328,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_3,P_WARNING,swLogPrintf("UM UL , LC: %d , too much RLC PDU ( %d ) construct this time ");
560128,1147525888,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_4,P_INFO,swLogPrintf("UM UL , LC: %d , no more grant , PDU total grant: %d , pduDataLen: %d , preHdrLen: %d ");
560128,1147527680,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_5,P_WARNING,swLogPrintf("UM UL , LC: %d , RLC header too long: %d > hdrMemSize: %d ");
560128,1147529472,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_6,P_INFO,swLogPrintf("UM UL , LC: %d , UL RLC SDU all sent , no more pending , this PDU datalen: %d ");
560128,1147531776,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_7,P_INFO,swLogPrintf("UM UL , LC: %d , New RLC PDU SN: %d , harqId: %d ");
560128,1147534080,0,0,PS1,RLC,CatRlcUmUlCheckPdcpDiscardTimer_1_1,P_WARNING,swLogPrintf("LCID: %d , PDCP PDU count: %d , discard timer expiry , curTick: %d , discardEndTick: %d , need to discard it ");
561152,1149241344,0,0,PS1,PDCP,CatPdcpDrbLcSetupConfig_1,P_SIG,swLogPrintf("LCID: %d , is configed ROHC ");
561152,1149243648,0,0,PS1,PDCP,CatPdcpLcResumeSuspendReq_e_1,P_ERROR,swLogPrintf("CAT PDCP , can ' t suspend / resume: %d , LCID: %d , not PDCP context ");
561152,1149247487,0,0,PS1,PDCP,CatPdcpAllLcReleaseInd_1,P_VALUE,swLogPrintf("PDCP , all LC are released ");
561152,1149249535,0,0,PS1,PDCP,CatPdcpDlPduSoftEeaThenEia_2,P_WARNING,swLogPrintf("PDCP DL PDU , SOFT EEA the EIA FAIL , key not configed !!!! ");
561152,1149251328,0,0,PS1,PDCP,CatPdcpDlPduSoftEeaThenEia_3,P_WARNING,swLogPrintf("PDCP DL PDU , soft EEA the EIA FAIL , orig MACI: 0x%x 0x%x 0x%x 0x%x , CALC MACI: 0x%x 0x%x 0x%x 0x%x ");
561152,1149251584,0,0,PS1,PDCP,CatPdcpIsUlHighWater_high_1,P_VALUE,swLogPrintf("CAT PDCP , UL highwater , pendingLen: %d ");
561152,1149255679,0,0,PS1,PDCP,CatPdcpPmuDeepSlpEnterCallBack_s_1,P_SIG,swLogPrintf("CAT PDCP , only TPT statis need write to flash , can ' t enter HIB , change to SLP2 ");
561152,1149257727,0,0,PS1,PDCP,CatPdcpPmuDeepSlpEnterCallBack_s_2,P_SIG,swLogPrintf("CAT PDCP , tiny flash need to write , update TPT statis by the way , and vote to HIB ");
561152,1149257984,0,0,PS1,PDCP,CatPdcpDlIsStoreDlSdu_s_1,P_SIG,swLogPrintf("CAT PDCP , AM LCID: %d , SN: %d , need to store in local ");
561152,1149259776,0,0,PS1,PDCP,CatPdcpDlDeliverStoredSduBeforeCurCount_1,P_WARNING,swLogPrintf("PDCP DL: CurCount ( %d ) just the same as stored one , just discard the stored one ");
561152,1149262080,0,0,PS1,PDCP,CatPdcpDlDeliverStoredSduAfterCurCount_1,P_WARNING,swLogPrintf("PDCP DL: store PDCP SDU count ( %d ) < = ( preCount ( %d ) + 1 ) , just discard the stored one ");
561152,1149264640,0,0,PS1,PDCP,CatPdcpDlDecodeDrbUmPduHeader_invalid_1,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , SN: %d , PDU should bCont , but pNext: 0x%x , dCont: %d ");
561152,1149266432,0,0,PS1,PDCP,CatPdcpDlDecodeDrbUmPduHeader_invalid_2,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , SN 12 bits , PDU should bCont , but pNext: 0x%x , dCont: %d ");
561152,1149268736,0,0,PS1,PDCP,CatPdcpDlDecodeDrbUmPduHeader_invalid_3,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , SN: %d , only header part no data part , pNext: 0x%x , dCont: %d , discard ");
561152,1149270528,0,0,PS1,PDCP,CatPdcpDlDecodeDrbAmPduHeader_invalid_1,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , PDCP header not complete , pNext: 0x%x , dCont: %d , discard ");
561152,1149272576,0,0,PS1,PDCP,CatPdcpDlDecodeDrbAmPduHeader_invalid_2,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , 18 bit SN , PDCP header not complete , pNext: 0x%x , dCont: %d , discard ");
561152,1149274880,0,0,PS1,PDCP,CatPdcpDlDecodeDrbAmPduHeader_invalid_3,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , curSN: %d , no data part , pNext: 0x%x , dCont: %d , discard ");
561152,1149276672,0,0,PS1,PDCP,CatPdcpDlDecodeDrbAmPduHeader_1,P_WARNING,swLogPrintf("PDCP LCID: %d , recv PDCP SN: %d , Last_Submitted_PDCP_RX_SN : %d , out of win , need to discard ");
561152,1149278208,0,0,PS1,PDCP,CatPdcpDlDecodeOneSrbPdu_e_1,P_ERROR,swLogPrintf("CAT PDCP , LCID: %d , DL PDCP SEG bContinue , but next seg is NULL ");
561152,1149280512,0,0,PS1,PDCP,CatPdcpDlDecodeOneSrbPdu_e_2,P_ERROR,swLogPrintf("CAT PDCP , SRB LCID: %d , invalid DL PDCP PDU length: %d , discard it ");
561152,1149282304,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_e_1,P_ERROR,swLogPrintf("CAT PDCP , LCID: %d , DL PDCP SEG bContinue , but next seg is NULL ");
561152,1149285376,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_storeMax_1,P_WARNING,swLogPrintf("CAT PDCP , DRB LCID: %d , DL PKG len store too much: %d > = %d , can ' t store more , discard curCount: %d , len: %d ");
561152,1149286656,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_e_2,P_ERROR,swLogPrintf("CAT PDCP , DRB LCID: %d , invalid DL PDCP SDU length: %d , discard it ");
561152,1149288704,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_2,P_WARNING,swLogPrintf("PDCP LCID: %d , store DL PDU , count: %d ");
561152,1149290752,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_3,P_WARNING,swLogPrintf("PDCP LCID: %d , store DL PDU , count: %d , but need ROHC decompression ");
561152,1149293312,0,0,PS1,PDCP,CatPdcpDlDecodeOneStatusReportPdu_discard_1,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , recv status report , but is not AM: %d , or isSrb: %d , or isSuspend: %d , discard it ");
561152,1149295104,0,0,PS1,PDCP,CatPdcpDlDecodeOneStatusReportPdu_invalid_1,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , status report , pNext: 0x%x , dCont: %d , discard ");
561152,1149297408,0,0,PS1,PDCP,CatPdcpDlDecodeOneStatusReportPdu_invalid_2,P_ERROR,swLogPrintf("PDCP DL , LCID: %d , snBitNum: %d , status report not complete , pNext: 0x%x , dCont: %d , discard ");
561152,1149298688,0,0,PS1,PDCP,CatPdcpDlDecodeOneControlPdu_ctrl_w_1,P_WARNING,swLogPrintf("CAT PDCP , recv unknow PDCP control PDU , type: %d , discard it ");
561152,1149302783,0,0,PS1,PDCP,CatPdcpDlDecodeOneControlPdu_dump,P_WARNING,swLogDump("Unknown PDCP DL PDU: ");
561152,1149302784,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_highwater_1,P_WARNING,swLogPrintf("PDCP LCID: %d , DL PKG memory highwater , discard all PKG during RE-EST ");
561152,1149304832,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_highwater_2,P_WARNING,swLogPrintf("PDCP LCID: %d , DL PKG memory highwater , backup PDCP PDU ");
561152,1149306880,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_sctopen_2,P_WARNING,swLogPrintf("PDCP LCID: %d , can ' t open SCT , discard DL PDU ");
561152,1149308928,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_highwater_3,P_WARNING,swLogPrintf("PDCP LCID: %d , DL PKG memory highwater , backup left PDCP PDU ");
561152,1149311488,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_reorder_s_1,P_SIG,swLogPrintf("PDCP , AM LCID: %d , curCount: %d , after re-est , update lastSubmittedCount to: %d ");
561152,1149313536,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_reorder_s_2,P_SIG,swLogPrintf("PDCP , AM LCID: %d , curSn: %d , during re-est , reorder , don ' t update lastSubmittedPdcpRxSn: %d ");
561152,1149315072,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_abnormal_1,P_WARNING,swLogPrintf("PDCP LCID: %d , recv DL PDU , but can ' t need to config SCT ");
561152,1149317120,0,0,PS1,PDCP,CatPdcpDlEiaFailRollbackVars_1,P_WARNING,swLogPrintf("PDCP LCID: %d , DL EIA failed , need to rollback some variables ");
561152,1149319168,0,0,PS1,PDCP,CatPdcpDlReEstProcPduInd_1,P_WARNING,swLogPrintf("SRB LCID: %d , RLC should not pass the DL PDCP PDU to PDCP during re-est procedure ");
561152,1149321216,0,0,PS1,PDCP,CatPdcpDlLcReestablishReq_um_w_1,P_WARNING,swLogPrintf("CAT PDCP , UM LCID: %d , backup DL SDU must discard ");
561152,1149323264,0,0,PS1,PDCP,CatPdcpDlLcReestablishReq_am_w_1,P_WARNING,swLogPrintf("CAT PDCP , AM LCID: %d , backup DL SDU must discard ");
561152,1149327359,0,0,PS1,PDCP,CatPdcpDlProcDlPkgContinueReqSig_e_1,P_ERROR,swLogPrintf("CAT PDCP DL , PS DL PKG continue request , but still high water !!! ");
561152,1149327360,0,0,PS1,PDCP,CatPdcpDlProcDlPkgContinueReqSig_w_1,P_WARNING,swLogPrintf("CAT PDCP DL , DL PKG memory highwater again , can ' t proc LCID: %d DL backup PDU , keep backup ");
561152,1149329664,0,0,PS1,PDCP,CatPdcpUlDrbPendingLenAdd_high_1,P_WARNING,swLogPrintf("CAT PDCP , UL become highwater , pendingLen: %d , new add: %d ");
561152,1149331456,0,0,PS1,PDCP,CatPdcpUlDrbPendingLenSub_high_1,P_WARNING,swLogPrintf("CAT PDCP , UL become not highwater , pendingLen: %d ");
561152,1149333760,0,0,PS1,PDCP,CatPdcpUlEia0ConfigL2CForCpDataReq_1,P_WARNING,swLogPrintf("SRB LCID: %d , config EEA: %d , but EIA0 ");
561152,1149336320,0,0,PS1,PDCP,CatPdcpUlSetPdcpPduInfoForUpData_1,P_VALUE,swLogPrintf("PDCP LCID: %u , set this UL PDU discard tick to: %u , as PDCP config discardTick: %u > PKG discardTick: %u ");
561152,1149337600,0,0,PS1,PDCP,CatPdcpUlSRBCpDataReq_1,P_ERROR,swLogPrintf("Can ' t find PDCP context for LCID: %d , can ' t send UL data ");
561152,1149339648,0,0,PS1,PDCP,CatPdcpUlSRBCpDataReq_2,P_ERROR,swLogPrintf("PDCP LCID: %d , but can ' t open SCT , can ' t send UL data ");
561152,1149341952,0,0,PS1,PDCP,CatPdcpUlConsAndCfgOnePduForUpData_0,P_VALUE,swLogPrintf("PDCP LCID: %d , UL ROHC feedback PKG , total LEN: %d ");
561152,1149344256,0,0,PS1,PDCP,CatPdcpUlConsAndCfgOnePduForUpData_1,P_WARNING,swLogPrintf("LCID: %d , Can ' t send PDCP SDU with len: %d = = 0 or > %d ");
561152,1149346048,0,0,PS1,PDCP,CatPdcpUlConsAndCfgOnePduForUpData_2,P_WARNING,swLogPrintf("LCID: %d , Can ' t alloc L2B buffer for UL PDCP PDU , len: %d ");
561152,1149349887,0,0,PS1,PDCP,CatPdcpUlSendUpDataReq_1,P_ERROR,swLogPrintf("SCT exhaust , can ' t OPEN for UL UP data ");
561152,1149351935,0,0,PS1,PDCP,CatPdcpUlSendUpDataReq_2,P_WARNING,swLogPrintf("Can ' t construct / config PDCP PDU for UL UP data ");
561152,1149353983,0,0,PS1,PDCP,CatPdcpUlSendUpDataReq_3,P_WARNING,swLogPrintf("One UL UP PKG construct error , continue to process the previous UL PKG ");
561152,1149356031,0,0,PS1,PDCP,CatPdcpUlPdcpPduToRlc_e_1,P_ERROR,swLogPrintf("SCT exhaust , can ' t OPEN for UL PDCP PDU to RLC ");
561152,1149356288,0,0,PS1,PDCP,CatPdcpUlConsOneRawPduForUpData_fb_0,P_VALUE,swLogPrintf("PDCP LCID: %d , UL ROHC feedback PKG , total LEN: %d ");
561152,1149358592,0,0,PS1,PDCP,CatPdcpUlConsOneRawPduForUpData_len_1,P_WARNING,swLogPrintf("LCID: %d , Can ' t construct RAW PDCP PDU with len: %d = = 0 or > %d ");
561152,1149360384,0,0,PS1,PDCP,CatPdcpUlConsOneRawPduForUpData_no_bm_2,P_WARNING,swLogPrintf("LCID: %d , Can ' t alloc L2B buffer for UL RAW PDCP PDU , len: %d ");
561152,1149364223,0,0,PS1,PDCP,CatPdcpUlUpDataToPdcp_e_1,P_ERROR,swLogPrintf("SCT exhaust , can ' t OPEN for UL UP data to PDCP ");
561152,1149365504,0,0,PS1,PDCP,CatPdcpUlCtrlSendUpData_opt_5,P_VALUE,swLogPrintf("CAT PDCP , RLC CTRL , UL BM high: %d , pending UL PKG , shortPending: %d , normalPending: %d , shortSentLen: %d , shorPdcpLen: %d , normalPdcpLen: %d ");
561152,1149367552,0,0,PS1,PDCP,CatPdcpUlCtrlSendUpData_opt_7,P_DEBUG,swLogPrintf("CAT PDCP , RLC CTRL , UL BM size: %d , pending UL PKG , shortPending: %d , normalPending: %d , shortSentLen: %d , shorPdcpLen: %d , normalPdcpLen: %d ");
561152,1149370367,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_open_e_1,P_ERROR,swLogPrintf("SCT exhaust , can ' t OPEN for DRB AM retx data ");
561152,1149370368,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_discard_1,P_INFO,swLogPrintf("CAT PDCP , DRB AM retx , LCID: %d , one PDCP PDU out of date , not need to retx ");
561152,1149372416,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_discard_2,P_INFO,swLogPrintf("CAT PDCP , DRB AM retx , LCID: %d , control PDU don ' t need to retx ");
561152,1149374976,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_discard_3,P_WARNING,swLogPrintf("CAT PDCP , DRB AM retx , LCID: %d , PDCP PDU length: %d < = PDCP header length: %d , useless , discard ");
561152,1149376512,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_cancel_1,P_WARNING,swLogPrintf("CAT PDCP , LCID: %d , no valid PDU need re-tx ");
561152,1149379072,0,0,PS1,PDCP,CatPdcpUlProcCpDataReqSig_1,P_VALUE,swLogPrintf("SRB LCID: %d , UL data , total len: %d , contain nas len: %d ");
561152,1149380608,0,0,PS1,PDCP,CatPdcpUlUpDataReq_1,P_WARNING,swLogPrintf("Can ' t find the PDCP context for LCID: %d ");
561152,1149382656,0,0,PS1,PDCP,CatPdcpUlUpDataReq_2,P_WARNING,swLogPrintf("PDCP LCID: %d is not DRB , can ' t send UL UP Data ");
561152,1149384960,0,0,PS1,PDCP,CatPdcpUlUpDataReq_3,P_WARNING,swLogPrintf("PDCP LCID: %d is suspended , can ' t send UL PDU , pending LEN: %d ");
561152,1149387008,0,0,PS1,PDCP,CatPdcpUlUpDataReqSort_1,P_WARNING,swLogPrintf("Can ' t find the PDCP context for LCID: %d , or not DRB: %d , can ' t send UL UP Data ");
561152,1149389312,0,0,PS1,PDCP,CatPdcpUlUpDataReqSort_pendig_1,P_WARNING,swLogPrintf("PDCP LCID: %d is suspended , can ' t send UL PDU , pending LEN: %d , shortLen: %d ");
561152,1149391360,0,0,PS1,PDCP,CatPdcpUlTransSuccInd_1,P_VALUE,swLogPrintf("PDCP LCID: %u , RRC PDU ID: %u , UL sent SUCC , cost: %u ");
561152,1149393152,0,0,PS1,PDCP,CatPdcpUlTransSuccInd_2,P_VALUE,swLogPrintf("PDCP LCID: %u , RRC PDU ID: %u , UL sent SUCC ");
561152,1149395200,0,0,PS1,PDCP,CatPdcpUlTransSuccInd_3,P_VALUE,swLogPrintf("PDCP LCID: %u , RRC PDU: %u , UL sent SUCC ");
561152,1149397248,0,0,PS1,PDCP,CatPdcpUlTransFailInd_1,P_VALUE,swLogPrintf("PDCP LCID: %d , UL RRC PDU ID: %d , sent failed ");
561152,1149399040,0,0,PS1,PDCP,CatPdcpUlTransFailInd_e_1,P_ERROR,swLogPrintf("CAT PDCP , LCID: %d , can ' t find the context ");
561152,1149401088,0,0,PS1,PDCP,CatPdcpUlTransFailInd_w_1,P_WARNING,swLogPrintf("CAT PDCP , AM LCID: %d , is configed ROHC , not support re-tx UL PDU ");
561152,1149403136,0,0,PS1,PDCP,CatPdcpUlTransFailInd_3,P_VALUE,swLogPrintf("PDCP_SDU Trans Failed: lcid %d ");
561152,1149405184,0,0,PS1,PDCP,CatPdcpUlLResumeReq_am_retx_1,P_SIG,swLogPrintf("CAT PDCP , DRB AM , LCID: %d , PDU retx ");
561152,1149407488,0,0,PS1,PDCP,CatPdcpUlLResumeReq_um_retx_1,P_WARNING,swLogPrintf("CAT PDCP , DRB be UM: %d , LCID: %d , should no retx PDU ");
561152,1149409536,0,0,PS1,PDCP,CatPdcpUlSendStatusReport_buf_1,P_WARNING,swLogPrintf("LCID: %d , Can ' t alloc L2B buffer for UL status report , len: %d ");
561152,1149412352,0,0,PS1,PDCP,CatPdcpUlSendStatusReport_buf_w_1,P_WARNING,swLogPrintf("PDCP UL status report , LCID: %d , buf size not enough , pduMaxBitSize: %d , recvSn: %d , bitmapSn: %d , fms: %d ");
561152,1149415423,0,0,PS1,PDCP,CatPdcpUlSendStatusReport_status_rpt_dump,P_VALUE,swLogDump("PDCP UL , send status report: ");
561152,1149415680,0,0,PS1,PDCP,CatPdcpUlAddPendingPdcpPdu_1,P_WARNING,swLogPrintf("CAT PDCP , no PDCP CTX for LCID: %d , or not DRB: %d , can ' t pending UL PDCP PDU ");
562176,1151338752,0,0,PS1,BM,CatUpCheckFreeBuffBlock_ul_1,P_WARNING,swLogPrintf("CAT UP BM , cancel UL highwater: %d , totalNum: %d ");
562176,1151340800,0,0,PS1,BM,CatUpCheckFreeBuffBlock_dl_1,P_WARNING,swLogPrintf("CAT UP BM , cancel DL highwater: %d , totalNum: %d ");
562176,1151344128,0,0,PS1,BM,CatUpBmFreeAll_1,P_ERROR,swLogPrintf("CAT UP BM , Pls check DL BB , pStart is 0x%x , phyNotUsed is %d , freeLen is %d , alloPhyNum is %d , freePhyNum is %d , allocRlcSegNum is %d , freeRlcSegNum is %d ");
562176,1151345408,0,0,PS1,BM,CatUpBmFreeAll_2,P_ERROR,swLogPrintf("CAT UP BM , Pls check UL BB , pStart is 0x%x , freeLen is %d , alloNum is %d , freeNum is %d ");
562176,1151346688,0,0,PS1,BM,CatUpBmIsL2UlHighWater_w_1,P_VALUE,swLogPrintf("= = = = L2B UL higher water ( used: %d ) = = = = ");
562176,1151349248,0,0,PS1,BM,CatUpBmIsL2UlLimited_e_1,P_ERROR,swLogPrintf("= = = = L2B UL limited ( used: %d , limited: %d , DL lack: %d ) = = = = ");
562176,1151350784,0,0,PS1,BM,CatUpBmIsL2DlHighWater_w_1,P_WARNING,swLogPrintf("= = = = L2B DL higher water ( used: %d ) = = = = ");
562176,1151353088,0,0,PS1,BM,CatUpBmAllocPdcpUlMem_w_1,P_WARNING,swLogPrintf("CAT UP BM , no free BB left , alloDlBBNum: %d , alloUlBBNum: %d ");
562176,1151354880,0,0,PS1,BM,CatUpBmAllocPdcpUlMem_w_2,P_WARNING,swLogPrintf("CAT UP BM , alloUlBBNum: %d , UL high water ");
562176,1151357184,0,0,PS1,BM,CatUpBmFreeMacDlMem_dl_1,P_WARNING,swLogPrintf("CAT UP BM , DL highwater: %d , totalNum: %d ");
562176,1151359232,0,0,PS1,BM,CatUpBmFreeMacDlMem_dl_2,P_WARNING,swLogPrintf("CAT UP BM , NO UP BB left , lackDlBBNum: %d , alloDlBBNum: %d ");
562176,1151361024,0,0,PS1,BM,CatUpBmGetFreeULMemSize_w_1,P_VALUE,swLogPrintf("= = = = L2B UL higher water ( used: %d ) , free mem return 0 = = = = ");
563200,1153437695,0,0,PS1,DR,CesmCheckSendPdnConReqByAclApn_dump_1,P_WARNING,swLogDump("CESM , parse APN: ");
563200,1153437696,0,0,PS1,DR,CedrUlRateCtrlBAllow_1,P_WARNING,swLogPrintf("EpsId: %d , PLMN Rate Ctrl timer is running , not allow to send new PDU ");
563200,1153439744,0,0,PS1,DR,CedrUlRateCtrlBAllow_2,P_WARNING,swLogPrintf("EpsId: %d , APN Rate Ctrl timer is running , not allow to send new PDU ");
563200,1153441792,0,0,PS1,DR,CedrUlRateCtrlBAllow_3,P_WARNING,swLogPrintf("EpsId: %d , APN Rate Ctrl timer is running , but exception data is allow to send ");
563200,1153443840,0,0,PS1,DR,CedrUlRateCtrlBAllow_4,P_WARNING,swLogPrintf("EpsId: %d , APN Except Rate Ctrl timer is not running , exception data is allow to send ");
563200,1153445888,0,0,PS1,DR,CedrUlApnExceptRateCtrlAllowPduNum_1,P_WARNING,swLogPrintf("EpsId: %d , PLMN Rate Ctrl timer is running , UL exception data not allowed ");
563200,1153447936,0,0,PS1,DR,CedrUlApnExceptRateCtrlAllowPduNum_2,P_WARNING,swLogPrintf("EpsId: %d , APN RATE CTRL , but UL exception data allowed ");
563200,1153450240,0,0,PS1,DR,CedrUlApnExceptRateCtrlAllowPduNum_3,P_WARNING,swLogPrintf("EpsId: %d , APN exception Rate Ctrl timer is running , not allow exception data , pending NUM: %d ");
563200,1153452544,0,0,PS1,DR,CedrUlApnExceptRateCtrlAllowPduNum_4,P_SIG,swLogPrintf("EpsId: %d , Exception Rate Ctrl , reqExceptPduNum: %d , allowExceptPduNum: %d ");
563200,1153454336,0,0,PS1,DR,CedrUlApnPlmnRateCtrlAllowPduNum_1,P_WARNING,swLogPrintf("EpsId: %d , PLMN Rate Ctrl timer is running , pending UL PDU NUM: %d ");
563200,1153456384,0,0,PS1,DR,CedrUlApnPlmnRateCtrlAllowPduNum_3,P_WARNING,swLogPrintf("EpsId: %d , APN Rate Ctrl timer is running , pending UL PDU NUM: %d ");
563200,1153458688,0,0,PS1,DR,CedrUlApnPlmnRateCtrlAllowPduNum_end_1,P_WARNING,swLogPrintf("EpsId: %d , APN / PLMN Rate Ctrl reqPduNum: %d , but only allowPduNum: %d ");
563200,1153460224,0,0,PS1,DR,CedrProcDrTestLoopModeADataReq_1,P_WARNING,swLogPrintf("TEST LOOP MODE A , no EPS bearer info for EPSID: %d , free loopback data ");
563200,1153463040,0,0,PS1,DR,CedrProcDrTestLoopModeADataReq_2,P_WARNING,swLogPrintf("TEST LOOP MODE A , EPSID: %d , is CP ONLY ( %d ) , or DRB not exist ( %d ) , or suspended ( %d ) , free loopback data ");
563200,1153464320,0,0,PS1,DR,CedrProcDrTestLoopModeBDataReq_1,P_WARNING,swLogPrintf("TEST LOOP MODE B , no EPS bearer info for EPSID: %d , free loopback data ");
563200,1153467136,0,0,PS1,DR,CedrProcDrTestLoopModeBDataReq_2,P_WARNING,swLogPrintf("TEST LOOP MODE B , EPSID: %d , is CP ONLY ( %d ) , or DRB not exist ( %d ) , or suspended ( %d ) , free loopback data ");
563200,1153468416,0,0,PS1,DR,CedrProcDrTestLoopModeBDataReq_3,P_VALUE,swLogPrintf("TEST LOOP MODE B ; tDelay: %d > 0 ; need to buffer loopback data ");
563200,1153470720,0,0,PS1,DR,CedrProcDrTestLoopModeBDataReq_nobr_e_2,P_ERROR,swLogPrintf("CE DR , dedicated BR: %d , can ' t find linked default BR: %d , can ' t check TFT ");
563200,1153472768,0,0,PS1,DR,CedrProcDrTestLoopModeBDataReq_nobr_e_3,P_ERROR,swLogPrintf("CE DR , TFT route data to CID: %d , but can ' t find BR , using current BR with CID: %d ");
563200,1153476607,0,0,PS1,DR,CedrProcDrTestLoopModeBDataReq_4,P_WARNING,swLogPrintf("CE DR , TEST LOOP MODE B , does not match any TFT filter , discard all UL data ");
563200,1153478655,0,0,PS1,DR,CedrProcDrTestLoopModeBDataReq_dump_1,P_WARNING,swLogDump("CE DR , discard loop data: ");
563200,1153480703,0,0,PS1,DR,CedrProcDrTestLoopModeGDataReq_1,P_VALUE,swLogPrintf("TEST LOOP MODE G ; but repNum is 0 ; don ' t loopback ");
563200,1153480704,0,0,PS1,DR,CedrProcDrTestLoopModeGDataReq_3,P_WARNING,swLogPrintf("TEST LOOP MODE G ; no EPS bearer info for EPSID: %d ; free loopback data ");
563200,1153482752,0,0,PS1,DR,CedrProcDrTestLoopModeGDataReq_2_1,P_INFO,swLogPrintf("TEST LOOP MODE G , MTU size: %d configed ");
563200,1153486847,0,0,PS1,DR,CedrProcDrTestLoopModeGDataReq_2,P_WARNING,swLogPrintf("TEST LOOP MODE G ; loopback to CESM ; but ESM is suspended ; just free all PDU ");
563200,1153486848,0,0,PS1,DR,CedrProcDrTestLoopModeGDataReq_4,P_VALUE,swLogPrintf("TEST LOOP MODE G ; tDelay: %d > 0 ; need to buffer loopback data ");
563200,1153489408,0,0,PS1,DR,CedrProcDrTestLoopModeGDataReq_5,P_VALUE,swLogPrintf("CE DR , EpsId: %d , UL PKG RATE CTRL , reqNum: %d , allowedNum: %d ");
563200,1153490944,0,0,PS1,DR,CedrProcDrTestLoopModeGDataReq_not_sup_1,P_ERROR,swLogPrintf("CE DR , loop mode G , epsId: %d , not support loop data to SRB2 , free all loopback data ");
563200,1153495039,0,0,PS1,DR,CedrProcDrTestLoopModeHDataReq_1,P_VALUE,swLogPrintf("TEST LOOP MODE H , but repNum is 0 , don ' t loopback ");
563200,1153495040,0,0,PS1,DR,CedrProcDrTestLoopModeHDataReq_2,P_VALUE,swLogPrintf("TEST LOOP MODE H , tDelay ( %d ) > 0 , need to buffer SMS loopback data ");
563200,1153499135,0,0,PS1,DR,CedrProcDrTestLoopModeHDataReq_not_sup_1,P_ERROR,swLogPrintf("CE DR , loop mode H , not support loop SMS data to SRB2 , free all loopback data ");
563200,1153501183,0,0,PS1,DR,CedrProcDrTestLoopModeIDataReq_1,P_WARNING,swLogPrintf("TEST LOOP MODE I , loopback to CESM , but ESM is suspended , just free all PDU ");
563200,1153501184,0,0,PS1,DR,CedrProcDrTestLoopModeIDataReq_2,P_WARNING,swLogPrintf("TEST LOOP MODE I , no EPS bearer info for EPSID: %d , free loopback data ");
563200,1153505279,0,0,PS1,DR,CedrProcDrTestLoopModeIDataReq_3,P_WARNING,swLogPrintf("CE DR , TEST LOOP MODE I , does not match any TFT filter , discard all UL data ");
563200,1153505280,0,0,PS1,DR,CedrProcDrTestLoopModeIDataReq_not_sup_1,P_ERROR,swLogPrintf("CE DR , loop mode I , epsId: %d , not support loop CP data ");
563200,1153507584,0,0,PS1,DR,CedrUlRateCtrlSendPendingData_1,P_VALUE,swLogPrintf("CEDR , epsId: %d , allow to send UL PDU viaCp ( 1 ) / viaUp ( 0 ) : %d ");
563200,1153509376,0,0,PS1,DR,CedrFreeBearer_1,P_VALUE,swLogPrintf("CEDR , EPSID: %d , free bearer context ");
563200,1153511936,0,0,PS1,DR,CedrCheckAndTriggerProcForUlPdu_1,P_VALUE,swLogPrintf("CEDR , EPSID: %d , RAB reest proc: %d , or transUpPending: %d , can ' t send any UL PDU via CP ");
563200,1153513472,0,0,PS1,DR,CedrCheckAndTriggerProcForUlPdu_2,P_VALUE,swLogPrintf("CEDR , EPSID: %d , is suspended , but this UL PKG is exception data , pass to ESM ");
563200,1153515520,0,0,PS1,DR,CedrCheckAndTriggerProcForUlPdu_3,P_VALUE,swLogPrintf("CEDR , EPSID: %d , is suspended , can ' t send any UL PDU via CP ");
563200,1153518080,0,0,PS1,DR,CedrCheckAndTriggerProcForUlPdu_4,P_VALUE,swLogPrintf("CEDR , EPSID: %d , data VIA DRB , but DRB not setup , DrbId: %d , or drbSuspend: %d , pending ");
563200,1153520384,0,0,PS1,DR,CedrCheckAndTriggerProcForUlPdu_5,P_VALUE,swLogPrintf("CEDR , EPSID: %d , data VIA DRB , bearerSuspend: %d , anyDrbEst: %d , rabEstProc: %d , can ' t send SIG_CEMM_DR_REESTABLISH_REQ ");
563200,1153521664,0,0,PS1,DR,CedrSendUlPendingData_no_1,P_SIG,swLogPrintf("CE DR , epsId: %d , no UL pending PDU ");
563200,1153523712,0,0,PS1,DR,CedrSendUlPendingData_loopback_1,P_WARNING,swLogPrintf("CEDR , epsId: %d , send UL pending PDU , but LOOPBACK delay timer is running , not allow ");
563200,1153525760,0,0,PS1,DR,CedrSendUlPendingData_reest_delay_1,P_WARNING,swLogPrintf("CEDR , epsId: %d , send UL pending PDU , but RAB re-est delay timer is running , not allow ");
563200,1153527808,0,0,PS1,DR,CedrSendUlPendingData_1,P_WARNING,swLogPrintf("CEDR , epsId: %d , send UL pending PDU , but RATE CTRL not allow ");
563200,1153529856,0,0,PS1,DR,CedrSendUlPendingData_ratectrl_2,P_WARNING,swLogPrintf("CEDR , epsId: %d , send UL pending PDU , only except data allow , but no except data ");
563200,1153531904,0,0,PS1,DR,CedrSendUlPendingData_2,P_VALUE,swLogPrintf("CEDR , epsId: %d , send UL pending PDU , but BEARER STATE is not OK ");
563200,1153533952,0,0,PS1,DR,CedrSendUlPendingData_3,P_WARNING,swLogPrintf("CEDR , epsId: %d , pending UL pkg need to RE-ROHC ");
563200,1153538047,0,0,PS1,DR,CedrProcLoopbackTDelayTimerExpiry_1,P_WARNING,swLogPrintf("CE_UP_GOS_TEST_LOOPBACK_DELAY_TIMER expiry ; but no valid CloseTestModeInfo ");
563200,1153538048,0,0,PS1,DR,CedrProcLoopbackTDelayTimerExpiry_2,P_WARNING,swLogPrintf("TEST LOOP mode: %d ; not support TDelay timer ");
563200,1153540096,0,0,PS1,DR,CedrProcUlDataReqSig_1,P_WARNING,swLogPrintf("CID: %d , no bearer context , maybe freed ");
563200,1153542144,0,0,PS1,DR,CedrProcDrTestLoopDataReqSig_1,P_WARNING,swLogPrintf("Not support Test loop back mode: %d ");
563200,1153544448,0,0,PS1,DR,CedrProcDrPsDataPlaneTransReqSig_1,P_WARNING,swLogPrintf("CEDR , UE support OPT type: %d , NW support OPT type: %d , data can ' t trans to UP ");
563200,1153546496,0,0,PS1,DR,CedrProcDrPsDataPlaneTransReqSig_2,P_WARNING,swLogPrintf("CEDR , transfer to UP , but bearerSuspend: %d , or RAB re-est is ongoing: %d , pending ");
563200,1153550335,0,0,PS1,DR,CedrProcDrPsDataPlaneTransReqSig_3,P_WARNING,swLogPrintf("CEDR , not support UP -> CP now ");
563200,1153550336,0,0,PS1,DR,CedrProcDrPdcpDlNonIpDataIndIsrSig_1,P_ERROR,swLogPrintf("EPS ID: %d , no such bearer info , can ' t FWD NON IP pkg ");
563200,1153552384,0,0,PS1,DR,CedrSetNetifFastChkInfo_ppp_1,P_SIG,swLogPrintf("CEDR , BR: %d , set PPP fast check info ");
563200,1153554432,0,0,PS1,DR,CedrSetNetifFastChkInfo_eth_1,P_SIG,swLogPrintf("CEDR , BR: %d , set ETH fast check info ");
563200,1153556480,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_cid_w_1,P_WARNING,swLogPrintf("CE DR , set eth fast path for v4v6Cid: %d , but can ' t find BR ");
563200,1153558528,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_v4cid_w_1,P_WARNING,swLogPrintf("CE DR , set eth fast path for v4Cid: %d , but can ' t find BR ");
563200,1153560576,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_v6cid_w_1,P_WARNING,swLogPrintf("CE DR , set eth fast path for v6Cid: %d , but can ' t find BR ");
563200,1153562624,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_ppp_cid_w_1,P_WARNING,swLogPrintf("CE DR , set PPP fast path for v4v6Cid: %d , but can ' t find BR ");
563200,1153564672,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_ppp_v4cid_w_1,P_WARNING,swLogPrintf("CE DR , set PPP fast path for v4Cid: %d , but can ' t find BR ");
563200,1153566720,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_ppp_v6cid_w_1,P_WARNING,swLogPrintf("CE DR , set PPP fast path for v6Cid: %d , but can ' t find BR ");
563200,1153568768,0,0,PS1,DR,CedrAnySuspendULPendingData_1,P_VALUE,swLogPrintf("CE DR , EPSID: %d , has UL pending data , but APN RATE CTRL ");
563200,1153570816,0,0,PS1,DR,CedrAnySuspendULPendingData_2,P_VALUE,swLogPrintf("CE DR , EPSID: %d , has UL pending data , but PLMN RATE CTRL ");
563200,1153572864,0,0,PS1,DR,CedrStartRabReestDelayTimer_s_1,P_SIG,swLogPrintf("CE DR , start RabReestDelayTimer with seconds: %d ");
563200,1153574912,0,0,PS1,DR,CedrStartRabReestDelayTimer_w_1,P_WARNING,swLogPrintf("CE DR , RabReestDelayTimer is already started , rabEstProc: %d , not need to restart ");
563200,1153579007,0,0,PS1,DR,CedrProcRabReestDelayTimerExpiry_info_1,P_INFO,swLogPrintf("CE DR , RabReestDelayTimer expiry ");
563200,1153579008,0,0,PS1,DR,CedrProcRabReestDelayTimerExpiry_w_1,P_WARNING,swLogPrintf("CE DR , RAB re-est proc: %d , not right ");
563200,1153583103,0,0,PS1,DR,CedrProcRabReestDelayTimerExpiry_trans_up_1,P_SIG,swLogPrintf("CE DR , CP->UP , trigger RAB re-est ");
563200,1153583360,0,0,PS1,DR,CedrAllocDlCpDataMem_1,P_VALUE,swLogPrintf("EPS: %d , configed ROHC , alloc DL pkg buf size: %d ");
563200,1153585408,0,0,PS1,DR,CedrDlCtrlPlaneDataInd_3,P_VALUE,swLogPrintf("CID: %d , RECV DL IP PKG , Len: %d ");
563200,1153587200,0,0,PS1,DR,CedrDlCtrlPlaneDataInd_4,P_WARNING,swLogPrintf("CID: %d , TCPIP RECV DL IP PKG ; FAIL ");
563200,1153589504,0,0,PS1,DR,CedrDlCtrlPlaneDataInd_5,P_VALUE,swLogPrintf("CID: %d , RECV DL NON IP PKG , Len: %d ");
563200,1153591296,0,0,PS1,DR,CedrDlUserPlaneDataIndIsr_1,P_ERROR,swLogPrintf("EPS ID: %d , no such bearer info , can ' t FWD this UP DL pkg ");
563200,1153593856,0,0,PS1,DR,CedrDlUserPlaneDataIndIsr_2,P_VALUE,swLogPrintf("CID: %d , RECV DL IP PKG via UP , pkgNum: %d , totalLen: %d ");
563200,1153595392,0,0,PS1,DR,CedrUlPkgListDataReq_1,P_WARNING,swLogPrintf("No EPS bearer found for CID: %d , free all UL pkgs ");
563200,1153597440,0,0,PS1,DR,CedrUlPkgListDataReq_2,P_VALUE,swLogPrintf("EpsId: %d , need to do Rate Ctrl , or TFT , just FWD to CEDR ");
563200,1153600000,0,0,PS1,DR,CedrUlPkgListDataReq_3,P_VALUE,swLogPrintf("EpsId: %d , via CP , but bearer suspend: %d , or RAB re-est proc: %d , just FWD UL data to CEDR ");
563200,1153601536,0,0,PS1,DR,CedrUlPkgListDataReqSort_no_br_1,P_WARNING,swLogPrintf("No EPS bearer found for CID: %d , free all UL pkgs ");
563200,1153603584,0,0,PS1,DR,CedrUlPkgListDataReqSort_2,P_VALUE,swLogPrintf("EpsId: %d , need to do Rate Ctrl , or TFT , just FWD to CEDR ");
563200,1153606144,0,0,PS1,DR,CedrUlPkgListDataReqSort_3,P_VALUE,swLogPrintf("EpsId: %d , via CP , but bearer suspend: %d , or RAB re-est proc: %d , just FWD UL data to CEDR ");
563200,1153607936,0,0,PS1,DR,CedrUlPkgListDataReqFromLwip_1,P_VALUE,swLogPrintf("CID: %d , SEND UL IP PKG list , total Len: %d ");
563200,1153610240,0,0,PS1,DR,CedrUlPkgListDataReqSortFromFast_1,P_VALUE,swLogPrintf("CID: %d , UL fast path SEND UL IP PKG list , shortTotalLen: %d , longTotalLen: %d ");
563200,1153611776,0,0,PS1,DR,CedrOneUlPkgDataReq_1,P_ERROR,swLogPrintf("No EPS bearer found for CID: %d , free this one UL pkg ");
563200,1153613824,0,0,PS1,DR,CedrOneUlPkgDataReq_2,P_ERROR,swLogPrintf("CID: %d , UL data request via CP , but bearer is via UP , failed ");
563200,1153616128,0,0,PS1,DR,CedrOneUlPkgDataReq_3,P_VALUE,swLogPrintf("CID: %d , SEND UL ONE PKG , Len: %d ");
563200,1153617920,0,0,PS1,DR,CedrUpdateTftPacketFilterlist_nobr_e_1,P_ERROR,swLogPrintf("CE DR , CID: %d , can ' t find pBr , can ' t update TFT ");
563200,1153620224,0,0,PS1,DR,CedrUpdateTftPacketFilterlist_nobr_e_2,P_ERROR,swLogPrintf("CE DR , dedicated BR: %d , can ' t find linked default BR: %d , can ' t update TFT ");
563200,1153622016,0,0,PS1,DR,CedrProcBearerActivateIndSig_1,P_VALUE,swLogPrintf("EpsId: %d , is NON-IP type ");
563200,1153624320,0,0,PS1,DR,CedrProcBearerActivateIndSig_linked_1,P_ERROR,swLogPrintf("CE DR , EpsId: %d , is dedicated bearer , but linked EPS ID: %d , is not right ");
563200,1153626368,0,0,PS1,DR,CedrProcBearerActivateIndSig_linked_2,P_ERROR,swLogPrintf("CE DR , EpsId: %d , is dedicated bearer , but linked EPS ID: %d , can ' t find the entity ");
563200,1153628672,0,0,PS1,DR,CedrProcBearerActivateIndSig_2,P_WARNING,swLogPrintf("EpsId: %d , config ApnRateCtrl , but time unit is %d , maxUlRate is %d , cancel ApnRateCtrl! ");
563200,1153630464,0,0,PS1,DR,CedrProcBearerActivateIndSig_3,P_WARNING,swLogPrintf("EpsId: %d , config ApnExceptRateCtrl , but time unit ( %d ) is UNRESTRICTED ");
563200,1153632256,0,0,PS1,DR,CedrProcBearerActivateIndSig_4,P_VALUE,swLogPrintf("EpsId: %d , configed ROHC ");
563200,1153634816,0,0,PS1,DR,CedrProcBearerModifyIndSig_1,P_WARNING,swLogPrintf("EpsId: %d , modify ApnRateCtrl , but time unit is %d , maxUlRate is %d , cancel ApnRateCtrl! ");
563200,1153636608,0,0,PS1,DR,CedrProcBearerDeactivateIndSig_1,P_WARNING,swLogPrintf("EPSID: %d , deactived , but DRB: %d is not released , pending free the bearer ");
563200,1153638656,0,0,PS1,DR,CedrProcBearerResumeIndSig_suspend,P_INFO,swLogPrintf("CE DR , bearer is not suspended , with rrcRelAndSuspend is %d , anyDrbEst is %d ");
563200,1153642495,0,0,PS1,DR,CedrProcBearerResumeIndSig_s_1,P_SIG,swLogPrintf("CE DR , RAB re-est wait for resume , try check still any UL PDU pending ");
563200,1153644543,0,0,PS1,DR,CedrProcBearerResumeIndSig_w_1,P_WARNING,swLogPrintf("CE DR , BR resume , but RAB need re-est later , retry re-est after delay timer ");
563200,1153646591,0,0,PS1,DR,CedrProcBearerResumeIndSig_s_up_1,P_SIG,swLogPrintf("CE DR , BR resume , CP->UP is pending , trigger RAB re-est ");
563200,1153648639,0,0,PS1,DR,CedrProcDrReestablishRspSig_w_2,P_WARNING,swLogPrintf("CE DR , RAB re-est succ , but DRB not setup , abnormal , start a delay retry timer ");
563200,1153648896,0,0,PS1,DR,CedrProcDrReestablishRspSig_w_1,P_WARNING,swLogPrintf("CE DR , DRB ested: %d , or rabEstProc succ: %d , but CemmDrReestablishRsp not succ , not right ");
563200,1153650944,0,0,PS1,DR,CedrProcDrReestablishRspSig_trans_up_w_1,P_WARNING,swLogPrintf("CE DR , Rab re-est failed , cause: %d , already try: %d times , tansfer to UP failed ");
563200,1153652736,0,0,PS1,DR,CedrProcDrReestablishRspSig_retry_discard_1,P_WARNING,swLogPrintf("CE DR , RAB re-est more times: %d , still failed , free all pending UL data ");
563200,1153654784,0,0,PS1,DR,CedrProcDrReestablishRspSig_retry_discard_2,P_WARNING,swLogPrintf("CE DR , free all EpsId: %d , pending data ");
563200,1153658879,0,0,PS1,DR,CedrProcDrReestablishRspSig_delay_1,P_SIG,swLogPrintf("CE DR , Rab re-est failed , need start a dealy timer ");
563200,1153660927,0,0,PS1,DR,CedrProcDrReestablishRspSig_wait_resume_1,P_SIG,swLogPrintf("CE DR , Rab re-est failed , need wait for resume ");
563200,1153662975,0,0,PS1,DR,CedrProcDrReestablishRspSig_wait_resume_2,P_WARNING,swLogPrintf("CE DR , Rab re-est failed , need wait for resume , but bearer not suspended in DR , here start a a retry timer ");
563200,1153662976,0,0,PS1,DR,CedrProcDrReestablishRspSig_unknown_1,P_WARNING,swLogPrintf("CE DR , Rab re-est failed , with unknown cause: %d , start a dealy timer ");
563200,1153665024,0,0,PS1,DR,CedrDrbSetupReq_S_1,P_SIG,swLogPrintf("CE DR , RAB re-est wait for resume , or retry later: %d , but DRB setup , change to EST SUCC ");
563200,1153667328,0,0,PS1,DR,CedrDrbSetupReq_1,P_VALUE,swLogPrintf("CE DR , EPSID:%d , DRB: %d , configed ROHC ");
563200,1153669632,0,0,PS1,DR,CedrDrbConfigReq_1,P_VALUE,swLogPrintf("DR , DRBID: %d , EPSID: %d , LCID: %d , config not changed ");
563200,1153671424,0,0,PS1,DR,CedrDrbReestablishReq_1,P_VALUE,swLogPrintf("CE DR , epsId: %d , DRB: %d , RRC re-establishment , need to reset ROHC ");
565248,1157629952,0,0,PS1,CERRC,CerrcUpdateReleaseVersion_errRel,P_ERROR,swLogPrintf("Unsupport Release Version ( %d ) ! ! ");
565248,1157632256,0,0,PS1,CERRC,CerrcUpdateReleaseVersion_rel,P_INFO,swLogPrintf("Modify Release Version from %e<AsReleaseType> to %e<AsReleaseType>! ");
565248,1157634048,0,0,PS1,CERRC,CerrcUpdateUeCategory_Cat1,P_ERROR,swLogPrintf("Unsupport Category ( %d ) ! ! ");
565248,1157636608,0,0,PS1,CERRC,CerrcUpdateUeCategory_Cat,P_INFO,swLogPrintf("Modify UE Category from %e<UeCategoryType> to %e<UeCategoryType> , asRelease is %e<AsReleaseType>! ");
565248,1157638912,0,0,PS1,CERRC,CerrcFillIntraNcellDBIntoStatusCnf_d1,P_INFO,swLogPrintf("QENG Intra phyCellId = %d , rsrp = %d , rsrq = %d , srxlev = %d ");
565248,1157640960,0,0,PS1,CERRC,CerrcFillInterNcellDBIntoStatusCnf_d1,P_INFO,swLogPrintf("QENG InterFreq = %ld , phyCellId = %d , rsrp = %d , rsrq = %d ");
565248,1157643008,0,0,PS1,CERRC,CerrcFillSib5InterFreqIntoStatusCnf_d1,P_INFO,swLogPrintf("QENG InterFreq = %ld , phyCellId = %d , rsrp = %d , rsrq = %d ");
565248,1157644288,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_meas,P_WARNING,swLogPrintf("Modify disableNCellMeas to ( %d ) ! ! ");
565248,1157646336,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_abc,P_WARNING,swLogPrintf("Modify enableABCheck to ( %d ) ! ! ");
565248,1157648384,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_DeltaP,P_WARNING,swLogPrintf("The relaxMonitorDeltaP ( %d ) is out of range , set it to MAX value 15 ! ");
565248,1157650432,0,0,PS1,CERRC,CerrcHandleCcmEventStatisReq_1,P_VALUE,swLogPrintf("Unexpected set parameter type: %e<CcmEventStatisReqType> ");
565248,1157652480,0,0,PS1,CERRC,CerrcGetBandIndexFromDlEarfcn_invalid,P_INFO,swLogPrintf("EARFCN ( %d ) is not belonging to any band !! ");
565248,1157654528,0,0,PS1,CERRC,CerrcGetBandIndexFromBand_invalid,P_INFO,swLogPrintf("BAND ( %d ) is not supported !! ");
565248,1157656576,0,0,PS1,CERRC,CerrcGetBandFromDlEarfcn_invalid,P_INFO,swLogPrintf("EARFCN ( %d ) is not belonging to any supported RF band !! ");
565248,1157658624,0,0,PS1,CERRC,CerrcCheckIfBandSupported_false,P_INFO,swLogPrintf("Band ( %d ) is not supported !! ");
565248,1157660928,0,0,PS1,CERRC,CerrcCheckIfDlEarfcnSupportedByMFBI_true,P_INFO,swLogPrintf("EARFCN ( %d ) is supported by multi-Bands ( %d ) !! ");
565248,1157662976,0,0,PS1,CERRC,CerrcAddIntraFreqCellToDB_info1,P_INFO,swLogPrintf("INTRA FREQ CELL ( %d , %d ) has existed in intra neighcell DB , update its value. ");
565248,1157665024,0,0,PS1,CERRC,CerrcAddIntraFreqCellToDB_info2,P_INFO,swLogPrintf("Add INTRA FREQ CELL ( %d , %d ) into intra neighcell DB. ");
565248,1157667072,0,0,PS1,CERRC,CerrcAddIntraFreqCellToDB_info3,P_INFO,swLogPrintf("Remove the oldest cell and add INTRA FREQ CELL ( %d , %d ) into intra neighcell DB. ");
565248,1157669120,0,0,PS1,CERRC,CerrcAddInterFreqCellToDB_info1,P_INFO,swLogPrintf("INTER FREQ CELL ( %d , %d ) has existed in inter neighcell DB , update its value. ");
565248,1157671168,0,0,PS1,CERRC,CerrcAddInterFreqCellToDB_info2,P_INFO,swLogPrintf("Add INTER FREQ CELL ( %d , %d ) into inter neighcell DB. ");
565248,1157673216,0,0,PS1,CERRC,CerrcAddInterFreqCellToDB_info3,P_INFO,swLogPrintf("Remove the oldest cell and add INTER FREQ CELL ( %d , %d ) into inter neighcell DB. ");
565248,1157675520,0,0,PS1,CERRC,CerrcRefreshIntraCellsInDB_del,P_INFO,swLogPrintf("Cell ( %d , %d ) has expired %d ms , remove it from intra neighcell DB. ");
565248,1157677568,0,0,PS1,CERRC,CerrcRefreshInterCellsInDB_del,P_INFO,swLogPrintf("Cell ( %d , %d ) has expired %d ms , remove it from inter neighcell DB. ");
565248,1157679360,0,0,PS1,CERRC,CerrcRemoveInvalidSib1Info_del,P_INFO,swLogPrintf("Cell ( %d , %d ) has expired 24 hours , remove it from history SIB1 info DB ");
565248,1157683199,0,0,PS1,CERRC,CerrcCreateCellReselContext_exist,P_WARNING,swLogPrintf("CerrcCellReselectionContext already exists! ");
565248,1157683456,0,0,PS1,CERRC,CerrcProcessReselEvaluation_exit,P_INFO,swLogPrintf("Reselection evaluation is NOT avaliable due to measOngoing ( %d ) or cellLockedMode: %e<CellLockMode> ");
565248,1157686272,0,0,PS1,CERRC,CerrcCalcServCellEvalTime_time,P_INFO,swLogPrintf("coverageType %e<CerrcCoverageType> , drxCycleInMs %d ms , eDrxCycle %d s , nservTimeLength %d ms , escapeTimeLength %d s! ");
565248,1157687296,0,0,PS1,CERRC,CerrcCalcServCellEvalTime_gcf,P_INFO,swLogPrintf("Shorten the escapeTimeLength to %d s for GCF test! ");
565248,1157691391,0,0,PS1,CERRC,CerrcProcessServCellMeasInd_ptwInd,P_WARNING,swLogPrintf("ptwInd sent by L1 is changed under non-eDRX ");
565248,1157691392,0,0,PS1,CERRC,CerrcUpdateCriterionSTime_fail,P_INFO,swLogPrintf("CriterionS starts to be not fulfilled , criterionSTime ( %d ) ");
565248,1157693440,0,0,PS1,CERRC,CerrcProcessIfSCriterionFail_start,P_INFO,swLogPrintf("unsuitableStartTime ( %d ) is started!!! ");
565248,1157697535,0,0,PS1,CERRC,CerrcProcessIfSCriterionFail_stop,P_INFO,swLogPrintf("CriterionS is fulfilled again , serving cell unsuitable timer stopped!!! ");
565248,1157698304,0,0,PS1,CERRC,CerrcStoreServCellMeasInd_info,P_INFO,swLogPrintf("Serving Cell RSRP ( %d ) / RSRQ ( %d ) , after L3 filter RSRP ( %d ) / RSRQ ( %d ) ");
565248,1157701376,0,0,PS1,CERRC,CerrcStoreServCellMeasInd_end,P_VALUE,swLogPrintf("Serving CELL ( %d , %d ) : Srxlev ( %d ) , sQual ( %d ) , rank ( %d ) , qRxLevMin ( %d ) , qOffsetTemp ( %d ) , qHyst ( %d ) ");
565248,1157702400,0,0,PS1,CERRC,CerrcProcessIntraCellMeasInd_intra,P_SIG,swLogPrintf("INTRA FREQ CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1157703680,0,0,PS1,CERRC,CerrcProcessInterCellMeasInd_intra,P_WARNING,swLogPrintf("Received intra frequency ( %d ) in inter meas , skip it ! ");
565248,1157706496,0,0,PS1,CERRC,CerrcProcessInterCellMeasInd_inter,P_SIG,swLogPrintf("INTER FREQ CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1157707776,0,0,PS1,CERRC,CerrcProcessInterCellMeasInd_err,P_WARNING,swLogPrintf("Cannot find Inter frequency ( %d ) in DB , skip it ! ");
565248,1157710848,0,0,PS1,CERRC,CerrcProcessServCellMeasInd_conn,P_SIG,swLogPrintf("CONNECTED: SERV CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) ");
565248,1157712896,0,0,PS1,CERRC,CerrcProcessServCellMeasInd_idle,P_SIG,swLogPrintf("IDLE: SERV CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) ");
565248,1157715967,0,0,PS1,CERRC,CerrcProcessServCellMeasInd_deact,P_WARNING,swLogPrintf("Received ServCellMeasInd in CERRC_DEACTIVATED! ");
565248,1157716224,0,0,PS1,CERRC,CerrcProcessCellReselSib1_s,P_INFO,swLogPrintf("Reselect Target Cell is not suitable due to criterionS fail: Srxlev ( %d ) , Squal ( %d ) : ");
565248,1157718784,0,0,PS1,CERRC,CerrcProcessCellReselNcellSysInfoInd_mismatch,P_INFO,swLogPrintf("Cell mismatch! Target Cell ( %d , %d ) but receive Cell ( %d , %d ) BCH , just ignore it! ");
565248,1157721344,0,0,PS1,CERRC,CerrcProcessCellReselectCnf_servCell,P_WARNING,swLogPrintf("CELL RESELECTION from CELL ( %d , %d ) to CELL ( %d , %d ) , TAC ( 0x%X ) -> TAC ( 0x%X ) ");
565248,1157724159,0,0,PS1,CERRC,CerrcProcessCellReselectCnf_else,P_WARNING,swLogPrintf("CephyReselectCnf: Should never enter this branch ! ");
565248,1157724416,0,0,PS1,CERRC,CerrcStartCellReselFailureRestore_bar,P_INFO,swLogPrintf("cell reselection back to source cell , barredByPlmn is %d , barredByTa is %d ");
565248,1157726720,0,0,PS1,CERRC,CerrcStartCellReselFailureRestore_entry,P_INFO,swLogPrintf("forceReselection: %d , triggerSource: %d , CellReselState: %d ");
565248,1157730303,0,0,PS1,CERRC,CerrcStartCellReselFailureRestore_error,P_ERROR,swLogPrintf("Incorrect trigger source of cell reselection ");
565248,1157730560,0,0,PS1,CERRC,CerrcHandleCephyStartRelectionInd_else,P_WARNING,swLogPrintf("Received CephyStartRelectionInd in wrong RrcState %e<CerrcState> , CsrState %e<CerrcCsrState> ");
565248,1157732352,0,0,PS1,CERRC,CerrcResetFoundCellList_else,P_WARNING,swLogPrintf("Incorrect CsrState %e<CerrcCsrState> ");
565248,1157736447,0,0,PS1,CERRC,CerrcHandlePendingActReq_1,P_INFO,swLogPrintf("Handle pending CerrcActReq. ");
565248,1157736448,0,0,PS1,CERRC,CerrcHandleCerrcActReq_invalid,P_WARNING,swLogPrintf("Received CerrcActReq with requestedPLMNValid ( %d ) or no band / freq ! ");
565248,1157738752,0,0,PS1,CERRC,CerrcHandleCerrcActReq_state,P_WARNING,swLogPrintf("Received CerrcActReq in wrong RrcState %e<CerrcState> , or RccState %e<CerrcRccState> ! ");
565248,1157740800,0,0,PS1,CERRC,CerrcHandleCerrcActReq_freqBand,P_WARNING,swLogPrintf("Received CerrcActReq with no valid numOfFreq ( %d ) and numOfBand ( %d ) ! ");
565248,1157742592,0,0,PS1,CERRC,CerrcHandleCerrcActReq_phyCellId,P_WARNING,swLogPrintf("Received CerrcActReq with no numOfFreq but valid phyCellId ( %d ) ! ");
565248,1157746687,0,0,PS1,CERRC,CerrcHandleCerrcActReq_buff1,P_INFO,swLogPrintf("Receive CerrcActReq while waiting for ecphyDeactCnf , buffer it ");
565248,1157748735,0,0,PS1,CERRC,CerrcHandleCerrcActReq_buff2,P_INFO,swLogPrintf("Receive CerrcActReq during cell selection or cell reselection , need to deact L1 first ");
565248,1157750783,0,0,PS1,CERRC,CerrcHandleCerrcActReq_err,P_ERROR,swLogPrintf("Receive CerrcActReq during NORMAL FG PLMN , but not waiting for MM response ! ");
565248,1157752831,0,0,PS1,CERRC,CerrcHandleCerrcActReq_buff3,P_INFO,swLogPrintf("Receive CerrcActReq during FG PLMN , need to deact L1 first ");
565248,1157753088,0,0,PS1,CERRC,CerrcHandleCerrcActReq_freqLock,P_WARNING,swLogPrintf("CerrcActReq: Invalid freq lock info with numOfFreq ( %d ) , numOfBand ( %d ) ");
565248,1157754880,0,0,PS1,CERRC,CerrcFillOosFreqList_lock,P_INFO,swLogPrintf("Only locked frequency ( %d ) in CerrcActInd ");
565248,1157757696,0,0,PS1,CERRC,CerrcFillOosFreqList_freq,P_INFO,swLogPrintf("CerrcFillOosFreqList: numOfFreq ( %d ) , freq [ 0 ] = %d , freq [ 1 ] = %d , freq [ 2 ] = %d ");
565248,1157761023,0,0,PS1,CERRC,CerrcFillOosFreqList_else,P_INFO,swLogPrintf("No oosFreqList in CerrcActInd , due to not performed AS cell search. ");
565248,1157761024,0,0,PS1,CERRC,CerrcSendCerrcActCnf_status,P_INFO,swLogPrintf("CerrcActCnf: actStatus %e<ActStatus> ");
565248,1157763072,0,0,PS1,CERRC,CerrcSendCerrcActInd_status,P_INFO,swLogPrintf("CerrcActInd: actStatus = %e<ActStatus> ");
565248,1157767167,0,0,PS1,CERRC,CerrcStoreInterFreqInCellSearchContext_else,P_WARNING,swLogPrintf("CerrcCellSearchContext has not been created !! ");
565248,1157769215,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_no,P_INFO,swLogPrintf("No valid last camped cell info. ");
565248,1157769984,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_cell,P_INFO,swLogPrintf("Fail to directly camp after SIB1 due to last CELL ( %d , %d ) , Current CELL ( %d , %d ) ");
565248,1157771520,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_tag,P_INFO,swLogPrintf("Fail to directly camp after SIB1 due to sysInfoValueTag change from ( %d ) to ( %d ) ");
565248,1157773568,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_numSi,P_INFO,swLogPrintf("Fail to directly camp after SIB1 due to siSchdNumInfo change from ( %d ) to ( %d ) ");
565248,1157775616,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_SiList,P_INFO,swLogPrintf("Fail to directly camp after SIB1 due to sysInfoValueTagSIList change from ( 0x%x ) to ( 0x%x ) ");
565248,1157777664,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_bitmap,P_INFO,swLogPrintf("Fail to directly camp after SIB1 due to last siValidBitmap ( 0x%x ) ! = new requiredBitmap ( 0x%x ) ");
565248,1157779456,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_24h,P_INFO,swLogPrintf("Fail to directly camp after SIB1 due to exceed 24 hours , siUpdateTime ( %d ) ");
565248,1157783551,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_true,P_INFO,swLogPrintf("Camp directly according to last camped cell info , do not request SIB2 and other SIBs ! ");
565248,1157783808,0,0,PS1,CERRC,CerrcStartSuitableCellCamp_servCell,P_WARNING,swLogPrintf("CELL SELECTION to CELL ( %d , %d ) ");
565248,1157787647,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_phy,P_INFO,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to PHY reset. ");
565248,1157789695,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_bar,P_INFO,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to cell barred. ");
565248,1157791743,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_si,P_INFO,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to SI modification. ");
565248,1157793791,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_suitable,P_INFO,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to cell is NOT suitable. ");
565248,1157794304,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_criterionS,P_VALUE,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to criterionS fail , Srxlev ( %d ) , Squal ( %d ) or missing SIB1 / 2 siValidBitmap ( 0x%x ) ");
565248,1157795840,0,0,PS1,CERRC,CerrcSendCephyCellSearchReq_lock,P_WARNING,swLogPrintf("Start locked frequency cell search , mode %e<CellLockMode> ");
565248,1157799168,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_cell,P_SIG,swLogPrintf("CELL FOUND: cellDetected ( %d ) , highLevelDone ( %d ) , CELL ( %d , %d ) , RSRP ( %d ) , RSRQ ( %d ) ");
565248,1157801983,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_ret,P_INFO,swLogPrintf("Receive CephyCellSearchCnf while waiting for CephyDeactCnf ");
565248,1157801984,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_csr,P_WARNING,swLogPrintf("Received CephyCellSearchCnf in wrong CsrState %e<CerrcCsrState> ");
565248,1157804032,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_rcc,P_WARNING,swLogPrintf("Received CephyCellSearchCnf in wrong RccState %e<CerrcRccState> ");
565248,1157806080,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_rrc,P_WARNING,swLogPrintf("Received CephyCellSearchCnf in wrong RrcState %e<CerrcState> ");
565248,1157808128,0,0,PS1,CERRC,CerrcStartLeaveConnCellSearch_redirect,P_SIG,swLogPrintf("Redirect to EARFCN ( %d ) ");
565248,1157810176,0,0,PS1,CERRC,CerrcProcessCellSearchNoCellFound_ics,P_INFO,swLogPrintf("No cell found with icsType %e<CerrcCellSearchType> ! ");
565248,1157813504,0,0,PS1,CERRC,CerrcProcessReestSearchNoCellFound_suppBand,P_INFO,swLogPrintf("Total support numOfBand ( %d ) , band [ 0 ] = %d , band [ 1 ] = %d , band [ 2 ] = %d , band [ 3 ] = %d , band [ 4 ] = %d ");
565248,1157815040,0,0,PS1,CERRC,CerrcProcessReestSearchNoCellFound_band,P_SIG,swLogPrintf("%d th round of band search during RRC re-establishment , numOfBand ( %d ) , band [ 0 ] = %d , band [ 1 ] = %d ");
565248,1157817088,0,0,PS1,CERRC,CerrcUpdateGuti_gummei,P_INFO,swLogPrintf("gutiElemType is GUTI_GUMMEI , MMEC ( 0x%x ) , MMEGI ( 0x%x ) , MCC ( 0x%x ) , MNC ( 0x%x ) ");
565248,1157818624,0,0,PS1,CERRC,CerrcUpdateGuti_stmsi,P_INFO,swLogPrintf("gutiElemType is GUTI_STMSI , MMEC ( 0x%x ) , mTMSI ( 0x%x ) ");
565248,1157822463,0,0,PS1,CERRC,CerrcUpdateGuti_invalid,P_INFO,swLogPrintf("gutiElemType is GUTI_INVALID ");
565248,1157822464,0,0,PS1,CERRC,CerrcUpdateSimInfo_ac,P_SIG,swLogPrintf("UE accessClass is 0x%X , AC15|AC14|AC13...AC2|AC1|AC0 ");
565248,1157826559,0,0,PS1,CERRC,CerrcUpdateSimInfo_len0,P_WARNING,swLogPrintf("simInfoPresent is TRUE , but lengthOfImsi is 0 ! ");
565248,1157826560,0,0,PS1,CERRC,CerrcUpdateNasExtDrxConfigNB_invalid,P_ERROR,swLogPrintf("Invalid eDrx cycle: %d ");
565248,1157828864,0,0,PS1,CERRC,CerrcUpdateNasExtDrxConfigNB_end,P_INFO,swLogPrintf("Setup eDRX , eDrxCycle ( %d ) , ptwLength ( %d ) ");
565248,1157830656,0,0,PS1,CERRC,CerrcUpdateNasExtDrxConfig_invalid,P_ERROR,swLogPrintf("Invalid eDrx cycle: %d ");
565248,1157832960,0,0,PS1,CERRC,CerrcUpdateNasExtDrxConfig_end,P_INFO,swLogPrintf("Setup eDRX , eDrxCycle ( %d ) , ptwLength ( %d ) ");
565248,1157836799,0,0,PS1,CERRC,CerrcReleaseExtDrxConfig_end,P_INFO,swLogPrintf("Release eDRX configuration ! ");
565248,1157837824,0,0,PS1,CERRC,CerrcHandleCerrcNasInfoUpdateReq_plmn,P_INFO,swLogPrintf("Update requestedPlmn from ( %X-%X ) to ( %X-%X ) , current requestedPlmnValid ( %d ) ");
565248,1157839104,0,0,PS1,CERRC,CerrcHandleCerrcSelectedPlmnInd_update,P_WARNING,swLogPrintf("Update selectedPlmnIdx from ( %d ) to ( %d ) ! ");
565248,1157841152,0,0,PS1,CERRC,CerrcHandleCerrcSelectedPlmnInd_err,P_WARNING,swLogPrintf("NAS selected PLMN ( %X-%X ) is NOT included in CerrcActCnf / CerrcActInd! ");
565248,1157844991,0,0,PS1,CERRC,CerrcCreateSourceCell_exist,P_WARNING,swLogPrintf("SourceCell already exists! ");
565248,1157845248,0,0,PS1,CERRC,CerrcStoreLastCampCellInfo_fail,P_ERROR,swLogPrintf("Fail to store last camp cell info due to CsrState %e<CerrcCsrState> , siValidBitmap ( 0x%x ) ");
565248,1157847040,0,0,PS1,CERRC,CerrcEscapeServingCell_entry,P_INFO,swLogPrintf("Escape current serving cell , needReselEval ( %d ) ! ");
565248,1157849088,0,0,PS1,CERRC,CerrcCalcExtendDrxCycle_invalid,P_ERROR,swLogPrintf("Invalid eDrx cycle: %d ");
565248,1157851136,0,0,PS1,CERRC,CerrcCheckIfRepeatedCell_else,P_WARNING,swLogPrintf("Received CephyCellSearchCnf in wrong CsrState %e<CerrcCsrState> ");
565248,1157853184,0,0,PS1,CERRC,CerrcCheckIfRepeatedCell_num,P_WARNING,swLogPrintf("Already found more than %d cells ! ");
565248,1157855488,0,0,PS1,CERRC,CerrcCheckIfRepeatedCell_repeated,P_INFO,swLogPrintf("PHY already reported this cell ( %d , %d ) ");
565248,1157857280,0,0,PS1,CERRC,CerrcUpdateTSearchDaltaP_default2,P_WARNING,swLogPrintf("Wrong DRX cycle length %d is configured. ");
565248,1157859840,0,0,PS1,CERRC,CerrcUpdateTSearchDaltaP_value,P_INFO,swLogPrintf("eDrxPresent ( %d ) , eDRXAllowed ( %d ) , tSearchDeltaP %d seconds. ");
565248,1157861888,0,0,PS1,CERRC,CerrcUpdateHibMeasRsrpThreshold_end,P_WARNING,swLogPrintf("Update hibernate wake up rmRsrpThreshold ( %d ) to ( %d ) , nRsrpThreshold ( %d ) . ");
565248,1157864192,0,0,PS1,CERRC,CerrcCheckIfRMCriterionFulfilled_false,P_VALUE,swLogPrintf("s-SearchDeltaP ( %d ) , bRMCriterionFulfilled ( %d ) , bIntraMeasRmEnable ( %d ) , bInterMeasRmEnable ( %d ) ");
565248,1157865984,0,0,PS1,CERRC,CerrcUpdateSrxlevRef_entry,P_VALUE,swLogPrintf("Current Srxlev ( %d ) , previous SrxlevRef ( %d ) , bRMCriterionFulfilled ( %d ) ");
565248,1157867520,0,0,PS1,CERRC,CerrcUpdateSrxlevRef_update,P_VALUE,swLogPrintf("Update SrxlevRef to current Srxlev ( %d ) ");
565248,1157870336,0,0,PS1,CERRC,CerrcUpdateCriterionRMTime_succ,P_VALUE,swLogPrintf("Update relaxed monitoring SUCCESS time: s-SearchDeltaP ( %d ) , Srxlev ( %d ) , SrxlevRef ( %d ) , rMCriterionSuccTime ( %d ) ");
565248,1157872384,0,0,PS1,CERRC,CerrcUpdateCriterionRMTime_fail,P_VALUE,swLogPrintf("Update relaxed monitoring FAIL time: s-SearchDeltaP ( %d ) , Srxlev ( %d ) , SrxlevRef ( %d ) , rMCriterionFailTime ( %d ) ");
565248,1157874176,0,0,PS1,CERRC,CerrcCalcSCriterion_end,P_INFO,swLogPrintf("Pcompensation ( %d ) , Qoffsetauthorization ( %d ) , Qoffsettemp ( %d ) ");
565248,1157877759,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_sDeltaP,P_INFO,swLogPrintf("sSearchDeltaP is 0 due to no SIB3! ");
565248,1157878016,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_disNcell,P_WARNING,swLogPrintf("bCellLocked ( %d ) or bDisableNCellMeas ( %d ) , only care about CriterionS ");
565248,1157880832,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_rsrp,P_WARNING,swLogPrintf("IDLE Meas Threshold: Intra-Threshold ( %d ) , Inter-Threshold ( %d ) , sIntraSearchP ( %d ) , sNonIntraSearchP ( %d ) , nRsrpThreshold ( %d ) ");
565248,1157882880,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_rsrq,P_WARNING,swLogPrintf("IDLE Meas RSRQ Threshold: Intra-Threshold ( %d ) , Inter-Threshold ( %d ) , sIntraSearchQ ( %d ) , sNonIntraSearchQ ( %d ) , nRsrqThreshold ( %d ) ");
565248,1157885951,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_qQualMin,P_WARNING,swLogPrintf("qQualMin is absent in SIB1 ! Hence , RSRQ is NOT taken into account for any threshold ! ");
565248,1157887999,0,0,PS1,CERRC,CerrcSendCephyCellMeasReq_inter,P_ERROR,swLogPrintf("interFreqMeasBitmap is not set correctly! ");
565248,1157890047,0,0,PS1,CERRC,CerrcSendCephyCellMeasStopReq_inter,P_ERROR,swLogPrintf("interFreqMeasBitmap is not set correctly! ");
565248,1157890560,0,0,PS1,CERRC,CerrcCheckCellReserved4OperatorUse_rsvdAc11_15,P_INFO,swLogPrintf("PLMN ( %X-%X ) is ' reserved ' for operator use , and UE ' s accessClass ( 0x%x ) , which is assigned to 11 or 15 but NOT in their HPLMN / EHPLMN ");
565248,1157892608,0,0,PS1,CERRC,CerrcCheckCellReserved4OperatorUse_rsvd,P_INFO,swLogPrintf("PLMN ( %X-%X ) is ' reserved ' for operator use , and UE ' s accessClass ( 0x%x ) , which is NOT assigned to Access Class 11 or 15 ");
565248,1157894912,0,0,PS1,CERRC,CerrcGetPlmnIndex_plmn,P_INFO,swLogPrintf("PLMN ( %X-%X ) is not EPLMN or HPLMN of the Requested PLMN ( %X-%X ) . ");
565248,1157898239,0,0,PS1,CERRC,CerrcGetPlmnIndex_noPlmn,P_WARNING,swLogPrintf("No valid requestedPLMN ");
565248,1157898752,0,0,PS1,CERRC,CerrcGetTaStatus_forbidden,P_INFO,swLogPrintf("CerrcGetTaStatus: FORBIDDEN_TA_FOR_ROAMING , PLMN ( %X-%X ) , TAC ( %X ) ");
565248,1157900800,0,0,PS1,CERRC,CerrcGetTaStatus_block,P_INFO,swLogPrintf("CerrcGetTaStatus: BLOCKED_TA , PLMN ( %X-%X ) , TAC ( %X ) ");
565248,1157903104,0,0,PS1,CERRC,CerrcGetTaStatus_not,P_INFO,swLogPrintf("CerrcGetTaStatus: NOT_FORBIDDEN_TA! PLMN ( %X-%X ) , TAC ( %X ) , TA type %e<CurrentTaiType> ");
565248,1157904384,0,0,PS1,CERRC,CerrcGetCellAccessInfoFromSib1_index,P_INFO,swLogPrintf("Get accessInfo from cellAccessRelatedInfoList-r14 [ %d ] ");
565248,1157906432,0,0,PS1,CERRC,CerrcGetCellAccessInfoFromStoredSib1_index,P_INFO,swLogPrintf("Get accessInfo from cellAccessRelatedInfoList-r14 [ %d ] ");
565248,1157908480,0,0,PS1,CERRC,CerrcGetCellBarStatusFromSib1_fbi,P_INFO,swLogPrintf("Cell is barred due to freqBandIndicator ( %d ) not supported ! ");
565248,1157912575,0,0,PS1,CERRC,CerrcGetCellBarStatusFromSib1_reserved,P_INFO,swLogPrintf("Cell is barred due to all PLMN in SIB1 is ' resverd ' for operator and no valid AC11 / AC15! ");
565248,1157914623,0,0,PS1,CERRC,CerrcGetCellBarStatusFromSib1_bar,P_INFO,swLogPrintf("Cell is barred due to SIB1->cellBarred is TRUE! ");
565248,1157915648,0,0,PS1,CERRC,CerrcGetCellStatusFromSib1_status,P_SIG,swLogPrintf("CELL ( %d , %d ) , cellStatus %e<CerrcCellStatus> , selectedPlmnIdx ( %d ) , band ( %d ) ");
565248,1157916928,0,0,PS1,CERRC,CerrcCheckCampAvailable_s,P_INFO,swLogPrintf("Cell is not suitable due to criterionS fail: Srxlev ( %d ) , Squal ( %d ) : ");
565248,1157919488,0,0,PS1,CERRC,CerrcRemoveTimeoutBarredCell_rmv,P_INFO,swLogPrintf("Unbarred Cell ( %d , %d ) due to timeout , barCause ( %d ) , barTimeLength ( %d ) in seconds ");
565248,1157921536,0,0,PS1,CERRC,CerrcAddCellToBarredList_notUpdate,P_INFO,swLogPrintf("Cell ( %d , %d ) has already existed in barredList due to cause %e<CerrcCellBarredCause> , barTimeLength ( %d ) , do not update it. ");
565248,1157923584,0,0,PS1,CERRC,CerrcAddCellToBarredList_entry,P_INFO,swLogPrintf("Add new barred cell ( %d , %d ) due to cause %e<CerrcCellBarredCause> , barTimeLength ( %d ) in seconds ");
565248,1157926911,0,0,PS1,CERRC,CerrcAddCellToBarredList_full,P_WARNING,swLogPrintf("The barred cell array is full! ");
565248,1157927680,0,0,PS1,CERRC,CerrcAddOverlappedCellToBarredList_entry,P_INFO,swLogPrintf("Barred the overlapped cell ( %d , %d ) due to cause %e<CerrcCellBarredCause> , barTimeLength ( %d ) in seconds ");
565248,1157929984,0,0,PS1,CERRC,CerrcCheckIfCellBarred_true,P_INFO,swLogPrintf("Cell ( %d , %d ) is barred due to cause %e<CerrcCellBarredCause> , barStartTime ( %d ) , currentTime ( %d ) ");
565248,1157931264,0,0,PS1,CERRC,CerrcRecordAndRmvLocalBarredCells_full,P_INFO,swLogPrintf("freqList [ ] is full , numOfFreq ( %d ) > = maxNumOfFreq ( %d ) ");
565248,1157933568,0,0,PS1,CERRC,CerrcRecordAndRmvLocalBarredCells_rmv,P_VALUE,swLogPrintf("Unbarred Cell ( %d , %d ) due to no other cell was found , barCause ( %d ) ");
565248,1157935872,0,0,PS1,CERRC,CerrcUnbarredCellWithCause_rmv,P_INFO,swLogPrintf("Unbarred Cell ( %d , %d ) with barCause ( %d ) before barTimeLength ( %d ) expired ");
565248,1157937920,0,0,PS1,CERRC,CerrcUnbarredCellWithSpecificCell_rmv,P_INFO,swLogPrintf("Unbarred Specific Cell ( %d , %d ) with barCause ( %d ) before barTimeLength ( %d ) expired ");
565248,1157939968,0,0,PS1,CERRC,CerrcActivateCellQoffsetTemp_entry,P_INFO,swLogPrintf("Apply cell ( %d , %d ) QoffsetTemp ( %d ) for %d seconds ");
565248,1157943295,0,0,PS1,CERRC,CerrcActivateCellQoffsetTemp_full,P_WARNING,swLogPrintf("The cell QoffsetTemp array is full! ");
565248,1157943552,0,0,PS1,CERRC,CerrcAddCellToVisitedCellList_exist,P_INFO,swLogPrintf("Cell ( %d , %d ) is already in the visited cell list ");
565248,1157946112,0,0,PS1,CERRC,CerrcAddCellToVisitedCellList_old,P_INFO,swLogPrintf("Remove oldest Cell ( %d , %d ) , PLMN ( %X-%X ) in the visited cell list ");
565248,1157947648,0,0,PS1,CERRC,CerrcAddCellToVisitedCellList_add,P_INFO,swLogPrintf("Add Cell ( %d , %d ) in the visited cell list ");
565248,1157951487,0,0,PS1,CERRC,CerrcAddCellToVisitedCellList_full,P_WARNING,swLogPrintf("The visited cell array is full ! ");
565248,1157951744,0,0,PS1,CERRC,CerrcCheckIfCellInVisitedCellList_true,P_INFO,swLogPrintf("Cell ( %d , %d ) is found in visited cell list ");
565248,1157955583,0,0,PS1,CERRC,CerrcDetectMobilityState_high,P_INFO,swLogPrintf("Enter High-mobility state! ");
565248,1157957631,0,0,PS1,CERRC,CerrcDetectMobilityState_medium,P_INFO,swLogPrintf("Enter Medium-mobility state! ");
565248,1157959679,0,0,PS1,CERRC,CerrcDetectMobilityState_normal,P_INFO,swLogPrintf("Enter Normal-mobility state! ");
565248,1157959680,0,0,PS1,CERRC,CerrcInMobilityState_conn,P_INFO,swLogPrintf("UE is in mobility state %e<CerrcMobilityState> in RRC_CONNECTED state. ");
565248,1157961728,0,0,PS1,CERRC,CerrcInMobilityState_idle,P_INFO,swLogPrintf("UE is in mobility state %e<CerrcMobilityState> in RRC_IDLE state. ");
565248,1157965823,0,0,PS1,CERRC,CerrcAddFreqToDeprioritisationList_full,P_WARNING,swLogPrintf("Already received 8 deprioritisationReq for different frequency! ");
565248,1157966080,0,0,PS1,CERRC,CerrcClearEscapeCellFromList_info,P_INFO,swLogPrintf("Delete carrierFreq ( %d ) , phyCellId ( %d ) from escapeCellList. ");
565248,1157968128,0,0,PS1,CERRC,CerrcRemoveTimeoutEscapeCell_info,P_INFO,swLogPrintf("Remove carrierFreq ( %d ) , phyCellId ( %d ) from escapeCellList for over time. ");
565248,1157970176,0,0,PS1,CERRC,CerrcAddCelIntoEscapeCellList_info1,P_INFO,swLogPrintf("Move the escape cell ( %d , %d ) into BarredCellList. ");
565248,1157972480,0,0,PS1,CERRC,CerrcAddCelIntoEscapeCellList_info2,P_INFO,swLogPrintf("Update the escape cell ( %d , %d ) startTime and pos ( %d ) . ");
565248,1157974528,0,0,PS1,CERRC,CerrcAddCelIntoEscapeCellList_info3,P_INFO,swLogPrintf("Replace escapeCellList oldest one with the escape cell ( %d , %d ) , pos ( %d ) . ");
565248,1157976576,0,0,PS1,CERRC,CerrcAddCelIntoEscapeCellList_info4,P_INFO,swLogPrintf("Add the escape cell ( %d , %d ) into EscapeCellList , pos ( %d ) . ");
565248,1157978368,0,0,PS1,CERRC,CerrcHandlePhyEscapeCell_entry,P_INFO,swLogPrintf("Handle new escape cell ( %d , %d ) ");
565248,1157980416,0,0,PS1,CERRC,CerrcHandlePhyEscapeCell_info1,P_INFO,swLogPrintf("Add new escape cell ( %d , %d ) into EscapeCellList. ");
565248,1157982464,0,0,PS1,CERRC,CerrcHandlePhyEscapeCell_info2,P_INFO,swLogPrintf("The escape cell ( %d , %d ) just inserted into EscapeCellList , ingore it. ");
565248,1157986303,0,0,PS1,CERRC,CerrcCreateDeactProcContext_exist,P_WARNING,swLogPrintf("CerrcDeactProcContext already exists! ");
565248,1157988351,0,0,PS1,CERRC,CerrcHandlePendingDeactReq_1,P_INFO,swLogPrintf("Handle pending CerrcDeactReq. ");
565248,1157988352,0,0,PS1,CERRC,CerrcResetSleep2ContextToDeact_meas,P_INFO,swLogPrintf("CERRC Intra / Inter meas is ongoing ! measAction ( 0x%X ) ");
565248,1157990656,0,0,PS1,CERRC,CerrcResetSleep2ContextToDeact_MDT,P_INFO,swLogPrintf("VarLogMeasConfig ( %d ) or VarLogMeasReport ( %d ) exists ! ");
565248,1157994495,0,0,PS1,CERRC,CerrcStoreInterFreqInDeactContext_else,P_WARNING,swLogPrintf("CerrcDeactProcContext has not been created !! ");
565248,1157994496,0,0,PS1,CERRC,CerrcDeactiveProcess_cause,P_INFO,swLogPrintf("CerrcDeactiveProcess: cause %e<DeactiveCause> ");
565248,1157996544,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_cause,P_INFO,swLogPrintf("CerrcDeactReq: cause %e<CerrcDeactReason> ");
565248,1158000639,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_idle,P_INFO,swLogPrintf("Received CerrcDeactReq in CERRC_IDLE ! ");
565248,1158000640,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_rccState,P_WARNING,swLogPrintf("Received CerrcDeactReq while RccState is %e<CerrcRccState> ! ");
565248,1158004735,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_conn,P_INFO,swLogPrintf("Received CerrcDeactReq in CERRC_CONNECTED ! ");
565248,1158006783,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_state,P_ERROR,swLogPrintf("Received CerrcDeactReq in CERRC_INVALID_STATE ! ");
565248,1158007552,0,0,PS1,CERRC,CerrcSendCerrcDeactCnf_end,P_INFO,swLogPrintf("CerrcDeactCnf: numOfFreq ( %d ) , freq [ 0 ] = %d , freq [ 1 ] = %d , freq [ 2 ] = %d ");
565248,1158008832,0,0,PS1,CERRC,CerrcSendCephyDeactReq_cause,P_INFO,swLogPrintf("CephyDeactReq: cause %e<DeactiveCause> ");
565248,1158010880,0,0,PS1,CERRC,CerrcHandleCephyDeactCnf_state,P_WARNING,swLogPrintf("Receive CephyDeactCnf in wrong RrcState %e<CerrcState>! ");
565248,1158012928,0,0,PS1,CERRC,CerrcHandleCephyResetInd_idle,P_INFO,swLogPrintf("Received CephyResetInd in RRC_IDLE , while RccState is %e<CerrcRccState> ! ");
565248,1158017023,0,0,PS1,CERRC,CerrcHandleCephyResetInd_conn,P_INFO,swLogPrintf("Received CephyResetInd in CERRC_CONNECTED ! ");
565248,1158017024,0,0,PS1,CERRC,CerrcHandleCephyResetInd_macReset,P_WARNING,swLogPrintf("Received CephyResetInd in CERRC_CONNECTED ! RccState %e<CerrcRccState> ");
565248,1158021119,0,0,PS1,CERRC,CerrcHandleCephyResetInd_deact,P_INFO,swLogPrintf("Received CephyResetInd in CERRC_DEACTIVATED ! ");
565248,1158023167,0,0,PS1,CERRC,CerrcHandleCephyResetInd_state,P_ERROR,swLogPrintf("Received CephyResetInd in CERRC_INVALID_STATE ! ");
565248,1158025215,0,0,PS1,CERRC,CerrcCreateAssistedLocateContext_exist,P_WARNING,swLogPrintf("pAssistedLocContext already exists! ");
565248,1158027263,0,0,PS1,CERRC,CerrcCreateAssistedLocateContext_err1,P_ERROR,swLogPrintf("CerrcCcmBasicCellListInfoReq ( BCINFO ) : reqMaxCellNum is 0 ! ");
565248,1158027264,0,0,PS1,CERRC,CerrcCreateAssistedLocateContext_err2,P_ERROR,swLogPrintf("CerrcCcmBasicCellListInfoReq ( BCINFO ) : reqMaxCellNum is %d ! ");
565248,1158031359,0,0,PS1,CERRC,CerrcCreateWifiScanContext_exist,P_WARNING,swLogPrintf("pWifiScanContext already exists! ");
565248,1158033407,0,0,PS1,CERRC,CerrcHandlePendingWifiScanReq_1,P_INFO,swLogPrintf("Handle pending CerrcWiFiScanReq. ");
565248,1158035455,0,0,PS1,CERRC,CerrcFillSCellBasicInfo_sib1,P_ERROR,swLogPrintf("No serving cell ' s SIB1 available !! ");
565248,1158036224,0,0,PS1,CERRC,CerrcStoreNCellInAssistedLocContext_add,P_INFO,swLogPrintf("Add NCELL ( %d , %d ) in context , RSRP ( %d ) , total numOfNcell ( %d ) ");
565248,1158038016,0,0,PS1,CERRC,CerrcStoreNCellInAssistedLocContext_ignore,P_INFO,swLogPrintf("Ingore NCELL ( %d , %d ) due to RSRP ( %d ) is too low and the NCELL list is full! ");
565248,1158040064,0,0,PS1,CERRC,CerrcRefreshNCellInAssistedLocContext_remove,P_INFO,swLogPrintf("Remove inter-freq NCELL ( %d , %d ) in context , new total numOfNcell ( %d ) ");
565248,1158042368,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_lockcell,P_INFO,swLogPrintf("Cell locked but sCellInfo.earfcn ( %d ) , sCellInfo.cellId ( %d ) is different from locked cell earfcn ( %d ) , cellId ( %d ) ");
565248,1158043904,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_lockfreq,P_INFO,swLogPrintf("freq locked but sCellInfo.earfcn ( %d ) is different from locked cell earfcn ( %d ) ");
565248,1158046208,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_ncell,P_INFO,swLogPrintf("CerrcCcmBasicCellListInfoCnf: sCellPresent ( %d ) , pAssistedLocContext->numOfNcell ( %d ) , pBasicCellListInfoCnf->nCellNum ( %d ) ");
565248,1158048000,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_scell1,P_INFO,swLogPrintf("CerrcCcmBasicCellListInfoCnf: only current SCELL ( %d , %d ) ");
565248,1158050048,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_scell2,P_INFO,swLogPrintf("CerrcCcmBasicCellListInfoCnf: only source SCELL ( %d , %d ) ");
565248,1158053887,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_scell3,P_ERROR,swLogPrintf("Serving cell should be exist !! ");
565248,1158055935,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_null,P_INFO,swLogPrintf("CerrcCcmBasicCellListInfoCnf: Neither SCELL nor NCELL is included !! ");
565248,1158056704,0,0,PS1,CERRC,CerrcHandleCerrcCcmBasicCellListInfoReq_deact,P_WARNING,swLogPrintf("Not under PSM state ( %d ) , or waiting for CephyDeactCnf , or there is no valid freq or band , lastCampCellCarrierFreq = %d , storedBandNum = %d , bSearchBand = %d ! ");
565248,1158058240,0,0,PS1,CERRC,CerrcSendCerrcCcmAbortBasicCellListInfoCnf_ncell,P_INFO,swLogPrintf("CerrcCcmAbortBasicCellListInfoCnf: sCellPresent ( %d ) , nCellNum ( %d ) ");
565248,1158060288,0,0,PS1,CERRC,CerrcSendCerrcCcmAbortBasicCellListInfoCnf_scell1,P_INFO,swLogPrintf("CerrcCcmAbortBasicCellListInfoCnf: only current SCELL ( %d , %d ) ");
565248,1158064127,0,0,PS1,CERRC,CerrcSendCerrcCcmAbortBasicCellListInfoCnf_scell2,P_ERROR,swLogPrintf("Serving cell should be exist !! ");
565248,1158066175,0,0,PS1,CERRC,CerrcSendCerrcCcmAbortBasicCellListInfoCnf_null,P_INFO,swLogPrintf("CerrcCcmAbortBasicCellListInfoCnf: Neither SCELL nor NCELL is included !! ");
565248,1158068223,0,0,PS1,CERRC,CerrcSendCephyBasicCellInfoReq_freq,P_ERROR,swLogPrintf("No last camped cell info when enter PSM ! ");
565248,1158069248,0,0,PS1,CERRC,CerrcSendCephyBasicCellInfoReq_psm,P_INFO,swLogPrintf("CephyBasicCellInfoReq: numOfFreq ( %d ) , freqList [ 0 ] ( %d ) , numOfBand ( %d ) , bandList [ 0 ] ( %d ) , bandList [ 1 ] ( %d ) ");
565248,1158070528,0,0,PS1,CERRC,CerrcSendCephyBasicCellInfoReq_intra,P_INFO,swLogPrintf("CephyBasicCellInfoReq: intra-freq ( %d ) , total numOfFreq ( %d ) ");
565248,1158072576,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_interFreq,P_INFO,swLogPrintf("CephyBasicCellInfoCnf: found interFreq ( %d ) , intraFreq ( %d ) ! ");
565248,1158076415,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_nocell,P_INFO,swLogPrintf("CephyBasicCellInfoCnf: no cell found ! ");
565248,1158076672,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_stop,P_INFO,swLogPrintf("CephyBasicCellInfoCnf: cellDetected ( %d ) or reported inter-freq ( %d ) NCELL ! ");
565248,1158078464,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_act,P_ERROR,swLogPrintf("Received CephyBasicCellInfoCnf in wrong ActStatus ( %d ) ! ");
565248,1158082559,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_else,P_ERROR,swLogPrintf("Received unexpected CephyBasicCellInfoCnf in CONNECTED state ! ");
565248,1158084607,0,0,PS1,CERRC,CerrcHandleCephyWiFiScanCnf_null,P_INFO,swLogPrintf("CerrcWifiScanContext is NULL ");
565248,1158085376,0,0,PS1,CERRC,CerrcHandleCephyWiFiScanCnf_end,P_INFO,swLogPrintf("Finish WiFi scan procedure due to numOfBssid ( %d ) > = reqBssidNum ( %d ) or phyScanRound ( %d ) > = maxRoundNum ( %d ) ! ");
565248,1158087168,0,0,PS1,CERRC,CerrcHandleCerrcWiFiScanReq_check1,P_WARNING,swLogPrintf("Receive CerrcWiFiScanReq in RrcState %e<CerrcState> , or RccState %e<CerrcRccState> , or PendingConnReq ( %d ) ");
565248,1158088704,0,0,PS1,CERRC,CerrcHandleCerrcWiFiScanReq_check2,P_WARNING,swLogPrintf("Receive CerrcWiFiScanReq during PLMN search , or PendingPlmnSearchReq ( %d ) ");
565248,1158091008,0,0,PS1,CERRC,CerrcHandleCerrcWiFiScanReq_buff1,P_INFO,swLogPrintf("Receive CerrcWiFiScanReq in CsrState %e<CerrcCsrState> or siRcvingBitmap ( 0x%X ) , buffer it ");
565248,1158094847,0,0,PS1,CERRC,CerrcHandleCerrcWiFiScanReq_buff2,P_INFO,swLogPrintf("Receive CerrcWiFiScanReq while waiting for ecphyDeactCnf , buffer it ");
565248,1158096895,0,0,PS1,CERRC,CerrcPmuVote_deactHib,P_INFO,swLogPrintf("CERRC vote to enter HIB state in CERRC_DEACTIVATED ! ");
565248,1158097152,0,0,PS1,CERRC,CerrcPmuVote_deactSlp2,P_INFO,swLogPrintf("CERRC vote to enter SLEEP2 state in CERRC_DEACTIVATED ! bConfigPresent ( %d ) , logMeasInfoListLength ( %d ) ");
565248,1158099456,0,0,PS1,CERRC,CerrcPmuVote_idle,P_VALUE,swLogPrintf("CERRC current measAction ( 0x%x ) , bConfigPresent ( %d ) , logMeasInfoListLength ( %d ) ");
565248,1158103039,0,0,PS1,CERRC,CerrcPmuVote_idleHib,P_INFO,swLogPrintf("CERRC vote to enter HIB state in CERRC_IDLE ! ");
565248,1158105087,0,0,PS1,CERRC,CerrcPmuVote_idleSlp2,P_INFO,swLogPrintf("CERRC vote to enter SLEEP2 state in CERRC_IDLE ! ");
565248,1158105088,0,0,PS1,CERRC,CerrcPmuDeepSlpEnterCallBack_entry,P_VALUE,swLogPrintf("Cerrc Enter Deep Sleep , the lowPowerState is %d ");
565248,1158109183,0,0,PS1,CERRC,CerrcPmuDeepSlpEnterCallBack_deact,P_INFO,swLogPrintf("Do nothing if enter Deep Sleep in CERRC_DEACTIVATED state ! ");
565248,1158109184,0,0,PS1,CERRC,CerrcPmuDeepSlpEnterCallBack_else,P_WARNING,swLogPrintf("CERRC deep sleep call back in wrong APSleepState ( %d ) ! ");
565248,1158113279,0,0,PS1,CERRC,CerrcRestoreWhenWakeUp_hib,P_INFO,swLogPrintf("CERRC wake up from HIBERNATE ! ");
565248,1158115327,0,0,PS1,CERRC,CerrcRestoreWhenWakeUp_sleep2,P_INFO,swLogPrintf("CERRC wake up from SLEEP2 ! ");
565248,1158116352,0,0,PS1,CERRC,CerrcRestoreWhenWakeUp_state,P_INFO,swLogPrintf("CerrcRestoreWhenWakeUp: RrcState %e<CerrcState> , CampOnState %e<CerrcCampOnState> , CsrState %e<CerrcCsrState> , ActStatus %e<CerrcActStatus> , RccState %e<CerrcRccState> ");
565248,1158119423,0,0,PS1,CERRC,CerrcInit_entry,P_INFO,swLogPrintf("Initialize CERRC task global variables when power on ! ");
565248,1158119424,0,0,PS1,CERRC,CerrcMain_sig,P_WARNING,swLogPrintf("Unknown CERRC SIG: 0x%X ");
565248,1158121984,0,0,PS1,CERRC,CerrcCheckIfRplmnInPlmnList_end,P_INFO,swLogPrintf("RPLMN ( %X-%X ) is not included in the plmnList ( numOfPlmn = %d ) ");
565248,1158124288,0,0,PS1,CERRC,CerrcCheckIfAsn1PlmnInPlmnList_false,P_INFO,swLogPrintf("The Cell ( PLMN ( %X-%X ) ) is NOT part of the AreaConfiguration: PLMN ( %X-%X ) ");
565248,1158125568,0,0,PS1,CERRC,CerrcFillMdtScellRsrpResult_err,P_ERROR,swLogPrintf("Invalid PCell RSRP ( %d ) ! ");
565248,1158127616,0,0,PS1,CERRC,CerrcFillMdtScellRsrqResult_err,P_ERROR,swLogPrintf("Invalid PCell RSRQ ( %d ) ! ");
565248,1158130176,0,0,PS1,CERRC,CerrcStoreRachInfo_entry,P_INFO,swLogPrintf("CemacRAInd: numberOfPreamblesSent ( %d ) , contentionDetected ( %d ) , maxTxPowerReached ( %d ) ");
565248,1158133759,0,0,PS1,CERRC,CerrcStoreRachInfo_rccEst,P_WARNING,swLogPrintf("RachInfo is NOT stored due to incorrect RccState ( CONN_EST ) ! ");
565248,1158133760,0,0,PS1,CERRC,CerrcEncodeRLF_Report_r9_size,P_ERROR,swLogPrintf("Need to extend memory reserved for RLF-Report to ( %d ) ! ");
565248,1158135808,0,0,PS1,CERRC,CerrcDecodeRLF_Report_r9_dec,P_ERROR,swLogPrintf("RLF_Report decode error: %d ");
565248,1158137856,0,0,PS1,CERRC,CerrcEncodeRLF_Report_v9e0_size,P_ERROR,swLogPrintf("Need to extend memory reserved for RLF-Report-v9e0 to ( %d ) ! ");
565248,1158139904,0,0,PS1,CERRC,CerrcDecodeRLF_Report_v9e0_dec,P_ERROR,swLogPrintf("RLF_Report_v9e0 decode error: %d ");
565248,1158143999,0,0,PS1,CERRC,CerrcFillRlfReportT304Expiry_else,P_ERROR,swLogPrintf("T304 expiry but no stored RLF-Report info ! ");
565248,1158144000,0,0,PS1,CERRC,CerrcFillRlfReportRlf_rlfCause,P_ERROR,swLogPrintf("Invalid rlf-Cause %e<CerrcRlfCause> ! ");
565248,1158148095,0,0,PS1,CERRC,CerrcFillReestCellIdInRlfReport_else,P_INFO,swLogPrintf("Re-establishment was NOT initiated due to radio link failure or handover failure ");
565248,1158150143,0,0,PS1,CERRC,CerrcGetRlfReportAvailable_noRplmn,P_WARNING,swLogPrintf("NO valid RPLMN ! ");
565248,1158150400,0,0,PS1,CERRC,CerrcGetRlfReportAvailable_else,P_INFO,swLogPrintf("the RPLMN ( %X-%X ) is NOT included in plmn-IdentityList stored in VarRLF-Report ! ");
565248,1158154239,0,0,PS1,CERRC,CerrcGetRlfReportAvailable_noPlmn,P_WARNING,swLogPrintf("NOT getting any PLMN from EMM ! ");
565248,1158154240,0,0,PS1,CERRC,CerrcEncodeVarLogMeasConfig_r12_size,P_ERROR,swLogPrintf("Need to extend memory reserved for VarLogMeasConfig to ( %d ) ! ");
565248,1158156288,0,0,PS1,CERRC,CerrcDecodeVarLogMeasConfig_r12_dec,P_ERROR,swLogPrintf("VarLogMeasConfig_r12 decode error: %d ");
565248,1158158336,0,0,PS1,CERRC,CerrcEncodeLogMeasList_r10_size,P_WARNING,swLogPrintf("Memory reserved for LogMeasInfoList is full ( %d ) ! Stop T330 and release VarLogMeasConfig ");
565248,1158160384,0,0,PS1,CERRC,CerrcDecodeLogMeasInfoList_r10_dec,P_ERROR,swLogPrintf("LogMeasInfoList_r10 decode error: %d ");
565248,1158162688,0,0,PS1,CERRC,CerrcCellIsPartOfAreaConfig_CGI,P_INFO,swLogPrintf("The Cell ( cellIdentity = %d ) is NOT part of the AreaConfiguration: cellIdentity ( %d ) ");
565248,1158164736,0,0,PS1,CERRC,CerrcCellIsPartOfAreaConfig_TAC,P_INFO,swLogPrintf("The Cell ( TAC = %d ) is NOT part of the AreaConfiguration: TAC ( %d ) ");
565248,1158168575,0,0,PS1,CERRC,CerrcPerformMeasurementsLogging_config,P_WARNING,swLogPrintf("VarLogMeasConfig has been released ! ");
565248,1158170623,0,0,PS1,CERRC,CerrcPerformMeasurementsLogging_T330,P_WARNING,swLogPrintf("T330 is NOT running ! ");
565248,1158172671,0,0,PS1,CERRC,CerrcPerformMeasurementsLogging_add,P_SIG,swLogPrintf("Adding a logged measurement entry in VarLogMeasReport ! ");
565248,1158174719,0,0,PS1,CERRC,CerrcGetLogMeasAvailable_unSupport,P_INFO,swLogPrintf("Not support LoggedMeasurementsIdle ! ");
565248,1158176767,0,0,PS1,CERRC,CerrcGetLogMeasAvailable_noRplmn,P_WARNING,swLogPrintf("NO valid RPLMN ! ");
565248,1158177024,0,0,PS1,CERRC,CerrcGetLogMeasAvailable_else,P_INFO,swLogPrintf("the RPLMN ( %X-%X ) is NOT included in plmn-IdentityList stored in VarLogMeasReport ! ");
565248,1158178816,0,0,PS1,CERRC,CerrcEncodeConnEstFailReport_r11_size,P_ERROR,swLogPrintf("Need to extend memory reserved for ConnEstFailReport-r11 to ( %d ) ! ");
565248,1158180864,0,0,PS1,CERRC,CerrcDecodeConnEstFailReport_r11_dec,P_ERROR,swLogPrintf("ConnEstFailReport_r11 decode error: %d ");
565248,1158184959,0,0,PS1,CERRC,CerrcGetConnEstFailInfoAvailable_noRplmn,P_WARNING,swLogPrintf("NO valid RPLMN ! ");
565248,1158185728,0,0,PS1,CERRC,CerrcGetConnEstFailInfoAvailable_else,P_INFO,swLogPrintf("the RPLMN ( %X-%X ) is NOT equal to plmn-Identity ( %X-%X ) stored in VarConnEstFailReport ! ");
565248,1158189055,0,0,PS1,CERRC,CerrcHandleLoggedMeasurementConfiguration_unSupport,P_WARNING,swLogPrintf("Ignore this LoggedMeasurementConfiguration due to not support LoggedMeasurementsIdle ! ");
565248,1158191103,0,0,PS1,CERRC,CerrcHandleLoggedMeasurementConfiguration_noRplmn,P_WARNING,swLogPrintf("NO valid RPLMN ! Ignore this LoggedMeasurementConfiguration ! ");
565248,1158191360,0,0,PS1,CERRC,CerrcHandleLoggedMeasurementConfiguration_plmnList,P_INFO,swLogPrintf("Set plmn-IdentityList in VarLogMeasReport to include the RPLMN ( %X-%X ) ! ");
565248,1158195199,0,0,PS1,CERRC,CerrcCreateConnMeasContext_exist,P_INFO,swLogPrintf("CerrcConnMeasContext already exists! \n ");
565248,1158195456,0,0,PS1,CERRC,CerrcAddCellToMeasReportingEntryInVarMeasReportList_info,P_INFO,swLogPrintf("Add measId ( %d ) phyCellId ( %d ) into varMeasReportList ");
565248,1158197248,0,0,PS1,CERRC,CerrcAddCellToMeasReportingEntryInVarMeasReportList_error,P_ERROR,swLogPrintf("Cell Num of cellsTriggered exceed MAX , Ingore phyCellId ( %d ) ");
565248,1158199296,0,0,PS1,CERRC,CerrcRmvMeasReportingEntryInVarMeasReportList_info1,P_INFO,swLogPrintf("rmv measReportingEntry measId ( %d ) from VarMeasReport ");
565248,1158201344,0,0,PS1,CERRC,CerrcRmvMeasReportingEntryInVarMeasReportList_info2,P_INFO,swLogPrintf("rmv measReportingEntry measId ( %d ) from VarMeasReport ");
565248,1158203648,0,0,PS1,CERRC,CerrcRmvCellFromMeasReportingEntryInVarMeasReportList_reportLeave,P_INFO,swLogPrintf("measId ( %d ) , phyCellId ( %d ) statify A3-reportLeave ");
565248,1158205696,0,0,PS1,CERRC,CerrcJudgeCellExistInVarMeasReportList_info,P_INFO,swLogPrintf("measId ( %d ) phyCellId ( %d ) already exist in VarMeasReport ");
565248,1158209535,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_measCycleSCell,P_WARNING,swLogPrintf("NW config measCycleSCell! ");
565248,1158211583,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_measDS,P_WARNING,swLogPrintf("NW config measDS! ");
565248,1158213631,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_rmtc,P_WARNING,swLogPrintf("NW config rmtc! ");
565248,1158215679,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_tx_ResourcePool,P_WARNING,swLogPrintf("NW config tx_ResourcePool! ");
565248,1158217727,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_fembms_MixedCarrier,P_WARNING,swLogPrintf("NW config fembms_MixedCarrier! ");
565248,1158219775,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_reportStrongestCSI_RS,P_WARNING,swLogPrintf("NW config reportStrongestCSI_RSs! ");
565248,1158221823,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_reportCRS_Meas,P_WARNING,swLogPrintf("NW config reportCRS_Meas! ");
565248,1158223871,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_triggerQuantityCSI_RS,P_WARNING,swLogPrintf("NW config triggerQuantityCSI_RS! ");
565248,1158225919,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_reportSSTD_Meas,P_WARNING,swLogPrintf("NW config reportSSTD_Meas! ");
565248,1158227967,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_rs_sinr_Config,P_WARNING,swLogPrintf("NW config rs_sinr_Config! ");
565248,1158230015,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_measRSSI_ReportConfig,P_WARNING,swLogPrintf("NW config measRSSI_ReportConfig! ");
565248,1158232063,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_ul_DelayConfig,P_WARNING,swLogPrintf("NW config ul_DelayConfig! ");
565248,1158234111,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_ue_RxTxTimeDiffPeriodicalTDD,P_WARNING,swLogPrintf("NW config ue_RxTxTimeDiffPeriodicalTDD! ");
565248,1158236159,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_purpose_v1430,P_WARNING,swLogPrintf("NW config purpose_v1430! ");
565248,1158238207,0,0,PS1,CERRC,CerrcAddModMeasObjectInVarMeasConfig_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158240255,0,0,PS1,CERRC,CerrcAddModMeasObjectExtR13InVarMeasConfig_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158242303,0,0,PS1,CERRC,CerrcGetMeasObjectIdByCarrierFreq_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158244351,0,0,PS1,CERRC,CerrcGetMeasObjectIdAndMeasIdInfoByCarrierFreq_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158246399,0,0,PS1,CERRC,CerrcGetMeasObjectIdR13ByCarrierFreq_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158248447,0,0,PS1,CERRC,CerrcGetMeasObjectIdAndMeasIdInfoR13ByCarrierFreq_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158250495,0,0,PS1,CERRC,CerrcGetCarrierFreqByMeasObjectId_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158252543,0,0,PS1,CERRC,CerrcGetCarrierFreqAndMeasObjectInfoByMeasObjectId_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158254591,0,0,PS1,CERRC,CerrcGetCarrierFreqByMeasObjectIdR13_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158256639,0,0,PS1,CERRC,CerrcGetCarrierFreqAndMeasObjectInfoR13ByMeasObjectId_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158258687,0,0,PS1,CERRC,CerrcGetReportConfigInfoByReportConfigId_error_type,P_ERROR,swLogPrintf("only support EUTRAN! ");
565248,1158259456,0,0,PS1,CERRC,CerrcUpdateQuantityConfigInVarMeasConfig_not_change,P_VALUE,swLogPrintf("NW configured quantityConfig is the same with quantityConfig saved in varMeasConfig , filterCoefficientRSRPPresent = %d , filterCoefficientRSRP = %d , filterCoefficientRSRQPresent = %d , filterCoefficientRSRQ = %d ");
565248,1158262783,0,0,PS1,CERRC,CerrcProcessQuantityConfig_not_support,P_ERROR,swLogPrintf("NW config non EUTRAN quantityConfig ");
565248,1158262784,0,0,PS1,CERRC,CerrcUpdateMeasIdWithSelfCheck_rmv1,P_WARNING,swLogPrintf("Remove MeasId ( %d ) due to its associated measObject or reportConfig NOT configured. ");
565248,1158264832,0,0,PS1,CERRC,CerrcUpdateMeasIdWithSelfCheck_rmv2,P_WARNING,swLogPrintf("Remove MeasId ( %d ) due to its associated measObject or reportConfig NOT configured. ");
565248,1158267136,0,0,PS1,CERRC,CerrcHandlePeriodMeasReportTimerExpiry_not_support,P_ERROR,swLogPrintf("preRegistrationInfoHRPDPresent = %d , measScaleFactor_r12Present = %d ");
565248,1158270975,0,0,PS1,CERRC,CerrcHandleMeasConfig_info,P_INFO,swLogPrintf("Start scell s-Measure procedure. ");
565248,1158271232,0,0,PS1,CERRC,CerrcGetCellTimeToTrigger_info,P_INFO,swLogPrintf("phyCellId ( %d ) , timeToTrigger ( %d ) ");
565248,1158273024,0,0,PS1,CERRC,CerrcFillRsrpInMeasResultPCell_err,P_ERROR,swLogPrintf("Invalid PCell RSRP ( %d ) ! ");
565248,1158275072,0,0,PS1,CERRC,CerrcFillRsrqInMeasResultPCell_err,P_ERROR,swLogPrintf("Invalid PCell RSRQ ( %d ) ! ");
565248,1158277120,0,0,PS1,CERRC,CerrcFillRsrpInMeasResultEutra_err,P_ERROR,swLogPrintf("Invalid neighbor cell RSRP ( %d ) ! ");
565248,1158279168,0,0,PS1,CERRC,CerrcFillRsrqInMeasResultEutra_err,P_ERROR,swLogPrintf("Invalid neighbor cell RSRQ ( %d ) ! ");
565248,1158283263,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_warn,P_INFO,swLogPrintf("No Valid LocationInfo could be used , not fill locationInfo in MeasResult IE. ");
565248,1158283264,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_info,P_INFO,swLogPrintf("Current LocationInfo Type is %e<CerrcLocationType> ");
565248,1158287359,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_fill1,P_INFO,swLogPrintf("Fill LocationInfo into MeasResult IE. ");
565248,1158289407,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_fill2,P_INFO,swLogPrintf("Fill horizontalVelocity_r10 into MeasResult IE. ");
565248,1158291455,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_fill3,P_INFO,swLogPrintf("Fill gnss_TOD_msec_r10 into MeasResult IE. ");
565248,1158293503,0,0,PS1,CERRC,CerrcFillMeasResults_warn,P_WARNING,swLogPrintf("NW expect LocationInfo Report , but UE not support it. ");
565248,1158294272,0,0,PS1,CERRC,CerrcPrintMeasResult_info,P_INFO,swLogPrintf("MeasResult measId = %d , PCellRsrp = %d , PCellRsrq = %d , NCellPresent = %d ");
565248,1158296064,0,0,PS1,CERRC,CerrcPrintMeasResult_ncell_info,P_INFO,swLogPrintf("NCellId = %d , NCellRsrp = %d , NCellRsrq = %d ");
565248,1158297856,0,0,PS1,CERRC,CerrcPostProcOfSendingPeriodMeasReport_rmv,P_INFO,swLogPrintf("Periodical MeasReport numberOfReportsSent ( %d ) , reportAmount ( %d ) , rmv reportEntry and measId. ");
565248,1158300160,0,0,PS1,CERRC,CerrcIsNeedProcessEventForThisCell_reportNum,P_INFO,swLogPrintf("MeasId ( %d ) Event A%d MR sent times equal to ReportAmount ( %d ) ");
565248,1158302208,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_rsrp,P_INFO,swLogPrintf("Ms ( %d ) , Hys ( %d ) , ThreshP ( %d ) ");
565248,1158304256,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_rsrq,P_INFO,swLogPrintf("Ms ( %d ) , Hys ( %d ) , ThreshQ ( %d ) ");
565248,1158306048,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_wrong,P_ERROR,swLogPrintf("TriggerQuantity ( %d ) , A1_Threshold_Tag ( %d ) ");
565248,1158308352,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_rsrp,P_INFO,swLogPrintf("Ms ( %d ) , Hys ( %d ) , ThreshP ( %d ) ");
565248,1158310400,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_rsrq,P_INFO,swLogPrintf("Ms ( %d ) , Hys ( %d ) , ThreshQ ( %d ) ");
565248,1158312192,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_wrong,P_ERROR,swLogPrintf("TriggerQuantity ( %d ) , A2_Threshold_Tag ( %d ) ");
565248,1158314496,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_cell,P_INFO,swLogPrintf("Evaluate phyCellId ( %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158317824,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_rsrp,P_INFO,swLogPrintf("Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , Mp ( %d ) , Ofp ( %d ) , Ocp ( %d ) , Off ( %d ) ");
565248,1158319872,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_rsrq,P_INFO,swLogPrintf("Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , Mp ( %d ) , Ofp ( %d ) , Ocp ( %d ) , Off ( %d ) ");
565248,1158320640,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_cell,P_INFO,swLogPrintf("Evaluate phyCellId ( %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158323200,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_rsrp,P_INFO,swLogPrintf("Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , ThreshP ( %d ) ");
565248,1158325248,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_rsrq,P_INFO,swLogPrintf("Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , ThreshQ ( %d ) ");
565248,1158326528,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_wrong,P_ERROR,swLogPrintf("TriggerQuantity ( %d ) , A4_Threshold_Tag ( %d ) ");
565248,1158328832,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_cell,P_INFO,swLogPrintf("Evaluate phyCellId ( %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158331904,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_rsrp,P_INFO,swLogPrintf("Mp ( %d ) , Hys ( %d ) , Thresh1 ( %d ) , Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Thresh2 ( %d ) ");
565248,1158333952,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_rsrq,P_INFO,swLogPrintf("Mp ( %d ) , Hys ( %d ) , Thresh1 ( %d ) , Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Thresh2 ( %d ) ");
565248,1158334976,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_wrong,P_ERROR,swLogPrintf("TriggerQuantity ( %d ) , A5_Threshold1_Tag ( %d ) , A5_Threshold2_Tag ( %d ) ");
565248,1158337024,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventTriggerCond_info,P_INFO,swLogPrintf("Event ( A%d ) , Entering ( %d ) , Leaving ( %d ) ");
565248,1158339072,0,0,PS1,CERRC,CerrcAddCellMeasReportLeavingEntry_info2,P_INFO,swLogPrintf("Add measId ( %d ) phyCellId ( %d ) into MeasReportLeavingEntry , cellTimeToTrigger = %d ");
565248,1158341120,0,0,PS1,CERRC,CerrcProcessCellReportInfoLeavingEntry_rmv,P_INFO,swLogPrintf("measId = %d , phyCellId = %d has statisfied leavingConditon ( %d ms ) , remove it from varMeasReport. ");
565248,1158343168,0,0,PS1,CERRC,CerrcProcessEventMeasReport_info,P_INFO,swLogPrintf("measId ( %d ) , reportOnLeaveCellBitmap ( %d ) , measReportFlag ( %d ) ");
565248,1158345216,0,0,PS1,CERRC,CerrcProcessPeriodMeasReport_inter,P_INFO,swLogPrintf("PeriodMeasReport phyCellId ( %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158347264,0,0,PS1,CERRC,CerrcProcessPeriodMeasReport_inra,P_INFO,swLogPrintf("PeriodMeasReport phyCellId ( %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158349824,0,0,PS1,CERRC,CerrcProcessMeasResultForEachMeasId_info,P_INFO,swLogPrintf("CarrierFreq ( %ld ) , measId ( %d ) , measObjId ( %d ) , reportConfigId ( %d ) , triggerType ( %d ) ( 0 -Event , 1 -Periodical ) ");
565248,1158350848,0,0,PS1,CERRC,CerrcProcessMeasResultForEachMeasId_periodOngoing,P_INFO,swLogPrintf("Periodical Timer ( measId = %d ) is running , delay the process until timer expired. ");
565248,1158353152,0,0,PS1,CERRC,CerrcProcessMeasResultForEachMeasId_wrong_event,P_ERROR,swLogPrintf("NOT Supported TriggerType ( %d ) , EventType ( %d ) ");
565248,1158356991,0,0,PS1,CERRC,CerrcProcessConnectedMeasResult_empty_config,P_WARNING,swLogPrintf("No available VarMeasConfig , ingore this MeasResult. ");
565248,1158357248,0,0,PS1,CERRC,CerrcStartT321Timer_info,P_INFO,swLogPrintf("T321 timer length = %d , measId = %d. ");
565248,1158361087,0,0,PS1,CERRC,CerrcStartReportCGI_T321_running,P_ERROR,swLogPrintf("T321 is running! ");
565248,1158362368,0,0,PS1,CERRC,CerrcRecodeSib1CellInfo_update,P_INFO,swLogPrintf("Update existed SIB1 info: CELL ( %d , %d ) , PLMN ( %x-%x ) , TAC ( 0x%X ) , total numOfCell ( %d ) ");
565248,1158364416,0,0,PS1,CERRC,CerrcRecodeSib1CellInfo_new,P_INFO,swLogPrintf("Add SIB1 info: CELL ( %d , %d ) , PLMN ( %x-%x ) , TAC ( 0x%X ) , total numOfCell ( %d ) ");
565248,1158366464,0,0,PS1,CERRC,CerrcRecodeSib1CellInfo_rmv,P_INFO,swLogPrintf("Remove the oldest cell: CELL ( %d , %d ) , PLMN ( %x-%x ) , TAC ( 0x%X ) , total numOfCell ( %d ) ");
565248,1158368512,0,0,PS1,CERRC,CerrcRecodeSib1CellInfo_replace,P_INFO,swLogPrintf("Remove the oldest cell and Add SIB1 info: CELL ( %d , %d ) , PLMN ( %x-%x ) , TAC ( 0x%X ) , total numOfCell ( %d ) ");
565248,1158370048,0,0,PS1,CERRC,CerrcProcessReportCGI_NcellSysInfoInd_info,P_INFO,swLogPrintf("measId = %d , measObjectId = %d , ReportCGIPresent = %d , phyCellId = %d ");
565248,1158371840,0,0,PS1,CERRC,CerrcProcessReportCGI_NcellSysInfoInd_crc,P_WARNING,swLogPrintf("Ncell ( %d , %d ) SIB1 decode or CRC ( %d ) fail in RRC_CONNECTED state ");
565248,1158373376,0,0,PS1,CERRC,CerrcHandleT321Expiry_wrong_state,P_ERROR,swLogPrintf("rrcState %e<CerrcState> ");
565248,1158376192,0,0,PS1,CERRC,CerrcAddServingCellToIntraFreqDB_addScell,P_INFO,swLogPrintf("INTRA FREQ SCELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1158379519,0,0,PS1,CERRC,CerrcDeleteCellsInVarMeasReportList_wrong_num,P_ERROR,swLogPrintf("VarMeasReport exceed the max num ");
565248,1158379520,0,0,PS1,CERRC,CerrcDeleteCellsInVarMeasReportList_info,P_INFO,swLogPrintf("rmv measId ( %d ) from VarMeasReport ");
565248,1158381568,0,0,PS1,CERRC,CerrcUpdateInterFreqCarrierFreqList_wrong_num,P_ERROR,swLogPrintf("no spare place to add carrierFreq ( %d ) to database ");
565248,1158383616,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_wrong_measId,P_WARNING,swLogPrintf("MeasTimer ( %d ) not exists , ingore this time expriy. ");
565248,1158386176,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_unMatched_freqIndex,P_WARNING,swLogPrintf("UnMatched carrierFreq ( %d ) measId ( %d ) measObjectId ( %d ) , UE will send MR only with scell. ");
565248,1158388480,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_info,P_INFO,swLogPrintf("MeasId ( %d ) Timer expiry , measObjectId = %d , TriggerType = %d , carrierFreq = %d ");
565248,1158389760,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_notTrigger,P_INFO,swLogPrintf("MeasmentReport ( measId = %d ) just sent , ingore this time expiry. ");
565248,1158392064,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_wrong_event,P_ERROR,swLogPrintf("CerrcHandlePeriodMeasReportTimerExpiry: measId = %d , triggerType = %d ");
565248,1158394112,0,0,PS1,CERRC,CerrcHandlePeriodMeasReportTimerExpiry_wrong_state,P_ERROR,swLogPrintf("rrcState = %d , measId = %d ");
565248,1158396160,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_notSupport,P_INFO,swLogPrintf("MeasObjectId ( %d ) DlEarfcn ( %d ) is Not Supported ! ");
565248,1158399999,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_info0,P_WARNING,swLogPrintf("Change InterFreqEnableFlag to FALSE for validMeasGapFlag is FALSE. ");
565248,1158400512,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_info1,P_VALUE,swLogPrintf("ConnMeas IntraFreqEnableFlag = %d , InterFreqEnableFlag = %d , numOfCurInterFreq = %d ");
565248,1158402304,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_info2,P_VALUE,swLogPrintf("ConnMeas curInterFreqCarrier [ %d ] = %d ");
565248,1158404352,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_info3,P_VALUE,swLogPrintf("ConnMeas Updated NcellDB interFreq [ %d ] .carrierFreq = %d ");
565248,1158406144,0,0,PS1,CERRC,CerrcFillSubframePatternConfigNeigh_wrong_cell_num,P_ERROR,swLogPrintf("neighbor cell num exceed max num , carrierFreq = %d. ");
565248,1158408192,0,0,PS1,CERRC,CerrcFillCephyMeasConfigReq_wrong_blackcell_num,P_ERROR,swLogPrintf("black cell num exceed max num , carrierFreq = %d. ");
565248,1158410240,0,0,PS1,CERRC,CerrcFillCephyMeasConfigReqByMeasObject_intrafreq,P_ERROR,swLogPrintf("NW not config measObject for LTE serving frequency ( %d ) . ");
565248,1158414335,0,0,PS1,CERRC,CerrcHandleActionUponHandoverOrReest_warn,P_WARNING,swLogPrintf("NW not config measObject ( serving ) , no need swap sourceCell with targetCell measObject. ");
565248,1158414848,0,0,PS1,CERRC,CerrcPrintBcchBchMsg_MIB,P_SIG,swLogPrintf("CELL ( %d , %d ) , MIB , len ( %d ) ");
565248,1158416896,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB2,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB2 , len ( %d ) ");
565248,1158418944,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB3,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB3 , len ( %d ) ");
565248,1158420992,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB4,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB4 , len ( %d ) ");
565248,1158423040,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB5,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB5 , len ( %d ) ");
565248,1158425088,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB14,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB14 , len ( %d ) ");
565248,1158427136,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB16,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB16 , len ( %d ) ");
565248,1158429184,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB10,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB10 , len ( %d ) ");
565248,1158431232,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB11,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB11 , len ( %d ) ");
565248,1158433280,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB12,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB12 , len ( %d ) ");
565248,1158435328,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB6,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB6 , len ( %d ) ");
565248,1158437376,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB7,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB7 , len ( %d ) ");
565248,1158439424,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB8,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB8 , len ( %d ) ");
565248,1158441472,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB9,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB9 , len ( %d ) ");
565248,1158443520,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB13,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB13 , len ( %d ) ");
565248,1158445568,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB15,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB15 , len ( %d ) ");
565248,1158447616,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB17,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB17 , len ( %d ) ");
565248,1158449664,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB18,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB18 , len ( %d ) ");
565248,1158451712,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB19,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB19 , len ( %d ) ");
565248,1158453760,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB20,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB20 , len ( %d ) ");
565248,1158455808,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB21,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB21 , len ( %d ) ");
565248,1158457344,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_errSI,P_ERROR,swLogPrintf("Unsupported BCCH_Message SI type %d! ");
565248,1158459904,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB1,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB1 , len ( %d ) ");
565248,1158461440,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_tag,P_ERROR,swLogPrintf("Invalid BCCH_Message type %d! ");
565248,1158463488,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_Reest,P_INFO,swLogPrintf("RrcConnectionReestablishment , len ( %d ) ");
565248,1158465536,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_ReestRej,P_INFO,swLogPrintf("RrcConnectionReestablishmentReject , len ( %d ) ");
565248,1158467584,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_ConnRej,P_INFO,swLogPrintf("RrcConnectionReject , len ( %d ) ");
565248,1158469632,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_Setup,P_INFO,swLogPrintf("RrcConnectionSetup , len ( %d ) ");
565248,1158471680,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_tag,P_ERROR,swLogPrintf("Invalid DL_CCCH_Message type %d! ");
565248,1158473728,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_DlTrans,P_SIG,swLogPrintf("DlInformationTransfer , len ( %d ) ");
565248,1158475776,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Recfg,P_INFO,swLogPrintf("RrcConnectionReconfiguration , len ( %d ) ");
565248,1158477824,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Rel,P_INFO,swLogPrintf("RrcConnectionRelease , len ( %d ) ");
565248,1158479872,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_SMC,P_INFO,swLogPrintf("SecurityModeCommand , len ( %d ) ");
565248,1158481920,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Cap,P_INFO,swLogPrintf("UeCapabilityEnquiry , len ( %d ) ");
565248,1158483968,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Count,P_INFO,swLogPrintf("CounterCheck , len ( %d ) ");
565248,1158486016,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Rsm,P_INFO,swLogPrintf("RrcConnectionResume , len ( %d ) ");
565248,1158488064,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_UeInfo,P_INFO,swLogPrintf("UeInformationRequest , len ( %d ) ");
565248,1158490112,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_LogMeas,P_INFO,swLogPrintf("LoggedMeasurementConfiguration , len ( %d ) ");
565248,1158492160,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_tag,P_ERROR,swLogPrintf("Unsupported DL_DCCH_Message type %d! ");
565248,1158494208,0,0,PS1,CERRC,CerrcPrintPcchMsg_Paging,P_VALUE,swLogPrintf("Paging , normal paging , len ( %d ) ");
565248,1158496256,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_Reest,P_INFO,swLogPrintf("RrcConnectionReestablishmentRequest , len ( %d ) ");
565248,1158498304,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_ConnReq,P_INFO,swLogPrintf("RrcConnectionRequest , len ( %d ) ");
565248,1158500352,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_tag1,P_ERROR,swLogPrintf("Invalid UL_CCCH_Message type %d! ");
565248,1158502400,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_RsmReq,P_INFO,swLogPrintf("RrcConnectionResumeRequest , len ( %d ) ");
565248,1158504448,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_tag2,P_ERROR,swLogPrintf("Invalid UL_CCCH_Message type %d! ");
565248,1158508543,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_err,P_ERROR,swLogPrintf("Invalid UL_CCCH_Message type! ");
565248,1158508544,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_msg5,P_INFO,swLogPrintf("Msg5 len = %d ");
565248,1158510592,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_Mr,P_INFO,swLogPrintf("MeasurementReport , len ( %d ) ");
565248,1158512640,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_RecfgComp,P_INFO,swLogPrintf("RrcConnectionReconfigurationComplete , len ( %d ) ");
565248,1158514688,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_ReestComp,P_INFO,swLogPrintf("RrcConnectionReestablishmentComplete , len ( %d ) ");
565248,1158516736,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_SetupComp,P_INFO,swLogPrintf("RrcConnectionSetupComplete , len ( %d ) ");
565248,1158519296,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_SetupComp1,P_INFO,swLogPrintf("rrcPduBitLength ( %d ) , nasPduBitLength ( %d ) , nasPduBitPosition ( %d ) ");
565248,1158520832,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_SMC,P_INFO,swLogPrintf("SecurityModeComplete , len ( %d ) ");
565248,1158522880,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_SMF,P_INFO,swLogPrintf("SecurityModeFailure , len ( %d ) ");
565248,1158524928,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_Cap,P_INFO,swLogPrintf("UeCapabilityInformation , len ( %d ) ");
565248,1158526976,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_UlTrans,P_SIG,swLogPrintf("UlInformationTransfer , len ( %d ) ");
565248,1158529536,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_UlTrans1,P_INFO,swLogPrintf("rrcPduBitLength ( %d ) , nasPduBitLength ( %d ) , nasPduBitPosition ( %d ) ");
565248,1158531072,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_CountRsp,P_INFO,swLogPrintf("CounterCheckResponse , len ( %d ) ");
565248,1158533120,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_UeInfoRsp,P_INFO,swLogPrintf("UeInformationResponse , len ( %d ) ");
565248,1158535168,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_ProInd,P_INFO,swLogPrintf("ProximityIndication , len ( %d ) ");
565248,1158537216,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_Rstd,P_INFO,swLogPrintf("InterFreqRSTDMeasurementIndication , len ( %d ) ");
565248,1158539264,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_tag1,P_ERROR,swLogPrintf("Unsupported UL_DCCH_Message type %d! ");
565248,1158541312,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_RsmComp,P_INFO,swLogPrintf("RrcConnectionResumeComplete , len ( %d ) ");
565248,1158543872,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_RsmComp1,P_INFO,swLogPrintf("rrcPduBitLength ( %d ) , nasPduBitLength ( %d ) , nasPduBitPosition ( %d ) ");
565248,1158545408,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_tag2,P_ERROR,swLogPrintf("Unsupported UL_DCCH_Message type %d! ");
565248,1158547456,0,0,PS1,CERRC,CerrcPrintVarMeasConfig,P_SIG,swLogPrintf("VarMeasConfig len ( %d ) ");
565248,1158549504,0,0,PS1,CERRC,CerrcDecodeBcchBchMsg_err,P_ERROR,swLogPrintf("MIB decode error: %d ");
565248,1158551552,0,0,PS1,CERRC,CerrcDecodeBcchDlSchMsg_err,P_ERROR,swLogPrintf("SIB decode error: %d ");
565248,1158553600,0,0,PS1,CERRC,CerrcDecodePCCHMsg_err,P_ERROR,swLogPrintf("PCCH decode error: %d ");
565248,1158555648,0,0,PS1,CERRC,CerrcDecodeDlCcchMsg_err,P_ERROR,swLogPrintf("DL CCCH decode error: %d ");
565248,1158557696,0,0,PS1,CERRC,CerrcDecodeDlDcchMsg_err,P_ERROR,swLogPrintf("DL DCCH decode error: %d ");
565248,1158559744,0,0,PS1,CERRC,CerrcDecodeVarMeasConfig_err,P_ERROR,swLogPrintf("VarMeasConfig decode error: %d \n ");
565248,1158562048,0,0,PS1,CERRC,CerrcSendCerrcPageInfoIndToNAS_end,P_SIG,swLogPrintf("CerrcPageInfoInd: type %e<PageInfoType> , cnDomain %e<CnDomain> ");
565248,1158565887,0,0,PS1,CERRC,CerrcHandlePagingRecordList_cs,P_INFO,swLogPrintf("This is for CS domain , ignore it ! ");
565248,1158565888,0,0,PS1,CERRC,CerrcHandlePagingRecordList_tag,P_WARNING,swLogPrintf("pPaging->ue_Identity.tag is wrong: %d ");
565248,1158569983,0,0,PS1,CERRC,CerrcHandlePagingRecordList_mismatch,P_INFO,swLogPrintf("This Paging is not for this UE! PagingRecordList mismatch! ");
565248,1158572031,0,0,PS1,CERRC,CerrcHandlePagingRecordList_noList,P_INFO,swLogPrintf("There is no PagingRecordList in this Paging message ");
565248,1158574079,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_state,P_WARNING,swLogPrintf("Receive CephyPagingInd in Deactive / HIB / SLEEP2 state! ");
565248,1158574080,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_tag,P_WARNING,swLogPrintf("Not supported pPcchMsg->tag ( %d ) in Paging ! ");
565248,1158576128,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_DI,P_ERROR,swLogPrintf("Cat1 does NOT support Direct Indication Information! pagingType ( %d ) ");
565248,1158578944,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_etws_cmas,P_SIG,swLogPrintf("Paging: RrcState ( %e<CerrcState> ) , Paging Type ( %d ) , etwsIndication ( %d ) , cmasIndication ( %d ) ");
565248,1158580736,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_eab,P_SIG,swLogPrintf("Paging: RrcState ( %e<CerrcState> ) , Paging Type ( %d ) , eabParamModification ( %d ) ");
565248,1158583040,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_SIupdate,P_SIG,swLogPrintf("Paging: RrcState ( %e<CerrcState> ) , Paging Type ( %d ) , sysInfoModi ( %d ) , eDrxSysInfoModi ( %d ) ");
565248,1158586367,0,0,PS1,CERRC,CerrcCreatePlmnSearchContext_exist,P_WARNING,swLogPrintf("CerrcPlmnSearchContext already exists! ");
565248,1158588415,0,0,PS1,CERRC,CerrcCreatePlmnSearchContext_err,P_ERROR,swLogPrintf("CerrcPlmnSearchReq ( BCINFO ) : reqMaxCellNum is 0 ! ");
565248,1158590463,0,0,PS1,CERRC,CerrcHandlePendingPlmnSearchReq_1,P_INFO,swLogPrintf("Handle pending CerrcPlmnSearchReq. ");
565248,1158590720,0,0,PS1,CERRC,CerrcFillInfoToBcInfoList_scell,P_INFO,swLogPrintf("Set the first found cell ( %d , %d ) as serving cell. ");
565248,1158592768,0,0,PS1,CERRC,CerrcFillServingCellInfoToBcInfoList_plmn,P_WARNING,swLogPrintf("AT+BCINFO = 1 , the requestedPlmn ( %X-%X ) is not belonging to serving cell ' s PLMN ! ");
565248,1158594816,0,0,PS1,CERRC,CerrcFillNeighCellInfoToBcInfoList_exists,P_INFO,swLogPrintf("Ncell ( %d , %d ) already exists in BcInfoList ! ");
565248,1158596864,0,0,PS1,CERRC,CerrcPickUpBestNcellWithoutSib1_sib1Full,P_INFO,swLogPrintf("CerrcPickUpBestNcellWithoutSib1: Already request %d Ncell SIB1 , exceed max SIB1 number ( %d ) , abort SIB1 reception ");
565248,1158598656,0,0,PS1,CERRC,CerrcPickUpBestNcellWithoutSib1_full,P_INFO,swLogPrintf("CerrcPickUpBestNcellWithoutSib1: All top %d Ncells already have SIB1 , do not need to perform SIB1 reception ");
565248,1158602751,0,0,PS1,CERRC,CerrcProcessPlmnNoSib1_else,P_ERROR,swLogPrintf("Wrong PLMN search state! ");
565248,1158603008,0,0,PS1,CERRC,CerrcProcessPlmnSib1_S,P_INFO,swLogPrintf("CerrcProcessPlmnSib1:S criterion is NOT satisfied , Srvlev ( %d ) , Squal ( %d ) ");
565248,1158604800,0,0,PS1,CERRC,CerrcProcessPlmnNcellSysInfoInd_else,P_ERROR,swLogPrintf("Wrong NCELL BCH type %e<SysInfoIndType> , just ingore! ");
565248,1158608895,0,0,PS1,CERRC,CerrcProcessPlmnSearchNoCellFound_else,P_ERROR,swLogPrintf("Wrong PLMN search state! ");
565248,1158610943,0,0,PS1,CERRC,CerrcHandleCephyDrxCellSearchCnf_bg,P_WARNING,swLogPrintf("Receive CephyDrxCellSearchCnf outside BG PLMN procedure ! ");
565248,1158610944,0,0,PS1,CERRC,CerrcHandleCephyDrxCellSearchCnf_state,P_WARNING,swLogPrintf("Receive CephyDrxCellSearchCnf in wrong RrcState %e<CerrcState>! ");
565248,1158612992,0,0,PS1,CERRC,CerrcSendCephyDrxCellSearchReq_lock,P_WARNING,swLogPrintf("Start locked frequency ( %d ) cell search. ");
565248,1158616320,0,0,PS1,CERRC,CerrcSendCerrcPlmnSearchCnf_plmn,P_VALUE,swLogPrintf("CerrcPlmnSearchCnf: numOfPlmn ( %d ) , the %d PLMN ( %X-%X ) , TAC ( %X ) , isPlmnRequested ( %d ) ");
565248,1158618368,0,0,PS1,CERRC,CerrcSendCerrcPlmnSearchCnf_bcinfo,P_VALUE,swLogPrintf("CerrcPlmnSearchCnf ( BCINFO ) : numOfCell ( %d ) , the %d CELL ( %d , %d ) , RSRP ( %d ) , isServingCell ( %d ) ");
565248,1158620416,0,0,PS1,CERRC,CerrcSendCerrcPlmnSearchInd_plmn,P_VALUE,swLogPrintf("CerrcPlmnSearch ] Ind: numOfPlmn ( %d ) , the %d PLMN ( %X-%X ) , TAC ( %X ) , isPlmnRequested ( %d ) ");
565248,1158621184,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_wrong1,P_WARNING,swLogPrintf("Receive invalid CerrcPlmnSearchReq: requestedPlmn is FALSE , but type %e<CerrcPlmnSearchType> is NOT Manual or BcInfo ! ");
565248,1158623488,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_wrong2,P_WARNING,swLogPrintf("Receive CerrcPlmnSearchReq in wrong state: RrcState %e<CerrcState> , RccState %e<CerrcRccState> ! ");
565248,1158626048,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_only1cell,P_INFO,swLogPrintf("Receive CerrcPlmnSearchReq ( BCINFO ) : CellLocked ( %d ) , reqMaxBCCellNum ( %d ) , RccState %e<CerrcRccState> , pending ConnReq ( %d ) ");
565248,1158628096,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_noNcellReq,P_INFO,swLogPrintf("Receive CerrcPlmnSearchReq ( BCINFO ) in state RccState %e<CerrcRccState> , waitSiUpdate ( %d ) , siRcvingBitmap ( 0x%x ) , T321 ( %d ) ! ");
565248,1158629632,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_wrong3,P_WARNING,swLogPrintf("Receive CerrcPlmnSearchReq with no valid numOfFreq ( %d ) and numOfBand ( %d ) ! ");
565248,1158631424,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_wrong4,P_WARNING,swLogPrintf("Receive CerrcPlmnSearchReq with no numOfFreq but valid phyCellId ( %d ) ! ");
565248,1158635519,0,0,PS1,CERRC,CerrcIsPlmnSearchReqBuffered_buff1,P_INFO,swLogPrintf("Receive CerrcPlmnSearchReq while waiting for ecphyDeactCnf , buffer it ");
565248,1158636032,0,0,PS1,CERRC,CerrcIsPlmnSearchReqBuffered_buff2,P_INFO,swLogPrintf("Receive CerrcPlmnSearchReq in CsrState %e<CerrcCsrState> , siRcvingBitmap ( 0x%x ) , searchType %e<CerrcPlmnSearchType> , buffer it ");
565248,1158639615,0,0,PS1,CERRC,CerrcIsPlmnSearchReqBuffered_buff3,P_INFO,swLogPrintf("Receive CerrcPlmnSearchReq with NORMAL type , need to deact L1 first ");
565248,1158639872,0,0,PS1,CERRC,CerrcStartPlmnSearch_freqLock,P_WARNING,swLogPrintf("CerrcPlmnSearchReq: Invalid freq lock info with numOfFreq ( %d ) , numOfBand ( %d ) ");
565248,1158642688,0,0,PS1,CERRC,CerrcStartPlmnSearch_entry,P_INFO,swLogPrintf("CerrcPlmnSearchReq: SearchType %e<CerrcPlmnSearchType> , requestedPlmnValid ( %d ) , PLMN ( %X-%X ) , bCellLock ( %d ) ");
565248,1158645759,0,0,PS1,CERRC,CerrcStartPlmnSearch_state,P_ERROR,swLogPrintf("Cannot handle CerrcPlmnSearchReq due to wrong state! ");
565248,1158647807,0,0,PS1,CERRC,CerrcHandleCerrcNextPlmnSearchReq_else,P_ERROR,swLogPrintf("Received CerrcNextPlmnSearchReq in wrong state! ");
565248,1158649088,0,0,PS1,CERRC,CerrcSendCerrcAbortPlmnSearchCnf_plmn,P_VALUE,swLogPrintf("CerrcAbortPlmnSearchCnf: numOfPlmn ( %d ) , the %d PLMN ( %X-%X ) , TAC ( %X ) , isPlmnRequested ( %d ) ");
565248,1158651136,0,0,PS1,CERRC,CerrcSendCerrcAbortPlmnSearchCnf_bcinfo,P_VALUE,swLogPrintf("CerrcAbortPlmnSearchCnf ( BCINFO ) : numOfCell ( %d ) , the %d CELL ( %d , %d ) , RSRP ( %d ) , isServingCell ( %d ) ");
565248,1158653951,0,0,PS1,CERRC,CerrcAbortPlmnSearchDueToActReq_else,P_ERROR,swLogPrintf("Abort PLMN search due to CerrcActReq in wrong state! ");
565248,1158655999,0,0,PS1,CERRC,CerrcAbortPlmnSearch_else,P_ERROR,swLogPrintf("Abort PLMN search in wrong state! ");
565248,1158658047,0,0,PS1,CERRC,CerrcCreateConnContext_exist,P_WARNING,swLogPrintf("CerrcConnContext already exists! ");
565248,1158658304,0,0,PS1,CERRC,CerrcReleaseConnContext_freeArray,P_INFO,swLogPrintf("Free OsaIeMemInfo->pBufHdr ( 0x%X ) , numOfIeMemInfoForPhy ( %d ) ");
565248,1158662143,0,0,PS1,CERRC,CerrcUpdateUpRbConfigType_err,P_ERROR,swLogPrintf("Ask to resume a already resumed RB ! ");
565248,1158664191,0,0,PS1,CERRC,CerrcSendCeupConfigReqToUpReleaseAllRBs_err,P_ERROR,swLogPrintf("No valid CerrcConnContext ! ");
565248,1158666239,0,0,PS1,CERRC,CerrcSendCeupConfigReqToUpReleaseSuspendedAllRBs_err,P_ERROR,swLogPrintf("No valid CerrcConnSuspendContext ! ");
565248,1158666752,0,0,PS1,CERRC,CerrcSendResumeCemacMacMainConfigReqToUP_wrongType,P_INFO,swLogPrintf("logicChProTimerType %e<UpConfigType> , connSuspendContext_logicChProTimerType %e<UpConfigType> , raiActivation = %d ");
565248,1158670335,0,0,PS1,CERRC,CerrcSendResumeCemacMacMainConfigReqToUP_noSuspendContext,P_ERROR,swLogPrintf("No valid CerrcConnSuspendContext ! ");
565248,1158670336,0,0,PS1,CERRC,CerrcSendReleaseCemacMacMainConfigReqToUP_wrongType,P_INFO,swLogPrintf("connSuspendContext_logicChProTimerType %e<UpConfigType> ");
565248,1158674431,0,0,PS1,CERRC,CerrcSendReleaseCemacMacMainConfigReqToUP_noSuspendContext,P_ERROR,swLogPrintf("No valid CerrcConnSuspendContext ! ");
565248,1158674432,0,0,PS1,CERRC,CerrcSendCemacResetReqToUP_cause,P_SIG,swLogPrintf("MAC RESET , cause %e<MacResetReason> ");
565248,1158676736,0,0,PS1,CERRC,CerrcHandleCemacResetCnf_cause,P_INFO,swLogPrintf("CemacResetCnf cause is %e<MacResetReason> , CerrcGetRrcState is %e<CerrcState> ");
565248,1158678528,0,0,PS1,CERRC,CerrcHandleCemacResetCnf_state,P_WARNING,swLogPrintf("Receive CemacResetCnf in wrong RccState %e<CerrcRccState>. ");
565248,1158682623,0,0,PS1,CERRC,CerrcHandleCemacResetCnf_idle,P_WARNING,swLogPrintf("Receive CemacResetCnf in wrong IDLE state ");
565248,1158682880,0,0,PS1,CERRC,CerrcHandleRadioLinkFailure_state,P_WARNING,swLogPrintf("Cannot handle RLF in RrcState %e<CerrcState> , RccState %e<CerrcRccState> ! ");
565248,1158686719,0,0,PS1,CERRC,CerrcHandleCemacRandomAccessInd_state,P_WARNING,swLogPrintf("Received CemacRAInd in wrong RrcState ! ");
565248,1158686720,0,0,PS1,CERRC,CerrcHandleCephySyncStatusInd_unsync,P_SIG,swLogPrintf("Received %d times Out-Of-Sync! ");
565248,1158690815,0,0,PS1,CERRC,CerrcHandleCephySyncStatusInd_inSync,P_WARNING,swLogPrintf("In-Sync report should be enabled ! ");
565248,1158691072,0,0,PS1,CERRC,CerrcHandleCephySyncStatusInd_else,P_WARNING,swLogPrintf("Received CephySyncStatusInd in wrong RrcState %e<CerrcState> , RccState %e<CerrcRccState>! ");
565248,1158693376,0,0,PS1,CERRC,CerrcHandleCephyConnStatisInfoInd_Meas,P_SIG,swLogPrintf("DL MEAS STATIS INFO: RSRP ( %d / 100 ) , RSRQ ( %d / 100 ) , SNR ( %d / 100 ) ");
565248,1158695168,0,0,PS1,CERRC,CerrcHandleCephyConnStatisInfoInd_DlTpT,P_SIG,swLogPrintf("DL TpT STATIS INFO: MCS Index ( %d / 100 ) , BLER ( %d / 10000 ) ");
565248,1158697216,0,0,PS1,CERRC,CerrcHandleCephyConnStatisInfoInd_UlTpT,P_SIG,swLogPrintf("UL TpT STATIS INFO: MCS Index ( %d / 100 ) , BLER ( %d / 10000 ) ");
565248,1158699008,0,0,PS1,CERRC,CerrcHandleCerrcNasMsgReq_suspend,P_WARNING,swLogPrintf("Received CerrcNasMsgReq in wrong RccState %e<CerrcRccState> after sending NasUlMsgSuspendInd ! ");
565248,1158701056,0,0,PS1,CERRC,CerrcHandleCerrcNasMsgReq_rccState,P_ERROR,swLogPrintf("Received CerrcNasMsgReq in wrong RccState %e<CerrcRccState> , just ignore it ! ");
565248,1158703104,0,0,PS1,CERRC,CerrcHandleCerrcNasMsgReq_state,P_WARNING,swLogPrintf("Received CerrcNasMsgReq in wrong RrcState %e<CerrcState> , just ignore it ! ");
565248,1158705408,0,0,PS1,CERRC,CerrcSetDedicatedInfoNAS_err,P_ERROR,swLogPrintf("nasMessageLength = %d , pNasMessage = 0x%lx ");
565248,1158709247,0,0,PS1,CERRC,CerrcFillPdcpParameters_else,P_WARNING,swLogPrintf("ROHC shoule ALWAYS be supported for eMTC / Cat1! ");
565248,1158709248,0,0,PS1,CERRC,CerrcFillUeCapabilityEutraContainer_rel,P_WARNING,swLogPrintf("Unsupported AS release version %e<AsReleaseType> ! ");
565248,1158711296,0,0,PS1,CERRC,CerrcFillUeCapabilityEutraContainer_category,P_WARNING,swLogPrintf("Unsupported ueCategory %e<UeCategoryType> , cast it to Category-Cat1 type. ");
565248,1158713344,0,0,PS1,CERRC,CerrcHandleDlInformationTransfer_else,P_INFO,swLogPrintf("Unsupported dedicatedInfoType ( %d ) in DlInformationTransfer , CDMA2000_1XRTT ( 1 ) , CDMA2000_HRPD ( 2 ) ! ");
565248,1158715392,0,0,PS1,CERRC,CerrcHandleCecpDataInd_dlInfo,P_ERROR,swLogPrintf("Invalid DlInformationTransfer , RccState %e<CerrcRccState> ");
565248,1158717440,0,0,PS1,CERRC,CerrcHandleCecpDataInd_recfg,P_ERROR,swLogPrintf("Invalid RrcConnectionReconfiguration , RccState %e<CerrcRccState> ");
565248,1158719488,0,0,PS1,CERRC,CerrcHandleCecpDataInd_rel,P_ERROR,swLogPrintf("Invalid RrcConnectionRelease , RccState %e<CerrcRccState> ");
565248,1158721536,0,0,PS1,CERRC,CerrcHandleCecpDataInd_smc,P_ERROR,swLogPrintf("Invalid SecurityModeCommand , RccState %e<CerrcRccState> ");
565248,1158723584,0,0,PS1,CERRC,CerrcHandleCecpDataInd_cap,P_ERROR,swLogPrintf("Invalid UeCapabilityEnquiry , RccState %e<CerrcRccState> ");
565248,1158725632,0,0,PS1,CERRC,CerrcHandleCecpDataInd_count,P_ERROR,swLogPrintf("Invalid CounterCheck , RccState %e<CerrcRccState> ");
565248,1158727680,0,0,PS1,CERRC,CerrcHandleCecpDataInd_rsm,P_ERROR,swLogPrintf("Invalid RrcConnectionResume , RccState %e<CerrcRccState> ");
565248,1158729728,0,0,PS1,CERRC,CerrcHandleCecpDataInd_ueInfo,P_ERROR,swLogPrintf("Invalid UeInformationRequest , RccState %e<CerrcRccState> ");
565248,1158731776,0,0,PS1,CERRC,CerrcHandleCecpDataInd_loggMeas,P_ERROR,swLogPrintf("Invalid LoggedMeasurementConfiguration , RccState %e<CerrcRccState> ");
565248,1158735871,0,0,PS1,CERRC,CerrcHandleCecpDataInd_unSupp,P_ERROR,swLogPrintf("Unsupported DL_DCCH_MessageType_messageClassExtension_str ");
565248,1158737919,0,0,PS1,CERRC,CerrcHandleCecpDataCnf_return,P_INFO,swLogPrintf("No ulInfoTransBitmap exists in ERRC , ignore this CecpDataCnf ! ");
565248,1158738176,0,0,PS1,CERRC,CerrcHandleCecpDataCnf_entry,P_INFO,swLogPrintf("CecpDataCnf: failPduNum ( %d ) , succPduNum ( %d ) ");
565248,1158742015,0,0,PS1,CERRC,CerrcCreateConnEstContext_exist,P_WARNING,swLogPrintf("ConnEstContext already exists! ");
565248,1158744063,0,0,PS1,CERRC,CerrcHandlePendingConnOrResumeReq_1,P_INFO,swLogPrintf("Handle pending CerrcConnReq / CerrcResumeReq. ");
565248,1158745088,0,0,PS1,CERRC,CerrcCountRrcConnEstInfo_info,P_INFO,swLogPrintf("gEventStatisMode ( %d ) , nvmRrcEstSuccNum ( %d ) , nvmRrcEstFailNum ( %d ) , rrcEstSuccNum ( %d ) , rrcEstFailNum ( %d ) ");
565248,1158746112,0,0,PS1,CERRC,CerrcAccessBarringCheck_t302,P_INFO,swLogPrintf("Access is barred due to T302 or Tbarring ( %d ) is running ! ");
565248,1158748416,0,0,PS1,CERRC,CerrcAccessBarringCheck_notBar,P_INFO,swLogPrintf("Access is not barred: valid accessClass11~15 ( 0x%x ) , acBarringForSpecialAC ( 0x%x ) ");
565248,1158750720,0,0,PS1,CERRC,CerrcAccessBarringCheck_factor1,P_INFO,swLogPrintf("Access is not barred due to rand ( %d ) < acBarringFactor ( %d ) ! GCF ( %d ) ");
565248,1158752512,0,0,PS1,CERRC,CerrcAccessBarringCheck_factor2,P_INFO,swLogPrintf("Access is barred due to rand ( %d ) > = acBarringFactor ( %d ) ! ");
565248,1158756351,0,0,PS1,CERRC,CerrcAccessBarringCheck_else,P_INFO,swLogPrintf("Access is not barred due to no ' AC barring parameter ' in SIB2 ");
565248,1158757120,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_check,P_INFO,swLogPrintf("EAB check: plmnType ( %d ) , abCategory ( %d ) , accessClass0~9 ( 0x%x ) , abBarringBitmap ( 0x%x ) ");
565248,1158760447,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_bar,P_INFO,swLogPrintf("EAB access is barred ");
565248,1158762495,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_else,P_INFO,swLogPrintf("EAB access is not barred ");
565248,1158764543,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_sib14,P_INFO,swLogPrintf("EAB access is not barred due to no EAB parameters ");
565248,1158766591,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_t302,P_INFO,swLogPrintf("ACDC access is barred due to T302 is running ! ");
565248,1158766848,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_factor1,P_INFO,swLogPrintf("ACDC access is not barred due to rand ( %d ) < acBarringFactor ( %d ) ! ");
565248,1158768896,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_factor2,P_INFO,swLogPrintf("ACDC access is barred due to rand ( %d ) > = acBarringFactor ( %d ) ! ");
565248,1158772735,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_else,P_INFO,swLogPrintf("ACDC access is not barred due to no ' ACDC barring parameter ' in SIB2 ");
565248,1158773760,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_AC,P_INFO,swLogPrintf("CerrcAccessBarringCheckNB: PLMN ( %x-%x ) , plmnType ( %d ) , USIM ( AC15~AC0 ) accessClass ( 0x%x ) , abConfigPresent ( %d ) ");
565248,1158775552,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_check,P_INFO,swLogPrintf("Access Barring check: plmnType ( %d ) , abCategory ( %d ) , accessClass0~9 ( 0x%x ) , abBarringBitmap ( 0x%x ) ");
565248,1158778879,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_excp,P_INFO,swLogPrintf("Access is not barred: establishmentCause is mo-ExceptionData and abBarringForExceptionData is FALSE ");
565248,1158779136,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_notBar,P_INFO,swLogPrintf("Access is not barred: valid accessClass11~15 ( 0x%x ) , abBarringForSpecialAC ( 0x%x ) ");
565248,1158781184,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_bar,P_INFO,swLogPrintf("Access is barred: valid accessClass11~15 ( 0x%x ) , abBarringForSpecialAC ( 0x%x ) ");
565248,1158783744,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_cat,P_INFO,swLogPrintf("Access is not barred , plmnType ( %d ) , abCategory ( %d ) , accessClass ( 0x%x ) , abBarringBitmap ( 0x%x ) ");
565248,1158787071,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_abConfig,P_INFO,swLogPrintf("Access is not barred due to abConfig is absent in SIB14-NB ");
565248,1158787072,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_abEnable,P_INFO,swLogPrintf("Access is not barred , abEnabled ( %d ) or SIB14-NB is not scheduled ");
565248,1158791167,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_mt,P_INFO,swLogPrintf("Access is not barred due to MT access ");
565248,1158793215,0,0,PS1,CERRC,CerrcIsAccessAllowed_t302,P_INFO,swLogPrintf("MT Access is barred due to T302 is running ! ");
565248,1158793728,0,0,PS1,CERRC,CerrcIsAccessAllowed_emgerCheck,P_INFO,swLogPrintf("AC check for emergency calls:: valid accessClass11~15 ( 0x%x ) , acBarringForMOData ( %d ) , acBarringForSpecialAC ( 0x%x ) ");
565248,1158795264,0,0,PS1,CERRC,CerrcGetAbortCause_resumeAbort,P_ERROR,swLogPrintf("accessBarReason %e<CerrcAccessBarReason> is wrong ");
565248,1158797312,0,0,PS1,CERRC,CerrcGetAbortCause_establishAbort,P_ERROR,swLogPrintf("accessBarReason %e<CerrcAccessBarReason> is wrong ");
565248,1158801407,0,0,PS1,CERRC,CerrcCheckIfSib14IsNeededBeforeRce_sib14,P_WARNING,swLogPrintf("SIB14 is not scheduled by NW in SIB1. ");
565248,1158801920,0,0,PS1,CERRC,CerrcPreProcessOfConnOrResumeReq_state,P_INFO,swLogPrintf("CerrcConnReq / CerrcResumeReq: RrcState %e<CerrcState> , ActStatus %e<CerrcActStatus> , RccState %e<CerrcRccState> ");
565248,1158803968,0,0,PS1,CERRC,CerrcPreProcessOfConnOrResumeReq_tai,P_INFO,swLogPrintf("CerrcConnReq / CerrcResumeReq: PLMN ( %x-%x ) , TAC ( 0x%x ) ");
565248,1158806016,0,0,PS1,CERRC,CerrcSendCerrcConnCnfToNAS_end,P_INFO,swLogPrintf("Send CerrcConnCnf , estStatus %e<CEstablishStatus> , extendedWaitTimePresent ( %d ) , extendedWaitTime ( %d s ) ");
565248,1158808064,0,0,PS1,CERRC,CerrcSendCerrcResumeCnfToNAS_end,P_INFO,swLogPrintf("Send CerrcResumeCnf , resumeStatus %e<CResumeStatus> , rrcSuspendIndication ( %d ) , extendedWaitTime ( %d s ) ");
565248,1158810368,0,0,PS1,CERRC,CerrcHandleCerrcConnReq_entry,P_INFO,swLogPrintf("Receive CerrcConnReq , EstCause %e<CEstablishmentCause> , callType %e<CallType> , plmnType %e<PlmnType> , upCIoT ( %d ) ");
565248,1158812416,0,0,PS1,CERRC,CerrcHandleCerrcResumeReq_entry,P_INFO,swLogPrintf("Receive CerrcResumeReq , EstCause %e<CEstablishmentCause> , callType %e<CallType> , plmnType %e<PlmnType> , upCIoT ( %d ) ");
565248,1158815743,0,0,PS1,CERRC,CerrcHandleCemacRandomAccessIndInIdle_T300,P_ERROR,swLogPrintf("Received CemacRAInd when T300 is not running ! ");
565248,1158815744,0,0,PS1,CERRC,CerrcCovertEstablishmentCause_rsm,P_ERROR,swLogPrintf("Received unsupported ResumeCause %e<CEstablishmentCause> from EMM ! ");
565248,1158817792,0,0,PS1,CERRC,CerrcCovertEstablishmentCause_est,P_ERROR,swLogPrintf("Received unsupported EstablishmentCause %e<CEstablishmentCause> from EMM ! ");
565248,1158819840,0,0,PS1,CERRC,CerrcHandleRrcConnectionSetup_rceType,P_ERROR,swLogPrintf("Received RrcConnectionSetup in wrong RceType %e<CerrcRceType> ! ");
565248,1158823935,0,0,PS1,CERRC,CerrcHandleRrcConnectionSetup_T300,P_ERROR,swLogPrintf("Received RrcConnectionSetup while T300 is not running ! ");
565248,1158825983,0,0,PS1,CERRC,CerrcHandleRrcConnectionResume_T300,P_ERROR,swLogPrintf("Received RrcConnectionResume while T300 is not running! ");
565248,1158828031,0,0,PS1,CERRC,CerrcHandleRrcConnectionReject_T300,P_ERROR,swLogPrintf("Received RrcConnectionReject while T300 is not running ! ");
565248,1158830079,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_state1,P_WARNING,swLogPrintf("Receive CemacCcchDataInd in Deactive / HIB / SLEEP2 state! ");
565248,1158830080,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_reest1,P_ERROR,swLogPrintf("Invalid RrcConnectionReestablishment , RccState %e<CerrcRccState> ");
565248,1158832128,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_reestRej1,P_ERROR,swLogPrintf("Invalid RrcConnectionReestablishmentReject , RccState %e<CerrcRccState> ");
565248,1158834176,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_connRej1,P_ERROR,swLogPrintf("Invalid RrcConnectionReject , RccState %e<CerrcRccState> ");
565248,1158836224,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_setup1,P_ERROR,swLogPrintf("Invalid RrcConnectionSetup , RccState %e<CerrcRccState> ");
565248,1158838272,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_err1,P_ERROR,swLogPrintf("Unsupported DL_CCCH_MessageType_c1 tag ( %d ) ! ");
565248,1158842367,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_unSupp1,P_ERROR,swLogPrintf("Unsupported T_DL_CCCH_MessageType_messageClassExtension ");
565248,1158844415,0,0,PS1,CERRC,CerrcCreateConnReleaseContext_exist,P_INFO,swLogPrintf("CerrcConnReleaseContext already exists! ");
565248,1158844416,0,0,PS1,CERRC,CerrcSendCerrcReleaseCnfToNAS_cause,P_INFO,swLogPrintf("CerrcReleaseCnf: cause = %e<CerrcReleaseCause> ");
565248,1158846464,0,0,PS1,CERRC,CerrcSendCerrcReleaseIndToNAS_cause,P_INFO,swLogPrintf("CerrcReleaseInd: cause = %e<CerrcReleaseCause> ");
565248,1158850559,0,0,PS1,CERRC,CerrcHandleCerrcReleaseReq_ingore,P_INFO,swLogPrintf("Received CerrcReleaseReq while RCC_CONN_REL , ignore it! ");
565248,1158850560,0,0,PS1,CERRC,CerrcHandleDataInactivityTimerExpiry_RccState,P_INFO,swLogPrintf("Received DataInactivityTimerExpiry in wrong RccState %e<CerrcRccState> , ignore it! ");
565248,1158852608,0,0,PS1,CERRC,CerrcHandleDataInactivityTimerExpiry_idle,P_WARNING,swLogPrintf("Received DataInactivityTimerExpiry in wrong RrcState %e<CerrcState>! ");
565248,1158854656,0,0,PS1,CERRC,CerrcHandleUpAbortInd_RccState,P_INFO,swLogPrintf("Received CerrcHandleUpAbortInd in wrong RccState %e<CerrcRccState> , ignore it! ");
565248,1158856704,0,0,PS1,CERRC,CerrcHandleUpAbortInd_idle,P_WARNING,swLogPrintf("Received CerrcHandleUpAbortInd in wrong RrcState %e<CerrcState>! ");
565248,1158860799,0,0,PS1,CERRC,CerrcHandleRrcConnectionRelease_csfb,P_WARNING,swLogPrintf("Receive RrcConnectionRelease indicates CSFB but we do NOT support ! ");
565248,1158862847,0,0,PS1,CERRC,CerrcHandleRrcConnectionRelease_suspend,P_WARNING,swLogPrintf("Receive RrcConnectionRelease indicates suspend but not including resumeIdentity ! ");
565248,1158864895,0,0,PS1,CERRC,CerrcCreateConnReEstContext_exist,P_WARNING,swLogPrintf("CerrcConnReEstContext already exists! ");
565248,1158864896,0,0,PS1,CERRC,CerrcUpdateDataInactivityTimerFromNvm_nvm,P_INFO,swLogPrintf("set the DataInactivityTimer according to NVM ( %d ) ! ");
565248,1158867456,0,0,PS1,CERRC,CerrcCheckDrbToAddModList_check2,P_WARNING,swLogPrintf("New DRB , rlc_ConfigPresent ( %d ) , logicalChannelIdentityPresent ( %d ) and logicalChannelConfigPresent ( %d ) should present ! ");
565248,1158868992,0,0,PS1,CERRC,CerrcCheckSrbToAddModList_check1,P_WARNING,swLogPrintf("Setup a New SRB , srb_Identity ( %d ) , not SRB2 ! ");
565248,1158871552,0,0,PS1,CERRC,CerrcCheckSrbToAddModList_check2,P_WARNING,swLogPrintf("New SRB , srb_Identity ( %d ) , rlc_ConfigPresent ( %d ) , logicalChannelConfigPresent ( %d ) should present ! ");
565248,1158875135,0,0,PS1,CERRC,CerrcSetDedicatedPhysicalConfig_error,P_ERROR,swLogPrintf("No valid decode memory address pBufHdr for CephyDedicatedConfigReq ! ");
565248,1158875392,0,0,PS1,CERRC,CerrcUpdateSrbInfo_initial,P_INFO,swLogPrintf("Inital set SRB ( %d ) update-type as %e<UpConfigType>. ");
565248,1158877440,0,0,PS1,CERRC,CerrcRevertSrbDrbsConfig_info1,P_INFO,swLogPrintf("Revert SRB [ %d ] from Backup-Context due Handover Fail , type %e<UpConfigType>. ");
565248,1158879488,0,0,PS1,CERRC,CerrcRevertSrbDrbsConfig_info2,P_INFO,swLogPrintf("Revert DRB [ %d ] from Backup-Context due Handover Fail , type %e<UpConfigType>. ");
565248,1158881792,0,0,PS1,CERRC,CerrcStoreDecodeMemoryForPhy_rec,P_WARNING,swLogPrintf("This decode memory OsaIeMemInfo->pBufHdr ( 0x%X ) is already exists! index ( %d ) , numOfIeMemInfoForPhy ( %d ) ");
565248,1158883584,0,0,PS1,CERRC,CerrcStoreDecodeMemoryForPhy_full,P_WARNING,swLogPrintf("numOfIeMemInfoForPhy ( %d ) exceeds MAX limitation ( %d ) , something wrong in PHY ");
565248,1158885888,0,0,PS1,CERRC,CerrcStoreDecodeMemoryForPhy_save,P_INFO,swLogPrintf("Store decode memory OsaIeMemInfo->pBufHdr ( 0x%X ) , numOfIeMemInfoForPhy ( %d ) , index ( %d ) ");
565248,1158887424,0,0,PS1,CERRC,CerrcStoreDecodeMemoryForPhy_err,P_ERROR,swLogPrintf("Should not come here! numOfIeMemInfoForPhy ( %d ) ");
565248,1158889984,0,0,PS1,CERRC,CerrcFindDecMemForPhy_find,P_INFO,swLogPrintf("OsaIeMemInfo->pBufHdr ( 0x%X ) exists in array! numOfIeMemInfoForPhy ( %d ) , needClear ( %d ) ");
565248,1158893567,0,0,PS1,CERRC,CerrcSendCephyResetInd_send,P_WARNING,swLogPrintf("CERRC triggers CephyResetInd ");
565248,1158895615,0,0,PS1,CERRC,CerrcHandleCephyFreeCfgMemInd_HO,P_INFO,swLogPrintf("Received CephyFreeCfgMemInd but cannot free ieMemInfo since this decode memory is using by handover context! ");
565248,1158895872,0,0,PS1,CERRC,CerrcHandleCephyFreeCfgMemInd_free,P_INFO,swLogPrintf("Received CephyFreeCfgMemInd and free the OsaIeMemInfo->pBufHdr ( 0x%X ) , numOfIeMemInfoForPhy ( %d ) ");
565248,1158897920,0,0,PS1,CERRC,CerrcHandleCephyFreeCfgMemInd_ignore,P_WARNING,swLogPrintf("Ignore this CephyFreeCfgMemInd! Cannot find pBufHdr ( 0x%X ) in ERRC stored array , numOfIeMemInfoForPhy ( %d ) ");
565248,1158899968,0,0,PS1,CERRC,CerrcHandleCephyFreeCfgMemInd_state,P_WARNING,swLogPrintf("Ignore this CephyFreeCfgMemInd! CerrcGetConnContext ( 0x%X ) , pBufHdr ( 0x%X ) ");
565248,1158903807,0,0,PS1,CERRC,CerrcCreateHandoverContext_exist,P_WARNING,swLogPrintf("CerrcHandoverContext already exists! ");
565248,1158905855,0,0,PS1,CERRC,CerrcUpdateHandoverContext_warn,P_WARNING,swLogPrintf("MobilityControlInfo include rachSkipr14. ");
565248,1158907903,0,0,PS1,CERRC,CerrcHandleSysInfoBlockType1DuringHO_err,P_ERROR,swLogPrintf("HandoverContext not exist! ");
565248,1158909951,0,0,PS1,CERRC,CerrcHandleSecurityActionDuringHO_warn,P_WARNING,swLogPrintf("Not support HO Security interRAT type! ");
565248,1158910208,0,0,PS1,CERRC,CerrcHandleCephyHandoverCnf_HO,P_WARNING,swLogPrintf("HANDOVER to CELL ( %d , %d ) ");
565248,1158912000,0,0,PS1,CERRC,CerrcHandleCephyHandoverCnf_else,P_WARNING,swLogPrintf("Received CephyHandoverCnf in wrong RccState %e<CerrcRccState> ! ");
565248,1158916095,0,0,PS1,CERRC,CerrcHandleHandoverAfterRandomAccessInd_T304,P_WARNING,swLogPrintf("Received CemacRAInd->ERROR while T304 is NOT running ! ");
565248,1158918143,0,0,PS1,CERRC,CerrcHandleReestablishmentAfterRandomAccessInd_T301,P_WARNING,swLogPrintf("Received CemacRAInd->ERROR while T301 is NOT running ! ");
565248,1158920191,0,0,PS1,CERRC,CerrcSendRrcConnectionReconfigurationComplete_notSupport,P_ERROR,swLogPrintf("UE not support CA! ");
565248,1158920192,0,0,PS1,CERRC,CerrcSendRRCConnectionReestablishmentRequest_err,P_ERROR,swLogPrintf("Unsupported reestblishementCause %d ! ");
565248,1158922240,0,0,PS1,CERRC,CerrcDeriveAsKey_algId,P_INFO,swLogPrintf("KeyType %e<CerrcDerivedAsKeyType> ");
565248,1158924800,0,0,PS1,CERRC,CerrcSyncNH_HCC,P_INFO,swLogPrintf("currentHopChainingCount ( %d ) , nextHopChainingCount ( %d ) , bInitialNH ( %d ) ");
565248,1158926336,0,0,PS1,CERRC,CerrcCheckSMCIntegrityProtection_count,P_INFO,swLogPrintf("The correct NAS UL COUNT is 0x%x ");
565248,1158928896,0,0,PS1,CERRC,CerrcCalcXmacI_input,P_INFO,swLogPrintf("EIA %e<IntegrityAlgorithm> , dlCount ( %d ) , bearer ( %d ) ");
565248,1158930432,0,0,PS1,CERRC,CerrcCalcXmacI_xmacI,P_INFO,swLogPrintf("xMacI ( 0x%x ) ");
565248,1158932736,0,0,PS1,CERRC,CerrcCheckIfIntegrityProtectionPassed_fail,P_INFO,swLogPrintf("xMacI ( %x ) , macI ( %x ) ");
565248,1158934528,0,0,PS1,CERRC,CerrcStoreSib2SiRawData_store,P_INFO,swLogPrintf("Store the SIB2 SI data since it contains other SIBx , sibTypeMapBitmap ( 0x%x ) ");
565248,1158936832,0,0,PS1,CERRC,CerrcReleaseSib2SiRawData_free,P_INFO,swLogPrintf("Clear the stored SIB2 SI data of Cell ( %d , %d ) ");
565248,1158940671,0,0,PS1,CERRC,CerrcProcessSibxInSameSiWithSib2_dec,P_INFO,swLogPrintf("Decode and apply the stored SIB2 SI ");
565248,1158941440,0,0,PS1,CERRC,CerrcProcessSibxInSameSiWithSib2_cell,P_ERROR,swLogPrintf("Discard the stored SIB2 SI of Cell ( %d , %d ) , since current Cell ( %d , %d ) ");
565248,1158942976,0,0,PS1,CERRC,CerrcProcessSibxInSameSiWithSib2_else,P_INFO,swLogPrintf("No SIBx in the SIB2 SI need to be processed , siMissingBitmap ( 0x%x ) , siRequiredBitmap ( 0x%x ) ");
565248,1158946815,0,0,PS1,CERRC,CerrcSendCephyInterFreqConfigReq_freq,P_WARNING,swLogPrintf("There is no supported inter-freq in SIB5 ! ");
565248,1158948863,0,0,PS1,CERRC,CerrcSendCephyInterFreqConfigReq_ext,P_ERROR,swLogPrintf("We need to extend MAX inter-Freq number ! ");
565248,1158949120,0,0,PS1,CERRC,CerrcSendCephyInterFreqConfigReq_info,P_INFO,swLogPrintf("InterFreqConfigReq [ %d ] = %d ");
565248,1158950912,0,0,PS1,CERRC,CerrcCopySib2Data_ase,P_WARNING,swLogPrintf("Need to extend additionalSpectrumEmission ( %d ) ! ");
565248,1158955007,0,0,PS1,CERRC,CerrcCopySib3Data_sDeltaP,P_INFO,swLogPrintf("s_SearchDeltaP_r14 is present in SIB3! ");
565248,1158957055,0,0,PS1,CERRC,CerrcCopySib3Data_sDeltaPNvm,P_INFO,swLogPrintf("sSearchDeltaP is set according to NVM! ");
565248,1158959103,0,0,PS1,CERRC,CerrcCopySib3Data_sDeltaPZero,P_INFO,swLogPrintf("sSearchDeltaP is set to 0 ! ");
565248,1158959360,0,0,PS1,CERRC,CerrcCopySib5Data_newEarfcn,P_INFO,swLogPrintf("convert to EARFCN ( %d ) according to selectedBand ( %d ) !! ");
565248,1158961152,0,0,PS1,CERRC,CerrcCopySib5Data_intra,P_WARNING,swLogPrintf("Skip the intra-freq EARFCN ( %d ) in SIB5 !! ");
565248,1158965247,0,0,PS1,CERRC,CerrcCopySib5Data_ext,P_ERROR,swLogPrintf("We need to extend MAX inter-Freq number ! ");
565248,1158965504,0,0,PS1,CERRC,CerrcCopySib5Data_newEarfcnExt,P_INFO,swLogPrintf("convert to EARFCN ( %d ) according to selectedBand ( %d ) !! ");
565248,1158967296,0,0,PS1,CERRC,CerrcCopySib5Data_intraExt,P_WARNING,swLogPrintf("Skip the intra-freq EARFCN ( %d ) in SIB5 !! ");
565248,1158970112,0,0,PS1,CERRC,CerrcCheckIfAlreadyReAssembled_info,P_INFO,swLogPrintf("value pair messageIdentifier ( %d ) , serialNumber ( %d ) is the same as the last assembled value pair messageIdentifier ( %d ) , serialNumber ( %d ) ");
565248,1158971392,0,0,PS1,CERRC,CerrcCopySib11Data_hasRecv,P_INFO,swLogPrintf("The warningMessageSegmentNumber ( %d ) has already buffered , ingore it. ");
565248,1158973440,0,0,PS1,CERRC,CerrcReceivedAllSegsForOneCmasWarningMessage_recvAll,P_INFO,swLogPrintf("CMAS Warning Msg ( %d ) has received completed. ");
565248,1158977535,0,0,PS1,CERRC,CerrcSib1Decode_else,P_WARNING,swLogPrintf("Received SIB1 in unexpected state! ");
565248,1158977536,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_est,P_INFO,swLogPrintf("SI 3 H timer expired in RccState %e<CerrcRccState> , pending until return IDLE! ");
565248,1158981631,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_bg,P_INFO,swLogPrintf("SI 3 H timer expired during BG PLMN , abort PLMN first! ");
565248,1158983679,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_resel,P_INFO,swLogPrintf("SI 3 H timer expired during reselection , pending until reselection finished! ");
565248,1158985727,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_conn,P_INFO,swLogPrintf("SI 3 H timer expired in CERRC connected state , pending until return IDLE! ");
565248,1158987775,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_deact,P_WARNING,swLogPrintf("SI 3 H timer expired in CERRC deactive state! ");
565248,1158987776,0,0,PS1,CERRC,CerrcCheckIfStoredSiOutDated_expriy,P_SIG,swLogPrintf("SI 3 H timer expired , last updating time is %d ");
565248,1158991871,0,0,PS1,CERRC,CerrcHandleCephyWaitBoundaryInd_err,P_ERROR,swLogPrintf("ERRC is not waiting for BCCH boundary !! ");
565248,1158993919,0,0,PS1,CERRC,CerrcHandleCephyWaitBoundaryInd_else,P_ERROR,swLogPrintf("Received CephyWaitBoundaryInd with timeLen 0 ms !! ");
565248,1158994176,0,0,PS1,CERRC,CerrcProcessMibAfterLeavingConnectedState_siMod,P_INFO,swLogPrintf("Perform cell search after leaving connected state , due to sysInfoValueTag is changed from ( %d ) to ( %d ) ! ");
565248,1158995968,0,0,PS1,CERRC,CerrcProcessMibAfterLeavingConnectedState_crc,P_INFO,swLogPrintf("MIB fail during SI update after leaving connected state , MIB crcResult is %d ! ");
565248,1158998016,0,0,PS1,CERRC,CerrcProcessSiUpdtMib_crc,P_INFO,swLogPrintf("MIB fail during SI update , MIB crcResult is %d ! ");
565248,1159000320,0,0,PS1,CERRC,CerrcRequestSibsProc_noSib,P_INFO,swLogPrintf("No SIB is requested: siRequiredBitmap ( 0x%X ) , siValidBitmap ( 0x%X ) ");
565248,1159002368,0,0,PS1,CERRC,CerrcRequestCertainSibsProc_noSib,P_INFO,swLogPrintf("No SIB is requested: siRequiredBitmap ( 0x%X ) , siValidBitmap ( 0x%X ) ");
565248,1159006207,0,0,PS1,CERRC,CerrcProcessMibInIdle_else,P_ERROR,swLogPrintf("Received MIB in wrong PLMN search state! ");
565248,1159006208,0,0,PS1,CERRC,CerrcProcessMibInConn_state,P_WARNING,swLogPrintf("Receive CephySysInfoInd in wrong RccState %e<CerrcRccState>! ");
565248,1159008256,0,0,PS1,CERRC,CerrcProcessSibsInConn_csrState,P_WARNING,swLogPrintf("Receive CephySysInfoInd in wrong CsrState %e<CerrcCsrState>! ");
565248,1159010304,0,0,PS1,CERRC,CerrcProcessSibsInConn_state,P_WARNING,swLogPrintf("Receive CephySysInfoInd in wrong RccState %e<CerrcRccState>! ");
565248,1159013120,0,0,PS1,CERRC,CerrcHandleCephySysInfoInd_entry,P_INFO,swLogPrintf("Cell ( %d , %d ) , crcResult ( %d ) , type %e<SysInfoIndType> ");
565248,1159016447,0,0,PS1,CERRC,CerrcHandleCephySysInfoInd_ret,P_INFO,swLogPrintf("Receive CephySysInfoInd while waiting for CephyDeactCnf ");
565248,1159016448,0,0,PS1,CERRC,CerrcHandleCephySysInfoInd_state,P_WARNING,swLogPrintf("Receive CephySysInfoInd in wrong RrcState %e<CerrcState>! ");
565248,1159019264,0,0,PS1,CERRC,CerrcHandleCephyNcellSysInfoInd_entry,P_INFO,swLogPrintf("Cell ( %d , %d ) , crcResult ( %d ) , type %e<SysInfoIndType> ");
565248,1159020800,0,0,PS1,CERRC,CerrcHandleCephyNcellSysInfoInd_state,P_WARNING,swLogPrintf("Receive CephyNcellSysInfoInd in wrong RrcState %e<CerrcState> or RccState %e<CerrcRccState>! ");
565248,1159022592,0,0,PS1,CERRC,CerrcHandleT300Expiry_rccState,P_WARNING,swLogPrintf("T300 Expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159024640,0,0,PS1,CERRC,CerrcHandleT301Expiry_rccState,P_WARNING,swLogPrintf("T301 expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159026688,0,0,PS1,CERRC,CerrcHandleT311Expiry_rccState,P_WARNING,swLogPrintf("T311 expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159028736,0,0,PS1,CERRC,CerrcHandleT304Expiry_rccState,P_WARNING,swLogPrintf("T304 expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159032831,0,0,PS1,CERRC,CerrcHandleBcchModExpiry_err,P_ERROR,swLogPrintf("ERRC is not waiting for BCCH boundary !! ");
565248,1159032832,0,0,PS1,CERRC,CerrcHandleCellSearchGuardTimerExpiry_csrState,P_WARNING,swLogPrintf("CellSearchGuardTimerExpiry in wrong CsrState %e<CerrcCsrState> ! ");
565248,1159034880,0,0,PS1,CERRC,CerrcHandleCellSearchGuardTimerExpiry_rccState,P_WARNING,swLogPrintf("CellSearchGuardTimerExpiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159036928,0,0,PS1,CERRC,CerrcHandleCellSearchGuardTimerExpiry_rrcState,P_WARNING,swLogPrintf("CellSearchGuardTimerExpiry in wrong RrcState %e<CerrcState> ! ");
565248,1159038976,0,0,PS1,CERRC,CerrcHandleCampingGuardTimerExpiry_csrState,P_WARNING,swLogPrintf("CampingGuardTimerExpiry in wrong CsrState %e<CerrcCsrState> ! ");
565248,1159041280,0,0,PS1,CERRC,CerrcHandleCampingGuardTimerExpiry_rccState,P_WARNING,swLogPrintf("CampingGuardTimerExpiry in wrong RrcState %e<CerrcState> , RccState %e<CerrcRccState> ! ");
565248,1159043072,0,0,PS1,CERRC,CerrcHandleReceivingSib14GuardTimerExpiry_rccState,P_WARNING,swLogPrintf("SIB14 guard timer expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159047167,0,0,PS1,CERRC,CerrcHandleMibUpdateGuardTimerExpiry_entry,P_WARNING,swLogPrintf("MIB guard timer expiry !! ");
565248,1159049215,0,0,PS1,CERRC,CerrcHandleMibUpdateGuardTimerExpiry_else,P_WARNING,swLogPrintf("MIB guard timer expiry unexpected !! ");
565248,1159049728,0,0,PS1,CERRC,CerrcDebugForTimer_timer,P_ERROR,swLogPrintf("GosTimerIsRunning ( 0x%x ) = %d ! IS_IRQ_MODE ( %d ) ");
565248,1159051520,0,0,PS1,CERRC,CerrcDebugForTimer_timerNull,P_ERROR,swLogPrintf("Cannot find timer %e<CerrcTimerId> in ERRC timer list ! pTimerList ( %x ) ");
565248,1159053568,0,0,PS1,CERRC,CerrcIsTimerRunning_T300,P_ERROR,swLogPrintf("ERRC T300 running status ( %d ) , Gos T300 running status ( %d ) ");
565248,1159057407,0,0,PS1,CERRC,CerrcStartTimer_t300,P_INFO,swLogPrintf("Start T300 ");
565248,1159057664,0,0,PS1,CERRC,CerrcStartTimer_Id,P_INFO,swLogPrintf("CerrcStartTimer: timerId %e<CerrcTimerId> , timerPeriod = %d ms ");
565248,1159059456,0,0,PS1,CERRC,CerrcStartTimer_timerId,P_INFO,swLogPrintf("Add timerId allocated by OS: osTimerId_t = 0x%x ");
565248,1159061504,0,0,PS1,CERRC,CerrcStartTimer_fail,P_ERROR,swLogPrintf("Start timer fail: osStatus_t ( %d ) ");
565248,1159063808,0,0,PS1,CERRC,CerrcStopTimerIfRunning_stop,P_INFO,swLogPrintf("CerrcStopTimer: timerId %e<CerrcTimerId> , osTimerId_t = 0x%x ");
565248,1159065600,0,0,PS1,CERRC,CerrcHandleTimerExpiry_start,P_WARNING,swLogPrintf("timerId %e<CerrcTimerId> has not started: ");
565248,1159068160,0,0,PS1,CERRC,CerrcHandleTimerExpiry_Id,P_INFO,swLogPrintf("CerrcHandleTimerExpiry: timerId %e<CerrcTimerId> , osTimerId_t = 0x%x , timerPeriod = %d ms ");
565248,1159071743,0,0,PS1,CERRC,CerrcHandleTimerExpiry_deact_cnf,P_ERROR,swLogPrintf("CERRC_T_DEACT_CNF_GUARD Timer expiry , please foward it to PHY. ");
565248,1159073791,0,0,PS1,CERRC,CerrcHandleTimerExpiry_mac_reset_cnf,P_ERROR,swLogPrintf("CERRC_T_MAC_RESET_CNF_GUARD Timer expiry , please foward it to PHY. ");
565248,1159073792,0,0,PS1,CERRC,CerrcHandleTimerExpiry_errCat1,P_ERROR,swLogPrintf("timerId is invalid: %d ");
565248,1159076096,0,0,PS1,CERRC,CerrcStartHibTimer_Id,P_INFO,swLogPrintf("CerrcStartHibTimer: hibTimerId %e<OsaHibTimerId> , timerPeriod = %d ms ");
565248,1159077888,0,0,PS1,CERRC,CerrcStopHibTimerIfRunning_stop,P_INFO,swLogPrintf("CerrcHibStopTimer: hibTimerId %e<OsaHibTimerId> ");
565248,1159079936,0,0,PS1,CERRC,CerrcHandleHibTimerExpiry_err,P_VALUE,swLogPrintf("Unexpected hibTimerId:%d ");
565248,1159081984,0,0,PS1,CERRC,CerrcRsrpMapping_err,P_ERROR,swLogPrintf("Invalid rsrp ( %d ) ! ");
565248,1159084032,0,0,PS1,CERRC,CerrcRsrqMapping_err,P_ERROR,swLogPrintf("Invalid rsrq ( %d ) ! ");
565248,1159086080,0,0,PS1,CERRC,CerrcNRsrpMapping_err,P_ERROR,swLogPrintf("Invalid rsrp ( %d ) ! ");
565248,1159088384,0,0,PS1,CERRC,CerrcNRsrqMapping_err,P_ERROR,swLogPrintf("Invalid rsrq ( %d ) , rsrqMapping ( %d ) ! ");
565248,1159090176,0,0,PS1,CERRC,CerrcGetRfBandHalfDuplex_err,P_ERROR,swLogPrintf("Cannot find Band ( %d ) in UE support RfBandList ! ");
565248,1159094271,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_csDomain,P_INFO,swLogPrintf("This PagingRecord is for CS domain , ignore it! ");
565248,1159094528,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_wrongStmsi,P_INFO,swLogPrintf("Mismatch s-TMSI , UE MMEC ( 0x%x ) , mTMSI ( 0x%x ) ");
565248,1159098367,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_stmsi,P_INFO,swLogPrintf("Paging for s-TMSI but sTMSIPresent is FALSE ");
565248,1159100415,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_imsi,P_INFO,swLogPrintf("Paging for IMSI but bIMSIPresent is FALSE ");
565248,1159100416,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_tag,P_WARNING,swLogPrintf("Invalid pPagingRecord->tag ( %d ) ! ");
565248,1159104511,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_mismatch,P_INFO,swLogPrintf("This PagingRecord is not for this UE! PagingRecord mismatch! ");
565248,1159106559,0,0,PS1,CERRC,CerrcBootDecodeSkipUnsupportedExtension_else,P_WARNING,swLogPrintf("Invalid lengh of extension ! ");
565248,1159107840,0,0,PS1,CERRC,CerrcBootUpDueToPaging_wakeup,P_SIG,swLogPrintf("Wake up due to Paging ! UeId ( %d ) , SI ( %d ) , SI_eDRX ( %d ) , ETWS ( %d ) , CMAS ( %d ) , EAB ( %d ) ");
565248,1159110655,0,0,PS1,CERRC,CerrcBootUpDueToPaging_decInvalid,P_INFO,swLogPrintf("This Paging has nothing to do with us ! ");
565248,1159112703,0,0,PS1,CERRC,CerrcBootUpDueToPaging_decErr,P_WARNING,swLogPrintf("The paging info cannot be decoded correctly ! ");
565248,1159112704,0,0,PS1,CERRC,CerrcBootUpDueToPaging_pagingType,P_WARNING,swLogPrintf("Unsupported pagingType ( %d ) ");
565248,1159115008,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_slp2,P_SIG,swLogPrintf("SLEEP2: SERV CELL: RSRP ( %d ) , RSRQ ( %d ) ");
565248,1159117056,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_hib,P_SIG,swLogPrintf("HIBERNATE: SERV CELL: RSRP ( %d ) , RSRQ ( %d ) ");
565248,1159119616,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_rmTrue,P_SIG,swLogPrintf("CERRC HIB: Wake up due to RSRP ( %d ) < = rmRsrpThreshold ( %d ) || RSRQ ( %d ) < = nRsrqThreshold ( %d ) ");
565248,1159121152,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_update,P_SIG,swLogPrintf("CERRC HIB: Wake up due to need to update rmRsrpThreshold to ( %d ) , sSearchDeltaP ( %d ) ");
565248,1159123712,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_true,P_SIG,swLogPrintf("CERRC HIB: Wake up due to RSRP ( %d ) < = nRsrpThreshold ( %d ) || RSRQ ( %d ) < = nRsrqThreshold ( %d ) ");
565248,1159127039,0,0,PS1,CERRC,CerrcLeaveSleep2DueToReselection_HIB,P_INFO,swLogPrintf("CERRC vote to enter HIB , but enter SLEEP2 instead! ");
565248,1159127808,0,0,PS1,CERRC,CerrcLeaveSleep2DueToReselection_serv,P_SIG,swLogPrintf("SLEEP2: SERV CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1159131135,0,0,PS1,CERRC,CerrcLeaveSleep2DueToReselection_reselect,P_SIG,swLogPrintf("CERRC SLEEP2: Wake up due to CELL RESELECTION ! ");
565248,1159133183,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_criS,P_SIG,swLogPrintf("CERRC SLEEP2: Wake up due to CriterionS is not fulfilled ! ");
565248,1159134208,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_entry,P_VALUE,swLogPrintf("CERRC SLEEP2: s-SearchDeltaP ( %d ) , Srxlev ( %d ) , SrxlevRef ( %d ) , bRMCriterionFulfilled ( %d ) , higherPriorityBitmap ( 0x%X ) ");
565248,1159137279,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_stopIntra,P_SIG,swLogPrintf("CERRC SLEEP2: Wake up due to STOP intra-meas ! ");
565248,1159139327,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_startIntra,P_SIG,swLogPrintf("CERRC SLEEP2: Wake up due to START intra-meas ! ");
565248,1159141375,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_startInter,P_SIG,swLogPrintf("CERRC SLEEP2: Wake up due to START inter-meas ! ");
565248,1159141632,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_lowerInter,P_SIG,swLogPrintf("CERRC SLEEP2: Wake up due to MODIFY lower priority inter-meas ! bLowerPriorityNeeded ( %d ) , bLowerPriorityOngoing ( %d ) ");
565248,1159145471,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_stopInter,P_SIG,swLogPrintf("CERRC SLEEP2: Wake up due to STOP inter-meas ! ");
565248,1159147519,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_stay,P_INFO,swLogPrintf("Stay in SLEEP2 state ! ");
565248,1159147776,0,0,PS1,CERRC,CerrcAddIdleIntraFreqCellToDB_info1,P_INFO,swLogPrintf("INTRA FREQ CELL ( %d , %d ) has existed in intra neighcell DB , update its value. ");
565248,1159149824,0,0,PS1,CERRC,CerrcAddIdleIntraFreqCellToDB_info2,P_INFO,swLogPrintf("Add INTRA FREQ CELL ( %d , %d ) into intra neighcell DB. ");
565248,1159151872,0,0,PS1,CERRC,CerrcAddIdleIntraFreqCellToDB_info3,P_INFO,swLogPrintf("Remove the oldest cell and add INTRA FREQ CELL ( %d , %d ) into intra neighcell DB. ");
565248,1159153920,0,0,PS1,CERRC,CerrcAddIdleInterFreqCellToDB_info1,P_INFO,swLogPrintf("INTER FREQ CELL ( %d , %d ) has existed in inter neighcell DB , update its value. ");
565248,1159155968,0,0,PS1,CERRC,CerrcAddIdleInterFreqCellToDB_info2,P_INFO,swLogPrintf("Add INTER FREQ CELL ( %d , %d ) into inter neighcell DB. ");
565248,1159158016,0,0,PS1,CERRC,CerrcAddIdleInterFreqCellToDB_info3,P_INFO,swLogPrintf("Remove the oldest cell and add INTER FREQ CELL ( %d , %d ) into inter neighcell DB. ");
565248,1159160320,0,0,PS1,CERRC,CerrcRefreshIdleIntraCellsInDB_del,P_INFO,swLogPrintf("Cell ( %d , %d ) has NOT been detected over %d ms , remove it from intra neighcell DB. ");
565248,1159162368,0,0,PS1,CERRC,CerrcRefreshIdleInterCellsInDB_del,P_INFO,swLogPrintf("Cell ( %d , %d ) has NOT been detected over %d ms , remove it from inter neighcell DB. ");
565248,1159164672,0,0,PS1,CERRC,CerrcProcessIdleIntraCellMeasInd_intra,P_SIG,swLogPrintf("INTRA FREQ CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1159165952,0,0,PS1,CERRC,CerrcProcessIdleInterCellMeasInd_intra,P_WARNING,swLogPrintf("Received intra frequency ( %d ) in inter meas , skip it ! ");
565248,1159168768,0,0,PS1,CERRC,CerrcProcessIdleInterCellMeasInd_inter,P_SIG,swLogPrintf("INTER FREQ CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1159170048,0,0,PS1,CERRC,CerrcProcessIdleInterCellMeasInd_err,P_WARNING,swLogPrintf("Cannot find Inter frequency ( %d ) in DB , skip it ! ");
565248,1159173888,0,0,PS1,CERRC,CerrcStoreIdleServCellMeasInd_end,P_VALUE,swLogPrintf("Serving CELL ( %d , %d ) : Srxlev ( %d ) , sQual ( %d ) , rank ( %d ) , qRxLevMin ( %d ) , qOffsetTemp ( %d ) , qHyst ( %d ) ");
565248,1159176191,0,0,PS1,CERRC,CerrcIsWaitForSiUpdate_SiWating,P_INFO,swLogPrintf("Don ' t start reselect evaluate while SI update is ongoing. ");
565248,1159177984,0,0,PS1,CERRC,CerrcCalcIntraCellRank_rank,P_VALUE,swLogPrintf("Intra CELL ( %d , %d ) : Srxlev ( %d ) , sQual ( %d ) , rank ( %d ) , qRxLevMin ( %d ) , qOffset ( %d ) , qOffsetTemp ( %d ) ");
565248,1159180032,0,0,PS1,CERRC,CerrcCalcInterCellRank_rank,P_VALUE,swLogPrintf("Inter CELL ( %d , %d ) : Srxlev ( %d ) , sQual ( %d ) , rank ( %d ) , qRxLevMin ( %d ) , qOffset ( %d ) , qOffsetTemp ( %d ) ");
565248,1159180800,0,0,PS1,CERRC,CerrcSkipReselFreq_intra,P_INFO,swLogPrintf("Skip intra-freq due to: numOfCell ( %d ) , top cell rankValid ( %d ) , barredByBestRank ( %d ) ");
565248,1159183360,0,0,PS1,CERRC,CerrcSkipReselFreq_inter,P_INFO,swLogPrintf("Skip inter-freq ( %d ) due to: numOfCell ( %d ) , top cell rankValid ( %d ) , barredByBestRank ( %d ) , freqLock ( %d ) ");
565248,1159185152,0,0,PS1,CERRC,CerrcEvalReselCriterionHigherPriority_rsrq,P_INFO,swLogPrintf("CELL ( %d , %d ) NOT fulfills reselection criteria: Squal ( %d ) > threshXHighQ ( %d ) ");
565248,1159187200,0,0,PS1,CERRC,CerrcEvalReselCriterionHigherPriority_rsrp,P_INFO,swLogPrintf("CELL ( %d , %d ) NOT fulfills reselection criteria: Srxlev ( %d ) > threshXHigh ( %d ) ");
565248,1159189760,0,0,PS1,CERRC,CerrcEvalReselCriterionLowerPriority_rsrq,P_INFO,swLogPrintf("CELL ( %d , %d ) NOT fulfills reselection criteria: serving Squal ( %d ) < threshServingLowQ ( %d ) && neighbor Squal ( %d ) > threshXLowQ ( %d ) ");
565248,1159191808,0,0,PS1,CERRC,CerrcEvalReselCriterionLowerPriority_rsrp,P_INFO,swLogPrintf("CELL ( %d , %d ) NOT fulfills reselection criteria: serving Srxlev ( %d ) < threshServingLow ( %d ) && neighbor Srxlev ( %d ) > threshXLow ( %d ) ");
565248,1159192832,0,0,PS1,CERRC,CerrcEvalReselCriterion_startT0,P_INFO,swLogPrintf("CELL ( %d , %d ) fulfills reselection criteria , reselect to it immediately as Treselection is 0 . ");
565248,1159195136,0,0,PS1,CERRC,CerrcEvalReselCriterion_reselectTime,P_INFO,swLogPrintf("CELL ( %d , %d ) already fulfills reselection criteria over Treselection ( %d ) seconds. ");
565248,1159197184,0,0,PS1,CERRC,CerrcEvalReselCriterion_startT,P_INFO,swLogPrintf("CELL ( %d , %d ) fulfills reselection criteria , but still need Treselection ( %d ) seconds to continue evaluate it. ");
565248,1159199232,0,0,PS1,CERRC,CerrcGetHighestRankedCell_end,P_INFO,swLogPrintf("Highest ranked CELL ( %d , %d ) , rank ( %d ) ");
565248,1159202815,0,0,PS1,CERRC,CerrcRemoveInvalidBestRankBar_intra,P_INFO,swLogPrintf("Intra-freq barredByBestRank flag is set as FALSE ! ");
565248,1159202816,0,0,PS1,CERRC,CerrcRemoveInvalidBestRankBar_inter,P_INFO,swLogPrintf("Inter-freq ( %d ) barredByBestRank flag is set as FALSE ! ");
565248,1159205376,0,0,PS1,CERRC,CerrcUpdateFreqBarredByBestRank_intra,P_INFO,swLogPrintf("Intra-freq barredByBestRank flag set as TRUE due to highest ranked intra-CELL ( %d ) : barredByPlmn ( %d ) , barredByTa ( %d ) ");
565248,1159207680,0,0,PS1,CERRC,CerrcUpdateFreqBarredByBestRank_inter,P_INFO,swLogPrintf("Inter-freq ( %d ) barredByBestRank flag set as TRUE due to highest ranked inter-CELL ( %d ) : barredByPlmn ( %d ) , barredByTa ( %d ) ");
565248,1159208960,0,0,PS1,CERRC,CerrcUpdateFreqBarredByBestRank_else,P_INFO,swLogPrintf("CampOnState %e<CerrcCampOnState> ");
565248,1159211520,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_intra,P_INFO,swLogPrintf("CampOnState %e<CerrcCampOnState> , barredByPlmn ( %d ) , barredByTa ( %d ) ");
565248,1159213568,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_inter,P_INFO,swLogPrintf("CampOnState %e<CerrcCampOnState> , barredByPlmn ( %d ) , barredByTa ( %d ) ");
565248,1159217151,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_else,P_INFO,swLogPrintf("Reselect is not needed due to camping less than 1 second. ");
565248,1159217408,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_pingpong,P_SIG,swLogPrintf("Cell ( %d , %d ) will trigger pingpong reselection , NOT reselect to it. ");
565248,1159219456,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_need,P_INFO,swLogPrintf("Start to reselect to Cell ( %d , %d ) . ");
575488,1178601472,0,0,PS1,NAS,CemmSetNasEventOperReq_1,P_VALUE,swLogPrintf("Unexpected set parameter type: %d ");
575488,1178603779,0,0,PS1,NAS,CemmProcGetRplmnNameReq_1,P_VALUE,swLogPrintf("Full name from NITZ: %s , Short Name: %s ");
575488,1178605568,0,0,PS1,NAS,CemmTrrigerRrcReleaseReq_1,P_INFO,swLogPrintf("If there is emmSpecificProcedure: %d ");
575488,1178607616,0,0,PS1,NAS,CeNasBePendingSignal_1,P_WARNING,swLogPrintf("CE NAS , can ' t process signal: 0x%x , as CE NAS not woken up from deep sleep , pending it ");
575488,1178609664,0,0,PS1,NAS,CeNasStartTimer_1,P_INFO,swLogPrintf("Start NAS timer period is %d MS ");
575488,1178613759,0,0,PS1,NAS,CeNasStartTimer_2,P_WARNING,swLogPrintf("Timer is already started! ");
575488,1178613761,0,0,PS1,NAS,CeNasStopTimer_1,P_INFO,swLogPrintf("EMM timer %s stop ");
575488,1178615809,0,0,PS1,NAS,CeNasStopTimer_2,P_INFO,swLogPrintf("SMS timer %s stop ");
575488,1178617857,0,0,PS1,NAS,CeNasStopHibTimer_1,P_INFO,swLogPrintf("NAS Hibernate timer %s stop ");
575488,1178619904,0,0,PS1,NAS,CeNasTimerExpiry_1,P_VALUE,swLogPrintf("Unexpected timerEnum:%d ");
575488,1178621952,0,0,PS1,NAS,CeNasHibTimerExpiry_1,P_VALUE,swLogPrintf("Unexpected hibTimerId:%d ");
575488,1178626047,0,0,PS1,NAS,CeNasTaskEntry_2,P_VALUE,swLogPrintf("CENAS vote to enter HIB state ");
575488,1178628095,0,0,PS1,NAS,CeNasTaskEntry_3,P_VALUE,swLogPrintf("CENAS vote to enter SLEEP2 state ");
575488,1178630143,0,0,PS1,NAS,CeNasTaskEntry_not_hib_1,P_VALUE,swLogPrintf("CENAS cannot enter HIB state ");
575488,1178632191,0,0,PS1,NAS,CeNasTaskEntry_slp2_1,P_VALUE,swLogPrintf("CENAS vote to enter SLEEP2 state ");
575488,1178634239,0,0,PS1,NAS,CeNasTaskEntry_4,P_VALUE,swLogPrintf("CENAS cannot enter HIB state ");
575488,1178636287,0,0,PS1,NAS,CeNasTaskEntry_5,P_VALUE,swLogPrintf("CENAS cannot enter SLEEP2 state ");
575488,1178636544,0,0,PS1,NAS,DecodeAttachAccept_1,P_WARNING,swLogPrintf("esmPduLen 0x%x is equal or greater than inDataLen 0x%x! ");
576512,1180700671,0,0,PS1,CEMM,CemmRegRequest_1,P_INFO,swLogPrintf("Receiving registration while in connected state ");
576512,1180702719,0,0,PS1,CEMM,CemmEmergencyCampRequest_1,P_INFO,swLogPrintf("Receiving emergency camp request while in connected state , buffer it. ");
576512,1180704767,0,0,PS1,CEMM,CemmSetCpsmsParm_1,P_INFO,swLogPrintf("set AT+CPSMS under PSM state , service status is No service! ");
576512,1180706815,0,0,PS1,CEMM,CemmSetCpsmsParm_2,P_INFO,swLogPrintf("set AT+CPSMS under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No service! ");
576512,1180707328,0,0,PS1,CEMM,CemmSetCpsmsParm_3,P_VALUE,swLogPrintf("emmState is %d , bUlMsgSuspend is %d , bWaitCampInd is %d , can ' t define tau pending it! ");
576512,1180710911,0,0,PS1,CEMM,CemmSetCpsmsParm_4,P_INFO,swLogPrintf("set AT+CPSMS while PLMN searching! ");
576512,1180710912,0,0,PS1,CEMM,CemmSetCpsmsParm_5,P_VALUE,swLogPrintf("set AT+CPSMS while specific procedure %d is ongoing! ");
576512,1180715007,0,0,PS1,CEMM,CemmSetCedrxsParm_1,P_INFO,swLogPrintf("set AT+CEDRXS under PSM state , service status is No service! ");
576512,1180717055,0,0,PS1,CEMM,CemmSetCedrxsParm_2,P_INFO,swLogPrintf("set AT+CEDRXS under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No service! ");
576512,1180717568,0,0,PS1,CEMM,CemmSetCedrxsParm_3,P_VALUE,swLogPrintf("emmState is %d , bUlMsgSuspend is %d , bWaitCampInd is %d , can ' t define tau pending it! ");
576512,1180721151,0,0,PS1,CEMM,CemmSetCedrxsParm_4,P_INFO,swLogPrintf("set AT+CEDRXS while PLMN searching! ");
576512,1180721152,0,0,PS1,CEMM,CemmSetCedrxsParm_5,P_VALUE,swLogPrintf("set AT+CEDRXS while specific procedure %d is ongoing! ");
576512,1180725247,0,0,PS1,CEMM,CemmSetCciotoptParm_1,P_INFO,swLogPrintf("set AT+CCIOTOPT under PSM state , service status is No service! ");
576512,1180727295,0,0,PS1,CEMM,CemmSetCciotoptParm_2,P_INFO,swLogPrintf("set AT+CCIOTOPT under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No service! ");
576512,1180727808,0,0,PS1,CEMM,CemmSetCciotoptParm_3,P_VALUE,swLogPrintf("emmState is %d , bUlMsgSuspend is %d , bWaitCampInd is %d , can ' t define tau pending it! ");
576512,1180731391,0,0,PS1,CEMM,CemmSetCciotoptParm_4,P_INFO,swLogPrintf("set AT+CCIOTOPT while PLMN searching! ");
576512,1180731392,0,0,PS1,CEMM,CemmSetCciotoptParm_5,P_VALUE,swLogPrintf("set AT+CCIOTOPT while specific procedure %d is ongoing! ");
576512,1180735487,0,0,PS1,CEMM,CemmSetCemodeParm_1,P_INFO,swLogPrintf("set AT+CEMODE under PSM state , service status is No service! ");
576512,1180737535,0,0,PS1,CEMM,CemmSetCemodeParm_2,P_INFO,swLogPrintf("set AT+CEMODE under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No service! ");
576512,1180738048,0,0,PS1,CEMM,CemmSetCemodeParm_3,P_VALUE,swLogPrintf("emmState is %d , bUlMsgSuspend is %d , bWaitCampInd is %d , can ' t define tau pending it! ");
576512,1180741631,0,0,PS1,CEMM,CemmSetCemodeParm_4,P_INFO,swLogPrintf("set AT+CEMODE while PLMN searching! ");
576512,1180741632,0,0,PS1,CEMM,CemmSetCemodeParm_5,P_VALUE,swLogPrintf("set AT+CEMODE while specific procedure %d is ongoing! ");
576512,1180743680,0,0,PS1,CEMM,CemmSetParmReq_nasT_1,P_WARNING,swLogPrintf("CE NAS , CAM set NAS timer , not invalid tId: %d ");
576512,1180745728,0,0,PS1,CEMM,CemmSetParmReq_1,P_WARNING,swLogPrintf("CE NAS , Unexpected set parameter type: %d ");
576512,1180747776,0,0,PS1,CEMM,CemmGetParmReq_w_1,P_WARNING,swLogPrintf("CE NAS , unknown parmType: %d , can ' t get related CAM param info ");
576512,1180751871,0,0,PS1,CEMM,CemmPowerRecoverRequest_1,P_INFO,swLogPrintf("NW not configured T3324 , use AT+ECCFG configured T3324MaxValueS! ");
576512,1180752128,0,0,PS1,CEMM,CemmProcTriggerTauReq_1,P_VALUE,swLogPrintf("emmSpecificProcedure is %d ; emmState is %d ");
576512,1180754432,0,0,PS1,CEMM,SaveForbiddenTaiToTinyContext_1,P_VALUE,swLogPrintf("This forbidden tai ( 0x%x , 0x%x , 0x%x ) is already in tiny ctx ");
576512,1180756736,0,0,PS1,CEMM,SaveForbiddenTaiToTinyContext_2,P_VALUE,swLogPrintf("forbiddenTaiNum is %d , mcc is 0x%X , mnc is 0x%x , tac is 0x%X ");
576512,1180758528,0,0,PS1,CEMM,SaveForbiddenTaiToTinyContext_3,P_VALUE,swLogPrintf("This forbidden tai ( 0x%x , 0x%x , 0x%x ) is already in tiny ctx ");
576512,1180760832,0,0,PS1,CEMM,SaveForbiddenTaiToTinyContext_4,P_VALUE,swLogPrintf("forbiddenTaiNum is %d , mcc is 0x%X , mnc is 0x%x , tac is 0x%X ");
576512,1180764159,0,0,PS1,CEMM,SaveTaiListToTinyContext_1,P_INFO,swLogPrintf("Number of allocated TAI exceed CE_NAS_TINY_CTX_TAI_NUM! ");
576512,1180766207,0,0,PS1,CEMM,SaveTaiListToTinyContext_2,P_INFO,swLogPrintf("Number of allocated TAI exceed CE_NAS_TINY_CTX_TAI_NUM! ");
576512,1180768255,0,0,PS1,CEMM,SaveTaiListToTinyContext_3,P_INFO,swLogPrintf("Number of allocated TAI exceed CE_NAS_TINY_CTX_TAI_NUM! ");
576512,1180770303,0,0,PS1,CEMM,PendingEsmDataOutOfDate_1,P_INFO,swLogPrintf("Pending data is out of date , and need to discard it. ");
576512,1180772351,0,0,PS1,CEMM,PendingEsmDataOutOfDate_2,P_INFO,swLogPrintf("Pending data is out of date , and not need to discard , there ' s no pending data in DR / ESM , still retry ");
576512,1180774399,0,0,PS1,CEMM,PendingEsmDataOutOfDate_3,P_INFO,swLogPrintf("Pending data is out of date , and not need to discard , but there ' s new pending data in DR / ESM , discard current data. ");
576512,1180776447,0,0,PS1,CEMM,CemmStartT3324Check_1,P_SIG,swLogPrintf("Start T3324 ");
576512,1180778495,0,0,PS1,CEMM,CemmStartT3324Check_2,P_SIG,swLogPrintf("T3324 assigned by NW is zero ");
576512,1180780543,0,0,PS1,CEMM,CemmStartT3412Check_1,P_SIG,swLogPrintf("Start T3412 ");
576512,1180782591,0,0,PS1,CEMM,EpsAttachStateChange_1,P_WARNING,swLogPrintf("updateEpsnscToNvm ");
576512,1180784639,0,0,PS1,CEMM,EpsAttachStateChange_2,P_WARNING,swLogPrintf("updateEpslociToNvm ");
576512,1180786687,0,0,PS1,CEMM,EpsConnectionStateChange_4,P_WARNING,swLogPrintf("updateEpsnscToNvm ");
576512,1180788735,0,0,PS1,CEMM,EpsConnectionStateChange_5,P_WARNING,swLogPrintf("updateEpslociToNvm ");
576512,1180790783,0,0,PS1,CEMM,EmmSelectProtocolState_1,P_WARNING,swLogPrintf("State changing wrong! ");
576512,1180790785,0,0,PS1,CEMM,EmmChangeProtocolState_1,P_INFO,swLogPrintf("EMM state change to %s ");
576512,1180794879,0,0,PS1,CEMM,GetAttachProcedure_1,P_INFO,swLogPrintf("No Attach Procedure! ");
576512,1180795904,0,0,PS1,CEMM,GetTauProcedure_1,P_VALUE,swLogPrintf("epsUpdateStatus is %d ; tauRequired is %d ; pendingTau is %d , tauForSmsOnly is %d , updateCs is %d ");
576512,1180798975,0,0,PS1,CEMM,GetTauProcedure_2,P_INFO,swLogPrintf("Normal TAU is triggered ");
576512,1180801023,0,0,PS1,CEMM,GetTauProcedure_3,P_INFO,swLogPrintf("Normal TAU is triggered ");
576512,1180803071,0,0,PS1,CEMM,GetTauProcedure_4,P_INFO,swLogPrintf("Periodic TAU is triggered ");
576512,1180805119,0,0,PS1,CEMM,GetTauProcedure_5,P_INFO,swLogPrintf("No TAU is triggered ");
576512,1180807167,0,0,PS1,CEMM,GetTauProcedure_6,P_INFO,swLogPrintf("Combined TA updating with IMSI ATTACH is triggered ");
576512,1180809215,0,0,PS1,CEMM,GetTauProcedure_7,P_INFO,swLogPrintf("Combined TAU is triggered ");
576512,1180811263,0,0,PS1,CEMM,GetTauProcedure_8,P_INFO,swLogPrintf("Combined TAU is triggered ");
576512,1180813311,0,0,PS1,CEMM,GetTauProcedure_9,P_INFO,swLogPrintf("Periodic TAU is triggered ");
576512,1180815359,0,0,PS1,CEMM,GetTauProcedure_10,P_INFO,swLogPrintf("No TAU is triggered ");
576512,1180815360,0,0,PS1,CEMM,GetTauProcedure_11,P_INFO,swLogPrintf("Current service is %d , No Tau Procedure is triggered! ");
576512,1180817408,0,0,PS1,CEMM,EmmAttachAbnormal_1,P_VALUE,swLogPrintf("Attach attempt counter is %d ");
576512,1180821503,0,0,PS1,CEMM,EmmAttachAbnormal_2,P_INFO,swLogPrintf("Delete GUTI! ");
576512,1180821504,0,0,PS1,CEMM,EmmCombinedAttachOnlyEpsSucceed_1,P_VALUE,swLogPrintf("Combined ATTACH successful for EPS only , TAU attempt counter is %d ");
576512,1180823552,0,0,PS1,CEMM,EmmTauAbnormal_1,P_VALUE,swLogPrintf("TAU attempt counter is %d ");
576512,1180825856,0,0,PS1,CEMM,IsAttachWithImsi_1,P_VALUE,swLogPrintf("power on with IMSI is %d , power on attach end is %d ");
576512,1180827904,0,0,PS1,CEMM,IsAttachWithoutIntegrityProtected_1,P_VALUE,swLogPrintf("power on without integrity protected is %d , power on attach end is %d ");
576512,1180830208,0,0,PS1,CEMM,GetTaiType_1,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) , TAC ( 0x%x ) is in the list of ' forbidden tracking areas for regional provision of service ' ! ");
576512,1180832256,0,0,PS1,CEMM,GetTaiType_2,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) , TAC ( 0x%x ) is in the list of ' forbidden tracking areas for regional provision of service ' ! ");
576512,1180834304,0,0,PS1,CEMM,GetTaiType_3,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) , TAC ( 0x%x ) is in the list of ' forbidden tracking areas for roaming ' ! ");
576512,1180836352,0,0,PS1,CEMM,GetTaiType_4,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) , TAC ( 0x%x ) is in the list of ' forbidden tracking areas for roaming ' ! ");
576512,1180837888,0,0,PS1,CEMM,GetCurrentAttachService_1,P_VALUE,swLogPrintf("Current service type is %d ");
576512,1180841983,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_1,P_INFO,swLogPrintf("Can ' t perform ATTACH while T3402 is running! ");
576512,1180844031,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_2,P_INFO,swLogPrintf("Still can perform ATTACH while T3346 is running! ");
576512,1180846079,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_3,P_INFO,swLogPrintf("Can ' t perform ATTACH while T3346 is running! ");
576512,1180848127,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_4,P_INFO,swLogPrintf("Can ' t perform ATTACH while Ul Msg is Suspend by Rrc! ");
576512,1180850175,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_5,P_INFO,swLogPrintf("Can ' t perform TAU while T3402 is running! ");
576512,1180852223,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_6,P_INFO,swLogPrintf("Still Can perform TAU while T3346 is running! ");
576512,1180854271,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_7,P_INFO,swLogPrintf("Can ' t perform TAU while T3346 is running! ");
576512,1180856319,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_8,P_INFO,swLogPrintf("Can ' t perform TAU while Ul Msg is Suspend by Rrc! ");
576512,1180856321,0,0,PS1,CEMM,CemmCheckAnySpecificProcedure_1,P_INFO,swLogPrintf("Current EMM state %s ");
576512,1180860415,0,0,PS1,CEMM,CemmInitialise_1,P_INFO,swLogPrintf("EMM submodule initialise! ");
576512,1180862463,0,0,PS1,CEMM,CemmInitialise_2,P_WARNING,swLogPrintf("Read IMEI failed , use default IMEI ");
576512,1180862464,0,0,PS1,CEMM,CemmPmuDeepSlpEnterCallBack_1,P_VALUE,swLogPrintf("Cemm Enter Deep Sleep , the lowPowerState is %d ");
576512,1180864768,0,0,PS1,CEMM,FreeCachedCpData_1,P_VALUE,swLogPrintf("Del CpDataIndex ( index is %d ) and corresponding reTransMsgType ( subscript is %d ) ");
576512,1180866816,0,0,PS1,CEMM,CemmSaveCpDataInCacheQueue_1,P_VALUE,swLogPrintf("Cp Data is already in cache queue , just update index from %d to %d ");
576512,1180868864,0,0,PS1,CEMM,CemmSaveCpDataInCacheQueue_2,P_VALUE,swLogPrintf("Cp Data Cache Queue is full , Free the oldest cp Data ( index is %d ) , then save this cp data ( index is %d ) ");
576512,1180870912,0,0,PS1,CEMM,CemmDelCpDataInCacheQueue_1,P_VALUE,swLogPrintf("Find CpDataIndex ( %d ) in cache queue ( %d ) , Del Succ! ");
576512,1180872704,0,0,PS1,CEMM,CemmDelCpDataInCacheQueue_2,P_INFO,swLogPrintf("Can ' t find CpDataIndex ( %d ) in cache queue , Del Fail! ");
576512,1180876799,0,0,PS1,CEMM,CemmClearRetransmissionInfo_1,P_INFO,swLogPrintf("Clear retransmit failed messages! ");
576512,1180878847,0,0,PS1,CEMM,CemmCheckEnterHibernate_1,P_INFO,swLogPrintf("Not allow enter hib ");
576512,1180880895,0,0,PS1,CEMM,CemmCheckAnyPsm_1,P_SIG,swLogPrintf("T3324 assigned by NW is zero ");
576512,1180882943,0,0,PS1,CEMM,CemmCheckAnyPsm_2,P_SIG,swLogPrintf("EmmStartTimer: timerId is T3324 ");
576512,1180882944,0,0,PS1,CEMM,RandomizeDownlinkEmmMessage_1,P_VALUE,swLogPrintf("data length is %d ");
576512,1180887039,0,0,PS1,CEMM,RandomizeDownlinkEmmMessage_3,P_INFO,swLogPrintf("Only PD and message type ");
576512,1180889087,0,0,PS1,CEMM,EcnbTraceEmmCause_1,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_IMSI_UNKNOWN_IN_HSS ");
576512,1180891135,0,0,PS1,CEMM,EcnbTraceEmmCause_2,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_ILLEGAL_UE ");
576512,1180893183,0,0,PS1,CEMM,EcnbTraceEmmCause_3,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_IMEI_NOT_ACCEPTED ");
576512,1180895231,0,0,PS1,CEMM,EcnbTraceEmmCause_4,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_ILLEGAL_ME ");
576512,1180897279,0,0,PS1,CEMM,EcnbTraceEmmCause_5,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_EPS_SERVICES_NOT_ALLOWED ");
576512,1180899327,0,0,PS1,CEMM,EcnbTraceEmmCause_6,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_EPS_AND_NON_EPS_SERVICES_NOT_ALLOWED ");
576512,1180901375,0,0,PS1,CEMM,EcnbTraceEmmCause_7,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_UE_ID_CAN_NOT_BE_DERIVED_IN_NETWORK ");
576512,1180903423,0,0,PS1,CEMM,EcnbTraceEmmCause_8,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_IMPLICITLY_DETACHED ");
576512,1180905471,0,0,PS1,CEMM,EcnbTraceEmmCause_9,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_PLMN_NOT_ALLOWED ");
576512,1180907519,0,0,PS1,CEMM,EcnbTraceEmmCause_10,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_TRACKING_AREA_NOT_ALLOWED ");
576512,1180909567,0,0,PS1,CEMM,EcnbTraceEmmCause_11,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_ROAMING_NOT_ALLOWED_IN_THIS_TRACKING_AREA ");
576512,1180911615,0,0,PS1,CEMM,EcnbTraceEmmCause_12,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_EPS_SERVICE_NOT_ALLOWED_IN_THIS_PLMN ");
576512,1180913663,0,0,PS1,CEMM,EcnbTraceEmmCause_13,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_NO_SUITABLE_CELLS_IN_TRACKING_AREA ");
576512,1180915711,0,0,PS1,CEMM,EcnbTraceEmmCause_14,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_MSC_TEMPORARILY_NOT_REACHABLE ");
576512,1180917759,0,0,PS1,CEMM,EcnbTraceEmmCause_15,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_NETWORK_FAILURE ");
576512,1180919807,0,0,PS1,CEMM,EcnbTraceEmmCause_16,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_CS_DOMAIN_NOT_AVAILABLE ");
576512,1180921855,0,0,PS1,CEMM,EcnbTraceEmmCause_17,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_ESM_FAILURE ");
576512,1180923903,0,0,PS1,CEMM,EcnbTraceEmmCause_18,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_MAC_FAILURE ");
576512,1180925951,0,0,PS1,CEMM,EcnbTraceEmmCause_19,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_SYNCH_FAILURE ");
576512,1180927999,0,0,PS1,CEMM,EcnbTraceEmmCause_20,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_CONGESTION ");
576512,1180930047,0,0,PS1,CEMM,EcnbTraceEmmCause_21,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_UE_SECURITY_CAPAILITIES_MISMATCH ");
576512,1180932095,0,0,PS1,CEMM,EcnbTraceEmmCause_22,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_SECURITY_MODE_REJECTED_UNSPECIFIED ");
576512,1180934143,0,0,PS1,CEMM,EcnbTraceEmmCause_23,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_NOT_AUTHORIZED_FOR_THIS_CSG ");
576512,1180936191,0,0,PS1,CEMM,EcnbTraceEmmCause_24,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_NON_EPS_AUTHENTICATION_UNACCEPTABLE ");
576512,1180938239,0,0,PS1,CEMM,EcnbTraceEmmCause_25,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_REQUESTED_SERVICE_OPTION_NOT_AUTHORIZED_IN_THIS_PLMN ");
576512,1180940287,0,0,PS1,CEMM,EcnbTraceEmmCause_26,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_CS_SERVICE_TEMPORARILY_NOT_AVAILABLE ");
576512,1180942335,0,0,PS1,CEMM,EcnbTraceEmmCause_27,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_NO_EPS_BEARER_CONTEXT_ACTIVATED ");
576512,1180944383,0,0,PS1,CEMM,EcnbTraceEmmCause_28,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_SERVERE_NETWORK_FAILURE ");
576512,1180946431,0,0,PS1,CEMM,EcnbTraceEmmCause_29,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_SYMANTICALLY_INCORRECT_MESSAGE ");
576512,1180948479,0,0,PS1,CEMM,EcnbTraceEmmCause_30,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_INVALID_MANDATORY_INFORMATION ");
576512,1180950527,0,0,PS1,CEMM,EcnbTraceEmmCause_31,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_MESSAGE_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENTED ");
576512,1180952575,0,0,PS1,CEMM,EcnbTraceEmmCause_32,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_THE_PROTOCOL_STATE ");
576512,1180954623,0,0,PS1,CEMM,EcnbTraceEmmCause_33,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_INFORMATION_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED ");
576512,1180956671,0,0,PS1,CEMM,EcnbTraceEmmCause_34,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_CONDITIONAL_IE_ERROR ");
576512,1180958719,0,0,PS1,CEMM,EcnbTraceEmmCause_35,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_MESSAGE_NOT_COMPATIBLE_WITH_THE_PROTOCOL_STATE ");
576512,1180960767,0,0,PS1,CEMM,EcnbTraceEmmCause_36,P_INFO,swLogPrintf("Reject cause-EMM_CAUSE_PROTOCOL_ERROR_UNSPECIFIED ");
576512,1180960768,0,0,PS1,CEMM,EcnbTraceEmmCause_37,P_VALUE,swLogPrintf("Unknown EMM cause %d! ");
576512,1180964863,0,0,PS1,CEMM,ProcessGutiReallocCommand_1,P_INFO,swLogPrintf("Ignore GUTI reallocation during MO detach! ");
576512,1180966911,0,0,PS1,CEMM,ProcessGutiReallocCommand_2,P_INFO,swLogPrintf("Ignore GUTI reallocation during TAU! ");
576512,1180968959,0,0,PS1,CEMM,ProcessAuthenticationRequest_1,P_INFO,swLogPrintf("Ignore authentication request while USIM is absent! ");
576512,1180971007,0,0,PS1,CEMM,ProcessAuthenticationRequest_2,P_INFO,swLogPrintf("Ignore authentication request during power off! ");
576512,1180973055,0,0,PS1,CEMM,ProcessAuthenticationRequest_3,P_INFO,swLogPrintf("RAND is same as previous one ");
576512,1180975103,0,0,PS1,CEMM,ProcessAuthenticationRequest_4,P_INFO,swLogPrintf("Separation bit checking failed! ");
576512,1180977151,0,0,PS1,CEMM,ProcessIdentityRequest_1,P_INFO,swLogPrintf("Ignore Identity Request during power off detach! ");
576512,1180979199,0,0,PS1,CEMM,ProcessSecurityModeCommand_1,P_INFO,swLogPrintf("EIA0 is not supported! ");
576512,1180981247,0,0,PS1,CEMM,ProcessSecurityModeCommand_2,P_INFO,swLogPrintf("Replayed security capability mismatch! ");
576512,1180983295,0,0,PS1,CEMM,ProcessSecurityModeCommand_3,P_INFO,swLogPrintf("eKSI mismatch! ");
576512,1180985343,0,0,PS1,CEMM,ProcessAttachAccept_ignoreCause,P_WARNING,swLogPrintf("Combined ATTACH eps only succeed , user set ignore EMM cause! ");
576512,1180987391,0,0,PS1,CEMM,ProcessAttachAccept_1,P_INFO,swLogPrintf("Received repeated ATTACH ACCEPT with same GUTI as last one! ");
576512,1180989439,0,0,PS1,CEMM,ProcessAttachAccept_2,P_INFO,swLogPrintf("NW configured T3324 > = AT+ECCFG configured T3324MaxValueS , use AT configured T3324MaxValueS! ");
576512,1180991487,0,0,PS1,CEMM,ProcessAttachAccept_3,P_INFO,swLogPrintf("NW not configured T3324 , use AT+ECCFG configured T3324MaxValueS! ");
576512,1180993535,0,0,PS1,CEMM,ProcessAttachAccept_4,P_INFO,swLogPrintf("Attach successful for EPS services and not accepted for SMS services! ");
576512,1180995583,0,0,PS1,CEMM,ProcessAttachAccept_5,P_VALUE,swLogPrintf("tauForSmsCount exceed the max limit , no longer try to register sms in this plmn! ");
576512,1180997631,0,0,PS1,CEMM,ProcessDetachAccept_1,P_INFO,swLogPrintf("ProcessDetachAccept: ignore DETACH ACCEPT during poweroff detach! ");
576512,1180999679,0,0,PS1,CEMM,ProcessTauAccept_ignoreCause,P_WARNING,swLogPrintf("Combined TAU eps only succeed , user set ignore EMM cause! ");
576512,1181001727,0,0,PS1,CEMM,ProcessTauAccept_1,P_INFO,swLogPrintf("NW configured T3324 > = AT+ECCFG configured T3324MaxValueS , use AT configured T3324MaxValueS! ");
576512,1181003775,0,0,PS1,CEMM,ProcessTauAccept_2,P_INFO,swLogPrintf("NW not configured T3324 , use AT+ECCFG configured T3324MaxValueS! ");
576512,1181005823,0,0,PS1,CEMM,ProcessTauAccept_3,P_INFO,swLogPrintf("Tau successful for EPS services and not accepted for SMS services! ");
576512,1181007871,0,0,PS1,CEMM,ProcessTauAccept_4,P_VALUE,swLogPrintf("tauForSmsCount exceed the max limit , no longer try to register sms in this plmn! ");
576512,1181009919,0,0,PS1,CEMM,ProcessTauAccept_5,P_INFO,swLogPrintf("Waiting the indication of TAU COMPLETE transmission succeed. ");
576512,1181011967,0,0,PS1,CEMM,CemmDrReestablishRequest_1,P_INFO,swLogPrintf("Now can ' t initiate service request ");
576512,1181014015,0,0,PS1,CEMM,CemmDrReestablishRequest_2,P_INFO,swLogPrintf("TauRequired is TRUE , perform a TAU firstly ");
576512,1181014017,0,0,PS1,CEMM,CemmDrReestablishRequest_3,P_INFO,swLogPrintf("Current emmState is %s ");
576512,1181018111,0,0,PS1,CEMM,CemmDrReestablishRequest_4,P_INFO,swLogPrintf("Waiting cell camp indication , pending DR reestablish request! ");
576512,1181020159,0,0,PS1,CEMM,CemmDrReestablishRequest_5,P_INFO,swLogPrintf("Already pended another request! ");
576512,1181022207,0,0,PS1,CEMM,CemmDrReestablishRequest_6,P_INFO,swLogPrintf("Waiting for RRC Act Cnf , Pending the DrReestablishRequest ");
576512,1181024255,0,0,PS1,CEMM,CemmDrReestablishRequest_7,P_INFO,swLogPrintf("Dr re-establish is received under EMM_REGISTERED_NO_CELL_AVAILABLE! ");
576512,1181026303,0,0,PS1,CEMM,EcnbTraceEmmMessageType_1,P_INFO,swLogPrintf("Sending ATTACH_REQUEST ");
576512,1181028351,0,0,PS1,CEMM,EcnbTraceEmmMessageType_2,P_INFO,swLogPrintf("Receiving ATTACH_ACCEPT ");
576512,1181030399,0,0,PS1,CEMM,EcnbTraceEmmMessageType_3,P_INFO,swLogPrintf("Sending ATTACH_COMPLETE ");
576512,1181032447,0,0,PS1,CEMM,EcnbTraceEmmMessageType_4,P_INFO,swLogPrintf("Receiving ATTACH_REJECT ");
576512,1181034495,0,0,PS1,CEMM,EcnbTraceEmmMessageType_5,P_INFO,swLogPrintf("Sending DETACH_REQUEST ");
576512,1181036543,0,0,PS1,CEMM,EcnbTraceEmmMessageType_6,P_INFO,swLogPrintf("Receiving DETACH_REQUEST ");
576512,1181038591,0,0,PS1,CEMM,EcnbTraceEmmMessageType_7,P_INFO,swLogPrintf("Sending DETACH_ACCEPT ");
576512,1181040639,0,0,PS1,CEMM,EcnbTraceEmmMessageType_8,P_INFO,swLogPrintf("Receiving DETACH_ACCEPT ");
576512,1181042687,0,0,PS1,CEMM,EcnbTraceEmmMessageType_9,P_INFO,swLogPrintf("Sending TA_UPDATE_REQUEST ");
576512,1181044735,0,0,PS1,CEMM,EcnbTraceEmmMessageType_10,P_INFO,swLogPrintf("Receiving TA_UPDATE_ACCEPT ");
576512,1181046783,0,0,PS1,CEMM,EcnbTraceEmmMessageType_11,P_INFO,swLogPrintf("Sending TA_UPDATE_COMPLETE ");
576512,1181048831,0,0,PS1,CEMM,EcnbTraceEmmMessageType_12,P_INFO,swLogPrintf("Receiving TA_UPDATE_REJECT ");
576512,1181050879,0,0,PS1,CEMM,EcnbTraceEmmMessageType_13,P_INFO,swLogPrintf("Sending EXTENDED_SERVICE_REQUEST ");
576512,1181052927,0,0,PS1,CEMM,EcnbTraceEmmMessageType_14,P_INFO,swLogPrintf("Sending CONTROL_PLANE_SERVICE_REQUEST ");
576512,1181054975,0,0,PS1,CEMM,EcnbTraceEmmMessageType_15,P_INFO,swLogPrintf("Receiving SERVICE_REJECT ");
576512,1181057023,0,0,PS1,CEMM,EcnbTraceEmmMessageType_16,P_INFO,swLogPrintf("Receiving SERVICE_ACCEPT ");
576512,1181059071,0,0,PS1,CEMM,EcnbTraceEmmMessageType_17,P_INFO,swLogPrintf("Receiving GUTI_REALLOC_COMMAND ");
576512,1181061119,0,0,PS1,CEMM,EcnbTraceEmmMessageType_18,P_INFO,swLogPrintf("Sending GUTI_REALLOC_COMPLETE ");
576512,1181063167,0,0,PS1,CEMM,EcnbTraceEmmMessageType_19,P_INFO,swLogPrintf("Receiving AUTHENTICATION_REQUEST ");
576512,1181065215,0,0,PS1,CEMM,EcnbTraceEmmMessageType_20,P_INFO,swLogPrintf("Sending AUTHENTICATION_RESPONSE ");
576512,1181067263,0,0,PS1,CEMM,EcnbTraceEmmMessageType_21,P_INFO,swLogPrintf("Receiving AUTHENTICATION_REJECT ");
576512,1181069311,0,0,PS1,CEMM,EcnbTraceEmmMessageType_22,P_INFO,swLogPrintf("Sending AUTHENTICATION_FAILURE ");
576512,1181071359,0,0,PS1,CEMM,EcnbTraceEmmMessageType_23,P_INFO,swLogPrintf("Receiving IDENTITY_REQUEST ");
576512,1181073407,0,0,PS1,CEMM,EcnbTraceEmmMessageType_24,P_INFO,swLogPrintf("Sending IDENTITY_RESPONSE ");
576512,1181075455,0,0,PS1,CEMM,EcnbTraceEmmMessageType_25,P_INFO,swLogPrintf("Receiving SECURITY_MODE_COMMAND ");
576512,1181077503,0,0,PS1,CEMM,EcnbTraceEmmMessageType_26,P_INFO,swLogPrintf("Sending SECURITY_MODE_COMPLETE ");
576512,1181079551,0,0,PS1,CEMM,EcnbTraceEmmMessageType_27,P_INFO,swLogPrintf("Sending SECURITY_MODE_REJECT ");
576512,1181081599,0,0,PS1,CEMM,EcnbTraceEmmMessageType_28,P_INFO,swLogPrintf("Sending EMM_STATUS ");
576512,1181083647,0,0,PS1,CEMM,EcnbTraceEmmMessageType_29,P_INFO,swLogPrintf("Receiving EMM_STATUS ");
576512,1181085695,0,0,PS1,CEMM,EcnbTraceEmmMessageType_30,P_INFO,swLogPrintf("Receiving EMM_INFORMATION ");
576512,1181087743,0,0,PS1,CEMM,EcnbTraceEmmMessageType_31,P_INFO,swLogPrintf("Receiving DOWNLINK_NAS_TRANSPORT ");
576512,1181089791,0,0,PS1,CEMM,EcnbTraceEmmMessageType_32,P_INFO,swLogPrintf("Sending UPLINK_NAS_TRANSPORT ");
576512,1181091839,0,0,PS1,CEMM,EcnbTraceEmmMessageType_33,P_INFO,swLogPrintf("Receiving DOWNLINK_GENERIC_NAS_TRANSPORT ");
576512,1181093887,0,0,PS1,CEMM,EcnbTraceEmmMessageType_34,P_INFO,swLogPrintf("Sending UPLINK_GENERIC_NAS_TRANSPORT ");
576512,1181095935,0,0,PS1,CEMM,EcnbTraceEmmMessageType_35,P_INFO,swLogPrintf("Sending SERVICE_REQUEST ");
576512,1181095936,0,0,PS1,CEMM,EcnbTraceEmmMessageType_36,P_INFO,swLogPrintf("Unknown message type %d! ");
576512,1181097984,0,0,PS1,CEMM,EcnbTraceEsmMessageType_32,P_VALUE,swLogPrintf("ESM_DATA_TRANSPORT ul data tempLen:%d ");
576512,1181102079,0,0,PS1,CEMM,EcnbTraceEsmMessageType_1,P_INFO,swLogPrintf("Receiving ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST ");
576512,1181104127,0,0,PS1,CEMM,EcnbTraceEsmMessageType_2,P_INFO,swLogPrintf("Sending ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_ACCEPT ");
576512,1181106175,0,0,PS1,CEMM,EcnbTraceEsmMessageType_3,P_INFO,swLogPrintf("Sending ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REJECT ");
576512,1181108223,0,0,PS1,CEMM,EcnbTraceEsmMessageType_4,P_INFO,swLogPrintf("Receiving ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REQUEST ");
576512,1181110271,0,0,PS1,CEMM,EcnbTraceEsmMessageType_5,P_INFO,swLogPrintf("Sending ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_ACCEPT ");
576512,1181112319,0,0,PS1,CEMM,EcnbTraceEsmMessageType_6,P_INFO,swLogPrintf("Sending ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REJECT ");
576512,1181114367,0,0,PS1,CEMM,EcnbTraceEsmMessageType_7,P_INFO,swLogPrintf("Receiving MODIFY_EPS_BEARER_CONTEXT_REQUEST ");
576512,1181116415,0,0,PS1,CEMM,EcnbTraceEsmMessageType_8,P_INFO,swLogPrintf("Sending MODIFY_EPS_BEARER_CONTEXT_ACCEPT ");
576512,1181118463,0,0,PS1,CEMM,EcnbTraceEsmMessageType_9,P_INFO,swLogPrintf("Sending MODIFY_EPS_BEARER_CONTEXT_REJECT ");
576512,1181120511,0,0,PS1,CEMM,EcnbTraceEsmMessageType_10,P_INFO,swLogPrintf("Receiving DEACTIVATE_EPS_BEARER_CONTEXT_REQUEST ");
576512,1181122559,0,0,PS1,CEMM,EcnbTraceEsmMessageType_11,P_INFO,swLogPrintf("Sending DEACTIVATE_EPS_BEARER_CONTEXT_ACCEPT ");
576512,1181124607,0,0,PS1,CEMM,EcnbTraceEsmMessageType_12,P_INFO,swLogPrintf("Sending PDN_CONNECTIVITY_REQUEST ");
576512,1181126655,0,0,PS1,CEMM,EcnbTraceEsmMessageType_13,P_INFO,swLogPrintf("Receiving PDN_CONNECTIVITY_REJECT ");
576512,1181128703,0,0,PS1,CEMM,EcnbTraceEsmMessageType_14,P_INFO,swLogPrintf("Sending PDN_DISCONNECT_REQUEST ");
576512,1181130751,0,0,PS1,CEMM,EcnbTraceEsmMessageType_15,P_INFO,swLogPrintf("Receiving PDN_DISCONNECT_REJECT ");
576512,1181132799,0,0,PS1,CEMM,EcnbTraceEsmMessageType_16,P_INFO,swLogPrintf("Sending BEARER_RESOURCE_ALLOCATION_REQUEST ");
576512,1181134847,0,0,PS1,CEMM,EcnbTraceEsmMessageType_17,P_INFO,swLogPrintf("Receiving BEARER_RESOURCE_ALLOCATION_REJECT ");
576512,1181136895,0,0,PS1,CEMM,EcnbTraceEsmMessageType_18,P_INFO,swLogPrintf("Sending BEARER_RESOURCE_MODIFICATION_REQUEST ");
576512,1181138943,0,0,PS1,CEMM,EcnbTraceEsmMessageType_19,P_INFO,swLogPrintf("Receiving BEARER_RESOURCE_MODIFICATION_REJECT ");
576512,1181140991,0,0,PS1,CEMM,EcnbTraceEsmMessageType_20,P_INFO,swLogPrintf("Receiving ESM_INFORMATION_REQUEST ");
576512,1181143039,0,0,PS1,CEMM,EcnbTraceEsmMessageType_21,P_INFO,swLogPrintf("Sending ESM_INFORMATION_RESPONSE ");
576512,1181145087,0,0,PS1,CEMM,EcnbTraceEsmMessageType_22,P_INFO,swLogPrintf("Receiving ESM_NOTIFICATION ");
576512,1181147135,0,0,PS1,CEMM,EcnbTraceEsmMessageType_23,P_INFO,swLogPrintf("Sending ESM_DUMMY_MESSAGE ");
576512,1181149183,0,0,PS1,CEMM,EcnbTraceEsmMessageType_24,P_INFO,swLogPrintf("Receiving ESM_DUMMY_MESSAGE ");
576512,1181151231,0,0,PS1,CEMM,EcnbTraceEsmMessageType_25,P_INFO,swLogPrintf("Sending ESM_STATUS ");
576512,1181153279,0,0,PS1,CEMM,EcnbTraceEsmMessageType_26,P_INFO,swLogPrintf("Receiving ESM_STATUS ");
576512,1181155327,0,0,PS1,CEMM,EcnbTraceEsmMessageType_27,P_INFO,swLogPrintf("Sending REMOTE_UE_REPORT ");
576512,1181157375,0,0,PS1,CEMM,EcnbTraceEsmMessageType_28,P_INFO,swLogPrintf("Receiving REMOTE_UE_REPORT_RESPONSE ");
576512,1181159423,0,0,PS1,CEMM,EcnbTraceEsmMessageType_29,P_INFO,swLogPrintf("Sending ESM_DATA_TRANSPORT ");
576512,1181161471,0,0,PS1,CEMM,EcnbTraceEsmMessageType_30,P_INFO,swLogPrintf("Receiving ESM_DATA_TRANSPORT ");
576512,1181161472,0,0,PS1,CEMM,EcnbTraceEsmMessageType_31,P_INFO,swLogPrintf("Unknown message type %d! ");
576512,1181163520,0,0,PS1,CEMM,CemmNasSecurityKey_1,P_VALUE,swLogPrintf("CemmNasSecurityKey:UL NAS COUNT is %d ");
576512,1181165568,0,0,PS1,CEMM,CemmNasSecurityKey_2,P_VALUE,swLogPrintf("CemmNasSecurityKey:UL NAS COUNT is %d ");
576512,1181167872,0,0,PS1,CEMM,CemmNasMacForReEst_1,P_VALUE,swLogPrintf("CemmNasMacForReEst: NAS-MAC is %d , UL NAS COUNT is %d ");
576512,1181171711,0,0,PS1,CEMM,CemmCpReestablishInfo_1,P_INFO,swLogPrintf("NAS security is not activated! ");
576512,1181173759,0,0,PS1,CEMM,CemmCpReestablishInfo_2,P_INFO,swLogPrintf("Uplink NAS count overflow! ");
576512,1181175807,0,0,PS1,CEMM,CemmSendCerrcConnReq_1,P_WARNING,swLogPrintf("gCemm.srInfo.srReason is wrong! ");
576512,1181177855,0,0,PS1,CEMM,CemmSendCerrcConnReq_2,P_WARNING,swLogPrintf("gCemm.srInfo.srReason is wrong! ");
576512,1181177856,0,0,PS1,CEMM,CemmSendCerrcConnReq_4,P_VALUE,swLogPrintf("Uplink Nas Count is %d ");
576512,1181179904,0,0,PS1,CEMM,CemmSendCerrcNasMsgReq_1,P_VALUE,swLogPrintf("Uplink Nas Count is %d ");
576512,1181183999,0,0,PS1,CEMM,CemmSendCerrcResumeReq_1,P_WARNING,swLogPrintf("gCemm.srInfo.srReason is wrong! ");
576512,1181186047,0,0,PS1,CEMM,EcnbTraceTcMessageType_1,P_SIG,swLogPrintf("Receiving CLOSE_UE_TEST_LOOP ");
576512,1181188095,0,0,PS1,CEMM,EcnbTraceTcMessageType_3,P_SIG,swLogPrintf("Sending CLOSE_UE_TEST_LOOP_COMPLETE ");
576512,1181190143,0,0,PS1,CEMM,EcnbTraceTcMessageType_5,P_SIG,swLogPrintf("Receiving OPEN_UE_TEST_LOOP ");
576512,1181192191,0,0,PS1,CEMM,EcnbTraceTcMessageType_7,P_SIG,swLogPrintf("Sending OPEN_UE_TEST_LOOP_COMPLETE ");
576512,1181194239,0,0,PS1,CEMM,EcnbTraceTcMessageType_9,P_SIG,swLogPrintf("Receiving ACTIVATE_TEST_MODE ");
576512,1181196287,0,0,PS1,CEMM,EcnbTraceTcMessageType_11,P_SIG,swLogPrintf("Sending ACTIVATE_TEST_MODE_COMPLETE ");
576512,1181198335,0,0,PS1,CEMM,EcnbTraceTcMessageType_13,P_SIG,swLogPrintf("Receiving DEACTIVATE_TEST_MODE ");
576512,1181200383,0,0,PS1,CEMM,EcnbTraceTcMessageType_15,P_SIG,swLogPrintf("Sending DEACTIVATE_TEST_MODE_COMPLETE ");
576512,1181202431,0,0,PS1,CEMM,EcnbTraceTcMessageType_17,P_SIG,swLogPrintf("Receiving RESET_UE_POSITIONING_STORED_INFORMATION ");
576512,1181202432,0,0,PS1,CEMM,EcnbTraceTcMessageType_19,P_SIG,swLogPrintf("Unknown message type %d! ");
576512,1181206527,0,0,PS1,CEMM,CemmSendCerrcMessage_1,P_WARNING,swLogPrintf("Already sent out a SIG_CERRC_CONN_REQ , should not send another one! ");
576512,1181207040,0,0,PS1,CEMM,CemmCalcEmergencyOosTimerInterval_1,P_VALUE,swLogPrintf("Base on power level ( %d ) , emergency OOS timer start times ( %d ) , calculate the emergency oos timer value is %d ( s ) ");
576512,1181209088,0,0,PS1,CEMM,CemmCellCampCnf_1,P_VALUE,swLogPrintf("CemmCellCampCnf: Plmn is ( 0x%x , 0x%x ) , TAC is 0x%x ");
576512,1181210624,0,0,PS1,CEMM,CemmCellCampCnf_2,P_VALUE,swLogPrintf("CemmCellCampCnf:actStatus is %d ");
576512,1181214719,0,0,PS1,CEMM,CemmCellCampCnf_3,P_VALUE,swLogPrintf("As Cell cellIdentity has changed , stop T3411. ");
576512,1181216767,0,0,PS1,CEMM,CemmCellCampCnf_4,P_VALUE,swLogPrintf("when moving to a non EPLMN and configure attachWithIMSI , shall need perform attach. ");
576512,1181218815,0,0,PS1,CEMM,CemmCellCampCnf_5,P_VALUE,swLogPrintf("Keep ESM DATA TRANSPORT msg , waiting PLMN search result. ");
576512,1181218816,0,0,PS1,CEMM,CemmCellCampCnf_6,P_VALUE,swLogPrintf("gCemm.flags.cellStatus is %d. ");
576512,1181222911,0,0,PS1,CEMM,CemmCellCampCnf_7,P_WARNING,swLogPrintf("Discard this ESM Data! ");
576512,1181224959,0,0,PS1,CEMM,CemmPagingRequest_1,P_WARNING,swLogPrintf("During enter PSM procedure , ignore paging. ");
576512,1181224960,0,0,PS1,CEMM,CemmPagingRequest_2,P_VALUE,swLogPrintf("Ignore S-TMSI paging under emmState %d ");
576512,1181227008,0,0,PS1,CEMM,CemmPagingRequest_3,P_VALUE,swLogPrintf("Ignore IMSI paging under emmState %d ");
576512,1181231103,0,0,PS1,CEMM,CemmReTransmitMessage_1,P_INFO,swLogPrintf("There is already a new msg before process the retrans msg , process the new msg firstly ");
576512,1181231872,0,0,PS1,CEMM,CemmReTransmitMessage_2,P_VALUE,swLogPrintf("Current re-transmit msg ( msg index is %d in cache queue ( %d ) , msg type is %d ) already define Emm proceduce ( %d ) , pause process others reTransMsgType ");
576512,1181233920,0,0,PS1,CEMM,CemmReTransmitMessage_3,P_VALUE,swLogPrintf("Current re-transmit msg ( msg index is %d in cache queue ( %d ) , msg type is %d ) is pause by Emm proceduce ( %d ) , re-transmit it later! ");
576512,1181237247,0,0,PS1,CEMM,CemmCellCampInd_1,P_WARNING,swLogPrintf("CemmCellCampInd:unexpected SIG_CERRC_ACT_IND during SIG_CERRC_ACT_REQ procedure! ");
576512,1181237760,0,0,PS1,CEMM,CemmCellCampInd_2,P_VALUE,swLogPrintf("CemmCellCampInd:Plmn is ( 0x%x , 0x%x ) ; TAC is 0x%x ");
576512,1181239296,0,0,PS1,CEMM,CemmCellCampInd_3,P_VALUE,swLogPrintf("CemmCellCampInd:actStatus is %d ");
576512,1181243391,0,0,PS1,CEMM,CemmCellCampInd_4,P_INFO,swLogPrintf("As Cell cellIdentity has changed , stop T3411. ");
576512,1181245439,0,0,PS1,CEMM,CemmCellCampInd_5,P_INFO,swLogPrintf("Check any retransmit message ");
576512,1181247487,0,0,PS1,CEMM,CemmCellCampInd_6,P_INFO,swLogPrintf("need retransmit message ");
576512,1181249535,0,0,PS1,CEMM,CemmCellCampInd_7,P_INFO,swLogPrintf("Initiate TAU ");
576512,1181251583,0,0,PS1,CEMM,CemmCellCampInd_8,P_INFO,swLogPrintf("Keep ESM DATA TRANSPORT msg , waiting PLMN search result. ");
576512,1181251584,0,0,PS1,CEMM,CemmCellCampInd_9,P_INFO,swLogPrintf("gCemm.flags.cellStatus is %d. ");
576512,1181253632,0,0,PS1,CEMM,CemmConnCnf_1,P_VALUE,swLogPrintf("establishStatus is %d ");
576512,1181255680,0,0,PS1,CEMM,CemmConnCnf_2,P_VALUE,swLogPrintf("CESTABLISH_FAIL_T300_EXPIRY , sigRetransmitCounter is %d ");
576512,1181259775,0,0,PS1,CEMM,CemmConnCnf_3,P_INFO,swLogPrintf("ESM data still valid , could retry SR ");
576512,1181260032,0,0,PS1,CEMM,CemmConnRelInd_1,P_VALUE,swLogPrintf("release cause is %d , bNwRel is %d ");
576512,1181263871,0,0,PS1,CEMM,CemmConnRelInd_2,P_WARNING,swLogPrintf("Expected to receive SIG_CERRC_CONN_NAS_UL_MSG_RESUME_IND before release! ");
576512,1181265919,0,0,PS1,CEMM,CemmConnRelInd_3,P_INFO,swLogPrintf("UE is using CP optimization only , and has DL data expected , need initiate TAU to recover connection ");
576512,1181267967,0,0,PS1,CEMM,CemmConnRelInd_4,P_INFO,swLogPrintf("UE is using CP optimization only , but has no DL data expected , don ' t trigger TAU ");
576512,1181270015,0,0,PS1,CEMM,CemmConnRelInd_5,P_INFO,swLogPrintf("Will retry SR later ");
576512,1181272063,0,0,PS1,CEMM,CemmConnRelInd_6,P_INFO,swLogPrintf("Treat the release of RRCconnection as SR succeed. ");
576512,1181272065,0,0,PS1,CEMM,CemmConnRelInd_7,P_INFO,swLogPrintf("Received SIG_CERRC_RELEASE_IND under EMM state %s ");
576512,1181276159,0,0,PS1,CEMM,CemmConnRelCnf_1,P_WARNING,swLogPrintf("Expected to receive SIG_CERRC_CONN_NAS_UL_MSG_RESUME_IND before release! ");
576512,1181278207,0,0,PS1,CEMM,CemmTransmissionFailure_1,P_INFO,swLogPrintf("During power off detach , ignore transmit failure indication! ");
576512,1181278720,0,0,PS1,CEMM,CemmTransmissionFailure_2,P_VALUE,swLogPrintf("failMsgIndex is 0x%x ; msgIndexOfSignaling is %d ; EmmMessageType is 0x%x ");
576512,1181280768,0,0,PS1,CEMM,CemmTransmissionFailure_3,P_VALUE,swLogPrintf("failMsgIndex is 0x%x ; msgIndexOfData is %d ; EmmMessageType is 0x%x ");
576512,1181284351,0,0,PS1,CEMM,CemmTransmissionFailure_4,P_WARNING,swLogPrintf("More than MAX_NUM_OF_TRANS_FAILURE_MESSAGE message transmit failed!! ");
576512,1181286399,0,0,PS1,CEMM,CemmTransmissionFailure_5,P_DEBUG,swLogPrintf("Discard the TaiList received in attach accept! ");
576512,1181288447,0,0,PS1,CEMM,CemmTransmissionFailure_6,P_WARNING,swLogPrintf("PendingUlEsmMsg is not empty , free it! ");
576512,1181288704,0,0,PS1,CEMM,CemmTransmissionFailure_7,P_VALUE,swLogPrintf("failMsgIndex ( 0x%x ) is still in cache queue ( %d ) and not out of date , retransmitted later! ");
576512,1181290752,0,0,PS1,CEMM,CemmTransmissionFailure_8,P_VALUE,swLogPrintf("failMsgIndex ( 0x%x ) is still in cache queue ( %d ) but out of data , discard it! ");
576512,1181292544,0,0,PS1,CEMM,CemmTransmissionFailure_9,P_VALUE,swLogPrintf("failMsgIndex ( 0x%x ) is not in cache queue , no longer retransmit! ");
576512,1181295104,0,0,PS1,CEMM,CemmTransmissionSucc_1,P_VALUE,swLogPrintf("SuccMsgIndex is 0x%x ; msgIndexOfSignaling is %d EmmMessageType is 0x%x ");
576512,1181297152,0,0,PS1,CEMM,CemmTransmissionSucc_2,P_VALUE,swLogPrintf("SuccMsgIndex is 0x%x ; msgIndexOfData is %d ; EmmMessageType is 0x%x ");
576512,1181300735,0,0,PS1,CEMM,CemmTransmissionSucc_3,P_INFO,swLogPrintf("TAU COMPLETE transmission succeed , T3440 is running. ");
576512,1181300736,0,0,PS1,CEMM,CemmResumeCnf_1,P_VALUE,swLogPrintf("Unexpeted resumeMsgType:0x%x ");
576512,1181304831,0,0,PS1,CEMM,CemmResumeCnf_2,P_SIG,swLogPrintf("EmmStartTimer: timerId is T3412 ");
576512,1181305088,0,0,PS1,CEMM,NasMessageSecurityCheck_1,P_VALUE,swLogPrintf("Received mac is 0x%lx ; xmac is 0x%lx ");
576512,1181306880,0,0,PS1,CEMM,NasMessageSecurityCheck_2,P_VALUE,swLogPrintf("Sequence Number is %d ");
576512,1181308928,0,0,PS1,CEMM,NasMessageSecurityCheck_3,P_VALUE,swLogPrintf("Integrity Algorithm is %d ");
576512,1181311232,0,0,PS1,CEMM,NasMessageSecurityCheck_4,P_VALUE,swLogPrintf("The correct DL NAS OVERFLOW COUNT is 0x%x , current tryIndex is %d ");
576512,1181313280,0,0,PS1,CEMM,NasMessageSecurityCheck_5,P_VALUE,swLogPrintf("The correct DL NAS OVERFLOW COUNT is 0x%x , current tryIndex is %d ");
576512,1181315328,0,0,PS1,CEMM,NasMessageSecurityCheck_6,P_VALUE,swLogPrintf("MAC mismatch.Received mac is 0x%lx ; xmac is 0x%lx ");
576512,1181317120,0,0,PS1,CEMM,NasMessageSecurityCheck_7,P_VALUE,swLogPrintf("dataLength is:%d ");
576512,1181319168,0,0,PS1,CEMM,ProcessMessageError_1,P_INFO,swLogPrintf("Message decode error!Error code is %d ");
576512,1181321216,0,0,PS1,CEMM,CemmIsNeedIngoreDlEmmMsg_1,P_VALUE,swLogPrintf("Emm rcv repeated dl msg ( msg type is %d ) , but corresponding ul msg is still transmitting , discard it! ");
576512,1181323264,0,0,PS1,CEMM,CemmIsNeedIngoreDlEmmMsg_2,P_VALUE,swLogPrintf("Emm rcv repeated dl msg ( msg type is %d ) , and corresponding ul msg is transmitted succ , continue to process it! ");
576512,1181325312,0,0,PS1,CEMM,CemmIsNeedIngoreDlEmmMsg_3,P_VALUE,swLogPrintf("Emm rcv repeated dlmsg type ( msg type is %d ) , but msg content is differnet , continue to process it! ");
576512,1181329407,0,0,PS1,CEMM,ProcessDownlinkEmmMessage_1,P_INFO,swLogPrintf("Discard ATTACH REJECT cause #25 without integrity protected! ");
576512,1181331455,0,0,PS1,CEMM,ProcessDownlinkEmmMessage_2,P_INFO,swLogPrintf("Discard TA UPDATE REJECT cause #25 without integrity protected! ");
576512,1181333503,0,0,PS1,CEMM,ProcessDownlinkEmmMessage_3,P_INFO,swLogPrintf("Discard SERVICE REJECT cause #25 without integrity protected! ");
576512,1181335551,0,0,PS1,CEMM,ProcessDownlinkEmmMessage_4,P_INFO,swLogPrintf("Rceive EMM STATUS! ");
576512,1181335552,0,0,PS1,CEMM,CemmNasMsgInd_Warning,P_WARNING,swLogPrintf("Emm ConnState is %d , not connected , ignore this msg ");
576512,1181337600,0,0,PS1,CEMM,CemmNasMsgInd_w,P_WARNING,swLogPrintf("Recived security protected NAS message with unexpected length %d , discard it! ");
576512,1181341695,0,0,PS1,CEMM,CemmNasMsgInd_1,P_INFO,swLogPrintf("Ignore security mode command during power off ");
576512,1181343743,0,0,PS1,CEMM,CemmNasMsgInd_2,P_INFO,swLogPrintf("Security Mode Command integrity checking failed! ");
576512,1181343744,0,0,PS1,CEMM,CemmNasMsgInd_3,P_VALUE,swLogPrintf("Unexpected message , PD is 0x%x! ");
576512,1181347839,0,0,PS1,CEMM,CemmNasMsgInd_4,P_INFO,swLogPrintf("Integrity checking of NAS message fail! ");
576512,1181349887,0,0,PS1,CEMM,CemmNasMsgInd_6,P_INFO,swLogPrintf("Destroy any allocated memory in abnormal case! ");
576512,1181349888,0,0,PS1,CEMM,CemmNasMsgInd_8,P_VALUE,swLogPrintf("Downlink Nas Count is %d ");
576512,1181353983,0,0,PS1,CEMM,EmmAsDeactCnf_1,P_SIG,swLogPrintf("Enter Psm Mode Succeed! ");
576512,1181354240,0,0,PS1,CEMM,CemmSendEsmFeatureSupportInd_1,P_VALUE,swLogPrintf("CemmSendEsmFeatureSupportInd: uePreferOpt in nvm is %d , but the select uePreferOpt is %d ");
576512,1181358079,0,0,PS1,CEMM,CemmEsmMsgContainerRspMsg_1,P_WARNING,swLogPrintf("Receive unexpected ESM Message container , argvPtr is 0x X% ");
576512,1181360127,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_1,P_INFO,swLogPrintf("Waiting cell camp indication , pending ESM establish request! ");
576512,1181362175,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_2,P_INFO,swLogPrintf("Already pended another request! ");
576512,1181364223,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_3,P_INFO,swLogPrintf("T3346 is running! ");
576512,1181366271,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_4,P_VALUE,swLogPrintf("Already in Service Request procedure , will reply later ");
576512,1181368319,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_5,P_INFO,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No_Service! ");
576512,1181370367,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_6,P_INFO,swLogPrintf("Waiting for RRC Act Cnf , Pending the ESM Establish req ");
576512,1181372415,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_7,P_INFO,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE! ");
576512,1181372417,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_8,P_INFO,swLogPrintf("Current emmState is %s ");
576512,1181374465,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_1,P_INFO,swLogPrintf("Current emmState is %s ");
576512,1181378559,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_2,P_WARNING,swLogPrintf("PendingUlEsmMsg is not empty ignore the new CemmEsmUnitDataRequestMsg! ");
576512,1181378560,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_3,P_VALUE,swLogPrintf("Unexpected ESM message 0x%x! ");
576512,1181382655,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_4,P_INFO,swLogPrintf("Waiting cell camp indication , pending ESM unitData request! ");
576512,1181384703,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_5,P_INFO,swLogPrintf("Already pended another request! ");
576512,1181386751,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_6,P_INFO,swLogPrintf("Receiving CemmEsmUnitDataReq but now is not allow to init cpsr ");
576512,1181388799,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_8,P_INFO,swLogPrintf("During Attach / Tau Complete transmission , pending it. ");
576512,1181388800,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_9,P_VALUE,swLogPrintf("Wrong msgType:%d ");
576512,1181390848,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_10,P_VALUE,swLogPrintf("Can ' t process CemmEsmUnitDataReq while under emmConnState:%d ");
576512,1181392896,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_11,P_VALUE,swLogPrintf("Wrong msgType:%d ");
576512,1181396991,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_12,P_INFO,swLogPrintf("No PS signalling exists ignore ESM request! ");
576512,1181399039,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_13,P_INFO,swLogPrintf("Not exceptional event ignore ESM request! ");
576512,1181401087,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_14,P_INFO,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No_Service! ");
576512,1181403135,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_15,P_INFO,swLogPrintf("Waiting for RRC Act Cnf , Pending the ESM Data req ");
576512,1181405183,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_16,P_INFO,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE! ");
576512,1181407231,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_17,P_INFO,swLogPrintf("Already in Service Request procedure , will reply later ");
576512,1181409279,0,0,PS1,CEMM,CemmEsmLocalDetachReAttachIndMsg_1,P_INFO,swLogPrintf("Indication from ESM to perform local detach and re-attach! ");
576512,1181409280,0,0,PS1,CEMM,CemmIsAllowEsmSendExceptionDataInSuspendState_1,P_VALUE,swLogPrintf("bRslt is %d ");
576512,1181411329,0,0,PS1,CEMM,CemmIsAllowSendNormalPriSignallingInSuspendState_1,P_INFO,swLogPrintf("Current emmState is %s ");
576512,1181415423,0,0,PS1,CEMM,CemmPlmnSelectRequest_1,P_INFO,swLogPrintf("Sending CemmPlmnSelectRequest while Ue is not in idle state ");
576512,1181417471,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_1,P_INFO,swLogPrintf("Already registered on this PLMN! ");
576512,1181419519,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_2,P_INFO,swLogPrintf("Currently trying to register on this PLMN! ");
576512,1181421567,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_3,P_INFO,swLogPrintf("Already sent out SIG_CERRC_ACT_REQ , just wait SIG_CERRC_ACT_CNF. ");
576512,1181423615,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_4,P_INFO,swLogPrintf("Currently trying to register on this PLMN! ");
576512,1181425663,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_5,P_INFO,swLogPrintf("Can ' t perform registration while in connected state! ");
576512,1181427711,0,0,PS1,CEMM,CemmProcPlmnSelectInd_1,P_INFO,swLogPrintf("Already registered on this PLMN! ");
576512,1181429759,0,0,PS1,CEMM,CemmProcPlmnSelectInd_2,P_INFO,swLogPrintf("Can ' t perform registration while in connected state! ");
576512,1181431807,0,0,PS1,CEMM,CemmProcNoPlmnSelectIndMsg_1,P_INFO,swLogPrintf("Before rcv plmn srch cnf , Detach Req has already sent , Ue should still kept in EMM_DEREGISTERED_INITIATED ");
576512,1181433855,0,0,PS1,CEMM,CemmProcNoPlmnSelectIndMsg_2,P_INFO,swLogPrintf("Receiving emergency camp request while in connected state , buffer it. ");
576512,1181435903,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_1,P_INFO,swLogPrintf("EMM specific procedure is ongoing.Waiting UE to complete specific procedure ");
576512,1181437951,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_2,P_INFO,swLogPrintf("No EMM specific procedure ongoing.Waiting UE go idle ");
576512,1181439999,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_3,P_INFO,swLogPrintf("EMM specific procedure ongoing.Abort current procedure ");
576512,1181442047,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_4,P_INFO,swLogPrintf("No EMM specific procedure ongoing.Release RRC connection ");
576512,1181444095,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_5,P_INFO,swLogPrintf("EMM specific procedure is ongoing.Waiting UE to complete specific procedure ");
576512,1181446143,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_6,P_INFO,swLogPrintf("No EMM specific procedure ongoing. Release RRC connection ");
576512,1181448191,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_7,P_INFO,swLogPrintf("Unexpected CemmPlmnIdleReqCause! ");
576512,1181448192,0,0,PS1,CEMM,ULNasCounterRollback_1,P_VALUE,swLogPrintf("Uplink Nas Count is %d ");
576512,1181450496,0,0,PS1,CEMM,ULNasCounterRollback_2,P_VALUE,swLogPrintf("Uplink Nas Count overflow is %d , %d ");
576512,1181454335,0,0,PS1,CEMM,ULNasCounterUpdate_1,P_WARNING,swLogPrintf("NAS UL COUNT wrap around , delete eKsi , Re-attach ");
576512,1181456383,0,0,PS1,CEMM,DLNasCounterUpdate_1,P_WARNING,swLogPrintf("NAS DL COUNT wrap around , delete eKsi , Re-attach ");
576512,1181456384,0,0,PS1,CEMM,PrintNasConfig_1,P_INFO,swLogPrintf("NAS signalling priority value is %d: NAS signalling low priority ");
576512,1181458432,0,0,PS1,CEMM,PrintNasConfig_2,P_INFO,swLogPrintf("NAS signalling priority value is %d: Reserved ");
576512,1181460480,0,0,PS1,CEMM,PrintNasConfig_3,P_INFO,swLogPrintf("Minimum Periodic Search Timer value is %d minutes ");
576512,1181464575,0,0,PS1,CEMM,PrintNasConfig_4,P_INFO,swLogPrintf("Extended access barring value indicates that the extended access barring is applied for the UE ");
576512,1181466623,0,0,PS1,CEMM,PrintNasConfig_5,P_INFO,swLogPrintf("Extended access barring value indicates that the extended access barring is not applied for the UE ");
576512,1181468671,0,0,PS1,CEMM,PrintNasConfig_6,P_INFO,swLogPrintf("Timer T3245 Behaviour value indicates that the timer T3245 is used ");
576512,1181470719,0,0,PS1,CEMM,PrintNasConfig_7,P_INFO,swLogPrintf("Timer T3245 Behaviour value indicates that the timer T3245 is not used ");
576512,1181472767,0,0,PS1,CEMM,PrintNasConfig_8,P_INFO,swLogPrintf("Override NAS signalling low priority value indicates that the UE can override the NAS signalling low priority indicator ");
576512,1181474815,0,0,PS1,CEMM,PrintNasConfig_9,P_INFO,swLogPrintf("Override NAS signalling low priority value indicates that the UE cannot override the NAS signalling low priority indicator ");
576512,1181476863,0,0,PS1,CEMM,PrintNasConfig_10,P_INFO,swLogPrintf("Override Extended access barring value indicates that the UE can override extended access barring ");
576512,1181478911,0,0,PS1,CEMM,PrintNasConfig_11,P_INFO,swLogPrintf("Override Extended access barring value indicates that the UE cannot override extended access barring ");
576512,1181480959,0,0,PS1,CEMM,PrintNasConfig_12,P_INFO,swLogPrintf("Fast First Higher Priority PLMN value indicates that the Fast First Higher Priority PLMN Search is enabled ");
576512,1181483007,0,0,PS1,CEMM,PrintNasConfig_13,P_INFO,swLogPrintf("Fast First Higher Priority PLMN value indicates that the Fast First Higher Priority PLMN Search is disabled ");
576512,1181483008,0,0,PS1,CEMM,PrintNasConfig_14,P_INFO,swLogPrintf("SM_RetryWaitTime value is %d minutes ");
576512,1181485056,0,0,PS1,CEMM,PrintNasConfig_15,P_INFO,swLogPrintf("Default_DCN_ID value is %d ");
576512,1181489151,0,0,PS1,CEMM,PrintNasConfig_16,P_INFO,swLogPrintf("Exception Data Reporting Allowed value indicates that the UE is allowed to use the RRC establishment cause mo-ExceptionData ");
576512,1181491199,0,0,PS1,CEMM,PrintNasConfig_17,P_INFO,swLogPrintf("Exception Data Reporting Allowed value indicates that the UE is not allowed to use the RRC establishment cause mo-ExceptionData ");
576512,1181493247,0,0,PS1,CEMM,PrintNasConfig_18,P_INFO,swLogPrintf("AttachWithIMSI value indicates that attach with IMSI is performed when moving to a non-equivalent PLMN ");
576512,1181495295,0,0,PS1,CEMM,PrintNasConfig_19,P_INFO,swLogPrintf("AttachWithIMSI value indicates that normal behaviour is applied ");
576512,1181497343,0,0,PS1,CEMM,CemmSimReady_1,P_INFO,swLogPrintf("Last visited registered TAI is invalid in EFepsloci. ");
576512,1181497856,0,0,PS1,CEMM,CemmSimReady_3,P_VALUE,swLogPrintf("EFepsloci Last visited registered TAI is: Plmn ( 0x%x , 0x%x ) , TAC 0x%x ");
576512,1181499392,0,0,PS1,CEMM,CemmSimReady_4,P_VALUE,swLogPrintf("EFepsloci EPS update status is: %d ");
576512,1181503487,0,0,PS1,CEMM,CemmSimReady_5,P_INFO,swLogPrintf("LAI is invalid in EFloci. ");
576512,1181505535,0,0,PS1,CEMM,CemmSimReady_6,P_INFO,swLogPrintf("USIM EFepsloci invalid.Use NVM value ");
576512,1181507583,0,0,PS1,CEMM,CemmSimReady_7,P_INFO,swLogPrintf("USIM EFepsnsc invalid.Use NVM value ");
576512,1181507584,0,0,PS1,CEMM,CemmSimReady_8,P_WARNING,swLogPrintf("eKSI or integrity algorithm is wrong stored in NVM!eKSI is %d ");
576512,1181511679,0,0,PS1,CEMM,CemmSimReady_9,P_VALUE,swLogPrintf("USIM EFepsloci invalid.NVM IMSI mismatch with USIM IMSI.Set to default value ");
576512,1181513727,0,0,PS1,CEMM,CemmSimReady_10,P_VALUE,swLogPrintf("USIM EFepsnsc invalid.NVM IMSI mismatch with USIM IMSI.Set to default value ");
576512,1181515775,0,0,PS1,CEMM,CemmSimReady_11,P_VALUE,swLogPrintf("USIM EFloci is invalid , set to default value ");
576512,1181517823,0,0,PS1,CEMM,CemmSimReady_12,P_WARNING,swLogPrintf("UE is set to power on attach without Integrity Protected , delete key ");
576512,1181519871,0,0,PS1,CEMM,CemmSimReady_13,P_WARNING,swLogPrintf("UE is set to power on attach with IMSI , delete GUTI and last register TAI / LAI ");
576512,1181521919,0,0,PS1,CEMM,CemmSimWriteData_1,P_WARNING,swLogPrintf("EFepsloci is not present , can ' t write to SIM , store into NVM! ");
576512,1181523967,0,0,PS1,CEMM,CemmSimWriteData_2,P_WARNING,swLogPrintf("pending updateEpslociToNvm! ");
576512,1181526015,0,0,PS1,CEMM,CemmSimWriteData_3,P_WARNING,swLogPrintf("updateEpslociToNvm! ");
576512,1181528063,0,0,PS1,CEMM,CemmSimWriteData_4,P_WARNING,swLogPrintf("EFepsnsc is not present , can ' t write to SIM , store into NVM! ");
576512,1181530111,0,0,PS1,CEMM,CemmSimWriteData_5,P_WARNING,swLogPrintf("pending updateEpsnscToNvm! ");
576512,1181532159,0,0,PS1,CEMM,CemmSimWriteData_6,P_WARNING,swLogPrintf("updateEpsnscToNvm! ");
576512,1181534207,0,0,PS1,CEMM,CemmSimWriteData_7,P_WARNING,swLogPrintf("EFloci is not present , can ' t write to SIM! ");
576512,1181536255,0,0,PS1,CEMM,CemmSimWriteData_8,P_WARNING,swLogPrintf("No USIM file to update! ");
576512,1181537024,0,0,PS1,CEMM,CemmSimWriteData_9,P_WARNING,swLogPrintf("Can ' t write USIM file! SimPresent is %d , WriteSimFlag is %d , SimRefresh is %d , SimRemove is %d ");
576512,1181540351,0,0,PS1,CEMM,CemmSimWriteCnf_1,P_INFO,swLogPrintf("Writing USIM file failed! ");
576512,1181542399,0,0,PS1,CEMM,CemmSimWriteCnf_111,P_WARNING,swLogPrintf("pending updateEpslociToNvm! ");
576512,1181544447,0,0,PS1,CEMM,CemmSimWriteCnf_112,P_WARNING,swLogPrintf("updateEpslociToNvm! ");
576512,1181546495,0,0,PS1,CEMM,CemmSimWriteCnf_113,P_WARNING,swLogPrintf("pending updateEpsnscToNvm! ");
576512,1181548543,0,0,PS1,CEMM,CemmSimWriteCnf_114,P_WARNING,swLogPrintf("updateEpsnscToNvm! ");
576512,1181550591,0,0,PS1,CEMM,NetworkFailingAuthentication_1,P_INFO,swLogPrintf("UE deems that the network has failed the authentication check! ");
576512,1181550592,0,0,PS1,CEMM,CemmSimUsatImeiSvReq_1,P_VALUE,swLogPrintf("Error idType ( %d ) ");
576512,1181554687,0,0,PS1,CEMM,CemmSmsEstRequest_1,P_WARNING,swLogPrintf("Received a new CemmSmsEstRequest , discard the PendingSmsMsg! ");
576512,1181556735,0,0,PS1,CEMM,CemmSmsEstRequest_2,P_WARNING,swLogPrintf("Reached max connection number! ");
576512,1181558783,0,0,PS1,CEMM,CemmSmsEstRequest_3,P_INFO,swLogPrintf("Waiting cell camp indication , pending SMS establish request! ");
576512,1181560831,0,0,PS1,CEMM,CemmSmsEstRequest_4,P_INFO,swLogPrintf("Already pended another request! ");
576512,1181562879,0,0,PS1,CEMM,CemmSmsEstRequest_5,P_INFO,swLogPrintf("T3346 is running! ");
576512,1181562880,0,0,PS1,CEMM,CemmSmsEstRequest_6,P_WARNING,swLogPrintf("Current cell camp status is %d , can ' t process SS establish req ");
576512,1181566975,0,0,PS1,CEMM,CemmSmsEstRequest_7,P_WARNING,swLogPrintf("Waiting for RRC Act Cnf , Pending the SMS establish req ");
576512,1181569023,0,0,PS1,CEMM,CemmSmsEstRequest_8,P_INFO,swLogPrintf("Can ' t process SMS establish req under EMM_REGISTERED_NO_CELL_AVAILABLE ");
576512,1181569025,0,0,PS1,CEMM,CemmSmsEstRequest_9,P_INFO,swLogPrintf("Can ' t process SMS establish req under emmState %s ");
576512,1181573119,0,0,PS1,CEMM,CemmSmsEstRequest_10,P_WARNING,swLogPrintf("Not registered for SMS only! ");
576512,1181573888,0,0,PS1,CEMM,CemmSmsRelRequest_1,P_VALUE,swLogPrintf("Sms release , index %d , connUsed %d , tiValue %d , tiFlag %d ");
576512,1181577215,0,0,PS1,CEMM,CemmSmsUnitDataRequest_1,P_WARNING,swLogPrintf("PendingSmsMsg is not empty! ");
576512,1181579263,0,0,PS1,CEMM,CemmSsEstRequest_1,P_INFO,swLogPrintf("Waiting cell camp indication , pending SS establish request! ");
576512,1181581311,0,0,PS1,CEMM,CemmSsEstRequest_2,P_INFO,swLogPrintf("Already pended another request! ");
576512,1181583359,0,0,PS1,CEMM,CemmSsEstRequest_3,P_INFO,swLogPrintf("Currently no allowed initiate SERVICE REQUEST! ");
576512,1181583360,0,0,PS1,CEMM,CemmSsEstRequest_4,P_WARNING,swLogPrintf("Current cell camp status is %d , can ' t process SS establish req ");
576512,1181587455,0,0,PS1,CEMM,CemmSsEstRequest_5,P_WARNING,swLogPrintf("Waiting for RRC Act Cnf , Pending the SS establish req ");
576512,1181589503,0,0,PS1,CEMM,CemmSsEstRequest_6,P_INFO,swLogPrintf("Can ' t process SS establish req under EMM_REGISTERED_NO_CELL_AVAILABLE ");
576512,1181589505,0,0,PS1,CEMM,CemmSsEstRequest_7,P_INFO,swLogPrintf("Current emmState is %s ");
576512,1181593599,0,0,PS1,CEMM,CemmSsUnitDataRequest_1,P_WARNING,swLogPrintf("Pending SS message is not empty! ");
576512,1181593601,0,0,PS1,CEMM,EmmStartTimer_1,P_INFO,swLogPrintf("EMM timer %s start ");
576512,1181595649,0,0,PS1,CEMM,EmmStartHibTimer_1,P_INFO,swLogPrintf("EMM Hibernate timer %s start ");
576512,1181597696,0,0,PS1,CEMM,EmmStartHibTimer_2,P_INFO,swLogPrintf("Timer period is %d MS ");
576512,1181599745,0,0,PS1,CEMM,EmmT3245Expiry_1,P_INFO,swLogPrintf("EmmT3245Expiry: emmState.now is %s ");
576512,1181601793,0,0,PS1,CEMM,EmmT3247Expiry_1,P_INFO,swLogPrintf("EmmT3247Expiry: emmState.now is %s ");
576512,1181604352,0,0,PS1,CEMM,EmmT3324Expiry_1,P_VALUE,swLogPrintf("EmmT3324Expiry: emmConnState is %d , emmState is %d , pendingRequest is %d ");
576512,1181607935,0,0,PS1,CEMM,EmmT3324Expiry_2,P_WARNING,swLogPrintf("EmmT3324Expiry: Already during enter PSM procedure. ");
576512,1181609983,0,0,PS1,CEMM,EmmT3324Expiry_3,P_INFO,swLogPrintf("Due to allow enter hib while t3346 or sigRetransmitTimer is running , so still allow to enter psm! ");
576512,1181612031,0,0,PS1,CEMM,EmmT3324Expiry_4,P_WARNING,swLogPrintf("Has pending ESM data , can ' t enter psm! ");
576512,1181612032,0,0,PS1,CEMM,EmmT3324Expiry_5,P_WARNING,swLogPrintf("Had reTransMsg ( msg type is %d ) , can ' t enter psm! ");
576512,1181616127,0,0,PS1,CEMM,EmmT3324Expiry_6,P_INFO,swLogPrintf("ESM data is out of date! ");
576512,1181618175,0,0,PS1,CEMM,EmmT3346Expiry_1,P_INFO,swLogPrintf("No pending data , maybe enter hib before , no need to retransmit! ");
576512,1181620223,0,0,PS1,CEMM,EmmT3346Expiry_2,P_INFO,swLogPrintf("T3346 expire under EMM_REGISTERED_NO_CELL_AVAILABLE , cell service status is No_Service! ");
576512,1181620225,0,0,PS1,CEMM,EmmT3412Expiry_1,P_INFO,swLogPrintf("Current emmState is %s ");
576512,1181624319,0,0,PS1,CEMM,EmmT3412Expiry_2,P_SIG,swLogPrintf("Continue to Start T3412 ");
576512,1181624320,0,0,PS1,CEMM,EmmT3440Expiry_other_1,P_WARNING,swLogPrintf("T3440 expiry , but current emmState is %d ");
576512,1181626369,0,0,PS1,CEMM,EmmT3448Expiry_1,P_INFO,swLogPrintf("Current emmState is %s ");
576512,1181630463,0,0,PS1,CEMM,EmmT3448Expiry_2,P_INFO,swLogPrintf("No pending data , maybe enter hib before , no need to retransmit! ");
576512,1181632511,0,0,PS1,CEMM,EmmT3448Expiry_3,P_INFO,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No_Service! ");
576512,1181634559,0,0,PS1,CEMM,EmmT3448Expiry_4,P_INFO,swLogPrintf("Under OOS , will retransmit after plmn search succeed. ");
576512,1181634560,0,0,PS1,CEMM,EmmT3448Expiry_other_1,P_WARNING,swLogPrintf("T3448 expiry , but current emmState is %d ");
576512,1181638655,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_1,P_WARNING,swLogPrintf("No pending Data need to retransmit! ");
576512,1181640703,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_2,P_INFO,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No_Service! ");
576512,1181642751,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_3,P_INFO,swLogPrintf("Under OOS , will retransmit after plmn search succeed. ");
576512,1181644799,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_4,P_INFO,swLogPrintf("TAU is ongoing , will retransmit after TAU succeed. ");
576512,1181646847,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_5,P_INFO,swLogPrintf("Plmn Searching , will retransmit after plmn search succeed. ");
576512,1181646848,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_6,P_VALUE,swLogPrintf("Can ' t retransmit under EMM state:%d ");
576512,1181648897,0,0,PS1,CEMM,EmmTimerExpiry_1,P_INFO,swLogPrintf("EMM timer %s expire ");
576512,1181650945,0,0,PS1,CEMM,EmmHibTimerExpiry_1,P_INFO,swLogPrintf("EMM Hibernate timer %s expire ");
576512,1181652992,0,0,PS1,CEMM,ConstructAttachRequest_1,P_WARNING,swLogPrintf("Unexpected ATTACH procedure: %d ");
576512,1181655040,0,0,PS1,CEMM,ConstructDetachRequest_1,P_WARNING,swLogPrintf("Unexpected DETACH procedure: %d ");
576512,1181659135,0,0,PS1,CEMM,CemmIsNeedSetSaf_1,P_VALUE,swLogPrintf("Had pending ul esm msg in cp data cache , need to set saf! ");
576512,1181661183,0,0,PS1,CEMM,ConstructTauRequest_1,P_WARNING,swLogPrintf("EMM specific procedure wrong! ");
576512,1181663231,0,0,PS1,CEMM,ConstructTauRequest_2,P_WARNING,swLogPrintf("GUTI is invalid! ");
576512,1181665279,0,0,PS1,CEMM,UsatGetImeiSv_1,P_WARNING,swLogPrintf("Read IMEI failed , use default IMEI ");
577536,1182795776,0,0,PS1,CESM,CesmSendEsmUnitDataReqMsg_v_1,P_VALUE,swLogPrintf("CESM , CemmEsmUnitDataReq , msgType: 0x%x ");
577536,1182797824,0,0,PS1,CESM,CesmConstructBrResourceAllocReq_pti_1,P_VALUE,swLogPrintf("CESM , MO dedicated BR ACT , retx BEARER_RESOURCE_ALLOCATION_REQUEST , re-use old pti: %d ");
577536,1182799872,0,0,PS1,CESM,CesmConstructBrResourceAllocReq_pf_num_1,P_WARNING,swLogPrintf("CESM , CID: %d , MO act dedicated BR req more TFA packet filter , but we only support 4 ");
577536,1182801920,0,0,PS1,CESM,CesmConstructBearerResourceAllocReq_eqos_1,P_WARNING,swLogPrintf("CESM , CID: %d , BearerResourceAllocReq qos IE is Mandatory , must be set before allocReq , default set to 0 ");
577536,1182803968,0,0,PS1,CESM,CesmSendPdnDisconnectReq_pti_1,P_VALUE,swLogPrintf("CESM , retx PDN_DISCONNECT_REQUEST , re-use old pti: %d ");
577536,1182806016,0,0,PS1,CESM,CesmSendBrResourceModifyReqForDedBrDeact_pti_1,P_VALUE,swLogPrintf("CESM , retx BEARER_RESOURCE_MODIFICATION_REQUEST , re-use old pti: %d ");
577536,1182808576,0,0,PS1,CESM,CesmSendBrResourceModifyReqForDedBrDeact_tft_w_1,P_WARNING,swLogPrintf("CESM , more TFT packetfilter in dedicated ebi: %d , delPfNum: %d , delPfListIdx: %d ");
577536,1182812159,0,0,PS1,CESM,CesmSendBrResourceModifyReqForDedBrDeact_tft_w_2,P_WARNING,swLogDump("CESM , dump delPfIdList: ");
577536,1182812928,0,0,PS1,CESM,CesmSendBrResourceModifyReqForDedBrDeact_notft_w_1,P_WARNING,swLogPrintf("CESM , dedicated ebi: %d , brState: %d , but no TFT assigned , tft1present: %d , tft2present: %d ");
577536,1182814208,0,0,PS1,CESM,CesmSendBrResourceModifyReq_pti_1,P_VALUE,swLogPrintf("CESM , MO modify , retx BEARER_RESOURCE_MODIFICATION_REQUEST , re-use old pti: %d ");
577536,1182816256,0,0,PS1,CESM,CesmSendBrResourceModifyReq_pf_num_1,P_WARNING,swLogPrintf("CESM , CID: %d , MO modify req more TFA packet filter , but we only support 4 ");
577536,1182818560,0,0,PS1,CESM,CesmSendEsmDataTransport_len_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , invalid UL ESM_DATA_TRANSPORT data length: %d , discard current PKG ");
577536,1182820352,0,0,PS1,CESM,CesmSendEsmDataTransport_len_w_2,P_WARNING,swLogPrintf("CESM , ebi: %d , no valid UL ESM_DATA_TRANSPORT left , not need Tx ");
577536,1182822400,0,0,PS1,CESM,CesmSendEsmDataTransport_rai_w_1,P_WARNING,swLogPrintf("CESM , RAI: %d ( 1 -NO_UL_DL / 2 -ONLY_DL ) , but still UL PKG pending , RAI change to 0 - NO_INFO ");
577536,1182824704,0,0,PS1,CESM,CesmSendEsmDataTransport_rai_s_1,P_SIG,swLogPrintf("CESM , EBI: %d , RAI flag: %d , RAI_NO_INFO ( 0 ) / NO_UL_DL ( 1 ) / ONLY_DL ( 2 ) / REVD ( 3 ) ");
577536,1182828543,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_v4_w_1,P_WARNING,swLogDump("CESM , IPv4 DNS list is full , can ' t add a new IPV4 DNS: ");
577536,1182830591,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_v6_w_1,P_WARNING,swLogDump("CESM , IPv6 DNS list is full , can ' t add a new IPV6 DNS: ");
577536,1182830848,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_type_w_1,P_WARNING,swLogPrintf("CESM , index: %d , invalid DNS iptype: %d , or all zero addr ");
577536,1182832640,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_mtu_w_1,P_WARNING,swLogPrintf("CESM , invalid / not support ipv4 MTU in DL PCO: %d ");
577536,1182834688,0,0,PS1,CESM,CesmUpdateDefBrBasicFromActDefEpsBrCtxReq_cp_1,P_WARNING,swLogPrintf("CESM , EBI: %d , CP only set in ActivateDefEpsBearerCtxRequest , not right , ignore ");
577536,1182836992,0,0,PS1,CESM,CesmUpdateDefBrBasicFromActDefEpsBrCtxReq_w_1,P_WARNING,swLogPrintf("CESM , EBI: %d , invalid APN in ActivateDefEpsBearerCtxRequest , len: %d ");
577536,1182839296,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_in_1,P_VALUE,swLogPrintf("CESM , ebi: %d , try add / replace TFT pfId: %d , pfEpId: %d ");
577536,1182842112,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_ded_same_1,P_VALUE,swLogPrintf("CESM , ded ebi: %d , tft1Present: %d , pfId: %d / %d , pfEpId: %d / %d replace ");
577536,1182844160,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_ded_same_2,P_VALUE,swLogPrintf("CESM , ded ebi: %d , tft2Present: %d , pfId: %d / %d , pfEpId: %d / %d replace ");
577536,1182846208,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_def_same_1,P_VALUE,swLogPrintf("CESM , def ebi: %d , tftPresent: %d , pfId: %d / %d , pfEpId: %d / %d replace ");
577536,1182848000,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_same_2,P_VALUE,swLogPrintf("CESM , ebi: %d , pfId: %d / %d , pfEpId: %d / %d found , replace ");
577536,1182849280,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_mem_w_1,P_WARNING,swLogPrintf("CESM , no slp2 mem left to add new TFT PF , ebi: %d , pfId: %d ");
577536,1182851328,0,0,PS1,CESM,CesmBrBasicDeleteTftPacketFilter_in_1,P_VALUE,swLogPrintf("CESM , ebi: %d , try delete TFT pfId: %d ");
577536,1182853376,0,0,PS1,CESM,CesmBrBasicDeleteTftPacketFilter_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , no TFT pfId: %d found , can ' t delete ");
577536,1182855936,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_tft_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , recv modify BR reqest , tft opcode: %d , but no pf config: %d / 0x%x , reject ");
577536,1182857728,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_pfId_dup_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , recv modify BR reqest , tft opcode: %d , pfId: %d , duplicated in request , reject ");
577536,1182859776,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_pfEpId_dup_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , recv modify BR reqest , tft opcode: %d , pfEpId: %d , duplicated in request , reject ");
577536,1182861824,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_del_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , recv modify BR reqest , tft opcode: Delete existing TFT , but pf list not empty: %d / 0x%x in TFT , reject ");
577536,1182863360,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_del_w_3,P_WARNING,swLogPrintf("CESM , ebi: %d , recv modify BR reqest , dedicated BR not allow to delete existing TFT , reject ");
577536,1182865664,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_del_w_4,P_WARNING,swLogPrintf("CESM , ebi: %d , recv modify BR reqest , tft opcode: Delete packet filters from existing TFT , but pf list empty: %d in TFT , reject ");
577536,1182867456,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_del_w_5,P_WARNING,swLogPrintf("CESM , ded ebi: %d , delete packet filters from existing TFT , not allow to del all , reject ");
577536,1182870016,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_no_tft_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , recv modify BR reqest , tft opcode: No TFT operation , but pf list not empty: %d / 0x%x in TFT , reject ");
577536,1182872064,0,0,PS1,CESM,CesmUpdateTftFromModifyEpsBrCtxReq_opCode_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , recv modify BR reqest , unkown TFT opCode: %d , pfNum: %d , ignore ");
577536,1182873856,0,0,PS1,CESM,CesmUpdateBrBasicFromModifyEpsBrCtxReq_tft_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , modify TFT NOK , retErr: %d ");
577536,1182875648,0,0,PS1,CESM,CesmUpdateBrBasicFromModifyEpsBrCtxReq_apnrate_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , dedicated BR , not support APN rate CTRL , ignore ");
577536,1182877696,0,0,PS1,CESM,CesmUpdateBrBasicFromModifyEpsBrCtxReq_apnrate_w_2,P_WARNING,swLogPrintf("CESM , ebi: %d , dedicated BR , not support additional APN rate CTRL , ignore ");
577536,1182880256,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , cid: %d , act dedicated BR , but TFT opCode: %d , not right , reject case: 41 ");
577536,1182882560,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_num_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , cid: %d , act dedicated BR , but packet filer number: %d / 0x%x , not right , reject case: 42 ");
577536,1182884352,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_pfId_dup_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , recv act ded BR reqest , tft opcode: %d , pfId: %d , duplicated in request , reject ");
577536,1182886400,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_pfEpId_dup_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , recv act ded BR reqest , tft opcode: %d , pfEpId: %d , duplicated in request , reject ");
577536,1182887936,0,0,PS1,CESM,CesmUpdateDedBrBasicFromActDedEpsBrCtxReq_eps_w_2,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi: %d , no EPS basic CTX avaiable ");
577536,1182890496,0,0,PS1,CESM,CesmUpdateDedBrBasicFromActDedEpsBrCtxReq_tft_1,P_WARNING,swLogPrintf("CESM , act ded BR , ebi: %d , cid: %d , check TFT not right , esmCause: %d ");
577536,1182892032,0,0,PS1,CESM,CesmBrMoActEstablishCnf_ded_s_1,P_SIG,swLogPrintf("CESM , CID: %d , request act dedicated bearer , but EMM establish failed , start T3480 and retry later ");
577536,1182894336,0,0,PS1,CESM,CesmBrMoActEstablishCnf_def_s_2,P_SIG,swLogPrintf("CESM , CID: %d , request act default bearer , but EMM establish failed , start T3482 : %d ms and retry later ");
577536,1182896384,0,0,PS1,CESM,CesmBrMoActEstablishCnf_def_s_3,P_SIG,swLogPrintf("CESM , CID: %d , start timer T3482 , MS: %d , and send PDN CONNECTIVITY REQUEST ");
577536,1182898176,0,0,PS1,CESM,CesmBrMoModifyEstablishCnf_est_s_1,P_SIG,swLogPrintf("CESM , CID: %d , request modify BR , but EMM establish failed , start T3481 and retry later ");
577536,1182900736,0,0,PS1,CESM,CesmBrMoModifyEstablishCnf_br_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , EBI: %d , brState: %d , request modify BR , but no basic BR info , abnormal , local deact ");
577536,1182902784,0,0,PS1,CESM,CesmBrMoModifyEstablishCnf_modify_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , EBI: %d , brState: %d , no reqTFA or reqEQOS , can ' t MO modify ");
577536,1182904576,0,0,PS1,CESM,CesmBrMoDeactEstablishCnf_ded_s_1,P_SIG,swLogPrintf("CESM , CID: %d , ebi: %d , request deact dedicated bearer , but EMM establish failed , start T3481 and retry later ");
577536,1182906880,0,0,PS1,CESM,CesmBrMoDeactEstablishCnf_def_s_1,P_SIG,swLogPrintf("CESM , CID: %d , ebi: %d , request act default bearer , but EMM establish failed , start T3492: %dms and retry later ");
577536,1182908672,0,0,PS1,CESM,CesmBrMoDeactEstablishCnf_ded_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , dedicated ebi: %d , brState CESM_BR_CTX_MO_DEACT_PENDING , but no basic info ");
577536,1182910464,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_pti_w_1,P_WARNING,swLogPrintf("CESM , invalid PTI: %d in ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST ");
577536,1182912512,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_ebi_w_1,P_WARNING,swLogPrintf("CESM , invalid EBI: %d in ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST ");
577536,1182915328,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_ebi_w_2,P_WARNING,swLogPrintf("CESM , EPS bearer ebi: %d , already exist , DL duplicated , msgPti: %d , brPti: %d , brState: %d ");
577536,1182916608,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_ebi_w_3,P_WARNING,swLogPrintf("CESM , EPS bearer ebi: %d , already exist , local deact ");
577536,1182918912,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_pti_w_2,P_WARNING,swLogPrintf("CESM , no EPS bearer found for PTI: %d , EBI: %d ");
577536,1182921472,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_pti_ebi_1,P_WARNING,swLogPrintf("CESM , found EPS bearer via PTI: %d , brEbi: %d , brState: %d already set , msgEbi: %d , reject cur req ");
577536,1182922752,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_basic_w_1,P_WARNING,swLogPrintf("CESM , no memory left for ESM basic bearer info , ebi: %d , reject cur req ");
577536,1182925312,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_state_w_1,P_WARNING,swLogPrintf("CESM , EBI: %d , CID: %d , invalid brState: %d , when proc ActivateDefEpsBearerCtxRequest ");
577536,1182926848,0,0,PS1,CESM,CesmProcEsmInfoReq_pti_w_1,P_WARNING,swLogPrintf("CESM , no EPS BR found via PTI: %d , carried in ESMInformationRequest ");
577536,1182929152,0,0,PS1,CESM,CesmProcEsmInfoReq_pti_w_2,P_WARNING,swLogPrintf("CESM , dedicated EPS BR CID: %d , found via PTI: %d , not right ");
577536,1182931200,0,0,PS1,CESM,CesmProcEsmInfoReq_brState_w_1,P_WARNING,swLogPrintf("CESM , BR CID: %d , brState: %d not right when proc ESMInformationRequest ");
577536,1182933504,0,0,PS1,CESM,CesmProcDeactEpsBrCtxReq_pti_br_w_1,P_WARNING,swLogPrintf("CESM , PTI: %d , CID: %d , brState: %d not right when proc DeactivateEPSBearerCtxRequest ");
577536,1182935040,0,0,PS1,CESM,CesmProcDeactEpsBrCtxReq_pti_w_2,P_WARNING,swLogPrintf("CESM , PTI: %d in DeactivateEPSBearerCtxRequest , but no bearer found ");
577536,1182937600,0,0,PS1,CESM,CesmProcDeactEpsBrCtxReq_pti_reAttach_1,P_WARNING,swLogPrintf("CESM , NW syn BR status , CID:%d , EBI:%d , state:%d , is the last def eps bearer , should re-attach ");
577536,1182939392,0,0,PS1,CESM,CesmProcPdnConnectivityRej_pti_w_1,P_WARNING,swLogPrintf("CESM , recv PDNConnectivityReject with pti: %d , cause: %d. but no BR found via pti , or is dedicated bearer ");
577536,1182941696,0,0,PS1,CESM,CesmProcPdnConnectivityRej_brState_w_1,P_WARNING,swLogPrintf("CESM , recv PDNConnectivityReject , cid: %d , ebi: %d , brState: %d , but BR activated , abnormal ");
577536,1182943233,0,0,PS1,CESM,CesmProcPdnConnectivityRej_brState_w_2,P_WARNING,swLogPrintf("CESM , recv PDNConnectivityReject , but ebi: %s is set , abnormal ");
577536,1182945792,0,0,PS1,CESM,CesmProcPdnConnectivityRej_brState_w_3,P_WARNING,swLogPrintf("CESM , recv PDNConnectivityReject , cid: %d , ebi: %d , brState: %d , abnormal , local deact ");
577536,1182948096,0,0,PS1,CESM,CesmProcPdnConnectivityRej_auth_1,P_WARNING,swLogPrintf("CESM , cid: %d , state:%d , authtype:%d , attachPdnAuthRetry:%d ");
577536,1182951423,0,0,PS1,CESM,CesmProcPdnConnectivityRej_auth_fail,P_WARNING,swLogPrintf("CESM , recv PDN connect reject again as CHAP / PAP auth , should local deactivated ");
577536,1182951424,0,0,PS1,CESM,CesmProcMtActDedEpsBrCtxReq_cid_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi: %d , no valid CID could allocated ");
577536,1182953984,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_cid_v_1,P_VALUE,swLogPrintf("CESM , dedicated ebi: %d , but cid: %d is used , try to use cid: %d ");
577536,1182955776,0,0,PS1,CESM,CesmProcMtActDedEpsBrCtxReq_cid_undefine_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , find a default bearer , cid:%d , brState:%d , undefined it ");
577536,1182957568,0,0,PS1,CESM,CesmProcMtActDedEpsBrCtxReq_eps_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi: %d , no EPS CTX avaiable ");
577536,1182959872,0,0,PS1,CESM,CesmProcMtActDedEpsBrCtxReq_eps_w_2,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi: %d , update ctx fail esmCause: %d ");
577536,1182961664,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_ebi_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , ebi: %d , not valid / supported ");
577536,1182964224,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_linkedebi_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi: %d , can ' t find linked ebi: %d , or linked BR not act: %d ");
577536,1182966016,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_ebi_dup_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi: %d , BR already exist , brState: %d ");
577536,1182968576,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_dup_ebi_w_2,P_WARNING,swLogPrintf("CESM , dedicated bearer ebi: %d , already exist , DL duplicated , msgPti: %d , brPti: %d , brState: %d ");
577536,1182969856,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_dup_ebi_w_3,P_WARNING,swLogPrintf("CESM , EPS bearer ebi: %d , already exist , local deact ");
577536,1182971904,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_pti_w_1,P_WARNING,swLogPrintf("CESM , pti: %d in ActivateDedEpsBearerCtxRequest , can ' t find EPS bearer , reject ");
577536,1182974208,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_mo_act_w_1,P_WARNING,swLogPrintf("CESM , pti: %d , UE request a default bearer cid: %d , but a dedicated bearer accept ");
577536,1182976512,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_mo_mod_w_1,P_WARNING,swLogPrintf("CESM , pti: %d , UE request to modify bearer cid: %d , but a dedicated bearer ebi: %d accept , reject MO modify proc ");
577536,1182978816,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_brState_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , pti: %d , brState: %e<CesmBearerContextState> , but a dedicated bearer ebi: %d accept ");
577536,1182980352,0,0,PS1,CESM,CesmProcModifyEpsBrCtxReq_pti_w_1,P_WARNING,swLogPrintf("CESM , can ' t find BR via pti: %d , can ' t proc ModifyEPSBearerCtxRequest , ebi: %d ");
577536,1182982144,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_dup_pti_w_2,P_WARNING,swLogPrintf("CESM , ModifyEPSBearerCtxRequest duplicated , pti: %d , act as a MT proc , and ongoing ");
577536,1182984192,0,0,PS1,CESM,CesmProcModifyEpsBrCtxReq_no_ebi_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , no BR found , can ' t proc ModifyEPSBearerCtxRequest ");
577536,1182987264,0,0,PS1,CESM,CesmProcModifyEpsBrCtxReq_pti_ebi_w_1,P_WARNING,swLogPrintf("CESM , recv ModifyEPSBearerCtxRequest , ebi: %d , cid: %d , pti: %d , but pti is for BR CID: %d , brState: %d ");
577536,1182988288,0,0,PS1,CESM,CesmProcModifyEpsBrCtxReq_no_ebi_w_2,P_WARNING,swLogPrintf("CESM , ebi: %d , BR deacted , can ' t proc ModifyEPSBearerCtxRequest ");
577536,1182990848,0,0,PS1,CESM,CesmProcModifyEpsBrCtxReq_basic_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , ebi: %d , brState: %d , but basic context not exist , local deact ");
577536,1182992896,0,0,PS1,CESM,CesmProcModifyEpsBrCtxReq_update_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , brState: %d , modify NOK , esmCause: %d ");
577536,1182995456,0,0,PS1,CESM,CesmProcPdnDisconnectRej_state_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , pti: %d , PDNDisconnectReject with cause: %d , brState: %d not right , or not default BR: %d ");
577536,1182997248,0,0,PS1,CESM,CesmProcPdnDisconnectRej_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , brState: %d , pti: %d , PDNDisconnectReject with casue: %d , last PDN not allow to deact ");
577536,1182999040,0,0,PS1,CESM,CesmProcPdnDisconnectRej_pti_w_1,P_WARNING,swLogPrintf("CESM , PDNDisconnectReject with casue: %d , pti: %d , ebi: %d , can ' t find BR via PTI ");
577536,1183000832,0,0,PS1,CESM,CesmProcPdnDisconnectRej_ebi_w_1,P_WARNING,swLogPrintf("CESM , PDNDisconnectReject with casue: %d , ebi: %d , accord 3 GPP should be 0 , not right ");
577536,1183003648,0,0,PS1,CESM,CesmProcBrResourceAllocRej_state_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , pti: %d , BrResourceAllocRej with cause: %d , brState: %d not right , or not dedicated BR: %d ");
577536,1183004928,0,0,PS1,CESM,CesmProcBrResourceAllocRej_def_w_1,P_WARNING,swLogPrintf("CESM , BrResourceAllocRej with cause: invalid EBI: 43 , need local deact linked def BR , EBI: %d , cid: %d ");
577536,1183007232,0,0,PS1,CESM,CesmProcBrResourceAllocRej_pti_w_1,P_WARNING,swLogPrintf("CESM , BrResourceAllocRej with casue: %d , pti: %d , ebi: %d , can ' t find BR via PTI ");
577536,1183008768,0,0,PS1,CESM,CesmProcBrResourceAllocRej_T3396_w_1,P_WARNING,swLogPrintf("CESM , BrResourceAllocRej with cause: %d , and Backoff timer set , but UE not support now ");
577536,1183011072,0,0,PS1,CESM,CesmProcBrResourceAllocRej_ebi_w_1,P_WARNING,swLogPrintf("CESM , BrResourceAllocRej with casue: %d , ebi: %d , accord 3 GPP should be 0 , not right ");
577536,1183013632,0,0,PS1,CESM,CesmProcBrResourceModRej_state_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , pti: %d , BrResourceModRej with cause: %d , brState: %d not right ");
577536,1183015168,0,0,PS1,CESM,CesmProcBrResourceModRej_ebi_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , pti: %d , BrResourceModRej with cause: invalid EPS bearer identity , local deact ");
577536,1183017472,0,0,PS1,CESM,CesmProcBrResourceModRej_deact_1,P_SIG,swLogPrintf("CESM , ebi: %d , pti: %d , BrResourceModRej with cause: %d , MO deact proc , local deact ");
577536,1183019520,0,0,PS1,CESM,CesmProcBrResourceModRej_mod_1,P_SIG,swLogPrintf("CESM , ebi: %d , pti: %d , BrResourceModRej with cause: %d , MO modify proc , back to ACT state ");
577536,1183021824,0,0,PS1,CESM,CesmProcBrResourceModRej_br_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , pti: %d , BrResourceModRej with cause: %d , brState: %d , ignore ");
577536,1183023616,0,0,PS1,CESM,CesmProcBrResourceModRej_pti_w_1,P_WARNING,swLogPrintf("CESM , BrResourceModRej with casue: %d , pti: %d , ebi: %d , can ' t find BR via PTI ");
577536,1183025152,0,0,PS1,CESM,CesmProcBrResourceModRej_T3396_w_1,P_WARNING,swLogPrintf("CESM , BrResourceModRej with cause: %d , and Backoff timer set , but UE not support now ");
577536,1183027456,0,0,PS1,CESM,CesmProcBrResourceModRej_ebi_w_2,P_WARNING,swLogPrintf("CESM , BrResourceModRej with casue: %d , ebi: %d , accord 3 GPP should be 0 , not right ");
577536,1183029760,0,0,PS1,CESM,CesmProcEsmDataTransport_ciot_w_1,P_WARNING,swLogPrintf("CESM , UE or NW not support CP OPT , nwSupCiotOpt: %d , uePreferOpt: %d , ueSuptOptType: %d , but still recv DL CP data ");
577536,1183031552,0,0,PS1,CESM,CesmProcEsmDataTransport_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , not exist , discard DL CP data , length: %d ");
577536,1183033344,0,0,PS1,CESM,CesmProcEsmDataTransport_f_1,P_WARNING,swLogPrintf("CESM , DL PKG mem high , discard DL CP data , length: %d ");
577536,1183035392,0,0,PS1,CESM,CesmProcEsmDataTransport_hf_1,P_WARNING,swLogPrintf("CESM , heap full , can ' t report MT CP data , length: %d ");
577536,1183037952,0,0,PS1,CESM,CesmProcESMStatus_s_1,P_SIG,swLogPrintf("CESM , recv ESMStatus , ebi: %d , pti: %d , esmCause: %d ");
577536,1183039488,0,0,PS1,CESM,CesmProcESMStatus_ebi_w_1,P_WARNING,swLogPrintf("CESM , recv ESMStatus , ebi: %d , esmCause: Invalid EPS BR ID , but no BR found ");
577536,1183042048,0,0,PS1,CESM,CesmProcESMStatus_97_w_1,P_WARNING,swLogPrintf("CESM , recv ESMStatus , ebi: %d , pti: %d , esmCause: %d , BR state: CESM_BR_CTX_ATTACH_ACT_PENDING , let EMM retry ");
577536,1183044352,0,0,PS1,CESM,CesmProcESMStatus_97_w_2,P_WARNING,swLogPrintf("CESM , recv ESMStatus , pti: %d , ebi: %d , esmCause: %d , BR state: %d , not right ");
577536,1183046144,0,0,PS1,CESM,CesmProcESMStatus_other_w_1,P_WARNING,swLogPrintf("CESM , recv ESMStatus , pti: %d , ebi: %d , esmCause: %d , not need to proc ");
577536,1183049727,0,0,PS1,CESM,CesmCheckSendEsmDataTransport_clear_1,P_INFO,swLogPrintf("CESM , all UL data Tx / clear ");
577536,1183051775,0,0,PS1,CESM,CesmCheckSendEsmDataTransport_timer_1,P_WARNING,swLogPrintf("CESM , UL data retry timer is running , pending ESM DATA TRANSPORT till timer expiry ");
577536,1183053823,0,0,PS1,CESM,CesmProcUlDataTransReqSig_busy_1,P_SIG,swLogPrintf("CESM , UL data busy , pending current data request ");
577536,1183055871,0,0,PS1,CESM,CesmCheckSendEsmDataTransport_suspend_1,P_SIG,swLogPrintf("CESM , ESM suspended , but except data allowed ");
577536,1183055872,0,0,PS1,CESM,CesmCheckSendEsmDataTransport_suspend_2,P_SIG,swLogPrintf("CESM , ESM suspended , can ' t Tx UL data , ebi: %d ");
577536,1183057920,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_msg_w_1,P_WARNING,swLogPrintf("CESM , ESM signalling in ATTACH REQUEST: 0x%x , change to PDN_CONNECTIVITY_REQUEST ");
577536,1183059968,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_cid_w_1,P_WARNING,swLogPrintf("CESM , invalid attached EPS CID: %d setting , using CID 0 ");
577536,1183062528,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_auth_1,P_WARNING,swLogPrintf("CESM , CID: %d , state:%d , pdnAuthReqRetry:%d ");
577536,1183064064,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_cid_1,P_VALUE,swLogPrintf("CESM , CID: %d , MO request bearer same as attached bearer ");
577536,1183066368,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_state_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , attached bearer state is not right: %e<CesmBearerContextState> ");
577536,1183068160,0,0,PS1,CESM,CemmEsmProcUnitDataIndMsg_1,P_VALUE,swLogPrintf("CESM , recv DL msgType: %e<EsmMessageType> ");
577536,1183070208,0,0,PS1,CESM,CemmEsmProcUnitDataIndMsg_dup_w_1,P_WARNING,swLogPrintf("CESM , recv duplicated DL msgType: 0x%x ");
577536,1183072256,0,0,PS1,CESM,CemmEsmProcUnitDataIndMsg_unknown_w_1,P_WARNING,swLogPrintf("CESM , unknown ESM msg: 0x%x , not proc ");
577536,1183074304,0,0,PS1,CESM,CemmEsmProcEstablishCnfMsg_s_1,P_SIG,swLogPrintf("CESM , EMM EST CNF bSucc: %d ");
577536,1183076352,0,0,PS1,CESM,CemmEsmProcEstablishCnfMsg_w_1,P_SIG,swLogPrintf("CESM , EMM EST CNF bSucc: %d , but no ESM procedure pending ");
577536,1183078912,0,0,PS1,CESM,CemmEsmProcBearerContextStatusIndMsg_nw_syn_w_1,P_WARNING,swLogPrintf("CESM , NW syn BR status , EBI: %d , not found: 0x%lx , or not acted State: %d , and no BR act ongoing ");
577536,1183080960,0,0,PS1,CESM,CemmEsmProcBearerContextStatusIndMsg_reAttach_0,P_WARNING,swLogPrintf("CESM , NW syn BR status , CID:%d , EBI:%d , state:%d , is the last def eps bearer , should re-attach ");
577536,1183082752,0,0,PS1,CESM,CemmEsmProcBearerContextStatusIndMsg_nw_syn_w_2,P_WARNING,swLogPrintf("CESM , NW syn BR status , EBI: %d INACT in NW , but in UE brState: %d , local deact ");
577536,1183086591,0,0,PS1,CESM,CemmEsmProcBearerContextStatusIndMsg_ue_syn_w_1,P_WARNING,swLogPrintf("CESM , SYN BR status , no EPS activated ");
577536,1183088639,0,0,PS1,CESM,CemmEsmProcTransmissionFailureIndMsg_s_1,P_SIG,swLogPrintf("CESM , attach complete trans fail , need ESM re-tx ActivateDefaultEpsBearerContextAccept ");
577536,1183090687,0,0,PS1,CESM,CemmEsmProcTransmissionFailureIndMsg_s_2,P_SIG,swLogPrintf("CESM , attach complete trans fail , need ESM re-tx EsmDummy ");
577536,1183090944,0,0,PS1,CESM,CemmEsmProcSuspendIndMsg_1,P_VALUE,swLogPrintf("CESM , EMM suspend ESM , ExptDataViaCPAllowed: %d , UpDataAllowed: %d ");
577536,1183094783,0,0,PS1,CESM,CemmEsmProcResumeIndMsg_1,P_VALUE,swLogPrintf("CESM , EMM resume ESM ");
577536,1183094784,0,0,PS1,CESM,CemmEsmProcResumeIndMsg_w_1,P_WARNING,swLogPrintf("CESM , ESM resumed , but more MO proc is pending: %d ");
577536,1183096832,0,0,PS1,CESM,CemmEsmProcReleaseIndMsg_s_1,P_SIG,swLogPrintf("CESM , proc CesmReleaseInd msg , bePowerOff: %d , local deact all bearers ");
577536,1183098880,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_act_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , MO ACT , abort by MM , local deact ");
577536,1183100928,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_mod_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , MO MODIFY , abort by MM , MO modify failed , back to ACT state ");
577536,1183102976,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_deact_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , MO DEACT , abort by MM , local deact ");
577536,1183107071,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_clear_1,P_WARNING,swLogPrintf("CESM , all UL data clear / discard ");
577536,1183107072,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_retry_1,P_SIG,swLogPrintf("CESM , UL data abort by MM , start retry time: %d ms ");
577536,1183109376,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_epco_1,P_VALUE,swLogPrintf("CESM , FeatureInd , NW support ePCO: %d , UE request ePCO: %d ");
577536,1183111168,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_without_pdn_1,P_VALUE,swLogPrintf("CESM , FeatureInd , NW support attachWithoutPdn: %d ");
577536,1183113728,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_ciot_1,P_VALUE,swLogPrintf("CESM , FeatureInd , nwSupCiotOpt: %d , uePreferOpt: %d , ueSuptOptType: %d ( 0 -NO_OPT , 1 -CP_OPT , 2 -UP_OPT , 3 -CP_UP_OPT ) ");
577536,1183115776,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_ciot_w_1,P_WARNING,swLogPrintf("CESM , UE or NW not support CP OPT , nwSupCiotOpt: %d , uePreferOpt: %d , ueSuptOptType: %d , free all pending UL CP data ");
577536,1183119359,0,0,PS1,CESM,CemmEsmProcSimAclConfigIndMsg_error_1,P_WARNING,swLogPrintf("CESM , recv sim ACL config is NULL or RawData NULL , consider sim ACL disable ");
577536,1183119360,0,0,PS1,CESM,CemmEsmProcSimAclConfigIndMsg_error_2,P_WARNING,swLogPrintf("CESM , recv invalid aclrawLen:%d , or the rawdata is PNULL ");
577536,1183121664,0,0,PS1,CESM,CemmEsmProcSimAclConfigIndMsg_0,P_INFO,swLogPrintf("CESM parse SIM ACl , Bytes:0x%x , 0x%x ");
577536,1183123712,0,0,PS1,CESM,CemmEsmProcSimAclConfigIndMsg_2,P_WARNING,swLogPrintf("CESM parse SIM ACl , check attach pdn Apn is %d ( 1 :Not Check , 0 :Check ) , ACL totalLen:%d ");
577536,1183125760,0,0,PS1,CESM,CesmGetDefBrCmiDnsAddr_ipv4_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , ipv4 dns index: %d , all zero , invalid ");
577536,1183127808,0,0,PS1,CESM,CesmGetDefBrCmiDnsAddr_ipv6_w_1,P_WARNING,swLogPrintf("CESM , ebi: %d , ipv4 dns index: %d , all zero , invalid ");
577536,1183131647,0,0,PS1,CESM,CesmConvertSubnetMaskToPrefixFormat_1,P_WARNING,swLogPrintf("CAC PS , Invalid subnet mask... ");
577536,1183131904,0,0,PS1,CESM,CesmAddCmiTftFilter_cid_w_1,P_WARNING,swLogPrintf("CESM , invalid cid: %d , or packet filter ID: %d , can ' t add CGTFT ");
577536,1183133952,0,0,PS1,CESM,CesmAddCmiTftFilter_dstport_w_1,P_WARNING,swLogPrintf("CESM , remotePort: [ %d , %d ] not right , can ' t add CGTFT ");
577536,1183136000,0,0,PS1,CESM,CesmAddCmiTftFilter_srcport_w_1,P_WARNING,swLogPrintf("CESM , localPort: [ %d , %d ] not right , can ' t add CGTFT ");
577536,1183138048,0,0,PS1,CESM,CesmAddCmiTftFilter_remote_addr_w_1,P_WARNING,swLogPrintf("CESM , remote addr type: %d or subnetMaskLen: %d not right , can ' t add CGTFT ");
577536,1183139840,0,0,PS1,CESM,CesmAddCmiTftFilter_asmb_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , add CGTFT , no memory left ");
577536,1183142144,0,0,PS1,CESM,CesmAddCmiTftFilter_modify_w_1,P_VALUE,swLogPrintf("CESM , cid: %d , pfId: %d , already exist , modify by CGATT ");
577536,1183144192,0,0,PS1,CESM,CesmAddCmiTftFilter_num_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , MAX 4 PF could be set for one BR , can ' t add new pfId: %d ");
577536,1183146496,0,0,PS1,CESM,CesmAddCmiTftFilter_add_n_1,P_WARNING,swLogPrintf("CESM , cid: %d , pfId: %d , no memory left , or lots: %d pf set , can ' t add new ");
577536,1183148544,0,0,PS1,CESM,CesmGetActedBrCmiPsTftFilterList_tftnum_1,P_ERROR,swLogPrintf("CESM , EBI: %d , cid: %d , acted TFT number is not right: %d ");
577536,1183150080,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_cid_1,P_WARNING,swLogPrintf("CESM , invalid CID: %d in CcmCesmSetEpsBearerCtxReq ");
577536,1183152128,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_iptype_1,P_WARNING,swLogPrintf("CESM , invalid iptype: %d in CcmCesmSetEpsBearerCtxReq ");
577536,1183154434,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_apn_1,P_WARNING,swLogPrintf("CESM , invalid apnLen: %d > 99 , APN: %s , in CcmCesmSetEpsBearerCtxReq ");
577536,1183156740,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_apn_2,P_WARNING,swLogPrintf("CESM , invalid APN CHAR: %d , idx: %d , APN: %s , in CcmCesmSetEpsBearerCtxReq ");
577536,1183158272,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_apn_3,P_WARNING,swLogPrintf("CESM , apnPresentType: %d , don ' t need to update APN ");
577536,1183160320,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_ipv4allo_1,P_WARNING,swLogPrintf("CESM , ipv4AlloType: %d , not support ");
577536,1183162624,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_ipv4allo_2,P_WARNING,swLogPrintf("CESM , pdnType: %d , not ipv4 , or ipv4v6 , not need to set ipv4AlloType: %d ");
577536,1183164416,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_reqType_1,P_WARNING,swLogPrintf("CESM , reqType: %d , not support ");
577536,1183166464,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_NSLPI_1,P_WARNING,swLogPrintf("CESM , NSLPI: %d , not support ");
577536,1183168512,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_RDS_1,P_WARNING,swLogPrintf("CESM , RDS: %d , not support ");
577536,1183170560,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_secpco_1,P_WARNING,swLogPrintf("CESM , SEC PCO: %d , not support ");
577536,1183172608,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_pcscf_1,P_WARNING,swLogPrintf("CESM , PCSCF discovery type: %d , not support ");
577536,1183174656,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_imcn_1,P_WARNING,swLogPrintf("CESM , imCnSigFlag: %d , not support ");
577536,1183176704,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_same_1,P_INFO,swLogPrintf("CESM , define default cid: %d , same as before , not need update ");
577536,1183178752,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_full_1,P_WARNING,swLogPrintf("CESM , can ' t allc memory for new bearer , cid: %d ");
577536,1183180800,0,0,PS1,CESM,CesmProcCcmGetEpsBrCtxReqSig_cid_1,P_WARNING,swLogPrintf("CESM , invalid cid: %d , can ' t get bearer context ");
577536,1183182848,0,0,PS1,CESM,CesmProcCcmGetEpsBrCtxReqSig_ded_1,P_WARNING,swLogPrintf("CESM , CID: %d , request dedicated bearer info , but bearer is default bearer ");
577536,1183186943,0,0,PS1,CESM,CesmProcCcmGetEpsBrCtxReqSig_brNum_1,P_VALUE,swLogPrintf("CESM , request all bearer info , but no bearer found need to return ");
577536,1183186944,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_cid_w_1,P_WARNING,swLogPrintf("CESM , CCM act EPS bearer request , but BR not found via CID: %d ");
577536,1183188992,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_cid_w_2,P_WARNING,swLogPrintf("CESM , CCM act attach CID: %d EPS bearer , create the BR ctx ");
577536,1183191040,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_brstate_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , CCM act EPS bearer request , but BR state: MO_ACT_PENDING , return ");
577536,1183193088,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_brstate_w_2,P_WARNING,swLogPrintf("CESM , CID: %d , CCM act EPS bearer request , but BR state: ATTACH_ACT_PENDING , change to MO_ACT_PENDING ");
577536,1183195392,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_brstate_w_3,P_WARNING,swLogPrintf("CESM , CID: %d , CCM act EPS bearer request , but BR state: %e<CesmBearerContextState> , confirm OK ");
577536,1183197440,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_brstate_w_4,P_WARNING,swLogPrintf("CESM , CID: %d , CCM act EPS bearer request , but BR state: %e<CesmBearerContextState> , reject ");
577536,1183199488,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_est_req_1,P_SIG,swLogPrintf("CESM , CID: %d , as upgrade the NSLPI to %d , can to send establish req ");
577536,1183201280,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_suspend_s_1,P_SIG,swLogPrintf("CESM , CID: %d , CCM act EPS bearer request , but ESM is suspended , pending ");
577536,1183203328,0,0,PS1,CESM,CesmProcCcmDelEpsBrCtxReqSig_none_1,P_VALUE,swLogPrintf("CESM , no BR find via cid: %d , BR delete OK ");
577536,1183205376,0,0,PS1,CESM,CesmProcCcmDelEpsBrCtxReqSig_ded_w_1,P_WARNING,swLogPrintf("CESM , delete default cid: %d , BR is dedicated , can ' t delete , but still CNF OK ");
577536,1183207680,0,0,PS1,CESM,CesmProcCcmDelEpsBrCtxReqSig_brState_1,P_WARNING,swLogPrintf("CESM , cid: %d , BR state: %e<CesmBearerContextState> , not allow to delete ");
577536,1183209472,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_none_1,P_VALUE,swLogPrintf("CESM , deact EPS BR , BR not found via cid: %d ");
577536,1183211776,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_1,P_VALUE,swLogPrintf("CESM , cid: %d , CCM deact BR , brState: %e<CesmBearerContextState> ");
577536,1183213824,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , CCM deact BR , while brState: %e<CesmBearerContextState> ");
577536,1183215616,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_w_2,P_WARNING,swLogPrintf("CESM , cid: %d , CCM deact BR , while brState: CESM_BR_CTX_ATTACH_ACT_PENDING , not allow to deact ");
577536,1183217920,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_w_3,P_WARNING,swLogPrintf("CESM , cid: %d , CCM deact BR , while brState: %d , abnormal , local deact ");
577536,1183219712,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_last_br_1,P_WARNING,swLogPrintf("CESM , cid: %d , CCM deact BR , last default EPS bearer , not allow to deact ");
577536,1183222016,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_w_4,P_WARNING,swLogPrintf("CESM , cid: %d , CCM deact BR , while brState: %d , local deact firstly ");
577536,1183223808,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_suspend_s_1,P_SIG,swLogPrintf("CESM , CID: %d , CCM deact BR , but ESM is suspended , pending ");
577536,1183225856,0,0,PS1,CESM,CesmProcCcmModifyEpsBrCtxReqSig_no_br_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , can ' t find EPS BR , can ' t MO modify ");
577536,1183227904,0,0,PS1,CESM,CesmProcCcmModifyEpsBrCtxReqSig_brState_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , already under MO modification , return ");
577536,1183230208,0,0,PS1,CESM,CesmProcCcmModifyEpsBrCtxReqSig_brState_w_2,P_WARNING,swLogPrintf("CESM , CID: %d , brState: %d , can ' t MO modify ");
577536,1183232000,0,0,PS1,CESM,CesmProcCcmModifyEpsBrCtxReqSig_param_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , no TFA / EQOS set , can ' t MO modify ");
577536,1183234304,0,0,PS1,CESM,CesmProcCcmModifyEpsBrCtxReqSig_suspend_s_1,P_SIG,swLogPrintf("CESM , CID: %d , EBI: %d , MO modify , but ESM is suspended , pending ");
577536,1183236352,0,0,PS1,CESM,CesmProcCcmSetDedEpsBrCtxReqSig_cid_w_1,P_WARNING,swLogPrintf("CESM , invalid CID: %d / pCid: %d , can ' t define dedicated PDP ");
577536,1183238912,0,0,PS1,CESM,CesmProcCcmSetDedEpsBrCtxReqSig_linkeps_w_1,P_WARNING,swLogPrintf("CESM , can ' t define dedicated PDP cid: %d , linked CID: %d not exist: 0x%x , or not default PDP: %d , or not activated ");
577536,1183240448,0,0,PS1,CESM,CesmProcCcmSetDedEpsBrCtxReqSig_def_w_1,P_WARNING,swLogPrintf("CESM , can ' t define dedicated PDP cid: %d , cid already allc for default bearer , and brState: %d ");
577536,1183242240,0,0,PS1,CESM,CesmProcCcmSetDedEpsBrCtxReqSig_def_w_2,P_WARNING,swLogPrintf("CESM , define dedicated PDP cid: %d , cid already allc for default bearer , delete default bearer context ");
577536,1183244544,0,0,PS1,CESM,CesmProcCcmSetDedEpsBrCtxReqSig_dup_w_2,P_WARNING,swLogPrintf("CESM , define dedicated PDP cid: %d , already exist , and brState: %d , not allow to define ");
577536,1183246336,0,0,PS1,CESM,CesmProcCcmSetDedEpsBrCtxReqSig_e_1,P_ERROR,swLogPrintf("CESM , define dedicated PDP cid: %d , BR should not exist ");
577536,1183248384,0,0,PS1,CESM,CesmProcCcmSetDedEpsBrCtxReqSig_basic_w_1,P_WARNING,swLogPrintf("CESM , define dedicated PDP cid: %d , can ' t alloc basic info ");
577536,1183250432,0,0,PS1,CESM,CesmProcCcmSetDedEpsBrCtxReqSig_basic_e_1,P_ERROR,swLogPrintf("CESM , define dedicated PDP cid: %d , but BR basic context already exist , abnormal ");
577536,1183252480,0,0,PS1,CESM,CesmProcCcmDelDedEpsBrCtxReqSig_no_eps_1,P_VALUE,swLogPrintf("CESM , can ' t find BR via cid: %d , delete dedicated BR OK ");
577536,1183254528,0,0,PS1,CESM,CesmProcCcmDelDedEpsBrCtxReqSig_def_eps_1,P_WARNING,swLogPrintf("CESM , cid: %d is default BR , can ' t delete dedicated BR , but here confirm OK ");
577536,1183256832,0,0,PS1,CESM,CesmProcCcmDelDedEpsBrCtxReqSig_brState_w_1,P_WARNING,swLogPrintf("CESM , cid: %d brState: %e<CesmBearerContextState> , can ' t delete dedicated BR ");
577536,1183258624,0,0,PS1,CESM,CesmProcCcmDefineTFTParamReqSig_cid_w_1,P_WARNING,swLogPrintf("CESM , cid: %d BR not found / defined , can ' t set TFT ");
577536,1183260672,0,0,PS1,CESM,CesmProcCcmDelTFTParamReqSig_cid_v_1,P_VALUE,swLogPrintf("CESM , cid: %d , delete TFT , but BR not found ");
577536,1183262720,0,0,PS1,CESM,CesmProcCcmDefineEpsQosReqSig_no_eps_w_1,P_WARNING,swLogPrintf("CESM , can ' t find BR via CID: %d , can ' t define EPS QOS ");
577536,1183264768,0,0,PS1,CESM,CesmProcCcmDefineEpsQosReqSig_no_mem_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , no mem left , can ' t define EPS QOS ");
577536,1183266816,0,0,PS1,CESM,CesmProcCcmDelEpsQosReqSig_no_eps_1,P_VALUE,swLogPrintf("CESM , can ' t find BR via CID: %d , or no EPS QOS defined , when del EPS QOS ");
577536,1183270911,0,0,PS1,CESM,CesmProcCcmSetAttachBrCtxReqSig_w_1,P_WARNING,swLogPrintf("CESM , AT+ECATTBEARER is not support anymore , please try: AT+CGDCONT to define the attach bearer context ");
577536,1183272959,0,0,PS1,CESM,CesmProcCcmGetAttachBrCtxReqSig_w_1,P_WARNING,swLogPrintf("CESM , AT+ECATTBEARER is not support anymore , please try: AT+CGDCONT to read the attach bearer context ");
577536,1183273216,0,0,PS1,CESM,CesmProcCcmSetMtCpDataReportCfgReqSig_s_1,P_SIG,swLogPrintf("CESM , try set CRTDCP: %d , atSrcHandler: 0x%x ");
577536,1183275776,0,0,PS1,CESM,CesmProcCcmSetDefineAuthReqSig_param_w_1,P_WARNING,swLogPrintf("CESM , invalid CID: %d , or authType: %d , or userIdLen: %d , or pwdLen: %d in CcmCesmSetDefineAuthReq ");
577536,1183277056,0,0,PS1,CESM,CesmProcCcmSetDefineAuthReqSig_def_1,P_WARNING,swLogPrintf("CESM , cid: %d , not defined , can ' t set AUTH info , please try AT+CGDCONT to define the PDP firstly ");
577536,1183279104,0,0,PS1,CESM,CesmProcCcmSetDefineAuthReqSig_ded_1,P_WARNING,swLogPrintf("CESM , cid: %d , dedicated bearer , not support to set AUTH info ");
577536,1183281152,0,0,PS1,CESM,CesmProcCcmSetDefineAuthReqSig_same_1,P_INFO,swLogPrintf("CESM , cid: %d , set auth info , nothing need update ");
577536,1183283456,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_w_1,P_WARNING,swLogPrintf("CESM , recv CcmCesmAbortMoProcReq , abortProc: %d , abortCid: %d , but BR not found ");
577536,1183285760,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_s_1,P_SIG,swLogPrintf("CESM , cid: %d , brState: %d , abort moProc: %d ");
577536,1183287552,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_act_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , abort MO act request , but BR already acted: %d , remain ");
577536,1183289600,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_deact_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , abort MO deact request , but BR state: %d ");
577536,1183291648,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_mod_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , abort MO modify request , but BR state: %d , not right , for safe , local deact this BR ");
577536,1183293696,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_proc_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , abort invalid / known MO proc: %d ");
577536,1183296512,0,0,PS1,CESM,CesmProcUlDataTransReqSig_w_in_1,P_WARNING,swLogPrintf("CESM , CesmUlDataTransReq , invalid input ebi: %d , pHdr: 0x%x , pTailer:0x%x , pTailer->pNext: 0x%x , pTailer->bCont: %d ");
577536,1183298048,0,0,PS1,CESM,CesmProcUlDataTransReqSig_E_1,P_ERROR,swLogPrintf("CESM , ebi: %d , CAT1 not support CP CIOT , UE OPT: %d , NW OPT: %d , can ' t Tx user data , free all ");
577536,1183299584,0,0,PS1,CESM,CesmProcUlDataTransReqSig_E_2,P_ERROR,swLogPrintf("CESM , ebi: %d not found , can ' t Tx user data , free all ");
577536,1183302144,0,0,PS1,CESM,CesmHandleT3480Expiry_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , T3480 expiry , brState: %d not right , or not dedicated beerer: %d , abnormal ");
577536,1183303680,0,0,PS1,CESM,CesmHandleT3480Expiry_timer_1,P_WARNING,swLogPrintf("CESM , cid: %d , T3480 expiry , but guard timer not created ");
577536,1183305984,0,0,PS1,CESM,CesmHandleT3480Expiry_fifth_1,P_WARNING,swLogPrintf("CESM , cid: %d , T3480 expiry , total try: %d times , reject / deact ");
577536,1183307776,0,0,PS1,CESM,CesmHandleT3480Expiry_suspend_s_1,P_SIG,swLogPrintf("CESM , CID: %d , retry MO act dedicated EPS bearer , but ESM is suspended , pending ");
577536,1183309824,0,0,PS1,CESM,CesmHandleT3481Expiry_timer_1,P_WARNING,swLogPrintf("CESM , cid: %d , T3481 expiry , but guard timer not created ");
577536,1183312384,0,0,PS1,CESM,CesmHandleT3481Expiry_fifth_1,P_WARNING,swLogPrintf("CESM , cid: %d , ebi: %d , T3481 expiry , total try: %d times , deact dedicated BR ");
577536,1183314432,0,0,PS1,CESM,CesmHandleT3481Expiry_fifth_2,P_WARNING,swLogPrintf("CESM , cid: %d , ebi: %d , T3481 expiry , total try: %d times , MO modify fail , back to ACT state ");
577536,1183315968,0,0,PS1,CESM,CesmHandleT3481Expiry_suspend_s_1,P_SIG,swLogPrintf("CESM , CID: %d , retry MO modify / deact EPS bearer , but ESM is suspended , pending ");
577536,1183318528,0,0,PS1,CESM,CesmHandleT3482Expiry_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , T3482 expiry , brState: %d not right , or not default beerer: %d , abnormal ");
577536,1183320064,0,0,PS1,CESM,CesmHandleT3482Expiry_timer_1,P_WARNING,swLogPrintf("CESM , cid: %d , T3482 expiry , but guard timer not created ");
577536,1183322624,0,0,PS1,CESM,CesmHandleT3482Expiry_fifth_1,P_WARNING,swLogPrintf("CESM , cid: %d , T3482 expiry , has try: %d times , max retry: %d , reject / deact ");
577536,1183324160,0,0,PS1,CESM,CesmHandleT3482Expiry_suspend_s_1,P_SIG,swLogPrintf("CESM , CID: %d , retry MO act default EPS bearer , but ESM is suspended , pending ");
577536,1183326720,0,0,PS1,CESM,CesmHandleT3492Expiry_invalid_0,P_WARNING,swLogPrintf("CESM , cid: %d , T3492 expiry , brState: %d not right , or not default beerer: %d , abnormal ");
577536,1183328256,0,0,PS1,CESM,CesmHandleT3492Expiry_invalid_1,P_WARNING,swLogPrintf("CESM , cid: %d , T3482 expiry , but guard timer not created ");
577536,1183330816,0,0,PS1,CESM,CesmHandleT3492Expiry_invalid_2,P_WARNING,swLogPrintf("CESM , cid: %d , T3492 expiry , has try: %d times , max retry: %d , local deact ");
577536,1183332352,0,0,PS1,CESM,CesmHandleT3492Expiry_invalid_3,P_WARNING,swLogPrintf("CESM , CID: %d , retry MO act default EPS bearer , but ESM is suspended , pending ");
577536,1183336447,0,0,PS1,CESM,CesmHandleUlDataRetryTimerExpiry_w_1,P_WARNING,swLogPrintf("CESM , UL_DATA_RETRY_TIMER expiry , but timer not created or stop ");
577536,1183336448,0,0,PS1,CESM,CesmStartBrTimer_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , guard timer already created / start , need to restart ");
577536,1183339008,0,0,PS1,CESM,CesmStartBrTimer_s_1,P_SIG,swLogPrintf("CESM , cid: %d , start BR timer: %d , ms: %d ");
577536,1183340544,0,0,PS1,CESM,CesmTimerExpiry_s_1,P_SIG,swLogPrintf("CESM , Timer expiry , Tid: 0x%x ");
577536,1183342848,0,0,PS1,CESM,CesmTimerExpiry_no_eps_1,P_WARNING,swLogPrintf("CESM , BR timer: %d expiry , can ' t find BR via CID: %d ");
577536,1183344896,0,0,PS1,CESM,CesmTimerExpiry_brState_w_1,P_WARNING,swLogPrintf("CESM , BR timer: 0x%x expiry , but brState: %d , abnormal ");
577536,1183346944,0,0,PS1,CESM,CesmTimerExpiry_brTimer_w_1,P_WARNING,swLogPrintf("CESM , BR timer: 0x%x expiry , invalid BrTid: %d , abnormal ");
577536,1183348992,0,0,PS1,CESM,CesmFreeEpsBrCtx_s_1,P_SIG,swLogPrintf("CESM , free BR context , EBI: %d , CID: %d ");
577536,1183351040,0,0,PS1,CESM,CesmFreeEpsBrCtx_timer_1,P_VALUE,swLogPrintf("CESM , EBI: %d , CID: %d , when free BR context , guardtimer is still runing ");
577536,1183352832,0,0,PS1,CESM,CesmSaveDefEpsBearerDefinition_del_1,P_VALUE,swLogPrintf("CESM , delete default bearer definition , cid: %d ");
577536,1183354880,0,0,PS1,CESM,CesmSaveDefEpsBearerDefinition_update_1,P_VALUE,swLogPrintf("CESM , set / update default bearer definition , cid: %d ");
577536,1183356928,0,0,PS1,CESM,CesmSaveEpsBrAuthDefinition_del_1,P_VALUE,swLogPrintf("CESM , delete bearer AUTH definition , cid: %d ");
577536,1183358976,0,0,PS1,CESM,CesmSaveEpsBrAuthDefinition_update_1,P_VALUE,swLogPrintf("CESM , set / update bearer AUTH definition , cid: %d ");
577536,1183361024,0,0,PS1,CESM,CesmInitialise_auth_w_1,P_WARNING,swLogPrintf("CESM , init / wakeup , CID: %d , PDP not defined , but has AUTH info , delete AUTH info ");
577536,1183363584,0,0,PS1,CESM,CesmInitialise_s_1,P_SIG,swLogPrintf("CESM , init / wakeup , CID: %d , bDedicated: %d , brState: %e<CesmBearerContextState> ");
577536,1183365632,0,0,PS1,CESM,CesmProcOut_proc_1,P_VALUE,swLogPrintf("CESM , EPSID: %d , CID: %d , proc state: %e<CesmBearerContextState> , not allow sleep2 / HIB ");
577536,1183367680,0,0,PS1,CESM,CesmProcOut_tiny_1,P_VALUE,swLogPrintf("CESM , EPSID: %d , CID: %d , basic ctx store to tiny mem , index: %d ");
577536,1183369472,0,0,PS1,CESM,CesmProcOut_bs_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID: %d , CID: %d , basic context using sleep2 mem ");
577536,1183371520,0,0,PS1,CESM,CesmProcOut_ded_tft_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID: %d , CID: %d , dedicated bearer , more TFT configed , using sleep2 mem ");
577536,1183373568,0,0,PS1,CESM,CesmProcOut_def_tft_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID: %d , CID: %d , default bearer , more TFT configed , using sleep2 mem ");
577536,1183375616,0,0,PS1,CESM,CesmProcOut_tft_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID: %d , CID: %d , TFA configed by user , using sleep2 mem ");
577536,1183377664,0,0,PS1,CESM,CesmProcOut_qos_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID: %d , CID: %d , EPS QOS configed by user , using sleep2 mem ");
577536,1183381503,0,0,PS1,CESM,CesmProcOut_acl_slp1_1,P_VALUE,swLogPrintf("CESM , sim configured ACL enable , should vote to SLEEP2 ");
577536,1183383551,0,0,PS1,CESM,CesmProcOut_idle_1,P_VALUE,swLogPrintf("CESM , not allow sleep2 , or HIB ");
577536,1183385599,0,0,PS1,CESM,CesmProcOut_slp2_1,P_VALUE,swLogPrintf("CESM , vote sleep2 ");
577536,1183387647,0,0,PS1,CESM,CesmProcOut_hib_1,P_VALUE,swLogPrintf("CESM , vote HIB ");
577536,1183388160,0,0,PS1,CESM,CesmProcOut_hib_tiny_1,P_VALUE,swLogPrintf("CESM , CID: %d , EPSID: %d , be dedicated: %d , update tiny ");
577536,1183389952,0,0,PS1,CESM,CesmProcOut_hib_tiny_2,P_VALUE,swLogPrintf("CESM , CID: %d , EPSID: %d , basic context changed , update tiny ");
577536,1183391744,0,0,PS1,CESM,CesmAllocPti_0,P_INFO,swLogPrintf("CESM , return last pti: %d ");
577536,1183393792,0,0,PS1,CESM,CesmAllocPti_1,P_INFO,swLogPrintf("CESM , allocate pti: %d ");
577536,1183397887,0,0,PS1,CESM,CesmBeEpco_epco_1,P_VALUE,swLogPrintf("CESM , UE config ePCO , but NW not support ePCO , set to PCO ");
577536,1183399935,0,0,PS1,CESM,CesmCopyBrBasic_mem_w_1,P_WARNING,swLogPrintf("CESM , no slp2 memory left for TFT packet filter , can ' t copy ");
577536,1183400192,0,0,PS1,CESM,CesmBrMoProcDone_w_1,P_WARNING,swLogPrintf("CESM , cid: %d , MO proc done , but brState: %d , not right ");
577536,1183401984,0,0,PS1,CESM,CesmFindBrCtxViaPti_w_1,P_WARNING,swLogPrintf("CESM , cannot find the bearer context! , pti = %d ");
577536,1183404032,0,0,PS1,CESM,CesmFindBrCtxViaEbi_w_1,P_VALUE,swLogPrintf("CESM , cannot find the bearer context , ebi = %d ");
577536,1183406080,0,0,PS1,CESM,CesmFindBrCtxViaCid_w_1,P_VALUE,swLogPrintf("CESM , cannot find the bearer context! , cid = %d ");
577536,1183408128,0,0,PS1,CESM,CesmFindUnusedCid_v_1,P_VALUE,swLogPrintf("CESM , find an unused cid: %d ");
577536,1183410176,0,0,PS1,CESM,CesmFindUnusedCid_v_2,P_VALUE,swLogPrintf("CESM , find an unused cid: %d ");
577536,1183414271,0,0,PS1,CESM,CesmFindUnusedCid_w_1,P_WARNING,swLogPrintf("CESM , can ' t find unused cid ");
577536,1183414528,0,0,PS1,CESM,CesmFindActedPFilterViaPfId_in_w_1,P_WARNING,swLogPrintf("CESM , can ' t find pfId , invalid EPSBR: 0x%lx , or pfId: %d ");
577536,1183416832,0,0,PS1,CESM,CesmFindActedPFilterViaPfId_in_w_2,P_WARNING,swLogPrintf("CESM , CID: %d , brState: %d , no basic BR ctx , can ' t find pfId: %d ");
577536,1183418368,0,0,PS1,CESM,CesmGetDefBrCmiIpAddr_ipv4_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , IPV4 PDN , but all zero ipv4 addr ");
577536,1183420416,0,0,PS1,CESM,CesmGetDefBrCmiIpAddr_ipv4v6_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , IPV4V6 PDN , but all zero ipv4 addr ");
577536,1183422464,0,0,PS1,CESM,CesmGetDefBrCmiIpAddr_ipv6_w_1,P_WARNING,swLogPrintf("CESM , CID: %d , IPV6 PDN , but all zero ipv6 ID ");
577536,1183424512,0,0,PS1,CESM,CesmAllocEpsBrCtx_w_1,P_WARNING,swLogPrintf("CESM , CID:%d , alloc EPS bearer , but EPS bearer already exist ");
577536,1183426560,0,0,PS1,CESM,CesmAllocEpsBrCtx_e_1,P_ERROR,swLogPrintf("CESM , cannot alloc EPS bearer for cid: %d , as ASMB mem limited ");
577536,1183428864,0,0,PS1,CESM,CesmAllocEpsBrBasicCtx_w_1,P_WARNING,swLogPrintf("CESM , more EPS basic bearer created: %d , try alloc from ASMB for cid: %d ");
577536,1183430656,0,0,PS1,CESM,CesmAllocEpsBrBasicCtx_e_1,P_ERROR,swLogPrintf("CESM , CID: %d , EPS basic bearer alloc fail in ASMB ");
577536,1183433216,0,0,PS1,CESM,CesmUpdateEpsBrCtxState_s_1,P_SIG,swLogPrintf("CESM , EPS CID: %d , change state from: %e<CesmBearerContextState> to %e<CesmBearerContextState> ");
577536,1183435264,0,0,PS1,CESM,CesmLocalDeactEpsBr_ded_1,P_SIG,swLogPrintf("CESM , dedicated BR cid: %d , ebi: %d local deact , as linked default BR: %d deact ");
577536,1183437312,0,0,PS1,CESM,CesmLocalDeactEpsBr_w_1,P_WARNING,swLogPrintf("CESM , EPS ID: %d , CID: %d , invalid BR state: %d , when local deact ");
577536,1183439104,0,0,PS1,CESM,CesmGetFullIpv6AddrFromNetif_1,P_VALUE,swLogPrintf("CESM , CID: %d , netif can ' t get full ipv6 addr with cause: %d ");
577536,1183440896,0,0,PS1,CESM,CesmCheckDedEpsBrCtxBeforeMoAct_ded_bs_w_1,P_WARNING,swLogPrintf("CESM , dedicated cid: %d , no context info , can ' t act dedicated BR ");
577536,1183443968,0,0,PS1,CESM,CesmCheckDedEpsBrCtxBeforeMoAct_ded_bs_w_2,P_WARNING,swLogPrintf("CESM , dedicated cid: %d , linked BR cid: %d not found: 0x%lx , or not acted: %d / %d , can ' t act dedicated BR ");
577536,1183445248,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_iptype_w_1,P_WARNING,swLogPrintf("CESM , invalid ipType: %d , set for CID: %d , change to IPV4 ");
577536,1183447552,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_alloType_1,P_WARNING,swLogPrintf("CESM , EPS CID: %d , ipType: %d , not ipv4 , but request ipv4AlloType: %d , ignore ");
577536,1183449088,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_sec_s_1,P_SIG,swLogPrintf("CESM , EPS CID: %d , CHAP failed , try PAP ");
577536,1183451648,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_sec_w_1,P_WARNING,swLogPrintf("CESM , EPS CID: %d , request PAP , but nameLen: %d , or pwdLen: %d , not right , still carried ");
577536,1183453696,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_sec_w_2,P_WARNING,swLogPrintf("CESM , EPS CID: %d , request CHAP / PAP , but nameLen: %d , or pwdLen: %d , not right , still carried ");
577536,1183455232,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_pti_1,P_VALUE,swLogPrintf("CESM , MO BR ACT , retx PDN_CONNECTIVITY_REQUEST , re-use old pti: %d ");
577536,1183457536,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_iptype_w_1,P_WARNING,swLogPrintf("CESM , construct: PDN_CONNECTIVITY_REQUEST , invalid ipType: %d , set for CID: %d , change to IPV4 ");
577536,1183459328,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_reqtype_1,P_VALUE,swLogPrintf("CESM , EPS CID: %d , request emergency bearer ");
577536,1183461632,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_reqtype_w_1,P_WARNING,swLogPrintf("CESM , EPS CID: %d , invalid reqType: %d configed , change to normal ");
577536,1183463680,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_eitf_1,P_VALUE,swLogPrintf("CESM , EPS CID: %d , PDN_CONNECTIVITY_REQUEST eitf: %d , not set PCO ");
577536,1183465472,0,0,PS1,CESM,CesmSetEpcoFlag_s_1,P_SIG,swLogPrintf("CESM , bEpco flag set to: %d ");
577536,1183467520,0,0,PS1,CESM,CesmSetAttachEpsCid_s_1,P_SIG,swLogPrintf("CESM , attach CID try set to: %d ");
577536,1183470592,0,0,PS1,CESM,CesmSetUserDefinedTimer_s_1,P_SIG,swLogPrintf("CESM , user config T: %d , tryNumPresent: %d , tryNum: %d , tValPresent: %d , tValSec: %d ");
577536,1183471872,0,0,PS1,CESM,CesmSetUserDefinedTimer_w_1,P_WARNING,swLogPrintf("CESM , user config T: %d , tryNum: %d , not valid ");
577536,1183473920,0,0,PS1,CESM,CesmSetUserDefinedTimer_w_2,P_WARNING,swLogPrintf("CESM , user config T: %d , tValSec: %d , not valid ");
577536,1183475968,0,0,PS1,CESM,CesmGetNSLPIWithSimConfig_0,P_VALUE,swLogPrintf("CESM , overrideNasSignallingPriority: %d , nasSignallingPriority: %d in SIM ");
577536,1183478016,0,0,PS1,CESM,CesmGetNSLPIWithSimConfig_result,P_VALUE,swLogPrintf("CESM , result , nslpiPresent: %d , nslpiVal: %d ");
577536,1183479808,0,0,PS1,CESM,CesmSetAclFlag_write_1,P_SIG,swLogPrintf("CESM , set ACL val to : %d ");
577536,1183483903,0,0,PS1,CESM,CesmFindApnWithAclConfig_result,P_SIG,swLogPrintf("CESM , no find apn in acl , should forbidden it ");
577536,1183483904,0,0,PS1,CESM,CesmCheckSendPdnConReqByAclApn_0,P_SIG,swLogPrintf("CESM , check send pdn apn with ACL result :%d ( 0 :Forbidden , 1 , Allow ) ");
577536,1183485952,0,0,PS1,CESM,CesmConvertCmiTftToPFFormat_netmask_1,P_WARNING,swLogPrintf("CESM , subnet mask length: %d in TFT , ip address type is IPV4 ");
577536,1183488000,0,0,PS1,CESM,CesmConvertCmiTftToPFFormat_netmask_2,P_WARNING,swLogPrintf("CESM , subnet mask length: %d in TFT , ip address type is IPV6 ");
577536,1183490304,0,0,PS1,CESM,CesmConvertCmiTftToPFFormat_port_w_2,P_WARNING,swLogPrintf("CESM , invalid local port range: [ %d , %d ] in TFT setting ");
577536,1183492352,0,0,PS1,CESM,CesmConvertCmiTftToPFFormat_port_w_1,P_WARNING,swLogPrintf("CESM , invalid destination port range: [ %d , %d ] in TFT setting ");
577536,1183494144,0,0,PS1,CESM,DecodePCO_1,P_ERROR,swLogPrintf("Unexpected content Length of APNRC in PCO decode , contentLength:%d ");
577536,1183496192,0,0,PS1,CESM,DecodePCO_2,P_ERROR,swLogPrintf("Unexpected content Length of additional APNRC in PCO decode , contentLength:%d ");
577536,1183498240,0,0,PS1,CESM,DecodeEPCO_1,P_ERROR,swLogPrintf("Unexpected content Length of APNRC in PCO decode , contentLength:%d ");
577536,1183500288,0,0,PS1,CESM,DecodeEPCO_2,P_ERROR,swLogPrintf("Unexpected content Length of additional APNRC in PCO decode , contentLength:%d ");
577536,1183502336,0,0,PS1,CESM,DecodeNasEsmMessage_len_w_1,P_WARNING,swLogPrintf("CESM , can ' t decode signalling with len: %d < 3 ");
577536,1183504384,0,0,PS1,CESM,DecodeNasEsmMessage_pd_w_1,P_WARNING,swLogPrintf("CESM , invalid DL ESM signalling , PD: %d , not for ESM ");
577536,1183508479,0,0,PS1,CESM,EncodeTFT_1,P_WARNING,swLogPrintf("unsupported remoteAddrSubnetMask type ");
577536,1183510527,0,0,PS1,CESM,EncodeTFT_2,P_WARNING,swLogPrintf("unsupported destPortRange type ");
577536,1183512575,0,0,PS1,CESM,EncodeTFT_3,P_WARNING,swLogPrintf("unsupported localPort type ");
577536,1183512576,0,0,PS1,CESM,EncodeTFT_5,P_WARNING,swLogPrintf("Encode TFT , unknown tftOpCode = %d ");
577536,1183516671,0,0,PS1,CESM,EncodeTFT_ebit_w_1,P_WARNING,swLogPrintf("Encode TFT , parameterlist does not support! ");
577536,1183516672,0,0,PS1,CESM,EncodeTFT_6,P_INFO,swLogPrintf("CESM , Encode TFT , len = %d ");
577536,1183520767,0,0,PS1,CESM,EncodeBearerResourceAllocReq_1,P_WARNING,swLogPrintf("tft not present but required in Alloc!! ");
577536,1183522815,0,0,PS1,CESM,EncodeBearerResourceModificationReq_1,P_WARNING,swLogPrintf("tft not present but required in Modificaion!! ");
578560,1184892928,0,0,PS1,SMS,CesmcbDecodeWarningType_1,P_WARNING,swLogPrintf("Reserved warningTypeValue: %d ");
578560,1184894976,0,0,PS1,SMS,CesmcbDecodeDCS_1,P_WARNING,swLogPrintf("unknown cb DCS value: %d ");
578560,1184897024,0,0,PS1,SMS,CesmcbDecodeDCS_2,P_WARNING,swLogPrintf("unknown reserved DCS value: %d ");
578560,1184899072,0,0,PS1,SMS,CesmcbDecodeDCS_3,P_WARNING,swLogPrintf("unknown cb reserved DCS value: %d ");
578560,1184901120,0,0,PS1,SMS,CesmcbDecodeDCS_4,P_WARNING,swLogPrintf("unknown DCS value: %d ");
578560,1184903424,0,0,PS1,SMS,CesmcbEtwsPrimDuplicateCheck_1,P_WARNING,swLogPrintf("duplicate check failed of prim Smcb with messageID: %d , serialNum: %d ");
578560,1184905216,0,0,PS1,SMS,cesmcbSendEtwsCmasData_1,P_WARNING,swLogPrintf("Invalid Smcb MessageType: %d ");
578560,1184907264,0,0,PS1,SMS,CemmSmscbMessageIdCheck_1,P_WARNING,swLogPrintf("Unexpected messageIdentifier %d received when UE is not on HPLMN / EHPLMN or PLMN equivalent to HPLMN / EHPLMN ");
578560,1184909568,0,0,PS1,SMS,CesmsProcSmscbCmasDataIndSig_1,P_WARNING,swLogPrintf("duplicate check failed of cmas Smcb with messageID: %d , serialNum: %d ");
578560,1184913407,0,0,PS1,SMS,CesmsProcSmscbCmasDataIndSig_2,P_WARNING,swLogPrintf("message ID check failed! ");
578560,1184913408,0,0,PS1,SMS,CesmsProcSmscbCmasDataIndSig_3,P_WARNING,swLogPrintf("Authentication is not finish when cmas data received isAuthenticated: %d ");
578560,1184917503,0,0,PS1,SMS,CesmsProcSmscbEtwsPrimaryDataIndSig_1,P_WARNING,swLogPrintf("Duplicate check failed of primary Smcb ");
578560,1184919551,0,0,PS1,SMS,CesmsProcSmscbEtwsPrimaryDataIndSig_2,P_WARNING,swLogPrintf("message ID check failed! ");
578560,1184921599,0,0,PS1,SMS,CesmsProcSmscbEtwsPrimaryDataIndSig_3,P_WARNING,swLogPrintf("Authentication is not finish when primary data is received ");
578560,1184921856,0,0,PS1,SMS,CesmsProcSmscbEtwsSecondDataIndSig_1,P_WARNING,swLogPrintf("duplicate check failed of secondary Smcb with messageID: %d , serialNum: %d ");
578560,1184925695,0,0,PS1,SMS,CesmsProcSmscbEtwsSecondDataIndSig_2,P_WARNING,swLogPrintf("message ID check failed! ");
578560,1184927743,0,0,PS1,SMS,CesmsProcSmscbEtwsSecondDataIndSig_3,P_WARNING,swLogPrintf("Authentication is not finish when secondary data is received ");
578560,1184929791,0,0,PS1,SMS,AllocateMtEntity_1,P_WARNING,swLogPrintf("MT entity allocated fail! ");
578560,1184929792,0,0,PS1,SMS,ReleaseSmcmEntity_1,P_VALUE,swLogPrintf("free Entitynum is:%d ");
578560,1184931840,0,0,PS1,SMS,ReleaseSmcmEntity_2,P_VALUE,swLogPrintf("free cp user data for Entitynum :%d ");
578560,1184933888,0,0,PS1,SMS,ReleaseSmcmEntity_3,P_VALUE,swLogPrintf("free Entitynum is:%d ");
578560,1184935936,0,0,PS1,SMS,ReleaseSmcmEntity_4,P_VALUE,swLogPrintf("free cp user data for Entitynum:%d ");
578560,1184938240,0,0,PS1,SMS,isInAvailEntity_1,P_VALUE,swLogPrintf("This entity %d is at %d ");
578560,1184940032,0,0,PS1,SMS,CesmcmDecodeRpMessageType_1,P_WARNING,swLogPrintf("rpduInfoLength %d is less than 2 ");
578560,1184942080,0,0,PS1,SMS,CesmcmDecodeRpMessageType_2,P_WARNING,swLogPrintf("RP message type %d is unexpected ");
578560,1184944128,0,0,PS1,SMS,CesmcmDecodeRpMessageType_3,P_WARNING,swLogPrintf("RP-Originator Address length %d is incorrect ");
578560,1184946176,0,0,PS1,SMS,CesmcmDecodeRpMessageType_4,P_WARNING,swLogPrintf("RP-Destination Address length %d is incorrect ");
578560,1184948224,0,0,PS1,SMS,CesmcmDecodeRpMessageType_5,P_WARNING,swLogPrintf("RP-User Data length %d is incorrect ");
578560,1184950272,0,0,PS1,SMS,CesmcmDecodeRpMessageType_6,P_WARNING,swLogPrintf("tpduInfoLength %d is less than 1 ");
578560,1184952320,0,0,PS1,SMS,GetTimerEnumBasedEtyNum_1,P_WARNING,swLogPrintf("Incorrect NAS SMS timer Type %d ");
578560,1184954368,0,0,PS1,SMS,ConstructCpMessage_1,P_VALUE,swLogPrintf("buildCpBodyType %d ");
578560,1184956416,0,0,PS1,SMS,ConstructCpMessage_2,P_WARNING,swLogPrintf("Unexpected SMS msgType %d ");
578560,1184960511,0,0,PS1,SMS,CesmscmFindEntity_2,P_WARNING,swLogPrintf("cp user data memory for establish request allocated failure ");
578560,1184962559,0,0,PS1,SMS,CesmscmFindEntity_3,P_WARNING,swLogPrintf("etyNo for establish request allocated failure ");
578560,1184964607,0,0,PS1,SMS,CesmscmFindEntity_4,P_WARNING,swLogPrintf("etyNo for data / rel / abort req can not be found ");
578560,1184966655,0,0,PS1,SMS,CesmscmFindEntity_5,P_WARNING,swLogPrintf("etyNo for timer expiry can not be found ");
578560,1184968703,0,0,PS1,SMS,CesmscmFindEntity_6,P_WARNING,swLogPrintf("etyNo for est cnf can not be found ");
578560,1184970751,0,0,PS1,SMS,CesmscmFindEntity_7,P_WARNING,swLogPrintf("etyNo for err ind can not be found ");
578560,1184970752,0,0,PS1,SMS,CesmscmFindEntity_8,P_WARNING,swLogPrintf("Entity for MT SMS data ind can not be allocated: %d ");
578560,1184974847,0,0,PS1,SMS,CesmscmFindEntity_9,P_WARNING,swLogPrintf("Entity for MO SMS data ind can not be found ");
578560,1184974848,0,0,PS1,SMS,CesmscmFindEntity_10,P_WARNING,swLogPrintf("SMS header decode error code %d ");
578560,1184976896,0,0,PS1,SMS,CesmscmFindEntity_11,P_WARNING,swLogPrintf("unexpected etyMsgType %d ");
578560,1184978944,0,0,PS1,SMS,CesmsDecodeLoopbackData_1,P_WARNING,swLogPrintf("CesmsDecodeLoopbackData received SMS unknown message type: %d ");
578560,1184981248,0,0,PS1,SMS,CesmsDecodeLoopbackData_2,P_WARNING,swLogPrintf("CesmsDecodeLoopbackData incorrect pdu length for RP-Originator Address , offset:%d , smsLen:%d ");
578560,1184983296,0,0,PS1,SMS,CesmsDecodeLoopbackData_3,P_WARNING,swLogPrintf("CesmsDecodeLoopbackData incorrect pdu length for for RP-Destination Address , offset:%d , smsLen:%d ");
578560,1184985344,0,0,PS1,SMS,CesmsDecodeLoopbackData_4,P_WARNING,swLogPrintf("CesmsDecodeLoopbackData incorrect pdu length for RP-user data , offset:%d , smsLen:%d ");
578560,1184987136,0,0,PS1,SMS,CesmsDecodeLoopbackData_5,P_INFO,swLogPrintf("CesmsDecodeLoopbackData RP-user decoded mt userDat.tpduLen %d ");
578560,1184989184,0,0,PS1,SMS,CesmsDecodeLoopbackData_6,P_INFO,swLogPrintf("pSmtlDeliveredInd->smsLen %d ");
578560,1184991232,0,0,PS1,SMS,CeSmcmProcessMoEstReqData_1,P_WARNING,swLogPrintf("Received SMCM_EST_REQ for entity number: %d ");
578560,1184993280,0,0,PS1,SMS,CeSmcmProcessMoEstReqData_2,P_WARNING,swLogPrintf("UE failed to find entity context for entity number:%d est req ");
578560,1184995584,0,0,PS1,SMS,CeSmcmProcessMoEstReqData_3,P_WARNING,swLogPrintf("Received SMCM_EST_REQ for entity number: %d and smcm state is: %d ");
578560,1184999423,0,0,PS1,SMS,CeSmcmProcessMoEstReqData_5,P_WARNING,swLogPrintf("Received SMCM_EST_REQ when SMS is suspended by EMM ");
578560,1184999680,0,0,PS1,SMS,CeSmcmProcessMoEstReqData_6,P_WARNING,swLogPrintf("Received SMCM_EST_REQ in unexpected SMCM state: %d ; for entity number: %d ");
578560,1185001472,0,0,PS1,SMS,CemmSmcmHandleAbortReq_1,P_WARNING,swLogPrintf("UE fail to find entity context for entity number:%d! ");
578560,1185003520,0,0,PS1,SMS,CemmSmcmHandleAbortReq_2,P_WARNING,swLogPrintf("Handle SMRL abort request under state %d! ");
578560,1185005568,0,0,PS1,SMS,CemmSmcmHandleAbortReq_3,P_INFO,swLogPrintf("SMCM state transfer to IDLE state from state: %d ");
578560,1185007616,0,0,PS1,SMS,CemmSmcmHandleRelReq_1,P_WARNING,swLogPrintf("UE fail to find entity context for entity number:%d! ");
578560,1185010432,0,0,PS1,SMS,CemmSmcmHandleRelReq_2,P_VALUE,swLogPrintf("ProcessSmcmRelReq entityNum %d ; Delay sendCpAck %d , TI_Flag:%d , TI_Value:%d ");
578560,1185011968,0,0,PS1,SMS,CemmSmcmHandleRelReq_3,P_VALUE,swLogPrintf("ProcessSmcmRelReq entityNum %d ; sendCpAck %d ");
578560,1185015807,0,0,PS1,SMS,CemmSmcmHandleRelReq_4,P_VALUE,swLogPrintf("sending ack ");
578560,1185015808,0,0,PS1,SMS,CemmSmcmHandleRelReq_5,P_INFO,swLogPrintf("smcm state:%d transfer to idle ");
578560,1185018112,0,0,PS1,SMS,CemmSmcmHandleRelReq_6,P_WARNING,swLogPrintf("Received SMCM_REL_REQ in SMCM state: %d ; for entity number: %d with relpendingornot true ");
578560,1185020672,0,0,PS1,SMS,CemmSmcmHandleRelReq_7,P_VALUE,swLogPrintf("ProcessSmcmRelReq entityNum %d ; send Delay CpAck %d , Ti_Flag:%d , Ti_value:%d ");
578560,1185022208,0,0,PS1,SMS,CemmSmcmHandleRelReq_8,P_WARNING,swLogPrintf("Received SMCM_REL_REQ in unexpected SMCM state: %d ; for entity number: %d ");
578560,1185024000,0,0,PS1,SMS,CemmSmcmHandleDataReq_1,P_WARNING,swLogPrintf("UE fail to find entity context for entity number:%d ");
578560,1185026304,0,0,PS1,SMS,CemmSmcmHandleDataReq_2,P_WARNING,swLogPrintf("Received SMCM_DATA_REQ in unexpected SMCM state: %d ; for entity number: %d ");
578560,1185030143,0,0,PS1,SMS,CeSmcmSendEmmSmsUnitDataReq_1,P_INFO,swLogPrintf("CP_DATA is sent ");
578560,1185032191,0,0,PS1,SMS,CeSmcmSendEmmSmsUnitDataReq_2,P_INFO,swLogPrintf("CP_ERROR is sent ");
578560,1185034239,0,0,PS1,SMS,CeSmcmSendEmmSmsUnitDataReq_3,P_INFO,swLogPrintf("CP_ACK is sent ");
578560,1185034240,0,0,PS1,SMS,CeSmcmSendEmmSmsUnitDataReq_4,P_WARNING,swLogPrintf("Unexpected messageType: %d ");
578560,1185036544,0,0,PS1,SMS,CeSmcmSendEmmRelReq_1,P_INFO,swLogPrintf("SMCM send release request for TI value: %d ; TI flag: %d ");
578560,1185038592,0,0,PS1,SMS,CeSmcmSendSmcmErrInd_1,P_INFO,swLogPrintf("SMCM send ERR IND for etyNo: %d ; cause: %d ");
578560,1185042431,0,0,PS1,SMS,CeSmsUlConsLoopbackPduForUpData_1,P_WARNING,swLogPrintf("LoopbackData can not be decoded successfully ");
578560,1185044479,0,0,PS1,SMS,CeSmsUlSendLoopDataReq_1,P_WARNING,swLogPrintf("LoopbackData can not be contructed successfully ");
578560,1185044480,0,0,PS1,SMS,CemmSmsProcEstCnfMsg_1,P_WARNING,swLogPrintf("UE failed to find entity context for entity number:%d est confirm ");
578560,1185046528,0,0,PS1,SMS,CemmSmsProcEstCnfMsg_2,P_INFO,swLogPrintf("Received CEMM_SMS_EST_CNF for TI: %d ");
578560,1185048832,0,0,PS1,SMS,CemmSmsProcEstCnfMsg_3,P_WARNING,swLogPrintf("Received CEMM_SMS_EST_CNF in unexpected SMCM state: %d ; for entity number: %d ");
578560,1185050880,0,0,PS1,SMS,CemmSmsProcErrorIndMsg_1,P_INFO,swLogPrintf("SMCM state: %d transfer to idle state for etynum: %d ");
578560,1185052928,0,0,PS1,SMS,CemmSmsProcErrorIndMsg_2,P_INFO,swLogPrintf("SMCM state: %d receive error ind with cause fail_normal_cause for etynum: %d ");
578560,1185054720,0,0,PS1,SMS,CemmSmsProcErrorIndMsg_3,P_INFO,swLogPrintf("clear cp data info for etynum: %d ");
578560,1185056768,0,0,PS1,SMS,CemmSmsProcErrorIndMsg_4,P_WARNING,swLogPrintf("CESMS received ERROR ind , but no entity %d found ");
578560,1185058816,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_1,P_ERROR,swLogPrintf("UE fail to find correct smcm entity context: %d for sms_data_ind ");
578560,1185062911,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_2,P_WARNING,swLogPrintf("Message is received that is too short to contain a complete message type information element , ignore it! ");
578560,1185062912,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_3,P_WARNING,swLogPrintf("MT SMS data message decode error %d ");
578560,1185064960,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_4,P_WARNING,swLogPrintf("MT SMS data header decode error %d ");
578560,1185067008,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_5,P_WARNING,swLogPrintf("MT SMS data message decode error %d ");
578560,1185071103,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_6,P_WARNING,swLogPrintf("Message is received with TI value ' 111 ' , ignore it! ");
578560,1185071360,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_7,P_INFO,swLogPrintf("SMCM state: %d transfer to idle state for etynum: %d ");
578560,1185073152,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_8,P_INFO,swLogPrintf("SMCM state: SMCM2_WAIT_FOR_CP_ACK transfer to SMCM0_IDLE for etynum: %d after CP ACK received ");
578560,1185075200,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_9,P_WARNING,swLogPrintf("CP ACK is received in incorrect state %d ");
578560,1185077248,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_10,P_VALUE,swLogPrintf("smsMsgType decoded %d ");
578560,1185079296,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_11,P_VALUE,swLogPrintf("deliver cp ack for msg type %d ");
578560,1185081600,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_12,P_INFO,swLogPrintf("SMCM state: %d transfer to idle state for etynum: %d after CP ERROR received and send errorind to SMRL ");
578560,1185083648,0,0,PS1,SMS,CemmSmsProcUnitDataIndMsg_13,P_WARNING,swLogPrintf("decodeResult %d , smcmReadyToReceive: %d ");
578560,1185087487,0,0,PS1,SMS,CemmSmsProcSuspendIndMsg_1,P_VALUE,swLogPrintf("SMS service is suspended by EMM ");
578560,1185089535,0,0,PS1,SMS,CemmSmsProcResumeIndMsg_1,P_VALUE,swLogPrintf("SMS service is resumed by EMM ");
578560,1185089536,0,0,PS1,SMS,CemmSmsProcResumeIndMsg_2,P_VALUE,swLogPrintf("Pending SMS will be sent to EMM for entityNo %d ");
578560,1185093631,0,0,PS1,SMS,SmcmSendSmcmDataIndToSmrl_2,P_WARNING,swLogPrintf("gSmcmExData.smcmReadyToReceive is FALSE ");
578560,1185093632,0,0,PS1,SMS,CeSmcmProcessTimerExpiry_1,P_WARNING,swLogPrintf("CESMS Timer expired but fail to find entity context %d ");
578560,1185095680,0,0,PS1,SMS,CeSmcmProcessTimerExpiry_2,P_WARNING,swLogPrintf("TC1M expired in SMCM2 state for entity number %d ");
578560,1185097984,0,0,PS1,SMS,CeSmcmProcessTimerExpiry_3,P_INFO,swLogPrintf("SMCM state: %d transfer to idle state for etynum: %d ");
578560,1185100032,0,0,PS1,SMS,CeSmcmProcessTimerExpiry_6,P_WARNING,swLogPrintf("TC1M expired in unexpected state %d for entity number %d ");
578560,1185101824,0,0,PS1,SMS,CeNasSmsProcessTimerExpiry_1,P_WARNING,swLogPrintf("CeNasSmsTimerExpiry unexpected timerEnum: %d ");
578560,1185103872,0,0,PS1,SMS,EncodeSmsUsrDataTo7Bit_1,P_WARNING,swLogPrintf("CESMS too much SMS User Data Header %d ");
578560,1185105920,0,0,PS1,SMS,EncodeSmsUsrDataTo7Bit_2,P_WARNING,swLogPrintf("SMS User Data len %d is too long ");
578560,1185110015,0,0,PS1,SMS,Encode8BitFormatData_1,P_WARNING,swLogPrintf("CESMS Input data too long for ENC 8 bit ");
578560,1185112063,0,0,PS1,SMS,EncodeSmsDataToDefault_1,P_WARNING,swLogPrintf("CESMS too much SMS User Data Header ");
578560,1185114111,0,0,PS1,SMS,EncodeSmsDataToDefault_2,P_WARNING,swLogPrintf("SMS User Data exceed packing 7 bit max len ");
578560,1185114112,0,0,PS1,SMS,AssembleSmsSubmit_2,P_WARNING,swLogPrintf("MAX_SMS_LEN is less than dataLen %d ");
578560,1185116160,0,0,PS1,SMS,AssembleSmsCommand_1,P_WARNING,swLogPrintf("MAX_SMS_LEN is less than dataLen %d ");
578560,1185118208,0,0,PS1,SMS,ConstructCemmSmtlDeliveredInd_1,P_INFO,swLogPrintf("pCemmSmtlDeliveredInd->smsLen is %d after DecodeUserDataToOctet ");
578560,1185120256,0,0,PS1,SMS,ConstructCemmSmtlDeliveredInd_2,P_INFO,swLogPrintf("pCemmSmtlDeliveredInd->smsLen %d after DecodeUserDataToDef ");
578560,1185122304,0,0,PS1,SMS,ConstructCemmSmtlDeliveredInd_3,P_INFO,swLogPrintf("pCemmSmtlDeliveredInd->smsLen %d output ");
578560,1185124352,0,0,PS1,SMS,PackCesmsDeliver_1,P_WARNING,swLogPrintf("MAX_TPDU_INFO_LENGTH is less then ieLen %d ");
578560,1185126400,0,0,PS1,SMS,CemmSmrlProcessReportFromSmtl_1,P_ERROR,swLogPrintf("SMRL Received report from SMTL , but fail to find entity number %d ");
578560,1185130495,0,0,PS1,SMS,CemmSmrlProcessReportFromSmtl_2,P_INFO,swLogPrintf("TR2M timer is stopped ");
578560,1185130752,0,0,PS1,SMS,CemmSmrlProcessReportFromSmtl_3,P_WARNING,swLogPrintf("Deliver RP_ERROR_MS_TO_NW RP cause:%d ; TP Cause:%d ");
578560,1185132544,0,0,PS1,SMS,CemmSmrlProcessReportFromSmtl_4,P_WARNING,swLogPrintf("Unexpected SMRL state for SMRL_STATUS_REPORT %d ");
578560,1185134592,0,0,PS1,SMS,CemmSmrlProcessMoSubmitedData_1,P_WARNING,swLogPrintf("SMRL Received submitted data , but got unexpected entity number %d ");
578560,1185136640,0,0,PS1,SMS,CemmSmrlProcessMoSubmitedData_2,P_ERROR,swLogPrintf("SMRL Received submitted data , but fail to find entity number %d ");
578560,1185138688,0,0,PS1,SMS,CemmSmrlProcessMoSubmitedData_3,P_INFO,swLogPrintf("SMRL_DATA_REQ is received in SMRL state %d ");
578560,1185140736,0,0,PS1,SMS,CemmSmrlProcessMoSubmitedData_4,P_WARNING,swLogPrintf("SMRL_DATA_REQ is received in unexpected SMRL state %d ");
578560,1185142784,0,0,PS1,SMS,CemmSmrlProcessMoSMMA_1,P_WARNING,swLogPrintf("SMRL Received submitted data , but got unexpected entity number %d ");
578560,1185144832,0,0,PS1,SMS,CemmSmrlProcessMoSMMA_2,P_ERROR,swLogPrintf("SMRL Received submitted data , but fail to find entity number %d ");
578560,1185147136,0,0,PS1,SMS,CemmSmrlProcessConfigureSetting_1,P_INFO,swLogPrintf("moreSmsToSend setting: %d ; sms ready or not setting: %d ");
578560,1185148928,0,0,PS1,SMS,CemmSmrlDecodeRpMsg_1,P_WARNING,swLogPrintf("CemmSmrlDecodeRpMsg received SMS RP message length too short: %d ");
578560,1185150976,0,0,PS1,SMS,CemmSmrlDecodeRpMsg_2,P_WARNING,swLogPrintf("CemmSmrlDecodeRpMsg received SMS message Non-semantical mandatory information element: %d ");
578560,1185153024,0,0,PS1,SMS,CemmSmrlDecodeRpMsg_3,P_WARNING,swLogPrintf("CemmSmrlDecodeRpMsg received SMS unknown message type: %d ");
578560,1185155584,0,0,PS1,SMS,CemmSmrlDecodeRpMsg_4,P_WARNING,swLogPrintf("RP message type:%d with different message reference , MR from nw: %d , local MR: %d ");
578560,1185159167,0,0,PS1,SMS,CemmSmrlDecodeRpMsg_5,P_INFO,swLogPrintf("SMS RP message type: RP_ACK_NW_TO_ME ");
578560,1185161215,0,0,PS1,SMS,CemmSmrlDecodeRpMsg_6,P_INFO,swLogPrintf("SMS RP message type: RP_DATA_NW_TO_ME ");
578560,1185163263,0,0,PS1,SMS,CemmSmrlDecodeRpMsg_7,P_WARNING,swLogPrintf("SMS RP message type: RP_ERROR_NW_TO_ME ");
578560,1185165311,0,0,PS1,SMS,CemmSmrlDecodeRpMsg_8,P_WARNING,swLogPrintf("Invalid case to switch on msgType ");
578560,1185165568,0,0,PS1,SMS,CemmSmrlDecodeRpAckData_1,P_INFO,swLogPrintf("decode RP_USER_DATA offset:%d greater or equal to smsLen:%d ");
578560,1185167360,0,0,PS1,SMS,CemmSmrlDecodeRpAckData_2,P_WARNING,swLogPrintf("RP user data length %d exceed MAX_SMS_TPDU_INFO_LEN ");
578560,1185169408,0,0,PS1,SMS,CemmSmrlDecodeRpAckData_3,P_WARNING,swLogPrintf("RP_USER_DATA decoding meet unexpected data %d ");
578560,1185171712,0,0,PS1,SMS,CemmSmrlDecodeRpData_1,P_ERROR,swLogPrintf("Message too short to contain RP-Originator Address , offset: %d , smsLen: %d ");
578560,1185173760,0,0,PS1,SMS,CemmSmrlDecodeRpData_2,P_ERROR,swLogPrintf("Message too short to contain RP-Destination Address , offset: %d , smsLen: %d ");
578560,1185175808,0,0,PS1,SMS,CemmSmrlDecodeRpData_3,P_ERROR,swLogPrintf("Message too short to contain RP-User Data , offset: %d , smsLen: %d ");
578560,1185177600,0,0,PS1,SMS,CemmSmrlDecodeRpData_4,P_WARNING,swLogPrintf("TPDU length %d exceed TPDU_MAXIMUM_LENGTH ");
578560,1185179648,0,0,PS1,SMS,CemmSmrlDecodeRpError_1,P_ERROR,swLogPrintf("not enough room for RP-Cause , smsLen: %d ");
578560,1185181696,0,0,PS1,SMS,CemmSmrlDecodeRpError_2,P_ERROR,swLogPrintf("causeLen: %d with incorrect data ");
578560,1185184000,0,0,PS1,SMS,CemmSmrlDecodeRpError_3,P_ERROR,swLogPrintf("length compatability check failure , %d , %d ");
578560,1185185792,0,0,PS1,SMS,CemmSmrlSendRpResponse_1,P_WARNING,swLogPrintf("Invalid RP message type %d ");
578560,1185187840,0,0,PS1,SMS,CemmSmrlFindRunningDelayTimerMoEty_1,P_INFO,swLogPrintf("SM-RL stop the running delayTimer , timerIndex %d ");
578560,1185190144,0,0,PS1,SMS,CesmrlFindAvailEntity_info_1,P_INFO,swLogPrintf("Input entity no:%d , EtyMsgType:%d ");
578560,1185193983,0,0,PS1,SMS,CesmrlFindAvailEntity_1,P_WARNING,swLogPrintf("no free entity in SMRL ");
578560,1185193984,0,0,PS1,SMS,CesmrlFindAvailEntity_2,P_WARNING,swLogPrintf("free entity:%d in SMRL allocate memory failure ");
578560,1185196032,0,0,PS1,SMS,CesmrlFindAvailEntity_3,P_WARNING,swLogPrintf("GET_ETY_FOR_DATA_ERR_IND fail to find corresponding entity no:%d ");
578560,1185198080,0,0,PS1,SMS,CesmrlFindAvailEntity_4,P_WARNING,swLogPrintf("GET_ETY_FOR_DATA_ERR_IND fail to find inuse entity no:%d ");
578560,1185200128,0,0,PS1,SMS,CesmrlFindAvailEntity_5,P_WARNING,swLogPrintf("GET_ETY_FOR_EST_IND fail to find inuse entity no:%d ");
578560,1185202176,0,0,PS1,SMS,CemmSmrlReleaseEntity_1,P_INFO,swLogPrintf("SM-RL start release entity , entityNo = %d ");
578560,1185204224,0,0,PS1,SMS,CemmSmrlReleaseEntity_2,P_INFO,swLogPrintf("SM-RL start release entity , entityNo = %d ");
578560,1185208319,0,0,PS1,SMS,CemmSmrlSendRelReqToSmcm_1,P_INFO,swLogPrintf("SMRL-Delay release timer is started ");
578560,1185208320,0,0,PS1,SMS,CemmSmrlProcessTimerExpiry_1,P_INFO,swLogPrintf("SMRL received timer expiry , entityNumber %d ");
578560,1185210368,0,0,PS1,SMS,CemmSmrlProcessTimerExpiry_2,P_ERROR,swLogPrintf("SMRL received timer expiry , but failed to find entity number %d ");
578560,1185212672,0,0,PS1,SMS,CemmSmrlProcessTimerExpiry_3,P_WARNING,swLogPrintf("Incorrect timer expiry in unexpected SMRL state %d ; For entity number %d ");
578560,1185214464,0,0,PS1,SMS,CemmSmrlProcessTimerExpiry_4,P_WARNING,swLogPrintf("Incorrect timer expiry for unexpected entity number %d ");
578560,1185216512,0,0,PS1,SMS,CemmSmrlHandleEstIndFromSmcm_1,P_ERROR,swLogPrintf("SMRL received smcm_est_ind , but fail to find entity number %d ");
578560,1185218560,0,0,PS1,SMS,CemmSmrlHandleEstIndFromSmcm_2,P_WARNING,swLogPrintf("could not decode RP msg in EST_IND successfully for entity number %d ");
578560,1185220608,0,0,PS1,SMS,CemmSmrlHandleEstIndFromSmcm_3,P_WARNING,swLogPrintf("SMRL deliver RP_ERROR_MS_TO_NW RP RESPONSE for entity number %d ");
578560,1185222912,0,0,PS1,SMS,CemmSmrlHandleEstIndFromSmcm_4,P_WARNING,swLogPrintf("Received smcm_est_ind in unexpected SMRL state %d ; For entity number %d ");
578560,1185224704,0,0,PS1,SMS,CemmSmrlHandleDataIndFromSmcm_1,P_ERROR,swLogPrintf("SMRL received smcm_data_ind , but failed to find entity number %d ");
578560,1185226752,0,0,PS1,SMS,CemmSmrlHandleDataIndFromSmcm_2,P_WARNING,swLogPrintf("Could not decode RP msg in DATA_IND successfully for entity number %d ");
578560,1185228800,0,0,PS1,SMS,CemmSmrlHandleDataIndFromSmcm_3,P_WARNING,swLogPrintf("Invalid pEtyDat->rpMsg.rpRc.msgDecodeRc %d ");
578560,1185231104,0,0,PS1,SMS,CemmSmrlHandleDataIndFromSmcm_4,P_WARNING,swLogPrintf("Received smcm_data_ind in unexpected SMRL state %d ; For entity number %d ");
578560,1185232896,0,0,PS1,SMS,CemmSmrlHandleErrIndFromSmcm_1,P_ERROR,swLogPrintf("SMRL Received smcm_err_ind , but fail to find entity number %d ");
578560,1185235200,0,0,PS1,SMS,CemmSmrlHandleErrIndFromSmcm_2,P_WARNING,swLogPrintf("Received smcm_err_ind in unexpected SMRL state %d ; for entity number %d ");
578560,1185236992,0,0,PS1,SMS,CemmSmrlSendReptIndtoSmtl_1,P_WARNING,swLogPrintf("fail to find SMRL entity:%d for RPT_FOR_DATA_IND ");
578560,1185239040,0,0,PS1,SMS,CemmSmrlSendReptIndtoSmtl_2,P_WARNING,swLogPrintf("fail to find SMRL entity:%d for RPT_FOR_ERR_IND ");
578560,1185241088,0,0,PS1,SMS,CemmSmrlSendReptIndtoSmtl_3,P_WARNING,swLogPrintf("fail to find SMRL entity:%d for RPT_FOR_TIMER_EXPIRY ");
578560,1185245183,0,0,PS1,SMS,CemmSmrlSendReptIndtoSmtl_4,P_WARNING,swLogPrintf("Invalid signal passed to function SendSmrlReportInd ");
578560,1185245440,0,0,PS1,SMS,CemmSmrlSendReptIndNoEntitytoSmtl_1,P_INFO,swLogPrintf("SMRL deliver error report to SMTL for smsId: %d ; cause: %d ");
578560,1185247488,0,0,PS1,SMS,CemmSmrlSendAbortReqtoSmcm_1,P_INFO,swLogPrintf("SMRL send Abort to SMCM for etyNo: %d ; cause: %d ");
578560,1185249280,0,0,PS1,SMS,CemmSmtlProcessSmrlMtDataInd_1,P_WARNING,swLogPrintf("SMTL can not decode SMS for smsId: %d ");
578560,1185253375,0,0,PS1,SMS,DecodeSmsMessageBody_1,P_SIG,swLogPrintf("Receiving SMS CP DATA ");
578560,1185255423,0,0,PS1,SMS,DecodeSmsMessageBody_2,P_SIG,swLogPrintf("Receiving SMS CP ACK ");
578560,1185257471,0,0,PS1,SMS,DecodeSmsMessageBody_3,P_SIG,swLogPrintf("Receiving SMS CP ERROR ");
578560,1185257472,0,0,PS1,SMS,DecodeSmsMessageBody_4,P_WARNING,swLogPrintf("Unknown sms msg type %d received ");
578560,1185261567,0,0,PS1,SMS,EncodeSmsMessageBody_1,P_SIG,swLogPrintf("Sending SMS CP DATA ");
578560,1185263615,0,0,PS1,SMS,EncodeSmsMessageBody_2,P_SIG,swLogPrintf("Sending SMS CP ACK ");
578560,1185265663,0,0,PS1,SMS,EncodeSmsMessageBody_3,P_SIG,swLogPrintf("Sending SMS CP ERROR ");
578560,1185265664,0,0,PS1,SMS,EncodeSmsMessage_1,P_ERROR,swLogPrintf("Encode fail , incorrect RPDU len: %d ");
578560,1185267712,0,0,PS1,SMS,smsPduDecodeCbsDCS_1,P_WARNING,swLogPrintf("unknown cb DCS value: %d ");
578560,1185269760,0,0,PS1,SMS,smsPduDecodeCbsDCS_2,P_WARNING,swLogPrintf("unknown reserved DCS value: %d ");
578560,1185271808,0,0,PS1,SMS,smsPduDecodeCbsDCS_3,P_WARNING,swLogPrintf("unknown cb reserved DCS value: %d ");
578560,1185273856,0,0,PS1,SMS,smsPduDecodeCbsDCS_4,P_WARNING,swLogPrintf("unknown DCS value: %d ");
580608,1189087232,0,0,PS1,NAS_PLMN,CePlmnAddPreferFreqStatic_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t add the FREQ: 0x%x into the FREQ header ");
580608,1189089280,0,0,PS1,NAS_PLMN,CePlmnAddPreferFreqStatic_2,P_VALUE,swLogPrintf("CE PLMN , euArfcn ( 0x%x ) is not belong any band in nvm , can ' t add to the FREQ header ");
580608,1189091584,0,0,PS1,NAS_PLMN,CePlmnIsFplmn_1,P_VALUE,swLogPrintf("PLMN , plmn: ( 0x%x , 0x%x ) is ( E ) HPLMN , not FPLMN ");
580608,1189093632,0,0,PS1,NAS_PLMN,CePlmnIsFplmn_2,P_VALUE,swLogPrintf("PLMN , plmn: ( 0x%x , 0x%x ) is forbidden in NVM list ");
580608,1189095680,0,0,PS1,NAS_PLMN,CePlmnIsFplmn_3,P_VALUE,swLogPrintf("PLMN , plmn: ( 0x%x , 0x%x ) is forbidden in UICC list ");
580608,1189097728,0,0,PS1,NAS_PLMN,CePlmnIsFplmn_4,P_WARNING,swLogPrintf("PLMN , FPLMN in UICC is not read , can ' t decide whether the PLMN: ( 0x%x , 0x%x ) is a FPLMN ");
580608,1189099776,0,0,PS1,NAS_PLMN,CePlmnIsGprsFplmn_1,P_VALUE,swLogPrintf("PLMN , plmn: ( 0x%x , 0x%x ) is forbidden for GPRS service ");
580608,1189101824,0,0,PS1,NAS_PLMN,CePlmnIsBlockedPlmnBlockedTac_1,P_VALUE,swLogPrintf("PLMN , PLMN: ( 0x%x , 0x%x ) is T3346 blocked temporarily ");
580608,1189103872,0,0,PS1,NAS_PLMN,CePlmnIsBlockedPlmnBlockedTac_2,P_VALUE,swLogPrintf("PLMN , PLMN: ( 0x%x , 0x%x ) is blocked temporarily due to severe network failure ");
580608,1189106432,0,0,PS1,NAS_PLMN,CePlmnIsEplmnStatic_eplmn_1,P_VALUE,swLogPrintf("CE PLMN , DEST PLMN: ( 0x%x , 0x%x ) and SRC PLMN: ( 0x%x , 0x%x ) are all EHPLMN , act as EPLMN ");
580608,1189108480,0,0,PS1,NAS_PLMN,CePlmnIsEplmnStatic_eplmn_2,P_VALUE,swLogPrintf("CE PLMN , DEST PLMN: ( 0x%x , 0x%x ) and SRC PLMN: ( 0x%x , 0x%x ) are all EHPLMN / HPLMN , act as EPLMN ");
580608,1189111040,0,0,PS1,NAS_PLMN,CePlmnIsEplmnStatic_eplmn_3,P_VALUE,swLogPrintf("CE PLMN , srcFound: %d , destFound:%d , DEST PLMN: ( 0x%x , 0x%x ) and SRC PLMN: ( 0x%x , 0x%x ) are not EPLMN ");
580608,1189112064,0,0,PS1,NAS_PLMN,CePlmnIsEqualRplmnStatic_1,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is RPLMN ");
580608,1189114112,0,0,PS1,NAS_PLMN,CePlmnIsEqualRplmnStatic_2,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is EPLMN of RPLMN ");
580608,1189116160,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_1,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is HPLMN ");
580608,1189118208,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_2,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is EHPLMN ");
580608,1189120256,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_3,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is FPLMN ");
580608,1189122304,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_4,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is UPLMN ");
580608,1189124352,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_5,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is OPLMN ");
580608,1189126400,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_6,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is RPLMN ");
580608,1189128448,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_7,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is EPLMN of RPLMN ");
580608,1189130240,0,0,PS1,NAS_PLMN,CePlmnFreqBelongValidBand_1,P_WARNING,swLogPrintf("CE PLMN , FREQ: %d , not belong to any band ");
580608,1189132544,0,0,PS1,NAS_PLMN,CePlmnFreqBelongValidBand_2,P_WARNING,swLogPrintf("CE PLMN , FREQ: %d , belong to band: %d , not the setting band ");
580608,1189134336,0,0,PS1,NAS_PLMN,CePlmnClearNvmPreFreqList_1,P_WARNING,swLogPrintf("CE PLMN , lock FREQ: %d , not right , clear cell lock info ");
580608,1189136896,0,0,PS1,NAS_PLMN,CePlmnAddSaveUiccEHPlmnInfo_1,P_WARNING,swLogPrintf("PLMN , local EHPLMN full: %d , can ' t add new EHPLMN: ( 0x%x , 0x%x ) ");
580608,1189138688,0,0,PS1,NAS_PLMN,CePlmnAddSaveUiccPlmnInfo_1,P_WARNING,swLogPrintf("Insert FPLMN number is %d , current FPLMN number is %d ");
580608,1189140736,0,0,PS1,NAS_PLMN,CePlmnAddSaveUiccPlmnInfo_2,P_WARNING,swLogPrintf("Insert UPLMN number is %d , current UPLMN number is %d ");
580608,1189142528,0,0,PS1,NAS_PLMN,CePlmnAddSaveUiccPlmnInfo_3,P_VALUE,swLogPrintf("No valid PLMN type: %d need to store ");
580608,1189146623,0,0,PS1,NAS_PLMN,CePlmnRemoveUiccPlmnInfo_1,P_INFO,swLogPrintf("PLMN , remove all FPLMN in local PLMN context ");
580608,1189146880,0,0,PS1,NAS_PLMN,CePlmnSendPlmnSearchReqSig_1,P_VALUE,swLogPrintf("CePlmnSendPlmnSearchReqSig , requested Plmn: ( 0x%x , 0x%x ) ");
580608,1189148673,0,0,PS1,NAS_PLMN,CePlmnSendPlmnSearchReqSig_3,P_SIG,swLogPrintf("Start Plmn Search , Request Band ( s ) : %s ");
580608,1189150720,0,0,PS1,NAS_PLMN,CePlmnSendPlmnSearchReqSig_bcinfo_4,P_VALUE,swLogPrintf("CE PLMN , start BCINFO Plmn Search , Without Band , PLMN FREQ num is %d ");
580608,1189152768,0,0,PS1,NAS_PLMN,CePlmnSendPlmnSearchReqSig_4,P_SIG,swLogPrintf("Start Plmn Search , Without Band , Cell Lock Flag is %d ");
580608,1189155072,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_1,P_VALUE,swLogPrintf("PLMN , fobidden PLMN is HPLMN ( 0x%x , 0x%x ) , can ' t add into FPLMN ");
580608,1189157120,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_2,P_VALUE,swLogPrintf("PLMN , forbidden PLMN is EHPLMN ( 0x%x , 0x%x ) , can ' t add into FPLMN list ");
580608,1189159168,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_3,P_VALUE,swLogPrintf("PLMN , add forbidden PLMN ( 0x%x , 0x%x ) to NVM FPLMN list ");
580608,1189161216,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_4,P_VALUE,swLogPrintf("PLMN , FPLMN ( 0x%x , 0x%x ) already in NVM FPLMN list ");
580608,1189163264,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_5,P_VALUE,swLogPrintf("PLMN , add forbidden PLMN ( 0x%x , 0x%x ) to UICC FPLMN list ");
580608,1189165312,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_6,P_WARNING,swLogPrintf("PLMN , can ' t add the FPLMN ( 0x%x , 0x%x ) into UICC FPLMN list , as UICC FPLMN haven ' t been read ");
580608,1189167360,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_7,P_VALUE,swLogPrintf("PLMN , can ' t add the FPLMN ( 0x%x , 0x%x ) to local PLMN list ");
580608,1189169408,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_8,P_VALUE,swLogPrintf("PLMN , FPLMN ( 0x%x , 0x%x ) already in UICC FPLMN list ");
580608,1189171456,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_1,P_VALUE,swLogPrintf("PLMN , GPRS forbidden PLMN is HPLMN ( 0x%x , 0x%x ) , can ' t add into FPLMN list ");
580608,1189173504,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_2,P_VALUE,swLogPrintf("PLMN , GPRS forbidden PLMN is EHPLMN ( 0x%x , 0x%x ) , can ' t add into FPLMN list ");
580608,1189175552,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_3,P_VALUE,swLogPrintf("PLMN , add GPRS forbidden PLMN ( 0x%x , 0x%x ) ");
580608,1189177600,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_4,P_WARNING,swLogPrintf("PLMN , GPRS forbidden PLMN ( 0x%x , 0x%x ) is already in list [ fplmnIdx ] ");
580608,1189179648,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_5,P_VALUE,swLogPrintf("PLMN , can ' t add GPRS forbidden PLMN ( 0x%x , 0x%x ) due to list is full ");
580608,1189181696,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_6,P_WARNING,swLogPrintf("PLMN , GPRS forbidden PLMN ( 0x%x , 0x%x ) is already in list [ fplmnIdx ] ");
580608,1189183744,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_7,P_VALUE,swLogPrintf("PLMN , add GPRS forbidden PLMN ( 0x%x , 0x%x ) ");
580608,1189186048,0,0,PS1,NAS_PLMN,CePlmnAddBlockPlmnBlockTac_1,P_VALUE,swLogPrintf("PLMN , T3402 block list is full , remove the oldest PLMN ( 0x%x , 0x%x ) , TAC 0x%x ");
580608,1189189631,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_1,P_WARNING,swLogPrintf("PLMN , no valid PLMN in EPLMN list ");
580608,1189191679,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_2,P_INFO,swLogPrintf("PLMN , update EPLMN , but no EPLMN received , only need clear EPLMN ");
580608,1189191680,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_3,P_INFO,swLogPrintf("PLMN , update EPLMN , all EPLMN ( %d ) just same as in local NVM file , don ' t need to update ");
580608,1189193984,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_4,P_INFO,swLogPrintf("PLMN , need to up EPLMN list , valid EPLMN number: %d , all already in local NVM: %d , only need to update NVM ");
580608,1189195776,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_5,P_INFO,swLogPrintf("PLMN , need to up EPLMN list , valid EPLMN number: %d , need to check whether anyone forbidden ");
580608,1189198080,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_6,P_VALUE,swLogPrintf("PLMN , EPLMN: 0x%x , 0x%x , is the FPLMN , need to remove from EPLMN list ");
580608,1189200128,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_7,P_VALUE,swLogPrintf("PLMN , EPLMN: 0x%x , 0x%x , is the UICC FPLMN , need to remove from EPLMN list ");
580608,1189203967,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_8,P_WARNING,swLogPrintf("PLMN , need to update UICC FPLMN , but have not read from UICC ");
580608,1189204224,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_9,P_VALUE,swLogPrintf("PLMN , EPLMN: 0x%x , 0x%x , is the GPRS FPLMN , need to remove from EPLMN list ");
580608,1189208063,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_11,P_INFO,swLogPrintf("PLMN , update EPLMN , but all EPLMN are FPLMN , only need clear EPLMN ");
580608,1189208064,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_12,P_INFO,swLogPrintf("PLMN , after filtered by FPLMN , all EPLMN ( %d ) just same as in local NVM file , don ' t need to update ");
580608,1189210368,0,0,PS1,NAS_PLMN,CePlmnCheckRemoveBlockedOrGprsFPlmn_1,P_VALUE,swLogPrintf("PLMN , remove blocked PLMN: ( 0x%x , 0x%x ) ");
580608,1189212416,0,0,PS1,NAS_PLMN,CePlmnCheckRemoveBlockedOrGprsFPlmn_2,P_VALUE,swLogPrintf("PLMN , remove GPRS forbidden PLMN ( 0x%x , 0x%x ) ");
580608,1189214720,0,0,PS1,NAS_PLMN,CePlmnCalcOosTimeValue_1,P_VALUE,swLogPrintf("Base on power level ( %d ) , Oos times ( %d ) , calc the oos timer value is %d ( s ) ");
580608,1189218303,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_1,P_INFO,swLogPrintf("PLMN , CUR PLMN search procedure is done ");
580608,1189220351,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_2,P_INFO,swLogPrintf("PLMN , Already camp on ( E ) HPLMN , stop HPLMN search timer. ");
580608,1189220352,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_3,P_VALUE,swLogPrintf("PLMN , start pending PLMN search ( %d ) proccedure ");
580608,1189222656,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_4,P_VALUE,swLogPrintf("PLMN , Already camp on ( E ) HPLMN 0x%x , 0x%x , cancel pending High Priority Plmn search. ");
580608,1189226495,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_6,P_INFO,swLogPrintf("PLMN , no valid selected PLMN found , need to start PLMN OOS timer , and retry ");
580608,1189228543,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_7,P_INFO,swLogPrintf("PLMN , period plmn T timer is running , need to stop it ");
580608,1189228544,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_8,P_VALUE,swLogPrintf("PLMN , start OOS PLMN timer: %d Seconds ");
580608,1189230592,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_9,P_VALUE,swLogPrintf("CE PLMN , PLMN search level: %d , already tried once oos plmn search , for power consumption considerations , no longer plmn search! ");
580608,1189232896,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_10,P_VALUE,swLogPrintf("PLMN , period high PLMN search done , selectedPlmn: 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189236735,0,0,PS1,NAS_PLMN,CePlmnProcedureOut_1,P_INFO,swLogPrintf("PLMN , CUR PLMN search procedure is done , need to free it ' s memory ");
580608,1189238783,0,0,PS1,NAS_PLMN,CePlmnProcedureOut_2,P_WARNING,swLogPrintf("PLMN , Ready to enter PSM , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , stop it and check whether need to re-start when leave psm ");
580608,1189240831,0,0,PS1,NAS_PLMN,CePlmnProcedureOut_3,P_INFO,swLogPrintf("PLMN , no procedure is ongoing / pending , need to free Dyn context ");
580608,1189240832,0,0,PS1,NAS_PLMN,CePlmnAbortCurPlmnSearch_1,P_INFO,swLogPrintf("PLMN , WiFi Scan is ongoing , Status:%d , just wait for the WiFi Scan ");
580608,1189244927,0,0,PS1,NAS_PLMN,CePlmnAbortCurPlmnSearch_2,P_INFO,swLogPrintf("PLMN , already aborted current PLMN search before , just wait for AS CNF ");
580608,1189246975,0,0,PS1,NAS_PLMN,CePlmnAbortCurPlmnSearch_3,P_WARNING,swLogPrintf("PLMN , Manual PLMN search aborted ");
580608,1189249023,0,0,PS1,NAS_PLMN,CePlmnAbortCurPlmnSearch_4,P_WARNING,swLogPrintf("PLMN , BCINFO Manual PLMN search aborted ");
580608,1189249024,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_1,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search req , but another PLMN searching ( %d ) is ongoing , maybe need to pending ");
580608,1189251072,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_2,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search is ongoing , and procStatus: %d ");
580608,1189255167,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_3,P_INFO,swLogPrintf("PLMN , AUTO PLMN search is ongoing , but already under ABORT procedure ");
580608,1189257215,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_4,P_INFO,swLogPrintf("PLMN , AUTO PLMN search is ongoing , and ignore current request one ");
580608,1189257472,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_5,P_VALUE,swLogPrintf("PLMN , a PLMN search ( %d ) is ongoing ( %d ) , abort it , and pending AUTO PLMN search ");
580608,1189259264,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_6,P_VALUE,swLogPrintf("PLMN , already another PLMN search ( %d ) is pending ");
580608,1189263359,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_7,P_INFO,swLogPrintf("PLMN , current PLMN is already AUTO in NVM ");
580608,1189265407,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_8,P_INFO,swLogPrintf("PLMN , AUTO PLMN search , no valid RPLMN / ignore RPLMN , try EHPMN / HPLMN ");
580608,1189265664,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_9,P_VALUE,swLogPrintf("PLMN , current selected PLMN just the same as the requested PLMN: ( 0x%x , 0x%x ) ");
580608,1189267456,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_10,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search , but AS is not in IDLE state ( %d ) , wait for AS to go ILDE ");
580608,1189269760,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_1,P_VALUE,swLogPrintf("PLMN , current PLMN search ( %d ) is ongoing , and still a PLMN search pending ( %d ) , reject this MANUAL PLMN search request ");
580608,1189271808,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_2,P_VALUE,swLogPrintf("PLMN , current PLMN search ( %d ) is ongoing ( %d ) , pending this MANUAL PLMN search ");
580608,1189273600,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_3,P_VALUE,swLogPrintf("PLMN , current MANUAL PLMN search is ongoing ( %d ) , but another MANUAL PLMN search comes , reject , and abort current procedure ");
580608,1189275904,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_4,P_VALUE,swLogPrintf("PLMN , current High priority PLMN search is ongoing ( %d ) , and still a PLMN search pending ( %d ) , reject this MANUAL PLMN search request ");
580608,1189277696,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_5,P_VALUE,swLogPrintf("PLMN , abort current High priority PLMN search ( %d ) , pending this MANUAL PLMN search ");
580608,1189279744,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_6,P_VALUE,swLogPrintf("PLMN , start manual PLMN search , but current AS is not in IDLE state ( %d ) , force to do IDLE firstly ");
580608,1189282048,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_busy_1,P_VALUE,swLogPrintf("PLMN , current PLMN search ( %d ) is ongoing , and still a PLMN search pending ( %d ) , reject this ECINFO MANUAL PLMN search request ");
580608,1189284096,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_busy_2,P_VALUE,swLogPrintf("PLMN , current PLMN search ( %d ) is ongoing ( %d ) , pending this ECINFO MANUAL PLMN search ");
580608,1189285888,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_cft_1,P_WARNING,swLogPrintf("PLMN , current MANUAL PLMN search is ongoing ( %d ) , but another BCINFO MANUAL PLMN search comes , reject , and abort current procedure ");
580608,1189288192,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_busy_3,P_VALUE,swLogPrintf("PLMN , current High priority PLMN search is ongoing ( %d ) , and still a PLMN search pending ( %d ) , reject this BCINFO MANUAL PLMN search request ");
580608,1189289984,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_busy_4,P_VALUE,swLogPrintf("PLMN , abort current High priority PLMN search ( %d ) , pending this BCINFO MANUAL PLMN search ");
580608,1189292800,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_1,P_VALUE,swLogPrintf("Manual PLMN selection ( %d ) , request PLMN: ( 0x%x , 0x%x ) , but another PLMN search ( %d ) is ongoing now ");
580608,1189296127,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_2,P_INFO,swLogPrintf("PLMN , current manual PLMN selection just the same as the new request one , just return directly ");
580608,1189296128,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_3,P_VALUE,swLogPrintf("PLMN , already another PLMN search ( %d ) is pending , need to abort it ");
580608,1189298688,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_4,P_VALUE,swLogPrintf("PLMN , PLMN select type: %d and manual PLMN: ( 0x%x , 0x%x ) , as the same as the value in NVM ");
580608,1189300480,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_5,P_VALUE,swLogPrintf("PLMN , current selected PLMN just the same as the manual request: ( 0x%x , 0x%x ) ");
580608,1189302272,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_6,P_VALUE,swLogPrintf("PLMN , start manual PLMN selection , but current AS is not in IDLE state ( %d ) , force to go IDLE firstly ");
580608,1189304576,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnSearchReq_1,P_VALUE,swLogPrintf("PLMN , while trigger period high plmn search , another plmn is ongoing , type: %d , status: %d , just pending it ");
580608,1189306368,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnSearchReq_2,P_VALUE,swLogPrintf("PLMN , while trigger period high plmn search , another plmn is also pending , type: %d , just discard it ");
580608,1189308672,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnSearchReq_3,P_VALUE,swLogPrintf("PLMN , rplmn: 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189310720,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnSearchReq_4,P_WARNING,swLogPrintf("PLMN , selectedPlmn: 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189312512,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_1,P_VALUE,swLogPrintf("PLMN , default PLMN search req , but another PLMN searching ( %d ) is ongoing , maybe need to pending ");
580608,1189316607,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_2,P_WARNING,swLogPrintf("PLMN , Ignore current default PLMN search req ");
580608,1189318655,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_warning_2,P_WARNING,swLogPrintf("PLMN , Auto PLMN search is ongoing , ignore current default PLMN search req ");
580608,1189318912,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_3,P_WARNING,swLogPrintf("PLMN , default PLMN request , curent ongoing PLMN: %d , but still a PLMN searching ( %d ) in pending , replace it! ");
580608,1189322751,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_4,P_INFO,swLogPrintf("PLMN , manual PLMN selection ");
580608,1189324799,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_5,P_INFO,swLogPrintf("PLMN , manual then auto PLMN selection ");
580608,1189326847,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_6,P_INFO,swLogPrintf("PLMN , first power on , attemptHplmn is set , try HPLMN ");
580608,1189328895,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_7,P_INFO,swLogPrintf("PLMN , no valid RPLMN or roaming is not allowed , try HPLMN ");
580608,1189329408,0,0,PS1,NAS_PLMN,CePlmnCehckPlmnSuitable_1,P_VALUE,swLogPrintf("PLMN , plmn ( 0x%x , 0x%x ) , current TAC: %d is forbidden ");
580608,1189330944,0,0,PS1,NAS_PLMN,CePlmnCehckPlmnSuitable_2,P_VALUE,swLogPrintf("PLMN , Cell ( phyCellId: %d ) is barred ");
580608,1189335039,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityEhplmn_1,P_INFO,swLogPrintf("try to choose highest priority EHPLMN ");
580608,1189335296,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityEhplmn_2,P_VALUE,swLogPrintf("PLMN , choose highest prirority EHPLMN ( 0x%x , 0x%x ) ");
580608,1189339135,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityUplmn_1,P_INFO,swLogPrintf("try to choose highest priority UPLMN ");
580608,1189339392,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityUplmn_2,P_VALUE,swLogPrintf("PLMN , choose highest prirority UPLMN ( 0x%x , 0x%x ) ");
580608,1189343231,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityOplmn_1,P_INFO,swLogPrintf("try to choose highest priority OPLMN ");
580608,1189343488,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityOplmn_2,P_VALUE,swLogPrintf("PLMN , choose highest priority OPLMN ( 0x%x , 0x%x ) ");
580608,1189347327,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_1,P_INFO,swLogPrintf("PLMN , AUTO PLMN selection , try to choose a suitable PLMN ");
580608,1189347584,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_2,P_VALUE,swLogPrintf("PLMN , Roaming disable mode , Plmn ( 0x%x , 0x%x ) is not the HPLMN / EHPLMN ");
580608,1189351423,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_3,P_INFO,swLogPrintf("PLMN , choose RPLMN / EPLMN ");
580608,1189353471,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_4,P_WARNING,swLogPrintf("suitablePlmnNum equal to SUPPORT_MAX_PLMN_NUM ");
580608,1189353984,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_5,P_VALUE,swLogPrintf("PLMN user reselection , highPlmnType %d , PLMN: ( 0x%x , 0x%x ) ");
580608,1189356032,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_6,P_VALUE,swLogPrintf("PLMN user reselection , curPlmnType %d , PLMN: ( 0x%x , 0x%x ) ");
580608,1189359615,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_7,P_INFO,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM EHPLMN are found ");
580608,1189361663,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_8,P_INFO,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM UPLMN are found ");
580608,1189363711,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_9,P_INFO,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM OPLMN are found ");
580608,1189363968,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_10,P_VALUE,swLogPrintf("PLMN , MANUAL PLMN selection , try to choose PLMN: ( 0x%x , 0x%x ) ");
580608,1189366016,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_11,P_VALUE,swLogPrintf("PLMN , Manual PLMN ( 0x%x , 0x%x ) found ");
580608,1189369855,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_12,P_INFO,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM EHPLMN are found ");
580608,1189370112,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_13,P_VALUE,swLogPrintf("PLMN , Manual select plmn not found , could choose HPLMN ( 0x%x , 0x%x ) ");
580608,1189373951,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_14,P_INFO,swLogPrintf("PLMN , Manual select plmn not found , try to choose highest priority EHPLMN ");
580608,1189375999,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_15,P_INFO,swLogPrintf("PLMN , period High priority PLMN selection , try to choose high priority PLMN ");
580608,1189376512,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_16,P_VALUE,swLogPrintf("PLMN , current VPLMN ( 0x%x , 0x%x ) type is: %d ");
580608,1189380095,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_17,P_WARNING,swLogPrintf("suitablePlmnNum equal to SUPPORT_MAX_PLMN_NUM ");
580608,1189382143,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_18,P_INFO,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM EHPLMN are found ");
580608,1189384191,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_19,P_INFO,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM UPLMN are found ");
580608,1189386239,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_20,P_INFO,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM OPLMN are found ");
580608,1189388287,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_21,P_INFO,swLogPrintf("PLMN , Roaming disable mode , VPLMN is not allowed ");
580608,1189388800,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_22,P_VALUE,swLogPrintf("PLMN , choose PLMN ( 0x%x , 0x%x ) , and PLMN type: %d ");
580608,1189392383,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_23,P_INFO,swLogPrintf("PLMN , user reselection , choose RPLMN ");
580608,1189394431,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_24,P_INFO,swLogPrintf("PLMN , no suitable PLMN could choose to use ");
580608,1189394432,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_1,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189396480,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_2,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189398528,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_3,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189400576,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_4,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189404671,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_5,P_VALUE,swLogPrintf("PLMN , invalid band setting ");
580608,1189406719,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_6,P_VALUE,swLogPrintf("PLMN , set band , clear celllock ");
580608,1189406720,0,0,PS1,NAS_PLMN,CePlmnSetPreferFreqInfoReq_1,P_WARNING,swLogPrintf("PLMN , invalid ARFCN num: %d in CemmPlmnSetFreqInfo ");
580608,1189410815,0,0,PS1,NAS_PLMN,CePlmnSetPreferFreqInfoReq_2,P_WARNING,swLogPrintf("PLMN , no valid FREQ setting in CemmPlmnSetFreqInfo ");
580608,1189410816,0,0,PS1,NAS_PLMN,CePlmnSetCellLockInfoReq_1,P_WARNING,swLogPrintf("Cell Lock , ARFCN num is not equal to 1 : %d in CePlmnSetCellLockInfoReq ");
580608,1189412864,0,0,PS1,NAS_PLMN,CePlmnSetCellLockInfoReq_2,P_WARNING,swLogPrintf("Cell Lock fail , ARFCN not belong to the right band , and phyCellId is not valid: %d ");
580608,1189416959,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_1,P_INFO,swLogPrintf("PLMN , RPLMN is HPLMN / EHPLMN , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189419007,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_2,P_INFO,swLogPrintf("PLMN , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , need to stop it ");
580608,1189421055,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_3,P_INFO,swLogPrintf("PLMN , period high priority PLMN search is ongoing , don ' t need to start period T timer ");
580608,1189423103,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_4,P_INFO,swLogPrintf("PLMN , period high priority PLMN search is pending , don ' t need to start period T timer ");
580608,1189425151,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_EnableHPPlmnSearch,P_INFO,swLogPrintf("PLMN , period high priority PLMN search is disabled by user , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189425664,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_UserSetValid,P_INFO,swLogPrintf("PLMN , SearchCount:%d , try_count:%d , timer_val:%d ");
580608,1189429247,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_stopHPPLMNSearchAttempts,P_INFO,swLogPrintf("PLMN , No higher priority PLMN search attempts , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189431295,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_NoHPPLMNSearchAttempts,P_INFO,swLogPrintf("PLMN , No higher priority PLMN search attempts , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189433343,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_5,P_INFO,swLogPrintf("PLMN , plmnSelectType is not CEMM_AUTO_PLMN_REG , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189435391,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_6,P_INFO,swLogPrintf("PLMN , PERIOD_HIGH_PLMN_SEARCH_TIMER is still running ");
580608,1189435648,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_7,P_VALUE,swLogPrintf("PLMN , UE registered on RPLMN ( 0x%x , 0x%x ) , but OOS timer is still running , abnormal , stop it ");
580608,1189437440,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_8,P_VALUE,swLogPrintf("PLMN , try to start PERIOD_HIGH_PLMN_SEARCH_TIMER , sec: %d ");
580608,1189439488,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_9,P_VALUE,swLogPrintf("PLMN , try to start PERIOD_HIGH_PLMN_SEARCH_TIMER , mins: %d ");
580608,1189443583,0,0,PS1,NAS_PLMN,CePlmnOosSearchTimerExpiry_1,P_INFO,swLogPrintf("PLMN , OOS PLMN timer expiry , but timer state is not started , maybe this timer already stop before ");
580608,1189445631,0,0,PS1,NAS_PLMN,CePlmnOosSearchTimerExpiry_2,P_INFO,swLogPrintf("PLMN , OOS PLMN timer expiry , but PERIOD_HIGH_PLMN_SEARCH_TIMER is running... ");
580608,1189447679,0,0,PS1,NAS_PLMN,CePlmnOosSearchTimerExpiry_3,P_INFO,swLogPrintf("PLMN , OOS PLMN timer expiry , start PLMN search again ");
580608,1189449727,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnTimerExpiry_1,P_WARNING,swLogPrintf("PLMN , period PLMN timer expiry , but timer state is not started , maybe this timer already stopped before ");
580608,1189451775,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnTimerExpiry_2,P_INFO,swLogPrintf("PLMN , period PLMN timer expiry , but OOS PLMN search timer is running... ");
580608,1189453823,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnTimerExpiry_3,P_INFO,swLogPrintf("PLMN , period PLMN timer expiry , start high priority PLMN search ");
580608,1189453824,0,0,PS1,NAS_PLMN,CePlmnOosPlmnSelectReq_1,P_VALUE,swLogPrintf("PLMN , can ' t process OOS PLMN selection , as plmnSelectState is not DEACTIVATED or OOS SLEEP state: %d ");
580608,1189455872,0,0,PS1,NAS_PLMN,CePlmnOosPlmnSelectReq_2,P_VALUE,swLogPrintf("PLMN , current plmn is in searing procedure with search type %d , no longer to process this oos plmn select req ");
580608,1189459967,0,0,PS1,NAS_PLMN,CePlmnOosPlmnSelectReq_3,P_VALUE,swLogPrintf("PLMN , PLMN OOS timer is running , need to stop it ");
580608,1189462015,0,0,PS1,NAS_PLMN,CePlmnOosPlmnSelectReq_4,P_VALUE,swLogPrintf("PLMN , no valid RPLMN , try HPLMN ");
580608,1189462272,0,0,PS1,NAS_PLMN,CePlmnPostponedPeriodHighPlmnSearch_1,P_VALUE,swLogPrintf("PLMN , while trigger period high plmn search , another plmn is ongoing , type: %d , status: %d , just pending it ");
580608,1189464064,0,0,PS1,NAS_PLMN,CePlmnPostponedPeriodHighPlmnSearch_2,P_VALUE,swLogPrintf("PLMN , while trigger period high plmn search , another plmn is also pending , type: %d , just discard it ");
580608,1189466368,0,0,PS1,NAS_PLMN,CePlmnPostponedPeriodHighPlmnSearch_3,P_VALUE,swLogPrintf("PLMN , rplmn: 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189468416,0,0,PS1,NAS_PLMN,CePlmnPostponedPeriodHighPlmnSearch_4,P_WARNING,swLogPrintf("PLMN , selectedPlmn: 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189472255,0,0,PS1,NAS_PLMN,CePlmnCheckHplmnTimerWakeUpFromPsm_1,P_ERROR,swLogPrintf("PLMN , PERIOD_HIGH_PLMN_SEARCH_TIMER should not running , Pls Check it! ");
580608,1189472512,0,0,PS1,NAS_PLMN,CePlmnCheckHplmnTimerWakeUpFromPsm_2,P_INFO,swLogPrintf("PLMN , currSC is %d , hplmnTimerExpiredSC is %d , PERIOD_HIGH_PLMN_SEARCH_TIMER had expired under psm , postponed this period high plmn search until the end of business! ");
580608,1189474816,0,0,PS1,NAS_PLMN,CePlmnCheckHplmnTimerWakeUpFromPsm_3,P_INFO,swLogPrintf("PLMN , currSC is %d , hplmnTimerExpiredSC is %d , Wakeup from Psm , Re-Start PERIOD_HIGH_PLMN_SEARCH_TIMER with remain seconds: %d ");
580608,1189478399,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_1,P_WARNING,swLogPrintf("PLMN SIM card changes , IMSI is not same as pervious in NVM ");
580608,1189480447,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_2,P_WARNING,swLogPrintf("PLMN , SIM card changes , RPLMN not valid in USIM , delete NVM stored RPLMN ");
580608,1189481216,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_cmp_1,P_WARNING,swLogPrintf("PLMN , HPLMN in SIM: ( 0x%x , 0x%x ) , not the same as previous: ( 0x%x , 0x%x ) , need to clear old prefer FREQ ");
580608,1189484543,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_3,P_WARNING,swLogPrintf("PLMN , HPPLMN period in SIM < minPeriodicSearchTimer ");
580608,1189484544,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_4,P_WARNING,swLogPrintf("More EHPMN: %d in UICC ; need read more ");
580608,1189486848,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_5,P_WARNING,swLogPrintf("PLMN , no EPS Location info in UICC , get RPLMN ( 0x%x , 0x%x ) from NVM ");
580608,1189488640,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_6,P_WARNING,swLogPrintf("More FPLMN: %d in UICC , need read more ");
580608,1189490944,0,0,PS1,NAS_PLMN,CePlmnFillActReqInfo_1,P_VALUE,swLogPrintf("CePlmnFillActReqInfo:Plmn is ( 0x%x , 0x%x ) ");
580608,1189492992,0,0,PS1,NAS_PLMN,CePlmnFillActReqInfo_2,P_VALUE,swLogPrintf("CePlmnFillActReqInfo , cell lock: FREQ: %ld , phyCellId: %d ");
580608,1189495040,0,0,PS1,NAS_PLMN,CePlmnRegisteredInd_1,P_VALUE,swLogPrintf("PLMN , RPLMN ( 0x%x , 0x%x ) is not changed , just same as before ");
580608,1189497088,0,0,PS1,NAS_PLMN,CePlmnRegisteredInd_2,P_VALUE,swLogPrintf("PLMN , RPLMN ( 0x%x , 0x%x ) is in the FPLMN list stored in NVM , remove it ");
580608,1189499136,0,0,PS1,NAS_PLMN,CePlmnRegisteredInd_3,P_VALUE,swLogPrintf("PLMN , RPLMN ( 0x%x , 0x%x ) is in the FPLMN list stored in UICC , remove it ");
580608,1189502975,0,0,PS1,NAS_PLMN,CePlmnRegisteredInd_4,P_WARNING,swLogPrintf("PLMN , need to update UICC FPLMN , but have not read from UICC , update later ");
580608,1189505023,0,0,PS1,NAS_PLMN,CePlmnDeregisteredInd_1,P_INFO,swLogPrintf("PLMN , clear EPLMN ");
580608,1189507071,0,0,PS1,NAS_PLMN,CePlmnDeregisteredInd_2,P_INFO,swLogPrintf("PLMN , PLMN select type is Manual then Auto , but manual PLMN selection failed , try to AUTO mode ");
580608,1189507328,0,0,PS1,NAS_PLMN,CePlmnRemoveBlockPlmnBlockTac_1,P_VALUE,swLogPrintf("PLMN , EMM notify to remove blocked PLMN ( 0x%x , 0x%x ) ");
580608,1189509376,0,0,PS1,NAS_PLMN,CePlmnRemoveBlockPlmnBlockTac_2,P_VALUE,swLogPrintf("PLMN , EMM notify to remove blocked PLMN ( 0x%x , 0x%x ) ");
580608,1189511680,0,0,PS1,NAS_PLMN,CePlmnRemoveBlockPlmnBlockTac_3,P_WARNING,swLogPrintf("PLMN , blockReason %d , t3402BlockNum %d , blockPlmnPresent %d! ");
580608,1189515263,0,0,PS1,NAS_PLMN,CePlmnDelLastPreferFreq_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t del the FREQ list ");
580608,1189517311,0,0,PS1,NAS_PLMN,CePlmnDelPreferFreq_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t del the FREQ list ");
580608,1189517312,0,0,PS1,NAS_PLMN,CePlmnSetPreferFreqList_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t set prefer FREQ list: %d ");
580608,1189521407,0,0,PS1,NAS_PLMN,CePlmnSetPreferFreqList_2,P_INFO,swLogPrintf("CE PLMN , FREQ is same , don ' t need update ");
580608,1189521920,0,0,PS1,NAS_PLMN,CePlmnSimReadDataCnf_1,P_VALUE,swLogPrintf("PLMN read: type %d of PLMN info from UICC , startIndex: %d , total num: %d ");
580608,1189523712,0,0,PS1,NAS_PLMN,CePlmnSimReadDataCnf_2,P_VALUE,swLogPrintf("PLMN , RPLMN ( 0x%x , 0x%x ) is in the FPLMN list stored in UICC , remove it ");
580608,1189526016,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_1,P_VALUE,swLogPrintf("PLMN , CEMM Reqest to do PLMN selection , type: %d manual Plmn: 0x%x , 0x%x ");
580608,1189527552,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_2,P_VALUE,swLogPrintf("PLMN , CEMM Reqest to do PLMN selection , type: %d ");
580608,1189531647,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_3,P_INFO,swLogPrintf("PLMN , PLMN OOS timer is running , need to stop it ");
580608,1189533695,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_5,P_INFO,swLogPrintf("PLMN , UE in manual PLMN reg state , initiate reg ( not the first time ) on FPLMN / FPLMN for GPRS , need to start PLMN OOS timer , and retry ");
580608,1189535743,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_6,P_INFO,swLogPrintf("PLMN , period plmn T timer is running , need to stop it ");
580608,1189535744,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_7,P_VALUE,swLogPrintf("PLMN , start OOS PLMN timer: %d Seconds ");
580608,1189537792,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_8,P_VALUE,swLogPrintf("CE PLMN , PLMN search level: %d , already tried once oos plmn search , for power consumption considerations , no longer plmn search! ");
580608,1189539840,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_1,P_VALUE,swLogPrintf("PLMN , Deact PLMN with cause: %d ");
580608,1189543935,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_2,P_INFO,swLogPrintf("PLMN , DEACT , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , need to stop it ");
580608,1189545983,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_3,P_INFO,swLogPrintf("PLMN , DEACT , OOS_PLMN_SEARCH_TIMER is running , need to stop it ");
580608,1189548031,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_Psm,P_WARNING,swLogPrintf("PLMN , Ready to enter PSM , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , stop it and when leave psm decide whether to re-Start! ");
580608,1189548544,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_4,P_WARNING,swLogPrintf("PLMN , PLMN search is ongoing when DEACT PLMN with cause: %d , type: %d , procStatus: %d ");
580608,1189550080,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_5,P_INFO,swLogPrintf("PLMN , need to ABORT AS PLMN search , as DEACT by EMM with cause: %d ");
580608,1189552128,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_6,P_INFO,swLogPrintf("PLMN , manual PLMN search , deact cause: %d , abort it and confirm with no PLMN ");
580608,1189554176,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_bcinfo_1,P_INFO,swLogPrintf("PLMN , BCINFO manual PLMN search , deact cause: %d , abort it and confirm with no PLMN ");
580608,1189556224,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_wifiscan_1,P_INFO,swLogPrintf("PLMN , Wifi Scan , deact cause: %d , abort it and confirm with no WiFi ");
580608,1189560319,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_8,P_WARNING,swLogPrintf("PLMN , PLMN search is ongoing , but EMM trigger to enter PSM , pending PSM deactivation ");
580608,1189560320,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_9,P_WARNING,swLogPrintf("PLMN , another PLMN search procedure ( %d ) is pending ");
580608,1189562368,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_10,P_INFO,swLogPrintf("PLMN , manual PLMN search pending , deactCause: %d , abort it and confirm with no PLMN ");
580608,1189564416,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_bcinfo_2,P_INFO,swLogPrintf("PLMN , BCINFO manual PLMN search pending , deactCause: %d , abort it and confirm with no PLMN ");
580608,1189566464,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_wifiscan_2,P_INFO,swLogPrintf("PLMN , WiFi Scan pending , deactCause: %d , abort it and confirm with no WiFi ");
580608,1189570559,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_11,P_WARNING,swLogPrintf("PLMN , PLMN search is pending , but EMM trigger to enter PSM , pending PSM deactivation ");
580608,1189572607,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_12,P_WARNING,swLogPrintf("PLMN , Ready to enter PSM , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , stop it and check whether need to re-start when leave psm ");
580608,1189574655,0,0,PS1,NAS_PLMN,CePlmnProcIdleStateCnfMsg_1,P_INFO,swLogPrintf("PLMN , Idle state is requested because of WiFi SCAN , do nothing here ");
580608,1189576703,0,0,PS1,NAS_PLMN,CePlmnProcIdleStateIndMsg_1,P_WARNING,swLogPrintf("PLMN , Idle state is requested because of WiFi SCAN , do nothing here ");
580608,1189576960,0,0,PS1,NAS_PLMN,CePlmnProcIdleStateIndMsg_2,P_VALUE,swLogPrintf("PLMN , current selected PLMN just the same as the ( E ) HPLMN: ( 0x%x , 0x%x ) ");
580608,1189578752,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_1,P_VALUE,swLogPrintf("PLMN , Current PLMN search type: %d , and already aborted , but still received CerrcPlmnSearchInd , ignore it ");
580608,1189581056,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_2,P_VALUE,swLogPrintf("PLMN , Roaming Disable mode , Plmn ( 0x%x , 0x%x ) in CerrcPlmnSearchInd is not HPLMN / EHPLMN ");
580608,1189583616,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_3,P_VALUE,swLogPrintf("PLMN , Plmn ( 0x%x , 0x%x ) in CerrcPlmnSearchInd is not the EPLMN as the request PLMN: 0x%x , 0x%x ");
580608,1189585664,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_4,P_VALUE,swLogPrintf("PLMN , Manual PLMN selection mode , Plmn ( 0x%x , 0x%x ) in CerrcPlmnSearchInd should not consider as the EPLMN of the request PLMN: ( 0x%x , 0x%x ) ");
580608,1189586944,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_5,P_VALUE,swLogPrintf("PLMN , TAC ( %d ) in CerrcPlmnSearchInd is forbidden ");
580608,1189588992,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_6,P_VALUE,swLogPrintf("PLMN , Cell ( phyCellId: %d ) in CerrcPlmnSearchInd is barred ");
580608,1189593087,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_7,P_INFO,swLogPrintf("PLMN , no suitable PLMN could be selected in CerrcPlmnSearchInd , try to find next plmn ");
580608,1189593344,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_8,P_VALUE,swLogPrintf("PLMN , Suitable PLMN ( 0x%x , 0x%x ) selected in CerrcPlmnSearchInd ");
580608,1189595136,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_1,P_VALUE,swLogPrintf("PLMN , PLMN search type: %d , aready aborted , but still received CerrcPlmnSearchCnf , need to wait for CerrcAbortPlmnSearchCnf ");
580608,1189597184,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_2,P_VALUE,swLogPrintf("PLMN , PLMN select type: %d , suitable PLMN already selected in CerrcPlmnSearchInd , PLMN search procedure done ");
580608,1189601279,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_3,P_INFO,swLogPrintf("PLMN , PLMN select type is Manual then Auto , but can ' t find manual PLMN , try to AUTO mode ");
580608,1189601280,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_4,P_VALUE,swLogPrintf("PLMN , PLMN search type: %d , can ' t find any suitable PLMN... ");
580608,1189603584,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_5,P_VALUE,swLogPrintf("PLMN , Suitable PLMN ( 0x%x , 0x%x ) selected in CerrcPlmnSearchCnf ");
580608,1189607423,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_6,P_INFO,swLogPrintf("PLMN , pending Manual PLMN search proccedure , confirm to upper layer. ");
580608,1189607680,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcAbortPlmnSearchCnfSig_1,P_VALUE,swLogPrintf("PLMN , plmn search type: %d , procedure status: %d , abort confirm from CERRC ");
580608,1189611519,0,0,PS1,NAS_PLMN,CemmPlmnProcAbortPlmnSearchReqSig_1,P_INFO,swLogPrintf("PLMN , receive CemmAbortPlmnSearchReq from CCM , abort current manual PLMN search procedure ");
580608,1189613567,0,0,PS1,NAS_PLMN,CemmPlmnProcAbortPlmnSearchReqSig_2,P_INFO,swLogPrintf("PLMN , abort request already send to CERRC before , just wait for confirm ");
580608,1189615615,0,0,PS1,NAS_PLMN,CemmPlmnProcAbortPlmnSearchReqSig_3,P_INFO,swLogPrintf("PLMN , manual PLMN search is under pending , abort it ");
580608,1189617663,0,0,PS1,NAS_PLMN,CemmPlmnProcAbortPlmnSearchReqSig_4,P_INFO,swLogPrintf("PLMN , BCINFO manual PLMN search is under pending , abort it ");
580608,1189617664,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_1,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189619712,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_2,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189621760,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_3,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189623808,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_4,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189627903,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_5,P_WARNING,swLogPrintf("PLMN , no valid band is left , just set current band to RF supported band ");
580608,1189629951,0,0,PS1,NAS_PLMN,CePlmnSetPlmnRegTypeParm_1,P_INFO,swLogPrintf("Still Auto Plmn Reg , No Need To Write Nv ");
580608,1189630464,0,0,PS1,NAS_PLMN,CePlmnSetPlmnRegTypeParm_2,P_VALUE,swLogPrintf("Plmn Select Type is still %d , And the Plmn is still ( 0x%x , 0x%x ) , No Need To Write Nv ");
580608,1189632768,0,0,PS1,NAS_PLMN,CePlmnSetUserDefinedHighPriPlmnTimer_s_1,P_SIG,swLogPrintf("CE PLMN , set / cfg high priority timer , tryNumPresent: %d / tryNum: %d , tValPreset: %d / tValSec: %d ");
580608,1189634304,0,0,PS1,NAS_PLMN,CePlmnSetUserDefinedHighPriPlmnTimer_w_1,P_WARNING,swLogPrintf("CE PLMN , set / cfg high priority timer , tryNum: %d , invalid tValSec: 0x%lx > 0xFFFFF ");
580608,1189636352,0,0,PS1,NAS_PLMN,CePlmnSetUserDefinedHighPriPlmnTimer_w_2,P_WARNING,swLogPrintf("CE PLMN , set / cfg high priority timer , tryNumPresent: %d and tValPresent: %d , should set together ");
580608,1189638144,0,0,PS1,NAS_PLMN,CePlmnSetRoamModeFromNv_1,P_VALUE,swLogPrintf("CE PLMN , Power Up , enableRoam init from NV %d ");
580608,1189640448,0,0,PS1,NAS_PLMN,CePlmnSetRoamMode_1,P_VALUE,swLogPrintf("CE PLMN , set enableRoam from %d to %d ");
580608,1189644287,0,0,PS1,NAS_PLMN,CePlmnSetRoamMode_2,P_VALUE,swLogPrintf("CE PLMN , roaming mode is changed and take effect immediately ");
580608,1189646335,0,0,PS1,NAS_PLMN,CePlmnSetRoamMode_3,P_VALUE,swLogPrintf("CE PLMN , don ' t need to trigger PLMN selection in Manual mode ");
580608,1189648383,0,0,PS1,NAS_PLMN,CePlmnSetRoamMode_4,P_VALUE,swLogPrintf("CE PLMN , roaming mode will take effect after rebooting ");
580608,1189648384,0,0,PS1,NAS_PLMN,CePlmnSetSavePlmnSelModeFromNv_1,P_VALUE,swLogPrintf("CE PLMN , Power Up , savePlmnSelMode init from NV %d ");
580608,1189652479,0,0,PS1,NAS_PLMN,CePlmnSetSavePlmnSelModeFromNv_2,P_INFO,swLogPrintf("CE PLMN , Power Up , reset PLMN select Mode to Auto ");
580608,1189652736,0,0,PS1,NAS_PLMN,CePlmnSetSavePlmnSelMode_1,P_VALUE,swLogPrintf("CE PLMN , set savePlmnSelMode from %d to %d ");
580608,1189654784,0,0,PS1,NAS_PLMN,CePlmnProcWiFiScan_1,P_VALUE,swLogPrintf("PLMN , WiFiScan , AS state ( %d ) , wifiPriority: %d ");
580608,1189658623,0,0,PS1,NAS_PLMN,CePlmnProcWiFiScan_2,P_INFO,swLogPrintf("PLMN , WiFiScan , WiFi pref , force to do IDLE ");
580608,1189660671,0,0,PS1,NAS_PLMN,CePlmnProcWiFiScan_3,P_INFO,swLogPrintf("PLMN , WiFiScan , DATA pref , waiting for RRC release ");
580608,1189660672,0,0,PS1,NAS_PLMN,CePlmnStartWiFiScanReqSig_1,P_VALUE,swLogPrintf("PLMN , WiFiScan , Receive SIG_CEMM_START_WIFISCAN_REQ , Priority:%d ");
580608,1189662720,0,0,PS1,NAS_PLMN,CePlmnProcStartWiFiScanReq_1,P_VALUE,swLogPrintf("PLMN , WiFiScan , PLMN / WiFi search pending ( %d ) , reject this WiFiScan request ");
580608,1189664768,0,0,PS1,NAS_PLMN,CePlmnProcStartWiFiScanReq_2,P_VALUE,swLogPrintf("PLMN , WiFiScan , current WiFiScan is ongoing , state:%d , reject this WiFiScan request ");
580608,1189667072,0,0,PS1,NAS_PLMN,CePlmnProcStartWiFiScanReq_3,P_VALUE,swLogPrintf("PLMN , WiFiScan , current PLMN search ( %d ) is ongoing ( %d ) , pending this WiFi scan ");
580608,1189670911,0,0,PS1,NAS_PLMN,CePlmnAbortWiFiScanReqSig_1,P_VALUE,swLogPrintf("PLMN , WiFiScan , Receive SIG_CEMM_ABORT_WIFISCAN_REQ ");
580608,1189672959,0,0,PS1,NAS_PLMN,CePlmnAbortWiFiScanReqSig_2,P_INFO,swLogPrintf("PLMN , WiFiScan , discard the pending WiFiScan if there is ");
580608,1189675007,0,0,PS1,NAS_PLMN,CePlmnAbortWiFiScanReqSig_3,P_INFO,swLogPrintf("PLMN , WiFiScan , abort RRC ");
580608,1189675008,0,0,PS1,NAS_PLMN,CePlmnProcCerrcWiFiScanCnfSig_1,P_VALUE,swLogPrintf("PLMN , WiFiScan , Receive SIG_CERRC_WIFI_SCAN_CNF , WiFiScanProcStatus:%d ");
580608,1189677056,0,0,PS1,NAS_PLMN,CePlmnProcCerrcAbortWiFiScanCnfSig_1,P_VALUE,swLogPrintf("PLMN , WiFiScan , Receive SIG_CERRC_ABORT_WIFI_SCAN_CNF , WiFiScanProcStatus:%d ");
580608,1189681151,0,0,PS1,NAS_PLMN,CePlmnProcCellCampIndMsg_1,P_INFO,swLogPrintf("PLMN , WiFiScan , start the WiFi Scan. ");
585728,1199575039,0,0,PS1,UICC,UiccCtrlCheckPinEnable_0,P_INFO,swLogPrintf("universal PIN or PIN1 is enable ");
585728,1199575808,0,0,PS1,UICC,UiccCtrlVotePmuState_0,P_INFO,swLogPrintf("bSimPowerSave %d , bSimSleep %d , usatCmdOngoing %d , bipSessionOpen %d , UiccCtrl Voted deep sleep not allowed ");
585728,1199577089,0,0,PS1,UICC,UiccTimerExpiryTrace_0,P_VALUE,swLogPrintf("%s expired ");
585728,1199581183,0,0,PS1,UICC,UiccCtrlHandleTimerExpiry_1,P_SIG,swLogPrintf("UICC presence detect timer expired , send STATUS command ");
585728,1199583231,0,0,PS1,UICC,UiccCtrlHandleTimerExpiry_2,P_INFO,swLogPrintf("UICC presence detect not required as UICC was not active ");
585728,1199583488,0,0,PS1,UICC,UiccCtrlCheckTestCard_0,P_INFO,swLogPrintf("UICC , MCC: 0x%lx , MNC: 0x%lx ");
585728,1199585536,0,0,PS1,UICC,UiccCtrlCheckTestCard_1,P_SIG,swLogPrintf("UICC , MCC: 0x%lx , MNC: 0x%lx , is a TEST SIM ");
585728,1199587584,0,0,PS1,UICC,UiccCtrlHandleUnexpectedSignal_0,P_VALUE,swLogPrintf("UiccCtrl , Handle unexpected signal 0x%x on state %d ");
585728,1199589376,0,0,PS1,UICC,UiccCtrlHandleUnexpectedSignal_1,P_WARNING,swLogPrintf("UiccCtrl , unexpected signal 0x%x will be destroyed without cnf ");
585728,1199591424,0,0,PS1,UICC,UiccCtrlNotifyCardRemoved_1,P_VALUE,swLogPrintf("UICC Card removed with cause: %d ");
585728,1199593472,0,0,PS1,UICC,UiccCtrlHandleCardInserted_1,P_ERROR,swLogPrintf("Select MF error , SW:%x , it ' s an invalid card! Terminate it... ");
585728,1199597567,0,0,PS1,UICC,UiccCtrlStart3GSession_0,P_ERROR,swLogPrintf("The IMSI is invalid , so the uicc intialization failed! ");
585728,1199599615,0,0,PS1,UICC,UiccCtrlStart3GSession_1,P_INFO,swLogPrintf("The access control class is invalid ");
585728,1199599872,0,0,PS1,UICC,UiccCtrlStart3GSession_acl1,P_VALUE,swLogPrintf("CemmsimAppReadyInd bAclEnable: %d , aclRawDataLen %d ");
585728,1199603711,0,0,PS1,UICC,UiccCtrlStart3GSession_2,P_SIG,swLogPrintf("The Uicc initialized OK , send CemmSimAppReadyInd! The USIM is ready...... ");
585728,1199605759,0,0,PS1,UICC,UiccCtrlStart3GSession_3,P_ERROR,swLogPrintf("The uicc initialisation failed!! Cannot send SIM ready to CEMM! ");
585728,1199607807,0,0,PS1,UICC,HandleUiccCtrlInitState_0,P_INFO,swLogPrintf("The USIM power on start.... ");
585728,1199609855,0,0,PS1,UICC,HandleUiccCtrlInitState_1,P_INFO,swLogPrintf("The card is detected , start initialization... ");
585728,1199611903,0,0,PS1,UICC,HandleUiccCtrlInitState_2,P_ERROR,swLogPrintf("The USIM is not detected , please check the card plugged in well!! ");
585728,1199613951,0,0,PS1,UICC,HandleUiccCtrlInitState_3,P_ERROR,swLogPrintf("The USIM is removed! Please check if the usim card is plugged out! ");
585728,1199613952,0,0,PS1,UICC,HandleUiccCtrlInitState_timer,P_WARNING,swLogPrintf("UICC presence detect timer ( sigId: 0x%x ) triggers recovery the UICC after wakeup from HIB / sleep2 ");
585728,1199616256,0,0,PS1,UICC,HandleUiccCtrlInitState_4,P_VALUE,swLogPrintf("bUSimActive %d , leaveSleepMode %d ");
585728,1199618048,0,0,PS1,UICC,HandleUiccCtrlInitState_5,P_WARNING,swLogPrintf("Signal ( sigId: 0x%x ) triggers recovery the UICC after wakeup from HIB / sleep2... ");
585728,1199620352,0,0,PS1,UICC,HandleUiccCtrlAppActiveState_error,P_INFO,swLogPrintf("UiccCtrl , stop recovery retry as error occurred %d times , or reqSignal 0x%x ");
585728,1199624191,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_0,P_SIG,swLogPrintf("Enter UICC Recovery procedure ");
585728,1199626239,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_1,P_INFO,swLogPrintf("The initial communiation with card is estabilshed , start initialization for recovery... ");
585728,1199628287,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_110,P_INFO,swLogPrintf("The Uicc resumed status ok... ");
585728,1199628544,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_verifyPin,P_ERROR,swLogPrintf("Uicc recovery with PIN verify failed , cmdStatus:%x , status words:%x! ");
585728,1199632383,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_2,P_ERROR,swLogPrintf("Select usim application failed!... ");
585728,1199634431,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_3,P_ERROR,swLogPrintf("The IMSI is invalid , so the uicc intialization failed! ");
585728,1199636479,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_get_iccid,P_WARNING,swLogPrintf("The ICCID is invalid , uicc intialization failed ");
585728,1199638527,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_4,P_INFO,swLogPrintf("The uicc initialized OK... ");
585728,1199640575,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_5,P_ERROR,swLogPrintf("UICC card changed ");
585728,1199642623,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_6,P_SIG,swLogPrintf("UICC recovery done ");
585728,1199642880,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_7,P_WARNING,swLogPrintf("Select MF error , uiccCtrlData->cmdStatus:%d , SW:%x ");
585728,1199646719,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_8,P_WARNING,swLogPrintf("unexpected signal , destroy it ");
585728,1199648767,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_9,P_WARNING,swLogPrintf("UICC error occurred or card removed ");
585728,1199649024,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_10,P_WARNING,swLogPrintf("UICC recovery failed status:%d , recovery times:%d ");
585728,1199652863,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_11,P_WARNING,swLogPrintf("UICC recovery failed , notify card removed ");
585728,1199654911,0,0,PS1,UICC,UiccCtrlRealSimEntry_0,P_INFO,swLogPrintf("Enter real sim process ");
585728,1199655168,0,0,PS1,UICC,UiccCtrlStartTimer_debug,P_VALUE,swLogPrintf("timer:%d start , timerPeriod:%d ");
585728,1199656960,0,0,PS1,UICC,UiccCtrlStartTimer_1,P_VALUE,swLogPrintf("timer:%d is already started! ");
585728,1199659008,0,0,PS1,UICC,UiccCtrlStopTimer_debug,P_VALUE,swLogPrintf("timer:%d stop ");
585728,1199663103,0,0,PS1,UICC,UiccCtrlTaskEntry_0,P_INFO,swLogPrintf("Enter UiccCtrl task , start init.... ");
585728,1199665151,0,0,PS1,UICC,CountUiccExecuteWriteCmd_0,P_VALUE,swLogPrintf("SIM write counter is not enable , ignore it ");
585728,1199665152,0,0,PS1,UICC,ResetUiccCmdStatus_1,P_VALUE,swLogPrintf("Bad cmdStatus ( %d ) cannot be reset as normal , maybe should recovery uicc... ");
585728,1199667456,0,0,PS1,UICC,ParseUiccStatusWords_1,P_WARNING,swLogPrintf("Invalid status words: %x %x! ");
585728,1199669248,0,0,PS1,UICC,ParseUiccEFTotalFileSize_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199671296,0,0,PS1,UICC,ParseUiccEFTotalFileSize_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199673344,0,0,PS1,UICC,ParseUiccDfName_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199675392,0,0,PS1,UICC,ParseUiccDfName_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199677440,0,0,PS1,UICC,ParseUiccDirId_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199679488,0,0,PS1,UICC,ParseUiccDirId_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199681536,0,0,PS1,UICC,ParseUiccDirFileDescriptor_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199683584,0,0,PS1,UICC,ParseUiccDirFileDescriptor_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199685632,0,0,PS1,UICC,ParseUiccDirSecurityAttributes_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199687680,0,0,PS1,UICC,ParseUiccUsageQualifier_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199689728,0,0,PS1,UICC,ParseUiccUsageQualifier_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199691776,0,0,PS1,UICC,ParseUiccKeyReference_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199693824,0,0,PS1,UICC,ParseUiccKeyReference_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199695872,0,0,PS1,UICC,ParseUiccPinStatusTemplateDO_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199698432,0,0,PS1,UICC,UpdateUiccPinStatus_debug,P_VALUE,swLogPrintf("keyRef 0x%x , usePin %d , enabled %d ");
585728,1199699968,0,0,PS1,UICC,ParseUiccCharacteristics_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199702016,0,0,PS1,UICC,ParseUiccCharacteristics_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199704064,0,0,PS1,UICC,ParseEfFileDescriptor_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199706112,0,0,PS1,UICC,ParseEfFileDescriptor_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199708160,0,0,PS1,UICC,ParseEfFileId_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199710208,0,0,PS1,UICC,ParseEfFileId_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199712256,0,0,PS1,UICC,ParseUiccAppPowerConsumption_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199714304,0,0,PS1,UICC,ParseUiccAppPowerConsumption_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199716352,0,0,PS1,UICC,ParseUiccMinClockFrequency_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199718400,0,0,PS1,UICC,ParseUiccMinClockFrequency_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199720448,0,0,PS1,UICC,ParseUiccMemAvailable_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199722496,0,0,PS1,UICC,ParseUiccFileProprietaryInfo_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199724544,0,0,PS1,UICC,ParseFileLifeCycleStatus_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199726592,0,0,PS1,UICC,ParseFileLifeCycleStatus_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199728640,0,0,PS1,UICC,ParseEfCompactFormat_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199730688,0,0,PS1,UICC,ParseEfCompactFormat_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199732736,0,0,PS1,UICC,ParseUiccKeyRef_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199734784,0,0,PS1,UICC,ParseUiccKeyRef_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199736832,0,0,PS1,UICC,ParseUiccEfExpandedFormat_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199738880,0,0,PS1,UICC,ParseUiccRefToExpandedFormat_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199740928,0,0,PS1,UICC,ParseUiccFileSize_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199742976,0,0,PS1,UICC,ParseUiccFileSize_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199745024,0,0,PS1,UICC,ParseUiccTotalDirFileSize_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199747072,0,0,PS1,UICC,ParseUiccSfi_1,P_WARNING,swLogPrintf("unexpected tag: %x ");
585728,1199749120,0,0,PS1,UICC,ParseUiccSfi_2,P_WARNING,swLogPrintf("wrong length: %x ");
585728,1199751424,0,0,PS1,UICC,ParseUiccEfFcp_0,P_VALUE,swLogPrintf("abnormal fcp length 0x%x , rspdata length 0x%x ");
585728,1199753216,0,0,PS1,UICC,ParseUiccEfFcp_1,P_VALUE,swLogPrintf("ignore unknown EF fcp tag 0x%x ");
585728,1199757311,0,0,PS1,UICC,ParseUiccSelectEfResponse_1,P_VALUE,swLogPrintf("parse EF FCP error ");
585728,1199757312,0,0,PS1,UICC,ParseUiccDirFcp_1,P_VALUE,swLogPrintf("ignore unknown ADF / DF fcp tag 0x%x ");
585728,1199759616,0,0,PS1,UICC,ParseUiccSelectDirResponse_0,P_VALUE,swLogPrintf("saved currentlySelectedDir: %x , decode fileOperaData.currentDir:%x ");
585728,1199761408,0,0,PS1,UICC,ExecuteUiccSelectCommand_1,P_ERROR,swLogPrintf("Unsupport select menthod: 0x%x ");
585728,1199763456,0,0,PS1,UICC,ExecuteUiccSelectCommand_2,P_INFO,swLogPrintf("Abnormal cmdstatus: %d ");
585728,1199765504,0,0,PS1,UICC,ExecuteUiccStatusCommand_1,P_INFO,swLogPrintf("Abnormal cmdstatus: %d ");
585728,1199767552,0,0,PS1,UICC,ExecuteUiccReadBinaryCommand_1,P_WARNING,swLogPrintf("EF %x met file size as 0 !!! ");
585728,1199770112,0,0,PS1,UICC,ExecuteUiccReadBinaryCommand_2,P_INFO,swLogPrintf("Abnormal SW: %x when read EF: %x , cmd status change: %d ");
585728,1199771904,0,0,PS1,UICC,ExecuteUiccReadBinaryCommand_3,P_INFO,swLogPrintf("Abnormal EF Id: %x or cmdstatus: %d ");
585728,1199773696,0,0,PS1,UICC,ExecuteUiccUpdateBinaryCommand_0,P_ERROR,swLogPrintf("EF %x met file size as 0 !!! ");
585728,1199775744,0,0,PS1,UICC,ExecuteUiccUpdateBinaryCommand_1,P_WARNING,swLogPrintf("Abnormal SW: %x is returned when UPDATE BINARY CMD execute ");
585728,1199778048,0,0,PS1,UICC,ExecuteUiccUpdateBinaryCommand_2,P_INFO,swLogPrintf("Abnormal EF Id: %x or cmdstatus: %d ");
585728,1199779840,0,0,PS1,UICC,ExecuteUiccReadRecordCommand_0,P_ERROR,swLogPrintf("EF %x met file record length as 0 ");
585728,1199781888,0,0,PS1,UICC,ExecuteUiccReadRecordCommand_1,P_WARNING,swLogPrintf("Abnormal SW: %x is returned when READ RECORD CMD execute ");
585728,1199784192,0,0,PS1,UICC,ExecuteUiccReadRecordCommand_2,P_INFO,swLogPrintf("Abnormal EF Id: %x or cmdstatus: %d ");
585728,1199785984,0,0,PS1,UICC,ExecuteUiccUpdateRecordCommand_1,P_WARNING,swLogPrintf("Abnormal SW: %x is returned when UPDATE RECORD CMD execute ");
585728,1199788288,0,0,PS1,UICC,ExecuteUiccUpdateRecordCommand_2,P_INFO,swLogPrintf("Abnormal EF Id: %x or cmdstatus: %d ");
585728,1199790080,0,0,PS1,UICC,ExecuteUiccSearchRecordCommand_0,P_ERROR,swLogPrintf("EF %x met file record length as 0 ");
585728,1199792128,0,0,PS1,UICC,ExecuteUiccSearchRecordCommand_1,P_VALUE,swLogPrintf("Abnormal statusWords: %x is returned ");
585728,1199794432,0,0,PS1,UICC,ExecuteUiccSearchRecordCommand_2,P_INFO,swLogPrintf("Abnormal EF Id: %x or cmdstatus: %d ");
585728,1199796480,0,0,PS1,UICC,ExecuteUiccAuthenticateCommand_0,P_INFO,swLogPrintf("Current directory %x is not USIM ADF , adfUsimId %x ");
585728,1199800319,0,0,PS1,UICC,ExecuteUiccAuthenticateCommand_1,P_WARNING,swLogPrintf("SYNC failure!!! ");
585728,1199802367,0,0,PS1,UICC,ExecuteUiccAuthenticateCommand_2,P_WARNING,swLogPrintf("Unknown response data!! ");
585728,1199802368,0,0,PS1,UICC,ExecuteUiccAuthenticateCommand_3,P_WARNING,swLogPrintf("Abnormal SW: %x returned ");
585728,1199804416,0,0,PS1,UICC,ExecuteSuspendUiccCommand_1,P_WARNING,swLogPrintf("Abnormal SW: %x is returned. ");
585728,1199806464,0,0,PS1,UICC,ExecuteUiccManageChannelCommand_1,P_WARNING,swLogPrintf("Abnormal SW: %x is returned. ");
585728,1199808512,0,0,PS1,UICC,ExecuteUiccGenAccessCommand_1,P_INFO,swLogPrintf("Abnormal cmdStatus %d ");
585728,1199810816,0,0,PS1,UICC,ExecuteUiccGenLogicalChAccessCommand_1,P_INFO,swLogPrintf("Abnormal cmdStatus: %x , SW: %x ");
585728,1199812608,0,0,PS1,UICC,ExecuteUiccTerminalProfileCommand_1,P_WARNING,swLogPrintf("Abnormal SW: %x is returned ");
585728,1199814656,0,0,PS1,UICC,ExecuteUiccFetchCommand_1,P_WARNING,swLogPrintf("Abnormal SW: %x is returned. ");
585728,1199818751,0,0,PS1,UICC,ReceiveUiccDrvSignal_1,P_WARNING,swLogPrintf("Uicc clock stop timer has already been stopped! ");
585728,1199820799,0,0,PS1,UICC,ReceiveUiccDrvSignal_2,P_ERROR,swLogPrintf("Uicc polling and presence detect timer has already been stopped! ");
585728,1199822847,0,0,PS1,UICC,ReceiveUiccDrvSignal_3,P_ERROR,swLogPrintf("Uicc wait response timer has already been stopped! ");
585728,1199824895,0,0,PS1,UICC,ReceiveUiccDrvSignal_4,P_ERROR,swLogPrintf("Uicc waitting response timer expired , try recovery ");
585728,1199824896,0,0,PS1,UICC,TransceiveUiccCtrlDrvCmdRsp_1,P_WARNING,swLogPrintf("Uiccctrl cmdStatus: %x , set uicc recovery flag ");
585728,1199828991,0,0,PS1,UICC,TransceiveUiccCtrlDrvCmdRsp_2,P_WARNING,swLogPrintf("Destory CARD_INSERTED_IND for reset frequency ");
585728,1199828992,0,0,PS1,UICC,TransceiveUiccCtrlDrvCmdRsp_3,P_WARNING,swLogPrintf("unexpected signal 0x%x recvd here ");
585728,1199833087,0,0,PS1,UICC,TransceiveUiccCtrlDrvCmdRsp_4,P_INFO,swLogPrintf("Change uicc state to init as unexpected card removed Ind recved ");
585728,1199833088,0,0,PS1,UICC,UiccCtrlClearUiccDrvSignal_1,P_VALUE,swLogPrintf("destroy drv signal %x ");
585728,1199837183,0,0,PS1,UICC,DecodeDialNumberParams_1,P_INFO,swLogPrintf("All data is unused bytes FF , no valid dial number ");
585728,1199839231,0,0,PS1,UICC,DecodeDialNumberParams_2,P_INFO,swLogPrintf("All alphaId is unused bytes FF ");
585728,1199841279,0,0,PS1,UICC,DecodeDialNumberParams_3,P_INFO,swLogPrintf("All dialling number is unused bytes FF ");
585728,1199841280,0,0,PS1,UICC,ReadUiccMaxPowerConsumption_1,P_INFO,swLogPrintf("Uicc suspension procedure supported flag: %d ");
585728,1199845375,0,0,PS1,UICC,ReadEpsNscInfo_1,P_WARNING,swLogPrintf("Usim service num_85 ( EMM Info ) is not available ");
585728,1199845376,0,0,PS1,UICC,ReadEpsNscInfo_2,P_INFO,swLogPrintf("Reset command status when read EpsNscInfo cmdstatus: %d ");
585728,1199849471,0,0,PS1,UICC,ReadLoci_0,P_WARNING,swLogPrintf("MCC / MNC check failed as not digit ");
585728,1199849472,0,0,PS1,UICC,ReadLoci_1,P_INFO,swLogPrintf("Reset command status: %d as ok. ");
585728,1199853567,0,0,PS1,UICC,ReadEpsLoci_1,P_WARNING,swLogPrintf("Usim service num_85 ( EMM Info ) is not available ");
585728,1199855615,0,0,PS1,UICC,ReadEpsLoci_check_guti,P_WARNING,swLogPrintf("GUTI MCC / MNC check failed as not digit ");
585728,1199857663,0,0,PS1,UICC,ReadEpsLoci_check_TAI,P_WARNING,swLogPrintf("GUTI MCC / MNC check failed as not digit ");
585728,1199857664,0,0,PS1,UICC,ReadEpsLoci_2,P_INFO,swLogPrintf("Reset command status: %d as ok. ");
585728,1199859968,0,0,PS1,UICC,ReadAccessCtrlInfo_1,P_INFO,swLogPrintf("Read EF_ACC with SW: 0x%x cmdStatus: %d ");
585728,1199861760,0,0,PS1,UICC,ReadAccessCtrlInfo_2,P_WARNING,swLogPrintf("cmdStatus: %d incorrect can not Read EF_ACC ");
585728,1199863808,0,0,PS1,UICC,ReadLrPlmnsi_1,P_INFO,swLogPrintf("Reset command status: %d to ok ");
585728,1199865856,0,0,PS1,UICC,ReadHpplmnSearchPeriod_1,P_INFO,swLogPrintf("Reset command status: %d to ok ");
585728,1199868672,0,0,PS1,UICC,ReadPlmnData_3,P_INFO,swLogPrintf("UICC READ DATA status: %d , totalEntries: %d , numValidEntries: %d , startFieldNum: %d ");
585728,1199869952,0,0,PS1,UICC,ReadPlmnData_1,P_ERROR,swLogPrintf("Service table for ( PlmnFileId: %x ) is not available ");
585728,1199872000,0,0,PS1,UICC,ReadNasConfigParams_1,P_INFO,swLogPrintf("Reset command status: %d to ok ");
585728,1199874048,0,0,PS1,UICC,ReadKeysPs_1,P_WARNING,swLogPrintf("Read EFkeyPS failed , cmdstatus: %d , ignore it.. , ");
585728,1199878143,0,0,PS1,UICC,ReadSmspReq_1,P_WARNING,swLogPrintf("UST for EFSmsp is not available ");
585728,1199878400,0,0,PS1,UICC,ReadSmspReq_2,P_WARNING,swLogPrintf("Record error , read record number: %d , all file records: %d ");
585728,1199882239,0,0,PS1,UICC,ReadSmssReq_1,P_WARNING,swLogPrintf("UST for EFSmss is not available ");
585728,1199884287,0,0,PS1,UICC,ReadSmReq_1,P_WARNING,swLogPrintf("UST for EFSms is not available ");
585728,1199884544,0,0,PS1,UICC,ReadSmReq_2,P_INFO,swLogPrintf("requested status %d mismatch with response status %d ");
585728,1199886592,0,0,PS1,UICC,ReadSmReq_3,P_WARNING,swLogPrintf("Record error , read record number: %d , all file records: %d ");
585728,1199890431,0,0,PS1,UICC,GetSmsRecordNumsReq_1,P_WARNING,swLogPrintf("UST for EFsms is not available ");
585728,1199892479,0,0,PS1,UICC,ReadMsisdnReq_1,P_WARNING,swLogPrintf("USIM service table of EFmsisdn is not available ");
585728,1199892736,0,0,PS1,UICC,ReadMsisdnReq_2,P_WARNING,swLogPrintf("Record error , read record number: %d , all file records: %d ");
585728,1199894528,0,0,PS1,UICC,UpdateUserPlmnActReq_1,P_WARNING,swLogPrintf("No free location , offset %d file size ");
585728,1199898623,0,0,PS1,UICC,UpdateUserPlmnActReq_2,P_WARNING,swLogPrintf("EFplmnwAcT is not available in UST ");
585728,1199900671,0,0,PS1,UICC,UpdateEpsLociReq_1,P_WARNING,swLogPrintf("Usim service num_85 ( EMM Info ) is not available ");
585728,1199902719,0,0,PS1,UICC,UpdateEpsNscReq_1,P_WARNING,swLogPrintf("Usim service num_85 ( EMM Info ) is not available ");
585728,1199904767,0,0,PS1,UICC,UpdateSmspReq_0,P_WARNING,swLogPrintf("UST for EFSmsp is not available ");
585728,1199906815,0,0,PS1,UICC,UpdateSmssReq_0,P_WARNING,swLogPrintf("UST for EFSmss is not available ");
585728,1199908863,0,0,PS1,UICC,WriteSmReq_0,P_WARNING,swLogPrintf("UST for EFSms is not available ");
585728,1199910911,0,0,PS1,UICC,WriteSmReq_1,P_INFO,swLogPrintf("No free space found ");
585728,1199912959,0,0,PS1,UICC,DeleteSmReq_0,P_WARNING,swLogPrintf("UST for EFSms is not available ");
585728,1199913216,0,0,PS1,UICC,DeleteSmReq_1,P_INFO,swLogPrintf("requested status %d mismatch with response status %d , do nothing ");
585728,1199915776,0,0,PS1,UICC,UsatGetCurrentTimerValue_0,P_INFO,swLogPrintf("timerId %d currTicksCount %d usatStartTimerTicks %d uiccCtrlData timerPeriod %d ");
585728,1199917056,0,0,PS1,UICC,UsatGetCurrentTimerValue_1,P_INFO,swLogPrintf("timerId %d not start ");
585728,1199919104,0,0,PS1,UICC,UsatDeactiveTimer_1,P_INFO,swLogPrintf("timerId %d not start ");
585728,1199921152,0,0,PS1,UICC,UsatDecBearDescription_0,P_ERROR,swLogPrintf("Unsupport bearerType %x ");
585728,1199925247,0,0,PS1,UICC,UsatEncCommandResult_0,P_ERROR,swLogPrintf("additInfoData is PNULL while additInfoLen is not 0 ! Ignore it! ");
585728,1199925760,0,0,PS1,UICC,UsatEncDateTimeZone_0,P_INFO,swLogPrintf("utcTimePtr->UTCtimer1 , %d / %d / %d ");
585728,1199928064,0,0,PS1,UICC,UsatEncDateTimeZone_1,P_INFO,swLogPrintf("utcTimePtr->UTCtimer2 , %d:%d:%d+%d ");
585728,1199929344,0,0,PS1,UICC,UsatEncImeiSv_0,P_VALUE,swLogPrintf("unknown Id type %d ");
585728,1199931392,0,0,PS1,UICC,UsatEncEventDownload_0,P_ERROR,swLogPrintf("Currently unsupport event: %x ");
585728,1199933440,0,0,PS1,UICC,UsatProcRefreshCmd_0,P_WARNING,swLogPrintf("Unsupport refresh type %x ");
585728,1199935488,0,0,PS1,UICC,UsatProcRefreshCmd_1,P_VALUE,swLogPrintf("FCN fileId %x ");
585728,1199937536,0,0,PS1,UICC,UsatProcRefreshCmd_2,P_VALUE,swLogPrintf("Current not support FCN fileId %x ");
585728,1199939584,0,0,PS1,UICC,UsatProcProvideLocalInfoCmd_0,P_ERROR,swLogPrintf("Unsupport qualifier ( %x ) of provide local info command ");
585728,1199941632,0,0,PS1,UICC,UsatProcOpenChannelCmd_0,P_ERROR,swLogPrintf("Unknown data field ( tag:%x ) on open channel proactive command! ");
585728,1199945727,0,0,PS1,UICC,UsatProcOpenChannelCmd_1,P_INFO,swLogPrintf("BIP session open ");
585728,1199945728,0,0,PS1,UICC,UsatProcReceiveDataCmd_0,P_ERROR,swLogPrintf("Unknown data field ( tag:%x ) on Receive data channel proactive command! ");
585728,1199947776,0,0,PS1,UICC,UsatProcSendDataCmd_0,P_ERROR,swLogPrintf("Unknown data field ( tag:%x ) on send data channel proactive command! ");
585728,1199951871,0,0,PS1,UICC,UsatProcTimerExpiration_1,P_INFO,swLogPrintf("finish usat timer expiration process ");
585728,1199952128,0,0,PS1,UICC,UiccCtrlHandleUsatFetchReq_0,P_WARNING,swLogPrintf("proactive command fetch failed as pendingFetch %d , isPoweringdown %d ");
585728,1199955967,0,0,PS1,UICC,UiccCtrlHandleUsatFetchReq_1,P_WARNING,swLogPrintf("Decode length field error , length is 0 ... ");
585728,1199955968,0,0,PS1,UICC,UiccCtrlHandleUsatFetchReq_2,P_VALUE,swLogPrintf("Fetched USAT proactive command type : 0x%x ");
585728,1199958016,0,0,PS1,UICC,UiccCtrlHandleUsatFetchReq_3,P_VALUE,swLogPrintf("USAT proactive command failed , usatcmdResult %d ");
585728,1199962111,0,0,PS1,UICC,UiccCtrlHandleSmsPpDownloadReq_1,P_WARNING,swLogPrintf("sms pp download in usim service table is disabled. ");
585728,1199964159,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_1,P_WARNING,swLogPrintf("mosms in usim service table is disabled. ");
585728,1199964160,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_2,P_INFO,swLogPrintf("response present or not ( %d ) for mo control envelop cmd ");
585728,1199968255,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_3,P_WARNING,swLogPrintf("sc address is not gotten from usat control cnf. ");
585728,1199970303,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_4,P_WARNING,swLogPrintf("dest address is not gotten from usat control cnf. ");
585728,1199972351,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_5,P_INFO,swLogPrintf("mo sms info present in resp data. ");
585728,1199974399,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_6,P_WARNING,swLogPrintf("mo sms info is not present in resp data. ");
585728,1199974400,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_7,P_WARNING,swLogPrintf("cmdResult for mo sms control is:%d ");
585728,1199978495,0,0,PS1,UICC,UiccCtrlHandleTeminateSessionReq_0,P_INFO,swLogPrintf("Ignor the error status for power down ");
585728,1199978752,0,0,PS1,UICC,UiccCtrlHandleTeminateSessionReq_1,P_INFO,swLogPrintf("Skip terminate USIM APP by select ADF for errorStateOccurred: %d or tsCause: %d ");
585728,1199980544,0,0,PS1,UICC,UiccCtrlHandlePinOperateReq_1,P_VALUE,swLogPrintf("Unsupport pinKeyReference %d ");
585728,1199982592,0,0,PS1,UICC,UiccCtrlHandleCcmReadDataReq_1,P_WARNING,swLogPrintf("Unsupported request item %d ");
585728,1199986687,0,0,PS1,UICC,UiccCtrlHandleCcmUpdateDataReq_1,P_ERROR,swLogPrintf("Unknown Update data Item !! ");
585728,1199986688,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_0,P_INFO,swLogPrintf("cannot process due to cmdstatus %d ");
585728,1199988992,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_1,P_VALUE,swLogPrintf("current EF: %x , current Generic access EF: %x ");
585728,1199990784,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_2,P_VALUE,swLogPrintf("SELECT 2 FXX by fileid , but current dir: %x ");
585728,1199992832,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_3,P_VALUE,swLogPrintf("saved current Generic access EF: %x ");
585728,1199995136,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_4,P_INFO,swLogPrintf("select path return SW %x%x ");
585728,1199997184,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_5,P_INFO,swLogPrintf("return data invalid , rspApduLen: %d , rspApdu: %x ");
585728,1200001023,0,0,PS1,UICC,UiccCtrlHandleSimSleepReq_0,P_SIG,swLogPrintf("not allow SIM sleep , send STATUS command to detect SIM ");
585728,1200003071,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_1,P_VALUE,swLogPrintf("operation not allowed by SWC disable ");
585728,1200005119,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_2,P_WARNING,swLogPrintf("pSwcList is NULL ");
585728,1200007167,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_3,P_VALUE,swLogPrintf("operation not allowed by SWC disable ");
585728,1200009215,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_4,P_WARNING,swLogPrintf("pSwcList is NULL ");
585728,1200009216,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_5,P_VALUE,swLogPrintf("unsupport write counter mode: %d ");
585728,1200011776,0,0,PS1,UICC,UiccCtrlHandleSetSimParamReq_0,P_VALUE,swLogPrintf("simSimuPresent %d , bSimSimulator %d , bUsimSimulator %d ");
585728,1200013824,0,0,PS1,UICC,UiccCtrlHandleSetSimParamReq_1,P_VALUE,swLogPrintf("simSimuPresent %d , bSimSimulator %d , bUsimSimulator %d ");
585728,1200017407,0,0,PS1,UICC,UiccCtrlHandleMmReadDataReq_1,P_ERROR,swLogPrintf("Unknown read data Item !! ");
585728,1200019455,0,0,PS1,UICC,UiccCtrlHandleMmWriteDataReq_1,P_ERROR,swLogPrintf("Unknown Update data Item !! \n ");
585728,1200019456,0,0,PS1,UICC,UiccCtrlHandleMmAuthReq_1,P_ERROR,swLogPrintf("Authentication error , SW: %x , will enter uicc recovery procedure! ");
585728,1200021760,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_0,P_ERROR,swLogPrintf("Cannot deactivate the uicc , suspension support: %x , PIN status: %x! ");
585728,1200024064,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_1,P_WARNING,swLogPrintf("Cannot deactivate the uicc , suspension support: %x , PIN status: %x , additional info: %x in EFad! ");
585728,1200027647,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_2,P_SIG,swLogPrintf("Leave PSM / EDRX , make uicc recovery ");
585728,1200027648,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_3,P_ERROR,swLogPrintf("Unknown type: %x! ");
585728,1200029952,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_4,P_INFO,swLogPrintf("Ignore it as pUiccCtrlTinyCtx->bSimPowerSave %d bSimSleep %d ");
585728,1200032000,0,0,PS1,UICC,SelectUiccApplication_1,P_WARNING,swLogPrintf("Activate APP returned %d ( 0 -FCI / 1 -FCP ) failed on logical channel %d ");
585728,1200033792,0,0,PS1,UICC,UiccctrlHandleOpenLogicalChannelReq_2,P_INFO,swLogPrintf("unsupport logical channel number %d , current only support standard logical channels 1 -3 ");
585728,1200036096,0,0,PS1,UICC,UiccCtrlHandleGenLogicalChAccessReq_0,P_INFO,swLogPrintf("logical channel access failed reqData->length %d , reqData->logicChNum %d ");
585728,1200038144,0,0,PS1,UICC,UiccCtrlHandleGenLogicalChAccessReq_1,P_INFO,swLogPrintf("logical channel access failed uiccCtrlData->state %d , uiccCtrlData->cmdStatus %d ");
585728,1200040192,0,0,PS1,UICC,UiccCtrlHandleGenLogicalChAccessReq_2,P_INFO,swLogPrintf("return data invalid , rspApduLen: %d , rspApdu: %x ");
585728,1200044031,0,0,PS1,UICC,UsimSimuAppInit_0,P_SIG,swLogPrintf("The Uicc initialized OK , send CemmSimAppReadyInd! The USIM is ready...... ");
585728,1200046079,0,0,PS1,UICC,UsimSimuProcCCMReadData_1,P_INFO,swLogPrintf("Unsupported request Item! ");
585728,1200048127,0,0,PS1,UICC,UsimSimuProcCEMMReadData_1,P_INFO,swLogPrintf("Unsupported request Item! ");
585728,1200048640,0,0,PS1,UICC,UsimSimuSetSimParamReq_0,P_VALUE,swLogPrintf("simSimuPresent %d , bSimSimulator %d , bUsimSimulator %d ");
585728,1200050688,0,0,PS1,UICC,UsimSimuSetSimParamReq_1,P_VALUE,swLogPrintf("simSimuPresent %d , bSimSimulator %d , bUsimSimulator %d ");
585728,1200054271,0,0,PS1,UICC,UsimSimulatorEntry_0,P_WARNING,swLogPrintf("Enter usim simulator / TEST SIM.... ");
585728,1200054784,0,0,PS1,UICC,UiccInterruptServiceRoutine_0,P_INFO,swLogPrintf("IIR: 0x%x , FSR:0x%x , LSR:0x%x ");
585728,1200056320,0,0,PS1,UICC,UiccHwCardReset_0,P_WARNING,swLogPrintf("Unknow voltage %d , set as default class C ");
586752,1201672191,0,0,PS1,UICC_DRV,Usim1ClkLatchByAONIO_weak,P_WARNING,swLogPrintf("weak function is unexpected! ");
586752,1201674239,0,0,PS1,UICC_DRV,Usim1GpioConfig_weak,P_WARNING,swLogPrintf("weak function is unexpected! ");
586752,1201674240,0,0,PS1,UICC_DRV,UiccDrvSendErrorIndication_0,P_INFO,swLogPrintf("UiccDrv ErrInd status %d ");
586752,1201678335,0,0,PS1,UICC_DRV,UiccDrvSleepPrepare_0,P_INFO,swLogPrintf("The uicc prepares to enter sleep1 mode ");
586752,1201678336,0,0,PS1,UICC_DRV,UiccDrvSleepPrepare_1,P_INFO,swLogPrintf("The uicc clock has already been stopped as uiccCardState %d ");
586752,1201682431,0,0,PS1,UICC_DRV,UiccDrvSleepPrepare_2,P_INFO,swLogPrintf("USIM CLK Is not Latched , latch it ");
586752,1201684479,0,0,PS1,UICC_DRV,UiccDrvSleepRecovery_0,P_INFO,swLogPrintf("The uicc recover from sleep1 mode ");
586752,1201684736,0,0,PS1,UICC_DRV,UiccPmuCheckDeepSleepAvail_0,P_INFO,swLogPrintf("pUiccDrvData->uiccCardState %d , lowPowerState %d ");
586752,1201688575,0,0,PS1,UICC_DRV,UiccDrvProcPmuDeepSlpDeactivate_0,P_INFO,swLogPrintf("Stop deactivate session since uicctrl vote not allowed for new request ");
586752,1201690623,0,0,PS1,UICC_DRV,UiccDrvProcPmuDeepSlpDeactivate_1,P_INFO,swLogPrintf("Terminate UICC since PS all vote hibernate / sleep ");
586752,1201692671,0,0,PS1,UICC_DRV,UiccDrvProcPmuDeepSlpDeactivate_2,P_INFO,swLogPrintf("The uicc has already been deactivated , nothing to do... ");
586752,1201694719,0,0,PS1,UICC_DRV,UiccDrvPmuDeepSlpEnterCallBack_1,P_WARNING,swLogPrintf("Miss UICC deativation! power off immediately ");
586752,1201694720,0,0,PS1,UICC_DRV,UiccDrvPmuDeepSlpEnterCallBack_2,P_SIG,swLogPrintf("Uicc , prepare to enter: %d , HIB ( 4 ) / SLEEP2 ( 3 ) state ");
586752,1201698815,0,0,PS1,UICC_DRV,UiccDrvTerminateTaskWait_0,P_WARNING,swLogPrintf("Terminate uiccdrv task wait ");
586752,1201698816,0,0,PS1,UICC_DRV,UiccDrvTerminateTaskWait_1,P_WARNING,swLogPrintf("uiccdrv task wait flag set result %d ");
586752,1201702911,0,0,PS1,UICC_DRV,UiccReset_softsim,P_VALUE,swLogPrintf("No ATR recvd from softsim ");
586752,1201703168,0,0,PS1,UICC_DRV,UiccDrvHandleDeActivation_0,P_INFO,swLogPrintf("uiccCardState: %x , start to deactivate the uicc card , send remove Ind: %d ");
586752,1201704960,0,0,PS1,UICC_DRV,UiccDecodeATRContent_2,P_VALUE,swLogPrintf("ATR length %d is wrong ");
586752,1201709055,0,0,PS1,UICC_DRV,UiccDecodeATRContent_3,P_WARNING,swLogPrintf("clock stop indicated on HIGH ");
586752,1201709056,0,0,PS1,UICC_DRV,UiccPPSProcedure_3,P_VALUE,swLogPrintf("PPS procedure failed , rs:%d ");
586752,1201713151,0,0,PS1,UICC_DRV,UiccDrvRestartCardClock_0,P_INFO,swLogPrintf("The uicc clock has not been stopped , nothing to do.. ");
586752,1201715199,0,0,PS1,UICC_DRV,UiccDrvRestartCardClock_2,P_INFO,swLogPrintf("USIM CLK is latched , release it ");
586752,1201717247,0,0,PS1,UICC_DRV,UiccDrvRestartCardClock_1,P_WARNING,swLogPrintf("Clock start failed on busy state of UCR_REG! ");
586752,1201719295,0,0,PS1,UICC_DRV,UiccDrvStopCardClock_1,P_INFO,swLogPrintf("The uicc clock has already been stopped ");
586752,1201721343,0,0,PS1,UICC_DRV,UiccDrvHandleClockStopReq_2,P_WARNING,swLogPrintf("Clock stop failed on busy state of UCR_REG... ");
586752,1201723391,0,0,PS1,UICC_DRV,UiccInitCommEst_00,P_INFO,swLogPrintf("The card support class A_B , change to 3 v and reset ");
586752,1201725439,0,0,PS1,UICC_DRV,UiccInitCommEst_0,P_INFO,swLogPrintf("ATR anlyze ok ");
586752,1201727487,0,0,PS1,UICC_DRV,UiccInitCommEst_atr,P_WARNING,swLogPrintf("ATR decode error ");
586752,1201729535,0,0,PS1,UICC_DRV,UiccInitCommEst_ATR_TIMEOUT_TERMINATE,P_INFO,swLogPrintf("Terminate the initial communication ");
586752,1201729792,0,0,PS1,UICC_DRV,UiccInitCommEst_convention_before,P_INFO,swLogPrintf("curr LCR: 0x%x , RBR: 0x%x ");
586752,1201731584,0,0,PS1,UICC_DRV,UiccInitCommEst_convention_after,P_INFO,swLogPrintf("set LCR 0x%x ");
586752,1201735679,0,0,PS1,UICC_DRV,UiccInitCommEst_try_3v,P_INFO,swLogPrintf("no ATR recvd on class_C_1_8v , reset UICC with 3 v ");
586752,1201737727,0,0,PS1,UICC_DRV,UiccInitCommEst_tryMinClck,P_INFO,swLogPrintf("try minclock for UICC ");
586752,1201739775,0,0,PS1,UICC_DRV,UiccInitCommEst_1,P_ERROR,swLogPrintf("no ATR recvd on class_C_1_8V and class_B_3v , UICC detection failed ");
586752,1201741823,0,0,PS1,UICC_DRV,UiccInitCommEst_2,P_ERROR,swLogPrintf("ATR error for reset 3 times on class_B_3v , UICC activation failed ");
586752,1201743871,0,0,PS1,UICC_DRV,UiccInitCommEst_3,P_INFO,swLogPrintf("PPS done ");
586752,1201745919,0,0,PS1,UICC_DRV,UiccInitCommEst_PPS_TIMEOUT_TERMINATE,P_INFO,swLogPrintf("Terminate the initial communication ");
586752,1201745920,0,0,PS1,UICC_DRV,UiccInitCommEst_4,P_VALUE,swLogPrintf("The ta1:0x%x is invalid or unsupported , set default value ");
586752,1201750015,0,0,PS1,UICC_DRV,UiccInitCommEst_configMinClck,P_VALUE,swLogPrintf("configure minclock for PPS ");
586752,1201752063,0,0,PS1,UICC_DRV,UiccInitCommEst_T1_init,P_VALUE,swLogPrintf("T1 initiate ");
586752,1201754111,0,0,PS1,UICC_DRV,UiccDrvStartCardInit_1,P_VALUE,swLogPrintf("USIM1 starts init ");
586752,1201756159,0,0,PS1,UICC_DRV,UiccDriverInit_1,P_INFO,swLogPrintf("Uiccdrv task starts init... ");
586752,1201756160,0,0,PS1,UICC_DRV,UiccDriverTaskEntry_1,P_ERROR,swLogPrintf("Uicc driver received unexpected signal: %x! ");
586752,1201760255,0,0,PS1,UICC_DRV,UiccDllHandleProcedureByte_3,P_INFO,swLogPrintf("No data recvd ");
586752,1201760256,0,0,PS1,UICC_DRV,UiccDllHandleProcedureByte_4,P_INFO,swLogPrintf("Rx procedure byte:%x ");
586752,1201762304,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_0,P_VALUE,swLogPrintf("gUiccWtCnt:0x%x ");
586752,1201764608,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_1,P_VALUE,swLogPrintf("WTR:0x%x , EWTR:0x%x ");
586752,1201768447,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_setbr,P_WARNING,swLogPrintf("Set baud rate divisior failed ");
586752,1201768704,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_2,P_VALUE,swLogPrintf("WTR:0x%x , EWTR:0x%x ");
586752,1201772543,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_3,P_VALUE,swLogPrintf("core is not idle , CWT / BWT maybe not trigger again ");
586752,1201772544,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_0,P_VALUE,swLogPrintf("gUiccWtCnt:0x%x ");
586752,1201774848,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_1,P_VALUE,swLogPrintf("WTR:0x%x , EWTR:0x%x ");
586752,1201778687,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_setbr,P_WARNING,swLogPrintf("Set baud rate divisior failed ");
586752,1201778944,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_2,P_VALUE,swLogPrintf("WTR:0x%x , EWTR:0x%x ");
586752,1201782783,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_3,P_VALUE,swLogPrintf("core is not idle , CWT / BWT maybe not trigger again ");
586752,1201784831,0,0,PS1,UICC_DRV,UiccDllReceiveHandler_0,P_VALUE,swLogPrintf("BWT expired and enable BWT IRQ again ");
586752,1201786879,0,0,PS1,UICC_DRV,UiccDllReceiveHandler_cwt,P_VALUE,swLogPrintf("CWT expired and enable CWT IRQ again ");
586752,1201788927,0,0,PS1,UICC_DRV,UiccDllSendHandler_0,P_ERROR,swLogPrintf("The TX error interrupt occurred... ");
586752,1201790975,0,0,PS1,UICC_DRV,UiccDllSendHandler_1,P_ERROR,swLogPrintf("The TX fifo don ' t have enough space , wait for the next interrupt. ");
586752,1201790976,0,0,PS1,UICC_DRV,UiccDllSendHandler_5,P_VALUE,swLogPrintf("Enable UICC DMA RX , expected data length: %d ");
586752,1201794048,0,0,PS1,UICC_DRV,UiccDllSendHandler_DEBUG,P_INFO,swLogPrintf("FCR 0x%x , TOR 0x%x , IIR 0x%x , FSR 0x%x , DCR 0x%x ");
586752,1201795584,0,0,PS1,UICC_DRV,UiccDllHandleDmaRx_1,P_INFO,swLogPrintf("Uicc DMA expected data length %d , actual recvd data length %d , DCR 0x%x ");
586752,1201797376,0,0,PS1,UICC_DRV,UiccDllHandleDmaRx_1_debug,P_INFO,swLogPrintf("CGR 0x%x , DCR 0x%x ");
586752,1201799168,0,0,PS1,UICC_DRV,UiccDllHandleDmaRx_3,P_INFO,swLogPrintf("recv the remianing %d bytes by IRQ ");
586752,1201803263,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_0,P_ERROR,swLogPrintf("The DMA TX in busy state... ");
586752,1201803264,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_1,P_INFO,swLogPrintf("TX DMA trans length %d ");
586752,1201807359,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_terminate,P_INFO,swLogPrintf("Get terminate flag by no response timer expired. ");
586752,1201807360,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_3,P_ERROR,swLogPrintf("Unexpected task wait flag:0x%x... ");
586752,1201809664,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_apdusize,P_VALUE,swLogPrintf("recv length %d is more than APDU size %d ");
586752,1201813503,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_4,P_INFO,swLogPrintf("Rx error! ");
586752,1201813760,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_5,P_INFO,swLogPrintf("send & recv abnormal , uiccDlState:%d , uiccParityErrCnt:%d ");
586752,1201815552,0,0,PS1,UICC_DRV,UiccDllDecodeT1SBlock_0,P_WARNING,swLogPrintf("Unknown S-Block type ( 0x%x ) ! ");
586752,1201819647,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_0,P_ERROR,swLogPrintf("Decode error! ");
586752,1201821695,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_1,P_INFO,swLogPrintf("I-block! ");
586752,1201823743,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_2,P_INFO,swLogPrintf("R-block! ");
586752,1201825791,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_3,P_INFO,swLogPrintf("S-block! ");
586752,1201825792,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_4,P_ERROR,swLogPrintf("Error: unknown block type ( %x ) !!! ");
586752,1201829887,0,0,PS1,UICC_DRV,UiccHwConfigCardClckReq_2,P_WARNING,swLogPrintf("Uicc Clock register change busy!!! ");
586752,1201831935,0,0,PS1,UICC_DRV,UiccHwSetClockDivisior_1,P_WARNING,swLogPrintf("Uicc Clock register change busy!!! ");
586752,1201833983,0,0,PS1,UICC_DRV,UiccHwConfigureBaudRate_2,P_WARNING,swLogPrintf("Uicc baud rate register change busy!!! ");
586752,1201836031,0,0,PS1,UICC_DRV,UiccHwConfigureBaudRate_3,P_WARNING,swLogPrintf("Uicc baud rate register change busy!!! ");
586752,1201838079,0,0,PS1,UICC_DRV,UiccHwCardReset_1,P_VALUE,swLogPrintf("USIM CLK is latched , release it ");
586752,1201840127,0,0,PS1,UICC_DRV,UiccHwCheckInteAbnormalStatus_1,P_ERROR,swLogPrintf("Unknown interrupt occurred!!! ");
586752,1201840128,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_test1,P_VALUE,swLogPrintf("atrInfo->clkStopInd %d ");
586752,1201844223,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_0,P_ERROR,swLogPrintf("Uicc Clock Register is on change busy state! ");
586752,1201846271,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_stopclck,P_WARNING,swLogPrintf("Clock stop failed on busy state of UCR_REG... ");
586752,1201848319,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_1,P_ERROR,swLogPrintf("Set clock divisior failed!! ");
586752,1201850367,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_startclck,P_WARNING,swLogPrintf("Clock start failed on busy state of UCR_REG! ");
586752,1201852415,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_2,P_ERROR,swLogPrintf("Set baud rate divisior failed!! ");
586752,1201852672,0,0,PS1,UICC_DRV,UiccTransLayerHandleCmdCase12_softsim_2,P_VALUE,swLogPrintf("delete INS byte %x , rspDataLen %d ");
586752,1201856511,0,0,PS1,UICC_DRV,UiccTransLayerHandleCmdCase12_2,P_VALUE,swLogPrintf("Rx error! ");
586752,1201856768,0,0,PS1,UICC_DRV,UiccTransLayerHandleCmdCase34_3,P_VALUE,swLogPrintf("Rx data Len:%d , cmdHeader->lc:%d ");
586752,1201860607,0,0,PS1,UICC_DRV,UiccTransLayerHandleCmdCase34_6,P_VALUE,swLogPrintf("Rx error! ");
586752,1201860864,0,0,PS1,UICC_DRV,UiccTransLayerHandleT0Cmd_buffer,P_INFO,swLogPrintf("bLargeApdu %d , Rx buffer offset %d , stop it ");
586752,1201862912,0,0,PS1,UICC_DRV,UiccTransLayerHandleT0Cmd_1,P_INFO,swLogPrintf("Non-procedure bytes %x %x ");
586752,1201864704,0,0,PS1,UICC_DRV,UiccTransLayerHandleT0Cmd_2,P_INFO,swLogPrintf("removed procedure bytes in buffer , offset %d ");
586752,1201868799,0,0,PS1,UICC_DRV,UiccVerifyTerminateSessionCase_begin,P_SIG,swLogPrintf("The uicc verify terminate card ");
586752,1201870847,0,0,PS1,UICC_DRV,UiccVerifyTerminateSessionCase_0,P_INFO,swLogPrintf("The uicc has already been deactivated , nothing to do ");
586752,1201872895,0,0,PS1,UICC_DRV,UiccVerifyTerminateSessionCase_end1,P_SIG,swLogPrintf("The uicc verify terminate card ok ");
586752,1201874943,0,0,PS1,UICC_DRV,UiccVerifyTerminateSessionCase_end2,P_SIG,swLogPrintf("The uicc verify terminate card fail ");
586752,1201876991,0,0,PS1,UICC_DRV,UiccVerifyOtherSimAccessCase_0,P_SIG,swLogPrintf("Uicc verify USIM Access case: Authenticate / read_write SMS ");
586752,1201879039,0,0,PS1,UICC_DRV,UiccVerifyOtherSimAccessCase_end1,P_SIG,swLogPrintf("Uicc verify USIM Access case: Authenticate / read_write SMS ok ");
586752,1201881087,0,0,PS1,UICC_DRV,UiccVerifyOtherSimAccessCase_end2,P_SIG,swLogPrintf("Uicc verify USIM Access case: Authenticate / read_write SMS fail ");
586752,1201883135,0,0,PS1,UICC_DRV,UiccVerifyUsimAppInitCase_0,P_SIG,swLogPrintf("Uicc verify USIM application initalization ");
586752,1201885183,0,0,PS1,UICC_DRV,UiccVerifyUsimAppInitCase_end1,P_SIG,swLogPrintf("Uicc verify USIM application initalization ok ");
586752,1201887231,0,0,PS1,UICC_DRV,UiccVerifyUsimAppInitCase_end2,P_SIG,swLogPrintf("Uicc verify USIM application initalization fail ");
586752,1201889279,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_0,P_SIG,swLogPrintf("Uicc verify initial communication establishment case start... ");
586752,1201891327,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_1,P_INFO,swLogPrintf("Cold reset and Wait for ATR ");
586752,1201893375,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_2,P_SIG,swLogPrintf("ATR ok ");
586752,1201895423,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_3,P_SIG,swLogPrintf("PPS done ");
586752,1201897471,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_4,P_SIG,swLogPrintf("PPS failed ");
586752,1201899519,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_5,P_SIG,swLogPrintf("ATR fail ");
586752,1201901567,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_6,P_SIG,swLogPrintf("Uicc initial communication establishment ok ");
586752,1201903615,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_7,P_SIG,swLogPrintf("Uicc initial communication establishment failed ");
586752,1201905663,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_0,P_SIG,swLogPrintf("Uicc verify warm reset case ");
586752,1201907711,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_1,P_SIG,swLogPrintf("ATR ok ");
586752,1201909759,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_2,P_SIG,swLogPrintf("PPS done ");
586752,1201911807,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_3,P_SIG,swLogPrintf("PPS failed ");
586752,1201913855,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_4,P_SIG,swLogPrintf("ATR fail ");
586752,1201915903,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_5,P_SIG,swLogPrintf("Uicc verify warm reset OK ");
586752,1201917951,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_6,P_SIG,swLogPrintf("Uicc verify warm reset failed ");
586752,1201919999,0,0,PS1,UICC_DRV,UiccVerifyClockOffOnCase_0,P_SIG,swLogPrintf("Uicc verify Clock Off / On ");
586752,1201922047,0,0,PS1,UICC_DRV,UiccVerifyClockOffOnCase_1,P_SIG,swLogPrintf("Uicc verify Clock Off / On case pass ");
586752,1201924095,0,0,PS1,UICC_DRV,UiccVerifyInit_0,P_SIG,swLogPrintf("Uicc start init... ");
586752,1201926143,0,0,PS1,UICC_DRV,UiccVerifyEntry_0,P_SIG,swLogPrintf("USIM FPGA verify start... ");
586752,1201928191,0,0,PS1,UICC_DRV,UiccVerifyEntry_1,P_SIG,swLogPrintf("Uicc verify all Pass... ");
586752,1201930239,0,0,PS1,UICC_DRV,UiccVerifyEntry_2,P_SIG,swLogPrintf("Uicc verify failed... ");
586752,1201932287,0,0,PS1,UICC_DRV,UiccVerifyEntry_3,P_SIG,swLogPrintf("test end ");
595968,1220544512,0,0,PS1,CCM,CcmInit_w_1,P_WARNING,swLogPrintf("CCM , sigId: 0x%x , should be enqueue before CerrcCcmInitConfigCnf ");
595968,1220546560,0,0,PS1,CCM,CcmPmuDeepSlpEnterCallBack_1,P_SIG,swLogPrintf("CCM , prepare to enter: %d , HIB ( 4 ) / SLEEP2 ( 3 ) state ");
595968,1220550144,0,0,PS1,CCM,CcmSetSetExtCfgReq_new_1,P_VALUE,swLogPrintf("Set extended CFG , bRohc: %d , bIpv6RsForTestSim: %d , bTcpTptOpt: %d ipv6GetPrefixTime: %d , bEnablePsSoftReset %d , bEnableDataCounter %d , emergencyCamp %d ");
595968,1220552703,0,0,PS1,CCM,CcmTaskEntry_1,P_VALUE,swLogPrintf("CCM allow to enter HIB state ");
595968,1220554751,0,0,PS1,CCM,CcmTaskEntry_2,P_VALUE,swLogPrintf("CCM allow to enter SLEEP2 state ");
595968,1220556799,0,0,PS1,CCM,CcmTaskEntry_3,P_VALUE,swLogPrintf("CCM not allow to enter HIB state ");
595968,1220558847,0,0,PS1,CCM,CcmTaskEntry_4,P_VALUE,swLogPrintf("CCM not allow to enter SLEEP2 state ");
596992,1222641920,0,0,PS1,CCM_REG,CcmRegTriggeredRegProcCnf_1,P_WARNING,swLogPrintf("CCM REG , SIM not ready: %d , or not CFUN1 state: %d , can ' t proc pending attach REQ ");
596992,1222643712,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_1,P_WARNING,swLogPrintf("CCM REG , invalid request REG PROC: %d ");
596992,1222645760,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_2,P_WARNING,swLogPrintf("CCM REG , ongoing proc: %d , abort current proc , try to power off! ");
596992,1222648064,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_3,P_WARNING,swLogPrintf("CCM REG , proc cfun0 , but ongoing REG proc: %d , pending REG proc: %d , abort pending proc ");
596992,1222650368,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_4,P_WARNING,swLogPrintf("CCM REG , ongoing REG proc: %d , pending REG proc: %d , can ' t process new proc: %d ");
596992,1222651904,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_5,P_WARNING,swLogPrintf("CCM REG , pending PROC: %d ");
596992,1222655999,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_6,P_WARNING,swLogPrintf("CCM REG , CEMM already under REG procedure , don ' t need to trigger again ");
596992,1222658047,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_7,P_WARNING,swLogPrintf("CCM REG , CEMM already under DEACT procedure , don ' t need to trigger again ");
596992,1222660095,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_8,P_WARNING,swLogPrintf("CCM REG , CEMM already under DEREG procedure , don ' t need to trigger again ");
596992,1222662143,0,0,PS1,CCM_REG,CcmRegProcedureOut_1,P_INFO,swLogPrintf("CCM REG , all procedure done ");
596992,1222662144,0,0,PS1,CCM_REG,CcmRegCheckPendingRegProc_1,P_INFO,swLogPrintf("CCM REG , process pending REG procedure: %d ");
596992,1222664448,0,0,PS1,CCM_REG,CcmRegCheckPendingRegProc_2,P_WARNING,swLogPrintf("CCM REG , SIM not ready: %d , or not CFUN1 state: %d , can ' t proc pending attach REQ ");
596992,1222668287,0,0,PS1,CCM_REG,CcmRegProcCemmrRegCnfSig_1,P_WARNING,swLogPrintf("CCM REG , no REG procedure is ongoing when receive: SIG_CEMMR_REG_CNF ");
596992,1222668288,0,0,PS1,CCM_REG,CcmRegProcCemmrRegCnfSig_2,P_WARNING,swLogPrintf("CCM REG , CemmrReg confirm failed: %d ");
596992,1222672383,0,0,PS1,CCM_REG,CcmRegProcCemmrDeregCnfSig_1,P_WARNING,swLogPrintf("CCM REG , no DEREG procedure is ongoing when receive: SIG_CEMMR_DEREG_CNF ");
596992,1222674431,0,0,PS1,CCM_REG,CcmRegProcCemmrDeregCnfSig_2,P_WARNING,swLogPrintf("CCM REG , the detachType of pDeregCnf is inconsistent with detachType of ongoingReg , discard this msg! ");
596992,1222676479,0,0,PS1,CCM_REG,CcmRegProcCemmManualPlmnSearchCnfSig_1,P_INFO,swLogPrintf("CCM REG , manual PLMN search confirmed , need to stop the protection timer ");
596992,1222678527,0,0,PS1,CCM_REG,CcmRegProcCemmManualPlmnSearchCnfSig_2,P_WARNING,swLogPrintf("CCM REG , manual PLMN search confirmed , but no protection timer running , maybe confirmed before ");
596992,1222678528,0,0,PS1,CCM_REG,CcmRegProcCemmManualPlmnSearchCnfSig_3,P_WARNING,swLogPrintf("CCM REG , RC not succ ( %d ) in CemmManualPlmnSearchCnf ");
596992,1222682623,0,0,PS1,CCM_REG,CcmRegProcCemmManualPlmnSearchCnfSig_4,P_WARNING,swLogPrintf("CCM REG , no PLMN found in CemmManualPlmnSearchCnf ");
596992,1222682624,0,0,PS1,CCM_REG,CcmRegProcCemmAbortPlmnSearchCnfSig_1,P_WARNING,swLogPrintf("CCM REG , RC not succ ( %d ) in AbortPlmnSearchCnf ");
596992,1222686719,0,0,PS1,CCM_REG,CcmRegProcCemmAbortPlmnSearchCnfSig_2,P_WARNING,swLogPrintf("CCM REG , no PLMN found in AbortPlmnSearchCnf ");
596992,1222686720,0,0,PS1,CCM_REG,CcmRegProcCemmrOosPlmnSelectCnfSig_1,P_WARNING,swLogPrintf("CCM REG , RC not succ ( %d ) in CemmPlmnOosPlmnSelectCnf ");
596992,1222688768,0,0,PS1,CCM_REG,CcmRegProcCemmrDeRegIndSig_1,P_WARNING,swLogPrintf("Trigger slent reset %d time ");
596992,1222692863,0,0,PS1,CCM_REG,CcmRegProcCemmrDeRegIndSig_2,P_WARNING,swLogPrintf("Silent Reset reach max count! ");
596992,1222692864,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnSetBandFreqCnfSig_autocfg_1,P_WARNING,swLogPrintf("CCM REG , SET CIOT BAND CEMM confirm failed: %d ");
596992,1222694912,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnSetBandFreqCnfSig_1,P_WARNING,swLogPrintf("CCM REG , SET CIOT BAND CEMM confirm failed: %d ");
596992,1222696960,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnSetBandFreqCnfSig_2,P_WARNING,swLogPrintf("CCM REG , SET CIOT FREQ CEMM confirm failed: %d ");
596992,1222699264,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnGetBandFreqCnfSig_1,P_WARNING,swLogPrintf("CCM REG , can ' t get band / freq info type: %d , ret error: %d ");
596992,1222703103,0,0,PS1,CCM_REG,CcmRegProcManualPlmnSearchProtectTimerExpiry_1,P_ERROR,swLogPrintf("CCM REG , manual plmn protect timer expiry , but no such time info in CCM REG side ");
596992,1222705151,0,0,PS1,CCM_REG,CcmRegProcManualPlmnSearchProtectTimerExpiry_2,P_WARNING,swLogPrintf("CCM REG , manual PLMN search time expiry , need to abort the PLMN search ");
596992,1222705152,0,0,PS1,CCM_REG,CcmRegProcPoweronReqMsg_1,P_WARNING,swLogPrintf("CCM REG , CEMM UNDER REG state: %d , don ' t need to process CcmRegPoweronReq ");
596992,1222707200,0,0,PS1,CCM_REG,CcmRegProcPoweronReqMsg_2,P_WARNING,swLogPrintf("CCM REG , SIM not ready: %d , don ' t need to process CcmRegPoweronReq ");
596992,1222709248,0,0,PS1,CCM_REG,CcmRegProcPoweronReqMsg_3,P_INFO,swLogPrintf("CCM REG , SIM state is: %d ");
596992,1222711296,0,0,PS1,CCM_REG,CcmRegProcSimReadyIndMsg_1,P_WARNING,swLogPrintf("CCM REG , CEMM UNDER REG state: %d , don ' t need to process SimReadyInd ");
596992,1222713344,0,0,PS1,CCM_REG,CcmRegProcSimReadyIndMsg_2,P_WARNING,swLogPrintf("CCM REG , SIM ready , but not on power on state: %d ");
596992,1222717439,0,0,PS1,CCM_REG,CcmRegSetCiotFreqReq_1,P_WARNING,swLogPrintf("This command must be restricted to execute in the CFUN0 or CFUN4 state ");
596992,1222717696,0,0,PS1,CCM_REG,CcmRegAutoPlmnSelectReq_1,P_WARNING,swLogPrintf("CCM REG , SIM is not ready: %d or CFUN is not power on: %d , just pass the AUTO PLMN param to CEMM ");
596992,1222719744,0,0,PS1,CCM_REG,CcmRegManualPlmnSelectReq_1,P_WARNING,swLogPrintf("CCM REG , SIM is not ready: %d , or CFUN is not power on : %d , just pass MANUAL PLMN selection to CEMM ");
596992,1222721536,0,0,PS1,CCM_REG,CcmRegDeregReq_1,P_WARNING,swLogPrintf("CCM REG , can ' t process DEREG req ( COPS = 2 ) , as SIM is initing ( %d ) ");
596992,1222723584,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_1,P_WARNING,swLogPrintf("CCM REG , invalid / not suitable plmn select type: %d ");
596992,1222727679,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_2,P_ERROR,swLogPrintf("CCM REG , can ' t get PLMN long name , not support now ");
596992,1222729727,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_3,P_ERROR,swLogPrintf("CCM REG , can ' t get PLMN short name , not support now ");
596992,1222729728,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_4,P_WARNING,swLogPrintf("CCM REG , plmn select state: %d ");
596992,1222731776,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_5,P_WARNING,swLogPrintf("CCM REG , regStaticCtx.plmnValid: %d ");
596992,1222733824,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_6,P_WARNING,swLogPrintf("CCM REG , can ' t get PLMN info , as REG status: %d ");
596992,1222735872,0,0,PS1,CCM_REG,CcmRegManualPlmnSearchReq_3,P_WARNING,swLogPrintf("CCM REG , MANUAL PLMN search timer ( 0x%lx ) is already created , when start request manual plmn search ");
596992,1222737920,0,0,PS1,CCM_REG,CcmRegCemmBeUnderReg_1,P_WARNING,swLogPrintf("CCM REG , CEMM is not attached , and first to do attach ( %d ) ");
596992,1222739968,0,0,PS1,CCM_REG,CcmRegProcPsAttachReqMsg_cfun,P_WARNING,swLogPrintf("CCM REG , not CFUN1 state: %d , can ' t proc PS attach REQ ");
596992,1222744063,0,0,PS1,CCM_REG,CcmRegProcPsAttachReqMsg_sim_off,P_WARNING,swLogPrintf("CCM REG , SIM removed , can ' t proc PS attach REQ ");
596992,1222744064,0,0,PS1,CCM_REG,CcmRegProcPsAttachReqMsg_sim_not_ready,P_WARNING,swLogPrintf("CCM REG , SIM not ready: %d , pending proc PS attach REQ ");
596992,1222746112,0,0,PS1,CCM_REG,CcmRegProcPsDetachReqMsg_1,P_WARNING,swLogPrintf("CCM REG , can ' t process CGATT0 , as SIM is initing ( %d ) ");
596992,1222750207,0,0,PS1,CCM_REG,CcmRegGetLocationInfo_1,P_WARNING,swLogPrintf("CCM REG , no valid PLMN info ");
596992,1222752255,0,0,PS1,CCM_REG,CcmRegGetLocationInfo_2,P_WARNING,swLogPrintf("CCM REG , no valid cell info ");
596992,1222754303,0,0,PS1,CCM_REG,CcmRegGetCellInfo_1,P_WARNING,swLogPrintf("CCM REG , no valid PLMN info ");
596992,1222756351,0,0,PS1,CCM_REG,CcmRegGetCellInfo_2,P_WARNING,swLogPrintf("CCM REG , no valid cell info ");
596992,1222756352,0,0,PS1,CCM_REG,CcmRegOosPlmnSelectReq_1,P_WARNING,swLogPrintf("CCM REG , can ' t process OOS PLMN search , as SIM is not ready: %d ");
596992,1222758400,0,0,PS1,CCM_REG,CcmRegOosPlmnSelectReq_2,P_WARNING,swLogPrintf("CCM REG , can ' t process OOS PLMN selection , as CFUN is not power on state: %d ");
596992,1222760704,0,0,PS1,CCM_REG,CcmRegPlmnReselectReq_1,P_WARNING,swLogPrintf("CCM REG , SIM is not ready: %d or CFUN is not power on: %d ");
598016,1224740863,0,0,PS1,CCM_DEV,CcmDevStopPeriodStatisProc_1,P_VALUE,swLogPrintf("CCM DEV , stop period statisic info report ");
598016,1224742911,0,0,PS1,CCM_DEV,CcmDevProcOut_1,P_INFO,swLogPrintf("CCM DEV procedure done , free the DYN context ");
598016,1224744959,0,0,PS1,CCM_DEV,CcmDevProcOut_2,P_INFO,swLogPrintf("CCM DEV no procedure is ongoing , could enter HIB mode ");
598016,1224745216,0,0,PS1,CCM_DEV,CcmDevHandleCfun0Proc_1,P_WARNING,swLogPrintf("CCM DEV current ongoing cfun proc: %d , and pending cfun proc: %d , can ' t proc the new CFUN0 req ");
598016,1224749055,0,0,PS1,CCM_DEV,CcmDevHandleCfun0Proc_2,P_INFO,swLogPrintf("CCM DEV , proc the cfun0 ; power off the protocol firstly ");
598016,1224749312,0,0,PS1,CCM_DEV,CcmDevHandleCfun4Proc_1,P_WARNING,swLogPrintf("CCM DEV current ongoing cfun proc: %d , and pending cfun proc: %d , can ' t proc the new CFUN4 req ");
598016,1224753151,0,0,PS1,CCM_DEV,CcmDevHandleCfun4Proc_2,P_INFO,swLogPrintf("CCM DEV , proc the cfun4 , power off the protocol ");
598016,1224753408,0,0,PS1,CCM_DEV,CcmDevHandleCfun1Proc_1,P_WARNING,swLogPrintf("CCM DEV current ongoing cfun proc: %d ; and pending cfun proc: %d ; can ' t proc the new CFUN1 req ");
598016,1224757247,0,0,PS1,CCM_DEV,CcmDevHandleProc_1,P_WARNING,swLogPrintf("CCM DEV ; no procedure need onogoing ");
598016,1224757504,0,0,PS1,CCM_DEV,CcmDevCurProcDone_1,P_VALUE,swLogPrintf("CCM DEV PROC pending procedue: %d , which SRC module: %d ");
598016,1224759296,0,0,PS1,CCM_DEV,CcmDevProcGetExtStatusCnf_1,P_WARNING,swLogPrintf("CCM DEV , get layer: %d STATUS CNF , but no AT+ECSTATUS? is pending , ignore it ");
598016,1224761344,0,0,PS1,CCM_DEV,CcmDevProcStatisInfoInd_1,P_WARNING,swLogPrintf("CCM DEV , get layer: %d STATIS INFO , but no statistic proc is pending , ignore it ");
598016,1224765439,0,0,PS1,CCM_DEV,CcmDevProcStatisPeriodTimerExpiry_1,P_WARNING,swLogPrintf("CCM DEV , Statis Period Timer expiry , but no statis proc ongoing ");
598016,1224767487,0,0,PS1,CCM_DEV,CcmDevProcCerrcBasicCellListInfoCnfSig_asyn_1,P_WARNING,swLogPrintf("CCM DEV , no cell found in CerrcCcmBasicCellListInfoCnf , not report BCINFO URC ");
598016,1224769535,0,0,PS1,CCM_DEV,CcmDevProcCerrcAbortBasicCellListInfoCnfSig_asyn_1,P_WARNING,swLogPrintf("CCM DEV , no cell found in CerrcCcmAbortBasicCellListInfoCnf , not report BCINFO URC ");
598016,1224771583,0,0,PS1,CCM_DEV,CcmDevProcBasicCellGuardTimerExpiry_1,P_WARNING,swLogPrintf("CCM DEV , ECBCINFO guard Timer expiry , but timer not created ");
598016,1224771840,0,0,PS1,CCM_DEV,CcmDevSetCfunReq_1,P_WARNING,swLogPrintf("CCM DEV invaild cfun request: %d ; from sub-mod: %d ");
598016,1224774144,0,0,PS1,CCM_DEV,CcmDevPowerWakeUpReq_1,P_WARNING,swLogPrintf("WAKE UP , but already procedure: %d / %d / %d ");
598016,1224777727,0,0,PS1,CCM_DEV,CcmDevPowerWakeUpReq_2,P_VALUE,swLogPrintf("WAKE UP from HIB / Sleep2 state ");
598016,1224779775,0,0,PS1,CCM_DEV,CcmDevProcSimPoweronCnfMsg_1,P_WARNING,swLogPrintf("CCM DEV no procedure ongoing , but received a SIM power on CNF ");
598016,1224781823,0,0,PS1,CCM_DEV,CcmDevProcSimPoweronCnfMsg_2,P_WARNING,swLogPrintf("CCM DEV set the AIR PLANE state even no SIM ");
598016,1224783871,0,0,PS1,CCM_DEV,CcmDevProcSimPoweronCnfMsg_3,P_WARNING,swLogPrintf("CCM DEV set the POWER ON state even no SIM ");
598016,1224784128,0,0,PS1,CCM_DEV,CcmDevProcSimPoweronCnfMsg_4,P_WARNING,swLogPrintf("CCM DEV ongoing CFUN PROC: %d , POWER PROC: %d , but received a SIM power on CNF ");
598016,1224787967,0,0,PS1,CCM_DEV,CcmDevProcRegPoweronCnfMsg_1,P_WARNING,swLogPrintf("CCM DEV no procedure ongoing , but received a REG power on CNF ");
598016,1224787968,0,0,PS1,CCM_DEV,CcmDevProcRegPoweronCnfMsg_2,P_WARNING,swLogPrintf("CCM DEV , POWER WAKE UP Fail from CCM REG: %d ");
598016,1224790016,0,0,PS1,CCM_DEV,CcmDevProcRegPoweronCnfMsg_3,P_WARNING,swLogPrintf("CCM DEV , POWER PROC: %d , but recv CCM REG CNF ");
598016,1224794111,0,0,PS1,CCM_DEV,CcmDevProcSimPoweroffCnfMsg_1,P_WARNING,swLogPrintf("CCM DEV no procedure ongoing , but received a SIM power OFF CNF ");
598016,1224794112,0,0,PS1,CCM_DEV,CcmDevProcSimPoweroffCnfMsg_2,P_WARNING,swLogPrintf("CCM DEV ongoing CFUN PROC: %d , but received a SIM power OFF CNF ");
598016,1224798207,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_1,P_VALUE,swLogPrintf("CCM DEV , no procedure ongoing but recv REG power off CNF ");
598016,1224798208,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_2,P_WARNING,swLogPrintf("CCM DEV , Reg Poweroff Cnf failed with: %d ");
598016,1224802303,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_3,P_VALUE,swLogPrintf("CCM DEV , protocol power off done power off the SIM ");
598016,1224802304,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_6,P_WARNING,swLogPrintf("CCM DEV , ongoing CFUN PROC: %d but received a REG power OFF CNF ");
598016,1224806399,0,0,PS1,CCM_DEV,CcmDevGetCurPowerState_1,P_WARNING,swLogPrintf("CCM DEV when get power state , A CFUN: 4 is ongoing ");
598016,1224808447,0,0,PS1,CCM_DEV,CcmDevGetCurPowerState_2,P_WARNING,swLogPrintf("CCM DEV when get power state , A CFUN: 1 is ongoing ");
598016,1224808448,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_plmnSearchPowerLevel,P_WARNING,swLogPrintf("CCM DEV , ' plmnSearchPowerLevel ' can only be set to 0 -3 , can ' t set to: %d ");
598016,1224810496,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_enableEpco,P_WARNING,swLogPrintf("CCM DEV , ' EPCO ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to: %d ");
598016,1224812544,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_dataInactTimerS,P_WARNING,swLogPrintf("CCM DEV , ' dataInactTimer ' can only be set to 0 , or > = 15 s , can ' t set to: %d ");
598016,1224814592,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_relaxMonitorDeltaP,P_WARNING,swLogPrintf("CCM DEV , ' relaxMonitorDeltaP ' can only be set to < = 15 db , can ' t set to: %d ");
598016,1224816640,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_relVersion,P_WARNING,swLogPrintf("CCM DEV , CAT1 ' relVersion ' can only be set 13 or 14 , can ' t set to: %d ");
598016,1224818688,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_nbCategory,P_WARNING,swLogPrintf("CCM DEV , CAT1 ' UeCategory ' can only be set 1 or 2 , can ' t set to: %d ");
598016,1224820736,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_14,P_WARNING,swLogPrintf("CCM DEV , ' bRohc ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to: %d ");
598016,1224822784,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_be_RS_for_ipv6,P_WARNING,swLogPrintf("CCM DEV , ' bIpv6RsForTestSim ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to: %d ");
598016,1224824832,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_ipv6GetPrefixTime,P_WARNING,swLogPrintf("CCM DEV , ' ipv6GetPrefixTime ' can only be set to ( 0 ~65535 ) , can ' t set to: %d ");
598016,1224826880,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_psSoftReset,P_WARNING,swLogPrintf("CCM DEV , ' bEnablePsSoftReset ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to: %d ");
598016,1224828928,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_bTcpTptOpt,P_WARNING,swLogPrintf("CCM DEV , ' bTcpTptOpt ' can only be set to 0 / 1 / 2 , can ' t set to: %d ");
598016,1224830976,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_bEnableDataCounter,P_WARNING,swLogPrintf("CCM DEV , ' bEnableDataCounter ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to: %d ");
598016,1224833024,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_enableaAcl_1,P_WARNING,swLogPrintf("CCM DEV , ' EnableAcl ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to: %d ");
598016,1224837119,0,0,PS1,CCM_DEV,CcmDevGetExtCfgReq_1,P_WARNING,swLogPrintf("CCM DEV , already get EXT CFG PARAM ongoing ");
598016,1224839167,0,0,PS1,CCM_DEV,CcmDevGetExtStatusReq_1,P_WARNING,swLogPrintf("CCM DEV , already a AT+ECSTATUS ongoing ");
598016,1224841215,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_1,P_VALUE,swLogPrintf("CCM DEV , stop statisic info report ");
598016,1224843263,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_2,P_VALUE,swLogPrintf("CCM DEV , stop statisic count , but no statisic before ");
598016,1224843264,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_3,P_WARNING,swLogPrintf("CCM DEV , not cfun1 state: %d , can ' t start statisic info report ");
598016,1224845312,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_w_rptS,P_WARNING,swLogPrintf("CCM DEV , statisic interval too short: %d < 1 ");
598016,1224847360,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_4,P_VALUE,swLogPrintf("CCM DEV , start statisic info report with interval: %d s ");
598016,1224851455,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_5,P_WARNING,swLogPrintf("CCM DEV , already a statisic info report is ongoing ");
598016,1224853503,0,0,PS1,CCM_DEV,CcmDevGetEmmCapaParmCnf_1,P_WARNING,swLogPrintf("CCM DEV , get EMM CFG PARAM CNF , but no AT+ECCFG? is pending , ignore it ");
598016,1224855551,0,0,PS1,CCM_DEV,CcmDevGetCerrcExtendedConfigParamCnf_1,P_WARNING,swLogPrintf("CCM DEV , get CERRC CFG PARAM CNF , but no AT+ECCFG? is pending , ignore it ");
598016,1224857599,0,0,PS1,CCM_DEV,CcmDevGetBcInfoFromTinyContext_1,P_WARNING,swLogPrintf("CCM DEV , no saved BCINFO , please AT+ECBCINFO to save the BCINFO firstly ");
598016,1224859647,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_1,P_WARNING,swLogPrintf("CCM DEV , another basic cell info means maybe ongoing ");
598016,1224859904,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_cfun_1,P_WARNING,swLogPrintf("CCM DEV , CFUN: %d / %d is ongoing / pending , can ' t proc BCINFO ");
598016,1224861696,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_sim_1,P_WARNING,swLogPrintf("CCM DEV , SIM is not ready: %d , AT+ECBCINFO = 0 change to AT+ECBCINFO = 1 , let PLMN search ");
598016,1224863744,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_cfun_2,P_WARNING,swLogPrintf("CCM DEV , CFUN is not power on state: %d , AT+ECBCINFO = 0 change to AT+ECBCINFO = 1 , let PLMN search ");
598016,1224866304,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_band_1,P_SIG,swLogPrintf("CCM DEV , BCCELL mode: %d , SIM not ready: %d and emergency disable , or not cfun1 state: %d , should change to search band ");
598016,1224867840,0,0,PS1,CCM_DEV,CcmDevBcInfoManualPlmnSearchCnf_1,P_WARNING,swLogPrintf("CCM DEV , RC not succ ( %d ) in BCINFO PLMN seach confirm ");
598016,1224870144,0,0,PS1,CCM_DEV,CcmDevBcInfoManualPlmnSearchCnf_asyn_1,P_WARNING,swLogPrintf("CCM DEV , CCM RC not succ ( %d ) , or no cell ( %d ) found in BCINFO , not report URC ");
598016,1224873983,0,0,PS1,CCM_DEV,CcmDevSetPowerClassReq_1,P_WARNING,swLogPrintf("AT+ECPOWERCLASS must be restricted to execute under CFUN0 or CFUN4 state ");
598016,1224873984,0,0,PS1,CCM_DEV,CcmDevProcEventStatisInfoCnf_1,P_WARNING,swLogPrintf("CCM DEV , get layer: %d STATUS CNF , but no AT+ECEVENTSTATIS? is pending , ignore it ");
598016,1224878079,0,0,PS1,CCM_DEV,CcmDevSetEventStatisModeReq_1,P_WARNING,swLogPrintf("This command must be restricted to execute in the CFUN0 state ");
598016,1224880127,0,0,PS1,CCM_DEV,CcmDevEventStatisAllocMemoryReq_1,P_WARNING,swLogPrintf("CCM DEV , already a AT+ECEVENTSTATIS ongoing ");
598016,1224882175,0,0,PS1,CCM_DEV,CcmDevProcWifiScanGuardTimerExpiry_1,P_WARNING,swLogPrintf("CCM DEV , QWIFISCAN guard Timer expiry , but timer not created ");
598016,1224884223,0,0,PS1,CCM_DEV,CcmDevProcPowerOnGuardTimerExpiry_1,P_WARNING,swLogPrintf("CCM DEV , Power on delay guard Timer expiry , but timer not created ");
598016,1224884224,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_parse_e_1,P_ERROR,swLogPrintf("PS CFG NVM , get next parameter err: %d ");
598016,1224886272,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_parse_1,P_VALUE,swLogPrintf("PS CFG NVM , pCfgParam->paramId %d ");
598016,1224888320,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_unkown_param_1,P_WARNING,swLogPrintf("CCM CFG , can ' t parse paramID: %d , ignore and remove it ");
598016,1224890624,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_rm_w_1,P_WARNING,swLogPrintf("CCM CFG , can ' t parse paramId: %d , type: %d , remove this param ");
598016,1224894463,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_parse_error_1,P_ERROR,swLogPrintf("CCM CFG , uepsconfig.nvm file parse error , reset to default PS config ");
598016,1224894464,0,0,PS1,CCM_DEV,CcmProcCerrcCcmGetParamCnfSig_1,P_WARNING,swLogPrintf("CCM main , unexpected param type %d in CerrcCcmGetParamCnf! ");
598016,1224898559,0,0,PS1,CCM_DEV,CcmRegProcSimNokIndMsg_1,P_INFO,swLogPrintf("Power on without SIM inserted , trigger emergency camp on ");
598016,1224900607,0,0,PS1,CCM_DEV,CcmSmsProcMemCapIndDelayTimerExpiry_1,P_WARNING,swLogPrintf("CCM SMS , CCM_SMS_MEM_CAP_IND_DELAY_TIMER expiry , but timer not created ");
599040,1226838015,0,0,PS1,CCM_PS,CcmPsStartGuardTimer_w_1,P_WARNING,swLogPrintf("CCM PS , start guard time , but guard timer is not null , restart ");
599040,1226838272,0,0,PS1,CCM_PS,CcmPsStartGuardTimer_s_1,P_SIG,swLogPrintf("CCM PS , start guard timer Id: %d , val: %d ticks / ms ");
599040,1226840064,0,0,PS1,CCM_PS,CcmPsProcedureOut_1,P_VALUE,swLogPrintf("CCM PS , proc: %e<CcmPsProcEnum> is ongoing , can ' t enter deep sleep ");
599040,1226844159,0,0,PS1,CCM_PS,CcmPsProcedureOut_w_1,P_WARNING,swLogPrintf("CCM PS , no proc ongoing , but guard timer is not null ");
599040,1226844160,0,0,PS1,CCM_PS,CcmPsProcCesmActEpsBearerCtxCnfSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmActEpsBearerCtxCnf , but CCM curPoc: %d ");
599040,1226846208,0,0,PS1,CCM_PS,CcmPsProcCesmActEpsBearerCtxRejSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmActEpsBearerCtxRej , but CCM curPoc: %d ");
599040,1226848256,0,0,PS1,CCM_PS,CcmPsProcCesmDeactEpsBearerCtxCnfSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmDeactEpsBearerCtxCnf , but CCM curPoc: %d ");
599040,1226850304,0,0,PS1,CCM_PS,CcmPsProcCesmDeactEpsBearerCtxRejSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmDeactEpsBearerCtxRej , but CCM curPoc: %d ");
599040,1226852352,0,0,PS1,CCM_PS,CcmPsProcCesmModifyEpsBearerCtxCnfSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmModifyEpsBearerCtxCnf , but CCM curPoc: %d ");
599040,1226854400,0,0,PS1,CCM_PS,CcmPsProcActBrGuardTimerExpiry_w_1,P_WARNING,swLogPrintf("CCM PS , CCM_PS_ACT_BR_GUARD_TIMER expiry , but curProc: %d ");
599040,1226856448,0,0,PS1,CCM_PS,CcmPsProcDeactBrGuardTimerExpiry_w_1,P_WARNING,swLogPrintf("CCM PS , CCM_PS_DEACT_BR_GUARD_TIMER expiry , but curProc: %d ");
599040,1226858496,0,0,PS1,CCM_PS,CcmPsProcModifyBrGuardTimerExpiry_w_1,P_WARNING,swLogPrintf("CCM PS , CCM_PS_MODIFY_BR_GUARD_TIMER expiry , but curProc: %d ");
599040,1226860544,0,0,PS1,CCM_PS,CcmPsProcRegAttachCnfMsg_t_w_1,P_WARNING,swLogPrintf("CCM PS , curProc: %d , CGATT , but guard timer is not running ");
599040,1226862592,0,0,PS1,CCM_PS,CcmPsProcRegAttachCnfMsg_cgact_w_1,P_WARNING,swLogPrintf("CCM PS , curProc: %d , CGACT , but guard timer is not running ");
599040,1226864640,0,0,PS1,CCM_PS,CcmPsProcRegAttachCnfMsg_cgatt_w_2,P_WARNING,swLogPrintf("CCM PS , PS not attach , and not allow to attach , can ' t ACT a bearer , cause: %d ");
599040,1226866688,0,0,PS1,CCM_PS,CcmPsProcRegAttachCnfMsg_proc_w_1,P_WARNING,swLogPrintf("CCM PS , REG proc ps attach cnf , not curProc: %d ");
599040,1226868736,0,0,PS1,CCM_PS,CcmPsProcRegDetachCnfMsg_proc_w_1,P_WARNING,swLogPrintf("CCM PS , REG proc ps detach cnf , not curProc: %d ");
599040,1226870784,0,0,PS1,CCM_PS,CcmPsModifyBearerCtxReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc modify bearer request , but a proc: %d ongoing , reject ");
599040,1226874879,0,0,PS1,CCM_PS,CcmPsModifyBearerCtxReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc modify bearer request , but guardtimer is created ");
599040,1226874880,0,0,PS1,CCM_PS,CcmPsAttachReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc PS attach request , but a proc: %d ongoing , reject ");
599040,1226878975,0,0,PS1,CCM_PS,CcmPsAttachReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc PS attach request , but guardtimer is created ");
599040,1226878976,0,0,PS1,CCM_PS,CcmPsDetachReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc PS detach request , but a proc: %d ongoing , reject ");
599040,1226883071,0,0,PS1,CCM_PS,CcmPsDetachReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc PS detach request , but guardtimer is created ");
599040,1226883072,0,0,PS1,CCM_PS,CcmPsActEpsBearerReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc act bearer request , but a proc: %d ongoing , reject ");
599040,1226887167,0,0,PS1,CCM_PS,CcmPsActEpsBearerReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc act bearer request , but guardtimer is created ");
599040,1226889215,0,0,PS1,CCM_PS,CcmPsActEpsBearerReq_s_1,P_SIG,swLogPrintf("CCM PS , proc act bearer request , need trigger PS attach firstly ");
599040,1226889216,0,0,PS1,CCM_PS,CcmPsDeactEpsBearerReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc deact bearer request , but a proc: %d ongoing , reject ");
599040,1226893311,0,0,PS1,CCM_PS,CcmPsDeactEpsBearerReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc deact bearer request , but guardtimer is created ");
599040,1226895359,0,0,PS1,CCM_PS,CcmPsProcDataCounterOptionReq_1,P_WARNING,swLogPrintf("CCM PS , data counter is disable , can ' t proc this cmd! ");
599040,1226897407,0,0,PS1,CCM_PS,CcmPsSetSaveDataCounterPeriodReq_1,P_VALUE,swLogPrintf("CCM PS , stop auto save data counter ");
599040,1226897408,0,0,PS1,CCM_PS,CcmPsSetSaveDataCounterPeriodReq_2,P_VALUE,swLogPrintf("CCM PS , start auto save data counter timer with new interval: %d s ");
599040,1226899456,0,0,PS1,CCM_PS,CcmPsSetSaveDataCounterPeriodReq_3,P_VALUE,swLogPrintf("CCM PS , keep auto save data counter timer with previous interval: %d s ");
600064,1228933120,0,0,PS1,CCM_SMS,CcmSmsGetSmsAddrfromPdu_1,P_WARNING,swLogPrintf("CCM sms address length %d is incorrect ");
600064,1228935424,0,0,PS1,CCM_SMS,CcmSmsGetUserDatafromPdu_1,P_WARNING,swLogPrintf("CcmSmsGetUserDatafromPdu: user data header length %d , length %d ");
600064,1228937472,0,0,PS1,CCM_SMS,CcmSmsGetUserDatafromPdu_2,P_WARNING,swLogPrintf("CcmSmsGetUserDatafromPdu: user data length %d , user data header length %d ");
600064,1228939264,0,0,PS1,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_w,P_WARNING,swLogPrintf("PDU length %d is abnormal ");
600064,1228941312,0,0,PS1,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_1,P_INFO,swLogPrintf("CCM SRR enable / disable %d ");
600064,1228943360,0,0,PS1,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_2,P_INFO,swLogPrintf("CCM sms message reference from EFsms file is: %d ");
600064,1228945408,0,0,PS1,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_3,P_INFO,swLogPrintf("CCM sms messageReference is: %d ");
600064,1228947456,0,0,PS1,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_4,P_INFO,swLogPrintf("CCM sms address length %d is greater than largest length ");
600064,1228949504,0,0,PS1,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_5,P_WARNING,swLogPrintf("CCM SMS , Incorrect validityPeriodFormat %d ");
600064,1228951552,0,0,PS1,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_6,P_WARNING,swLogPrintf("CCM SMS , Incorrect PDU Length %d ");
600064,1228955647,0,0,PS1,CCM_SMS,CcmMsgConstructSmsSendReqfromPdu_8,P_WARNING,swLogPrintf("CCM SMS , TP-DCS field check failed ");
600064,1228955648,0,0,PS1,CCM_SMS,CcmMsgConvertSmsAddrToBcdNum_1,P_WARNING,swLogPrintf("SMSC address length is too long %d ");
600064,1228959743,0,0,PS1,CCM_SMS,CcmMsgConvertSmsAddrToBcdNum_2,P_WARNING,swLogPrintf("SMSC address can not be decoded to BCD number ");
600064,1228961791,0,0,PS1,CCM_SMS,CcmsmsGetSmsId_1,P_WARNING,swLogPrintf("Invalid SMS ID ");
600064,1228962304,0,0,PS1,CCM_SMS,CcmSmsBuildUserDataToPdu_1,P_INFO,swLogPrintf("CCM SMS , userDataLen = %d , uDataHeadLen = %d , bits7Len = %d ");
600064,1228965887,0,0,PS1,CCM_SMS,CcmSmsBuildUserDataToPdu_2,P_INFO,swLogPrintf("CCM SMS , No User Data , but just UDH ");
600064,1228966144,0,0,PS1,CCM_SMS,CcmSmsGenerateCbsDeliveryPDU_1,P_WARNING,swLogPrintf("Page length %d of page %d is not correct ");
600064,1228967936,0,0,PS1,CCM_SMS,CcmSmsSendMessageReq_1,P_WARNING,swLogPrintf("ccm sms state:%d not correct when sending SMS ");
600064,1228972031,0,0,PS1,CCM_SMS,CcmSmsSendMessageReq_2,P_WARNING,swLogPrintf("ccm reg is under registration when sending SMS ");
600064,1228974079,0,0,PS1,CCM_SMS,CcmSmsSendMessageReq_3,P_INFO,swLogPrintf("SMSC address can be used directly ");
600064,1228976127,0,0,PS1,CCM_SMS,CcmSmsSendMessageReq_4,P_INFO,swLogPrintf("Get smsc address from USIM firstly ");
600064,1228978175,0,0,PS1,CCM_SMS,CcmSmsSendMessageReq_5,P_INFO,swLogPrintf("MO Short Message Control by USIM ");
600064,1228980223,0,0,PS1,CCM_SMS,CcmSmsSendMessageReq_6,P_ERROR,swLogPrintf("CCM SMS , PDU parameter is incorrect and can not be decoded successfully!! ");
600064,1228980224,0,0,PS1,CCM_SMS,CcmSmsSendMessageReq_7,P_WARNING,swLogPrintf("Wrong ccmSmsContext.state %d ");
600064,1228982272,0,0,PS1,CCM_SMS,CcmSmsSendCommandReq_1,P_WARNING,swLogPrintf("ccm sms status:%d not correct when sms sending ");
600064,1228986367,0,0,PS1,CCM_SMS,CcmSmsSendCommandReq_2,P_WARNING,swLogPrintf("ccm reg is not registered when sms sending ");
600064,1228988415,0,0,PS1,CCM_SMS,CcmSmsSendCommandReq_3,P_WARNING,swLogPrintf("smsc addr can not be got ");
600064,1228990463,0,0,PS1,CCM_SMS,CcmSmsSendCommandReq_4,P_ERROR,swLogPrintf("CCM SMS , PDU parameter is incorrect and can not be decoded successfully!! ");
600064,1228990464,0,0,PS1,CCM_SMS,CcmSmsSendSMMAReq_1,P_WARNING,swLogPrintf("ccm sms state:%d not correct when sending SMMA ");
600064,1228994559,0,0,PS1,CCM_SMS,CcmSmsSendSMMAReq_2,P_WARNING,swLogPrintf("ccm reg is under registration when sending SMMA ");
600064,1228994560,0,0,PS1,CCM_SMS,CcmSmsSendSMMAReq_3,P_INFO,swLogPrintf("CCM sms message reference from EFsms file is: %d ");
600064,1228996608,0,0,PS1,CCM_SMS,CcmSmsSendSMMAReq_4,P_INFO,swLogPrintf("CCM sms messageReference is: %d ");
600064,1228998656,0,0,PS1,CCM_SMS,CcmSmsSendSMMAReq_5,P_WARNING,swLogPrintf("Wrong ccmSmsContext.state %d ");
600064,1229000960,0,0,PS1,CCM_SMS,CcmSmsSetMemCapReq_1,P_VALUE,swLogPrintf("CCM SMS , EFsmss smsMemCapExceed: 0x%x , memCapExceed %d ");
600064,1229004799,0,0,PS1,CCM_SMS,CcmSmsSetMemCapReq_2,P_WARNING,swLogPrintf("CCM SMS , the smsMemCapExceed is same as ccmSmsContext , no need to send to SIM ");
600064,1229004800,0,0,PS1,CCM_SMS,CcmSmsProcGetSmspInfoCnfMsg_1,P_INFO,swLogPrintf("gGetSmscForCsca: %d ");
600064,1229007616,0,0,PS1,CCM_SMS,CcmSmsProcGetSmspInfoCnfMsg_2,P_WARNING,swLogPrintf("rcCode: %d , smspDataValid: %d , scAddrPresent: %d , ccmSmsContext.isReady: %d ");
600064,1229008896,0,0,PS1,CCM_SMS,CcmSmsProcGetSmssInfoCnfMsg_1,P_WARNING,swLogPrintf("CCM SMS can not get EFsms infor with sim rc: %d ");
600064,1229010944,0,0,PS1,CCM_SMS,CcmSmsSimOkIndMsg_1,P_WARNING,swLogPrintf("CCM SMS receive simokind in incorrect state: %d ");
600064,1229012992,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmtlReportIndSig_1,P_WARNING,swLogPrintf("CCM SMS , SMS not succ ( %d ) in CemmSmtlReportInd ");
600064,1229015296,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmtlReportIndSig_2,P_WARNING,swLogPrintf("CCM SMS , received msg ref ( %d ) is different from global val:%d ");
600064,1229019135,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmtlDeliveredIndSig_1,P_INFO,swLogPrintf("CCM SMS , start pp download procedure ");
600064,1229019392,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmtlDeliveredIndSig_2,P_INFO,swLogPrintf("CCM SMS , don ' t need report to upper layer , msgService is %d , sms class is %d ");
600064,1229023231,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmtlSmsServiceAvailIndSig_1,P_DEBUG,swLogPrintf("CCM SMS , delay 1 sec to report smsMemCapExceed ");
600064,1229025279,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmtlSmsServiceAvailIndSig_2,P_DEBUG,swLogPrintf("CCM SMS memCapIndDelayTimer is running , stop it since SMS service is not available ");
600064,1229025280,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmtlSmsServiceAvailIndSig_3,P_WARNING,swLogPrintf("CCM SMS receive CemmSmtlSmsServiceAvailInd in wrong state: %d ");
600064,1229027840,0,0,PS1,CCM_SMS,bFilteredMessageId_0,P_INFO,swLogPrintf("CCM SMS , messageIdentifier: %d , mode: %d , bFiltered:%d ");
600064,1229029888,0,0,PS1,CCM_SMS,bFilteredDcs_0,P_INFO,swLogPrintf("CCM SMS , dcs:%d , mode: %d , bFiltered:%d ");
600064,1229031424,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmcbEtwsCmasDataIndSig_1,P_WARNING,swLogPrintf("CCM Page number is not correct:%d ");
600064,1229033728,0,0,PS1,CCM_SMS,CcmSmsProcCemmSmcbEtwsCmasDataIndSig_2,P_WARNING,swLogPrintf("CCM CBS Filter message: mode:%d , bFilterAllCb:%d ");
600064,1229035520,0,0,PS1,CCM_SMS,CcmSmsProcMoSmControCnfFunc_1,P_INFO,swLogPrintf("CCM SMS , mosm control result: %d ");
600064,1229037568,0,0,PS1,CCM_SMS,CcmSmsProcMoSmControCnfFunc_2,P_WARNING,swLogPrintf("CCM SMS , Invalid MO SMS CONTROL Response %d ");
600064,1229041663,0,0,PS1,CCM_SMS,CcmSmsProcWriteSmssInfoCnfMsg_1,P_INFO,swLogPrintf("SMSS update successfully ");
600064,1229041664,0,0,PS1,CCM_SMS,CcmSmsProcWriteSmssInfoCnfMsg_2,P_VALUE,swLogPrintf("smsMemCapExceed:%d ");
600064,1229045759,0,0,PS1,CCM_SMS,CcmSmsSendMoreMessageReqFunc_1,P_INFO,swLogPrintf("Change Sms send more message mode from 1 to 0 . ");
600064,1229045760,0,0,PS1,CCM_SMS,CcmSmsProcUsatPpDownloadCnfFunc_1,P_WARNING,swLogPrintf("CCM SMS , Unknown SIM Confirmation %d ");
600064,1229047808,0,0,PS1,CCM_SMS,CcmSmsProcUsatSendSmIndFunc_1,P_INFO,swLogPrintf("CCM SMS , sms proactive msg scAddr length: %d ");
600064,1229049856,0,0,PS1,CCM_SMS,CcmSmsProcUsatSendSmIndFunc_2,P_INFO,swLogPrintf("CCM SMS , sms proactive msg tpdu type: %d ");
600064,1229052416,0,0,PS1,CCM_SMS,CcmSmsProcReadSimSmCnfFunc_1,P_VALUE,swLogPrintf("CCM SMS Read result: Trasid:%d , cnfStatus:%d , smStatus:%d ");
600064,1229054464,0,0,PS1,CCM_SMS,CcmSmsProcWriteSimSmCnfFunc_1,P_VALUE,swLogPrintf("CCM SMS Write result: Trasid:%d , cnfStatus:%d , ret index:%d ");
600064,1229056768,0,0,PS1,CCM_SMS,CcmSmsProcListSimSmCnfFunc_1,P_VALUE,swLogPrintf("CCM SMS List result: index:%d , cnfStatus:%d , final result:%d , tpduLen:%d ");
600064,1229058560,0,0,PS1,CCM_SMS,CcmSmsProcListSmStorageStatusCnfFunc_1,P_VALUE,swLogPrintf("CCM SMS SIM Storage info: transId:%d , usedNum:%d , totalNum:%d ");
601088,1231032319,0,0,PS1,CCM_SIM,CcmSimProcAppStartedInd_1,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId:21 , argvUint8:1 , argvUint16:0 , argvUint32:0 ");
601088,1231032320,0,0,PS1,CCM_SIM,CcmSimProcAppStartedInd_2,P_ERROR,swLogPrintf("The uicc card inserted in Error state: %x , stop uicc initialization... ");
601088,1231036415,0,0,PS1,CCM_SIM,CcmSimProcAppStartedInd_3,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId:21 , argvUint8:0 , argvUint16:0 , argvUint32:0 ");
601088,1231036416,0,0,PS1,CCM_SIM,CcmSimProcAppInitCnf_1,P_ERROR,swLogPrintf("Unknown UICC Initialise failure cause:%x ! ");
601088,1231038464,0,0,PS1,CCM_SIM,CcmSimProcCardRemovedInd_0,P_VALUE,swLogPrintf("The uicc state of simUiccStaticCtx is %d ");
601088,1231042559,0,0,PS1,CCM_SIM,CcmSimProcCardRemovedInd_1,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId:21 , argvUint8:0 , argvUint16:0 , argvUint32:0 ");
601088,1231044607,0,0,PS1,CCM_SIM,CcmSimProcCardRemovedInd_2,P_VALUE,swLogPrintf("The uicc state has been removed , nothing to do ");
601088,1231046655,0,0,PS1,CCM_SIM,CcmSimProcGenAccessCnf_1,P_ERROR,swLogPrintf("Unknown command reference! ");
601088,1231046656,0,0,PS1,CCM_SIM,CcmSimProcReadDataCnf_1,P_WARNING,swLogPrintf("Unknown trans id %d ");
601088,1231048704,0,0,PS1,CCM_SIM,CcmSimProcReadDataCnf_2,P_WARNING,swLogPrintf("Unknown request item: %x! ");
601088,1231050752,0,0,PS1,CCM_SIM,CcmSimProcUpdateDataCnf_1,P_ERROR,swLogPrintf("Unknown request item: %x! ");
601088,1231054847,0,0,PS1,CCM_SIM,CcmSimProcEpsConnectionModeInd_1,P_WARNING,swLogPrintf("No simUsatDynCtx is available! ");
601088,1231056895,0,0,PS1,CCM_SIM,CcmSimProcEpsConnectionModeInd_2,P_INFO,swLogPrintf("curr power off state , clear locStatusChange ");
601088,1231057152,0,0,PS1,CCM_SIM,CcmSimStartCfunGuardTimer_1,P_VALUE,swLogPrintf("timer:%d start , timerPeriod:%d ");
601088,1231058944,0,0,PS1,CCM_SIM,CcmSimStartCfunGuardTimer_2,P_VALUE,swLogPrintf("timer:%d has already been started ");
601088,1231060992,0,0,PS1,CCM_SIM,CcmSimStopCfunGuardTimer_1,P_VALUE,swLogPrintf("timer:%d stop ");
601088,1231065087,0,0,PS1,CCM_SIM,CcmSimProcCfunGuardTimerExpiry_1,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId:21 , argvUint8:0 , argvUint16:0 , argvUint32:0 ");
601088,1231067135,0,0,PS1,CCM_SIM,CcmSimProcCfunGuardTimerExpiry_2,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId:21 , argvUint8:0 , argvUint16:0 , argvUint32:0 ");
601088,1231069183,0,0,PS1,CCM_SIM,CcmSimProcCfunGuardTimerExpiry_3,P_ERROR,swLogPrintf("CCM SIM , SIM cfun guard timer expiry , but no such time info in CCM SIM side ");
601088,1231071231,0,0,PS1,CCM_SIM,CcmSimProcCfunGuardTimerExpiry_4,P_WARNING,swLogPrintf("CCM SIM , SIM cfun guard timer expiry , need to abort the UICC procedure ");
601088,1231071232,0,0,PS1,CCM_SIM,CcmSimUsatProcTerminalProfileCnf_1,P_WARNING,swLogPrintf("unknown terminal profile operation mode %d ");
601088,1231073280,0,0,PS1,CCM_SIM,CcmSimUsatProcRefreshInd_1,P_WARNING,swLogPrintf("Currently the refresh qualifier ( %x ) is not support! ");
601088,1231075328,0,0,PS1,CCM_SIM,CcmSimUsatProcProvideLocalInfoInd_1,P_WARNING,swLogPrintf("Currently the command qualifier ( %x ) is not supported in CCM! ");
601088,1231077888,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_1,P_INFO,swLogPrintf("Immediate mode: stored PDU length %d , SendDataInd Length %d , offset %d ");
601088,1231079680,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_2,P_INFO,swLogPrintf("Immediate mode: create new PDU for SendDataInd Length %d , offset %d ");
601088,1231081984,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_3,P_INFO,swLogPrintf("Stored mode: stored PDU length %d , new SendDataInd Length %d , offset %d ");
601088,1231083520,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_4,P_INFO,swLogPrintf("Stored mode: create nww PDU for SendDataInd Length %d , offset ");
601088,1231085568,0,0,PS1,CCM_SIM,CcmSimUsatProcEventDownloadCnf_1,P_WARNING,swLogPrintf("The event ( %x ) download confirm is not ok! ");
601088,1231087872,0,0,PS1,CCM_SIM,CcmSimHandleUiccFailure_0,P_VALUE,swLogPrintf("simUiccStaticCtx.uiccState %d , NokCause %d ");
601088,1231090432,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_1,P_INFO,swLogPrintf("regstate %d , bLocInfoChange %d , tac %x , currConnStatus %d ");
601088,1231093759,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_debug_1,P_INFO,swLogPrintf("simUsatDynCtx is null , do nothing ");
601088,1231095807,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_debug_2,P_INFO,swLogPrintf("refresh is Ongoing , do nothing ");
601088,1231097855,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_debug_3,P_INFO,swLogPrintf("curr power off state , do nothing ");
601088,1231097856,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_2,P_INFO,swLogPrintf("Location status ( %d ) and location info are not changed ");
601088,1231101951,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_3,P_INFO,swLogPrintf("Location status-limit service is not changed ");
601088,1231103999,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_4,P_INFO,swLogPrintf("Location status-no service is not changed ");
601088,1231104000,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_5,P_INFO,swLogPrintf("Unknown Dereg type %x! ");
601088,1231106304,0,0,PS1,CCM_SIM,CcmSimProcUsatDataAvailableReq_1,P_INFO,swLogPrintf("BIP PDU channel Id %d is invalid , saved bipChannel Id %d ");
601088,1231110143,0,0,PS1,CCM_SIM,CcmSimUsatReceiveDataRspFunc_0,P_INFO,swLogPrintf("pDataPdu->ptr is null ");
601088,1231112191,0,0,PS1,CCM_SIM,CcmSimUsatReceiveDataRspFunc_1,P_INFO,swLogPrintf("pDataPdu is null ");
601088,1231112192,0,0,PS1,CCM_SIM,CcmSimUsatRefreshResetFunc_1,P_WARNING,swLogPrintf("Refresh qualifier ( %x ) is wrong! ");
601088,1231114240,0,0,PS1,CCM_SIM,CcmSimSetSimSleepFunc_1,P_VALUE,swLogPrintf("Set SIM sleep mode: %d ");
601088,1231116288,0,0,PS1,CCM_SIM,CcmSimGetPreferPlmnListReqFunc_1,P_WARNING,swLogPrintf("unknown select prefer plmn list %d ");
606208,1241516288,0,0,PS1,CAM,CamProcCmiReq_1,P_ERROR,swLogPrintf("CAM , SG: %d , can ' t process the reqPrimId: %d ");
606208,1241518336,0,0,PS1,CAM,CamProcCmiRsp_1,P_ERROR,swLogPrintf("CAM , SG: %d , can ' t process the rspPrimId: %d ");
606208,1241520640,0,0,PS1,CAM,CamCmiSyncSigCnf_w_1,P_WARNING,swLogPrintf("CAM , CMI SYNC CNF , cnfId: 0x%x , handler: 0x%x , but no req pending: 0x%x ");
606208,1241522432,0,0,PS1,CAM,CamProcCamCmiSyncReqSig_w_1,P_WARNING,swLogPrintf("CAM , CMI SYNC table full: 0x%lx , can ' t proc reqId: 0x%lx ");
606208,1241524480,0,0,PS1,CAM,CamProcCenasCamSetParmCnfSig_1,P_WARNING,swLogPrintf("CAM Main , CEMM PARM setting: ( %d ) , confirm failed: ( %d ) ");
606208,1241526528,0,0,PS1,CAM,CamProcCemmCacGetParmCnfSig_1,P_WARNING,swLogPrintf("CAC Main , NAS get PARM: ( %d ) , confirm failed: ( %d ) ");
606208,1241530367,0,0,PS1,CAM,CamCmiReqEnBuf_1,P_WARNING,swLogPrintf("CAM ; CmiReq BIT buffer full: total 16 request ");
606208,1241530368,0,0,PS1,CAM,CamCmiReqOnBuf_1,P_VALUE,swLogPrintf("CAM , CmiReqId: 0x%lx , already found in the pending buffer ");
606208,1241532416,0,0,PS1,CAM,CamCmiReqBufDelLastOutput_1,P_WARNING,swLogPrintf("CAM , invalid lastOutput index: %d in pending CmiReq buffer ");
607232,1243613184,0,0,PS1,CAM_DEV,CamDevCmiDevSetCfunReqFunc_1,P_WARNING,swLogPrintf("CAM DEV: not support cfun: %d ");
607232,1243615232,0,0,PS1,CAM_DEV,CamDevCmiDevSetCiotBandReqFunc_1,P_WARNING,swLogPrintf("CAM DEV: not support ECBAND setting parms , bandNum: %d ");
607232,1243617280,0,0,PS1,CAM_DEV,CamDevCmiDevSetCiotFreqReqFunc_1,P_WARNING,swLogPrintf("AT+ECFREQ , invalid mode: %d ");
607232,1243619328,0,0,PS1,CAM_DEV,CamDevCmiDevSetCiotFreqReqFunc_2,P_WARNING,swLogPrintf("AT+ECFREQ , set FREQ , but no FREQ / more FREQ: %d ");
607232,1243621632,0,0,PS1,CAM_DEV,CamDevCmiDevSetCiotFreqReqFunc_3,P_WARNING,swLogPrintf("AT+ECFREQ , LOCK CELL , but no FREQ / more FREQ: %d , or invalid phyCellId: %d ");
607232,1243623424,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerStateReqFunc_1,P_WARNING,swLogPrintf("CAM DEV: not support CIOTPOWER: %d ");
607232,1243627519,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerStateReqFunc_4,P_SIG,swLogPrintf("CAM DEV , CIOTPOWER wake from HIB ");
607232,1243629567,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerStateReqFunc_5,P_SIG,swLogPrintf("CAM DEV , CIOTPOWER wake from SLEEP2 ");
607232,1243631615,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerStateReqFunc_6,P_SIG,swLogPrintf("CAM DEV , CIOTPOWER wake from HIB / SLEEP2 ");
607232,1243633663,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtCfgReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , no valid CFG set in AT+ECCFG ");
607232,1243635711,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtCfgReqFunc_4,P_WARNING,swLogPrintf("Some Parameters must be restricted to execute in the CFUN0 or CFUN4 state ");
607232,1243637759,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtCfgReqFunc_5,P_WARNING,swLogPrintf("CAM DEV , AT+ECCFG set failed , maybe some parameters not suitable ");
607232,1243637760,0,0,PS1,CAM_DEV,CamDevCmiDevRemoveFPlmnReqFunc_1,P_WARNING,swLogPrintf("CAM DEV: not support AT+ECRMFPLMN: %d ");
607232,1243641855,0,0,PS1,CAM_DEV,CamDevCmiDevGetExtStatusReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECSTATUS? is ongoing , can ' t request again ");
607232,1243643903,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtStatisModeReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , AT+ECSTATUS? is ongoing , can ' t request this ");
607232,1243645951,0,0,PS1,CAM_DEV,CamDevCmiDevGetBasicCellListInfoReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECBCINFO / CFUN / COPS is ongoing , can ' t proc current: AT+ECBCINFO ");
607232,1243646208,0,0,PS1,CAM_DEV,CamDevCmiDevGetBasicCellListInfoReqFunc_param_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECBCINFO , invalid mode: %d , or invalid rptMode: %d ");
607232,1243650047,0,0,PS1,CAM_DEV,CamDevCmiDevGetPsTestReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECPSTEST? is ongoing , can ' t request again ");
607232,1243650048,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerClassReqFunc_1,P_WARNING,swLogPrintf("CAM DEV: not support ECPOWERCLASS setting parms , power class: %d ");
607232,1243654143,0,0,PS1,CAM_DEV,CamDevCmiDevGetPowerClassReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECPOWERCLASS? is ongoing , can ' t request again ");
607232,1243656191,0,0,PS1,CAM_DEV,CamDevSetCfunCnf_1,P_WARNING,swLogPrintf("CAM DEV ; no CMI_DEV_SET_CFUN_REQ pending when process the cfun CNF from CCM DEV ");
607232,1243658239,0,0,PS1,CAM_DEV,CamDevSetCiotBandCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_CIOT_BAND_REQ ' pending , when process the SET CIOT BAND CONF from CCM REG ");
607232,1243660287,0,0,PS1,CAM_DEV,CamDevSetCiotFreqCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_CIOT_REQ_REQ ' pending , when process the SET CIOT FREQ CONF from CCM REG ");
607232,1243662335,0,0,PS1,CAM_DEV,CamDevGetCurCiotBandCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_CIOT_BAND_REQ ' pending , when process the GET CIOT BAND CONF from CCM REG ");
607232,1243662336,0,0,PS1,CAM_DEV,CamDevGetCurCiotBandCnf_2,P_ERROR,swLogPrintf("CAM DEV , current bandNum: %d , no band info in current setting ");
607232,1243664384,0,0,PS1,CAM_DEV,CamDevGetCurCiotBandCnf_3,P_WARNING,swLogPrintf("CAM DEV , can ' t get current band info , rc: %d ");
607232,1243668479,0,0,PS1,CAM_DEV,CamDevGetCiotBandCapaCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_CIOT_BAND_CAPA_REQ ' pending , when process the GET CIOT BAND CAPA CONF from CCM REG ");
607232,1243668480,0,0,PS1,CAM_DEV,CamDevGetCiotBandCapaCnf_2,P_ERROR,swLogPrintf("CAM DEV , bandNum: %d , no band CAPC info ");
607232,1243670528,0,0,PS1,CAM_DEV,CamDevGetCiotBandCapaCnf_3,P_WARNING,swLogPrintf("CAM DEV , can ' t get band CAPA info , rc: %d ");
607232,1243674623,0,0,PS1,CAM_DEV,CamDevGetCurCiotFreqCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_CIOT_FREQ_REQ ' pending , when process the GET CIOT FREQ CONF from CCM REG ");
607232,1243674624,0,0,PS1,CAM_DEV,CamDevGetCurCiotFreqCnf_2,P_WARNING,swLogPrintf("CAM DEV , can ' t get current FREQ info , rc: %d ");
607232,1243678719,0,0,PS1,CAM_DEV,CamDevSetPowerStateCnf_1,P_WARNING,swLogPrintf("CAM DEV ; no CMI_DEV_SET_POWER_STATE_REQ pending when process the POWER CNF from CCM DEV ");
607232,1243680767,0,0,PS1,CAM_DEV,CamDevCemmCacRemoveFPlmnCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_REMOVE_FPLMN_REQ ' pending , when process the REMOVE FPLMN CNF ");
607232,1243682815,0,0,PS1,CAM_DEV,CamDevGetExtCfgCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_EXT_CFG_REQ ' pending , when process the get ExtCfg CNF ");
607232,1243684863,0,0,PS1,CAM_DEV,CamDevGetPsTestCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_ECPSTEST_REQ ' pending , when process the get PS test enable mode CNF ");
607232,1243686911,0,0,PS1,CAM_DEV,CamDevSetPowerClassCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_ECPOWERCLASS_REQ ' pending , when process the set power class confirm from CCM DEV ");
607232,1243688959,0,0,PS1,CAM_DEV,CamDevGetPowerClassCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_ECPOWERCLASS_REQ ' pending , when process the get power class confirm ");
607232,1243691007,0,0,PS1,CAM_DEV,CamDevGetPowerClassCapaCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_ECPOWERCLASS_CAPA_REQ ' pending , when process the get power class capability confirm ");
607232,1243693055,0,0,PS1,CAM_DEV,CamDevGetExtStatusCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_EXT_STATUS_REQ ' pending , when process the get ExtCfg CNF ");
607232,1243695103,0,0,PS1,CAM_DEV,CamDevGetBasicCellListInfoCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_BASIC_CELL_LIST_INFO_REQ ' pending , when process the get basic cell info CNF ");
607232,1243697151,0,0,PS1,CAM_DEV,CamDevCmiDevGetEventStatusFunc_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECEVENTSTATIS? is ongoing , can ' t request again ");
607232,1243699199,0,0,PS1,CAM_DEV,CamDevSetEventStatisCnf_1,P_WARNING,swLogPrintf("CAM DEV ; no CMI_DEV_SET_ECEVENTSTATIS_MODE_REQ pending when process the AT+ECEVENTSTATIS = <mode> CNF from CCM DEV ");
607232,1243701247,0,0,PS1,CAM_DEV,CamDevSendEventStatisCnf_1,P_WARNING,swLogPrintf("CAM DEV ; no CMI_DEV_GET_ECEVENTSTATIS_STATUS_REQ pending when process the AT+ECEVENTSTATIS? CNF from CCM DEV ");
607232,1243703295,0,0,PS1,CAM_DEV,CamDevGetNBRelFeatureCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_NB_REL_FEATURE_REQ ' pending , when process the NB Rel feature CNF ");
607232,1243705343,0,0,PS1,CAM_DEV,CamDevGetTimerParaCnf_0,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_NAS_TIMER_PARA_REQ ' pending , when process CenasGetTimerParmInfo CNF ");
607232,1243707391,0,0,PS1,CAM_DEV,CamDevSetTimerParaCnf_0,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_NAS_TIMER_PARA_REQ ' pending , when process set NAS Timer CNF ");
608256,1245710336,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_1,P_WARNING,swLogPrintf("CAM MM , invalid year: 0x%x in EMM TZ INFO ");
608256,1245712384,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_2,P_WARNING,swLogPrintf("CAM MM , invalid nomth: 0x%x in EMM TZ INFO ");
608256,1245714432,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_3,P_WARNING,swLogPrintf("CAM MM , invalid day: 0x%x in EMM TZ INFO ");
608256,1245716480,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_4,P_WARNING,swLogPrintf("CAM MM , invalid hour: 0x%x in EMM TZ INFO ");
608256,1245718528,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_5,P_WARNING,swLogPrintf("CAM MM , invalid minute: 0x%x in EMM TZ INFO ");
608256,1245720576,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_6,P_WARNING,swLogPrintf("CAM MM , invalid second: 0x%x in EMM TZ INFO ");
608256,1245722624,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_7,P_WARNING,swLogPrintf("CAM MM , invalid timeZone: 0x%x in EMM TZ INFO ");
608256,1245724672,0,0,PS1,CAM_MM,CamMmCmiMmManualPlmnSelectReqFunc_1,P_WARNING,swLogPrintf("CAM MM , invalid manualMode: %d , in CMI_MM_MANUAL_PLMN_SELECT_REQ ");
608256,1245726976,0,0,PS1,CAM_MM,CamMmCmiMmManualPlmnSelectReqFunc_2,P_WARNING,swLogPrintf("CAM MM , invalid plmnFormat: %d , or act: %d , in CMI_MM_MANUAL_PLMN_SELECT_REQ ");
608256,1245729024,0,0,PS1,CAM_MM,CamMmCmiMmManualPlmnSelectReqFunc_3,P_WARNING,swLogPrintf("CAM MM , invalid plmn: %x , %x , in CMI_MM_MANUAL_PLMN_SELECT_REQ ");
608256,1245730816,0,0,PS1,CAM_MM,CamMmCmiMmSetOperIdFormatReqFunc_1,P_ERROR,swLogPrintf("CAM MM , invalid PLMN format setting: %d ");
608256,1245732864,0,0,PS1,CAM_MM,CamMmCmiMmManualPlmnSearchReqFunc_1,P_VALUE,swLogPrintf("CAM MM , Manual Plmn search gard timer is: %d sec ");
608256,1245735168,0,0,PS1,CAM_MM,CamMmCmiMmSetPsmParmReqFunc_1,P_WARNING,swLogPrintf("CAM MM , not support req mode: %d , or req bit map: 0x%lx in CmiMmSetPsmParmReq ");
608256,1245737216,0,0,PS1,CAM_MM,CamMmCmiMmSetEdrxParmReqFunc_1,P_WARNING,swLogPrintf("CAM MM , not support req mode: %d , or actType: %d , in CmiMmSetEdrxParmReq ");
608256,1245739264,0,0,PS1,CAM_MM,CamMmCmiMmSetEdrxParmReqFunc_4,P_WARNING,swLogPrintf("CAM MM , not right reqEdrxValue: %d / reqEdrxValueMs: %d , in CmiMmSetEdrxParmReq ");
608256,1245741056,0,0,PS1,CAM_MM,CamMmCemmCamGetRequestedEdrxParmCnf_1,P_WARNING,swLogPrintf("CAM MM , can ' t get UE request EDRX parm: %d ");
608256,1245745151,0,0,PS1,CAM_MM,CamMmCemmCamGetEdrxDynParmCnf_1,P_WARNING,swLogPrintf("CAM MM , NW config to use EDRX , but UE requested / configed EDRX parm is not avaiable ");
608256,1245745152,0,0,PS1,CAM_MM,CamMmCemmCamGetEdrxDynParmCnf_2,P_WARNING,swLogPrintf("CAM MM , can ' t get UE DYN EDRX parm: %d ");
608256,1245747200,0,0,PS1,CAM_MM,CamMmCemmCamGetRequestedPtwEdrxParmCnf_1,P_WARNING,swLogPrintf("CAM MM , can ' t get UE request PTW / EDRX parm: %d ");
608256,1245749504,0,0,PS1,CAM_MM,CamMmCmiMmSetPtwEdrxParmReqFunc_1,P_WARNING,swLogPrintf("CAM MM , not support req mode: %d , or actType: %d , in CmiMmSetPtwEdrxParmReq ");
608256,1245751552,0,0,PS1,CAM_MM,CamMmCmiMmSetPtwEdrxParmReqFunc_2,P_WARNING,swLogPrintf("CAM MM , not right reqEdrxValue: %d / reqEdrxValueMs: %d , in CmiMmSetPtwEdrxParmReq ");
608256,1245755391,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_1,P_WARNING,swLogPrintf("CAM MM , set CCIOTOPT , no valid PARM input ");
608256,1245755904,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_2,P_WARNING,swLogPrintf("CAM MM , set CCIOTOPT , invalid PARM: reportMode ( %d ) , ueSuptOptType ( %d ) , uePreferOpt ( %d ) ");
608256,1245757696,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_3,P_WARNING,swLogPrintf("CAM MM , set CCIOTOPT , invalid input ueSuptOptType: %d , uePreferOpt: %d , ( 0 -NO_OPT , 1 -CP_OPT , 2 -UP_OPT , 3 -CP_UP_OPT ) ");
608256,1245759488,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_4,P_INFO,swLogPrintf("CAM MM , set CCIOTOPT , only set the report type to : %d ");
608256,1245763583,0,0,PS1,CAM_MM,CamMmRegProcedureCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_SET_AUTO_PLMN_REQ / CMI_MM_MANUAL_PLMN_SELECT_REQ ' pending , when process the REG CNF from CCM REG ");
608256,1245765631,0,0,PS1,CAM_MM,CamMmDeregProcedureCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_DEREGISTER_REQ ' pending , when process the DEREG CNF from CCM REG ");
608256,1245767679,0,0,PS1,CAM_MM,CamMmManualPlmnSearchCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_MANUAL_PLMN_SEARCH_REQ ' pending , when process the MANUAL PLMN SEARCH CNF from CCM REG ");
608256,1245769727,0,0,PS1,CAM_MM,CamMmCemmCamSetPsmParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_SET_REQUESTED_PSM_PARM_REQ ' pending , when process the PSM PARM setting CNF ");
608256,1245771775,0,0,PS1,CAM_MM,CamMmCemmCamSetEdrxParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_SET_REQUESTED_EDRX_PARM_REQ ' pending , when process the EDRX PARM setting CNF ");
608256,1245773823,0,0,PS1,CAM_MM,CamMmCemmCamSetPtwEdrxParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_SET_REQUESTED_PTW_EDRX_PARM_REQ ' pending , when process the PTW / EDRX PARM setting CNF ");
608256,1245775871,0,0,PS1,CAM_MM,CamMmCemmCamSetCiotOptCfgParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_SET_CIOT_OPT_CFG_REQ ' pending , when process the CIOT OPT CFG PARM setting CNF ");
608256,1245777919,0,0,PS1,CAM_MM,CamMmCemmCamGetRequestPsmParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_REQUESTED_PSM_PARM_REQ ' pending , when process the GET PSM REQUEST PARM CNF ");
608256,1245779967,0,0,PS1,CAM_MM,CamMmCemmCamGetEdrxParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_REQUESTED_PSM_PARM_REQ / CMI_MM_READ_EDRX_DYN_PARM_REQ ' pending , when process the GET EDRX REQUEST PARM CNF ");
608256,1245782015,0,0,PS1,CAM_MM,CamMmCemmCamGetPtwEdrxParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_REQUESTED_PTW_PSM_PARM_REQ ' pending , when process the GET PTW EDRX REQUEST PARM CNF ");
608256,1245784063,0,0,PS1,CAM_MM,CamMmCemmCamGetCiotOptCfgParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_CIOT_OPT_CFG_REQ ' pending , when process the GET CIOT OPT CFG CNF ");
608256,1245786111,0,0,PS1,CAM_MM,CamMmCemmCamGetPlmnSelectStateCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_PLMN_SELECT_STATE_REQ ' pending , when process the CMI_MM_GET_PLMN_SELECT_STATE_CNF ");
608256,1245788159,0,0,PS1,CAM_MM,CamMmOosPlmnSelectCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_START_OOS_PLMN_SELECT_REQ ' pending , when process the CMI_MM_START_OOS_PLMN_SELECT_CNF from CCM REG ");
608256,1245790207,0,0,PS1,CAM_MM,CamMmEmmNwInfoInd_1,P_WARNING,swLogPrintf("CAM MM , no valid info in ' EMM information ' ");
608256,1245790208,0,0,PS1,CAM_MM,CamMmEmmNwInfoInd_2,P_WARNING,swLogPrintf("CAM MM , invalid localTimeZone: 0x%x in EMM TZ INFO ");
608256,1245794303,0,0,PS1,CAM_MM,CamMmCmiMmGetCurOperNameCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_CURRENT_OPER_NAME_REQ ' pending , when process the CMI_MM_GET_CURRENT_OPER_NAME_CNF from CCM REG ");
608256,1245796351,0,0,PS1,CAM_MM,CamMmTriggerTauCnfFunc_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_TRIGGER_TAU_REQ ' pending ");
608256,1245796352,0,0,PS1,CAM_MM,CamMmTriggerTauCnfFunc_2,P_WARNING,swLogPrintf("CAM MM , TAU is triggered: %d ");
608256,1245800447,0,0,PS1,CAM_MM,CamMmTriggerRrcReleaseCnfFunc_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_TRIGGER_RRC_RELEASE_REQ ' pending ");
608256,1245800448,0,0,PS1,CAM_MM,CamMmTriggerRrcReleaseCnfFunc_2,P_WARNING,swLogPrintf("CAM MM , RRC Release is triggered: %d ");
609280,1247809535,0,0,PS1,CAM_PS,CamPsCmiPsGetDefinedBearerCtxReqFunc_1,P_WARNING,swLogPrintf("CAM PS , another ' CMI_PS_GET_DEFINED_BEARER_CTX_REQ ' is pending , can ' t process this one ");
609280,1247809536,0,0,PS1,CAM_PS,CamPsCmiPsGetDefinedBearerCtxReqFunc_2,P_WARNING,swLogPrintf("CAM PS , invalid CID: %d in CMI_PS_GET_DEFINED_BEARER_CTX_REQ ");
609280,1247813631,0,0,PS1,CAM_PS,CamPsCmiPsGetDedBearerCtxReqFunc_1,P_WARNING,swLogPrintf("CAM PS , another ' CMI_PS_GET_DEFINED_DEDICATED_BEARER_CTX_REQ ' is pending , can ' t process this one ");
609280,1247813632,0,0,PS1,CAM_PS,CamPsCmiPsGetDedBearerCtxReqFunc_2,P_WARNING,swLogPrintf("CAM PS , invalid CID: %d in CMI_PS_GET_DEFINED_DEDICATED_BEARER_CTX_REQ ");
609280,1247817727,0,0,PS1,CAM_PS,CamPsCmiPsReadDynBearerCtxReqFunc_1,P_WARNING,swLogPrintf("CAM PS , another ' CMI_PS_READ_BEARER_DYN_CTX_REQ ' is pending , can ' t process this one ");
609280,1247817728,0,0,PS1,CAM_PS,CamPsCmiPsReadDynBearerCtxReqFunc_2,P_WARNING,swLogPrintf("CAM PS , invalid CID: %d in: CGCONTRDP ");
609280,1247821823,0,0,PS1,CAM_PS,CamPsCmiPsReadDynDedBearerCtxReqFunc_1,P_WARNING,swLogPrintf("CAM PS , another ' CMI_PS_READ_DEDICATED_BEARER_DYN_CTX_REQ ' is pending , can ' t process this one ");
609280,1247821824,0,0,PS1,CAM_PS,CamPsCmiPsReadDynDedBearerCtxReqFunc_2,P_WARNING,swLogPrintf("CAM PS , invalid CID: %d in: CGSCONTRDP ");
609280,1247824384,0,0,PS1,CAM_PS,CamPsCmiPsSendUlDataReqFunc_1,P_WARNING,swLogPrintf("AT+ECSENDDATA , invalid CID: %d , or length: %d , or pData: %d ");
609280,1247825920,0,0,PS1,CAM_PS,CamPsCmiPsSetAttachWithOrWithoutPdnReqFunc_1,P_ERROR,swLogPrintf("CAM PS , invalid CIPCA param2: %d ");
609280,1247828480,0,0,PS1,CAM_PS,CamPsCmiSendDataViaCpReq_1,P_WARNING,swLogPrintf("AT+CSODCP , invalid CID: %d , or length: %d , or pData: %d ");
609280,1247830016,0,0,PS1,CAM_PS,CamPsCmiPsTransCiotPlaneReqFunc_1,P_WARNING,swLogPrintf("AT+ECCIOTPLANE , invalid plane set: %d ");
609280,1247834111,0,0,PS1,CAM_PS,CamPsCmiPsTransCiotPlaneReqFunc_2,P_WARNING,swLogPrintf("AT+ECCIOTPLANE , another CMI_PS_TRANS_CIOT_PLANE_REQ pending , can ' t process cur one ");
609280,1247834112,0,0,PS1,CAM_PS,CamPsCmiPsDefineAuthCtxFunc_invalid_0,P_WARNING,swLogPrintf("CAM PS , not supprt auth prot: %d ");
609280,1247836672,0,0,PS1,CAM_PS,CamPsCmiPsDefineAuthCtxFunc_invalid_1,P_WARNING,swLogPrintf("CAM PS , invalid userNameLen: %d , or pwdLen: %d , > %d ");
609280,1247840255,0,0,PS1,CAM_PS,CamPsCmiPsDefineBearerCtxCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_BEARER_CTX_REQ ' pending ");
609280,1247842303,0,0,PS1,CAM_PS,CamPsCmiPsGetDefinedBearerCtxCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_BEARER_CTX_REQ ' pending ");
609280,1247842560,0,0,PS1,CAM_PS,CamPsCmiPsGetDefinedBearerCtxCnfFunc_2,P_WARNING,swLogPrintf("CAM PS , CID: %d , is a dedicated bearer , PCID: %d , don ' t need to confirm for CGDCONT ");
609280,1247846399,0,0,PS1,CAM_PS,CamPsCmiPsDelDefineBearerCtxCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEL_BEARER_CTX_REQ ' pending ");
609280,1247848447,0,0,PS1,CAM_PS,CamPsCmiPsModifyEpsEearerCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_MODIFY_BEARER_CTX_REQ ' pending ");
609280,1247850495,0,0,PS1,CAM_PS,CamPsCmiPsDefineDedBearerCtxCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_DEDICATED_BEARER_CTX_REQ ' pending ");
609280,1247852543,0,0,PS1,CAM_PS,CamPsCmiPsDelDedBearerCtxCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEL_DEDICATED_BEARER_CTX_REQ ' pending ");
609280,1247854591,0,0,PS1,CAM_PS,CamPsCmiPsGetDedBearerCtxCnf_0,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_DEDICATED_BEARER_CTX_REQ ' pending ");
609280,1247854848,0,0,PS1,CAM_PS,CamPsCmiPsGetDedBearerCtxCnf_1,P_WARNING,swLogPrintf("CAM PS , CID: %d , is a default bearer , PCID: %d , don ' t need to confirm for CGDSCONT ");
609280,1247858687,0,0,PS1,CAM_PS,CamPsReadBearerDynCtxParamCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_READ_BEARER_DYN_CTX_REQ ' pending ");
609280,1247858944,0,0,PS1,CAM_PS,CamPsReadBearerDynCtxParamCnfFunc_2,P_INFO,swLogPrintf("CAM PS , CID: %d , is a dedicated bearer , PCID: %d , don ' t need to confirm for CGCONTRDP ");
609280,1247860992,0,0,PS1,CAM_PS,CamPsReadBearerDynCtxParamCnfFunc_3,P_INFO,swLogPrintf("CAM PS , CID: %d , brState: %d , is not activated , don ' t need to confirm for CGCONTRDP ");
609280,1247864831,0,0,PS1,CAM_PS,CamPsReadDedBearerDynCtxParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_READ_DEDICATED_BEARER_DYN_CTX_REQ ' pending ");
609280,1247865088,0,0,PS1,CAM_PS,CamPsReadDedBearerDynCtxParamCnf_2,P_WARNING,swLogPrintf("CAM PS , CID: %d , PCID: %d , don ' t need to confirm for CGSCONTRDP ");
609280,1247867136,0,0,PS1,CAM_PS,CamPsReadDedBearerDynCtxParamCnf_3,P_WARNING,swLogPrintf("CAM PS , CID: %d , brState: %d , is not activated , don ' t need to confirm for CGCONTRDP ");
609280,1247870975,0,0,PS1,CAM_PS,CamPsGetBearerIpAddrCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_BEARER_IPADDR_REQ ' pending ");
609280,1247873023,0,0,PS1,CAM_PS,CamPsAttachDetachCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_ATTACH_STATE_REQ ' pending , when process the ATTACH / DETACH CNF ");
609280,1247873024,0,0,PS1,CAM_PS,CamPsAttachDetachCnf_2,P_WARNING,swLogPrintf("CAM PS , AT+CGATT , ATTACH / DETACH Fail: %d ");
609280,1247877119,0,0,PS1,CAM_PS,CamPsCemmCacSetCipcaParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_ATTACH_WITH_OR_WITHOUT_PDN_REQ ' pending , when process the setting CNF ");
609280,1247879167,0,0,PS1,CAM_PS,CamPsCemmCacGetCipcaCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_ATTACH_WITH_OR_WITHOUT_PDN_REQ ' pending , when process the CNF ");
609280,1247881215,0,0,PS1,CAM_PS,CamPsGetAPNRateCtrlCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_APN_RATE_CTRL_PARM_REQ ' pending ");
609280,1247881216,0,0,PS1,CAM_PS,CamPsGetAPNRateCtrlCnf_2,P_WARNING,swLogPrintf("CAM PS , CID: %d not activated , can ' t return APNRC , continue... ");
609280,1247885311,0,0,PS1,CAM_PS,CamPsCmiPsSetDefineTftParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_TFT_PARM_REQ ' pending ");
609280,1247887359,0,0,PS1,CAM_PS,CamPsCmiPsGetDefineTftParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_TFT_PARM_REQ ' pending ");
609280,1247889407,0,0,PS1,CAM_PS,CamPsCmiPsGetDefineTftParamCnf_2,P_WARNING,swLogPrintf("CAM PS , CGTFT request all TFTs , current CID no TFT , check next one ");
609280,1247891455,0,0,PS1,CAM_PS,CamPsCmiPsGetDynTftParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_TFT_PARM_REQ ' pending ");
609280,1247893503,0,0,PS1,CAM_PS,CamPsCmiPsGetDynTftParamCnf_2,P_INFO,swLogPrintf("CAM PS , CGTFTRDP request all TFTs , current CID no TFT , check next one ");
609280,1247895551,0,0,PS1,CAM_PS,CamPsCmiPsDeleteTftParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DELETE_TFT_PARM_REQ ' pending ");
609280,1247897599,0,0,PS1,CAM_PS,CamPsCmiPsSetDefineEpsQosCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_EPS_QOS_REQ ' pending ");
609280,1247899647,0,0,PS1,CAM_PS,CamPsCmiPsDelEpsQosCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEL_DEFINE_EPS_QOS_REQ ' pending ");
609280,1247901695,0,0,PS1,CAM_PS,CamPsGetDefinedEpsQoSCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_EPS_QOS_REQ ' pending ");
609280,1247903743,0,0,PS1,CAM_PS,CamPsGetDefinedEpsQoSCnf_2,P_WARNING,swLogPrintf("CAM PS , CGEQOS request all QOSs , current CID no EQOS , check next one ");
609280,1247905791,0,0,PS1,CAM_PS,CamPsGetDynEpsQoSCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_READ_DYN_BEARER_EPS_QOS_REQ ' pending ");
609280,1247907839,0,0,PS1,CAM_PS,CamPsGetDynEpsQoSCnf_2,P_WARNING,swLogPrintf("CAM PS , CGEQOS request all QOSs , current CID no EQOS , check next one ");
609280,1247909887,0,0,PS1,CAM_PS,CamPsGetAllBearersBasicInfoCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_ALL_BEARERS_CIDS_INFO_REQ ' pending ");
609280,1247911935,0,0,PS1,CAM_PS,CamPsCmiPsAttBearCtxPresetCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_ATTACHED_BEARER_CTX_REQ ' pending ");
609280,1247913983,0,0,PS1,CAM_PS,CamPsCmiPsGetAttBearCtxCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_ATTACHED_BEARER_CTX_REQ ' pending ");
609280,1247916031,0,0,PS1,CAM_PS,CamPsCmiPsSetMtCpDataReportCfgCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_MT_CP_DATA_REPORT_CFG_REQ ' pending ");
609280,1247918079,0,0,PS1,CAM_PS,CamPsCmiPsGetMtCpDataReportCfgCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_MT_CP_DATA_REPORT_CFG_REQ ' pending ");
609280,1247920127,0,0,PS1,CAM_PS,CamPsTransCiotPlaneCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_TRANS_CIOT_PLANE_REQ ' pending ");
609280,1247922175,0,0,PS1,CAM_PS,CamPsCmiPsSetDefineAuthCtxCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_AUTH_CTX_REQ ' pending ");
609280,1247924223,0,0,PS1,CAM_PS,CamPsGetDefineAuthCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_AUTH_CTX_REQ ' pending ");
609280,1247926271,0,0,PS1,CAM_PS,CamPsCmiPsSetDataOffCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_DATA_OFF_REQ ' pending ");
609280,1247928319,0,0,PS1,CAM_PS,CamPsCmiPsGetDataOffCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DATA_OFF_REQ ' pending ");
609280,1247930367,0,0,PS1,CAM_PS,CamPsCmiSetDataCounterCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_DATA_COUNTER_REQ ' pending ");
609280,1247932415,0,0,PS1,CAM_PS,CamPsCmiGetDataCounterCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DATA_COUNTER_REQ ' pending ");
609280,1247934463,0,0,PS1,CAM_PS,CamPsCmiGetSaveDataCounterPeriodCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_SAVE_DATA_COUNTER_PERIOD_REQ ' pending ");
609280,1247936511,0,0,PS1,CAM_PS,CamPsCmiGetTrafficIdleMonitorCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_TRAFFIC_IDLE_MONITOR_REQ ' pending ");
609280,1247938559,0,0,PS1,CAM_PS,CamPsCemmCamSetCemodeParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_UE_OPERATION_MODE_REQ ' pending , when process the setting CNF ");
610304,1249906687,0,0,PS1,CAM_SIM,CamSimCmiSimFacilityLockReqFunc_0,P_ERROR,swLogPrintf("Unknown lock mode ");
610304,1249908735,0,0,PS1,CAM_SIM,CamSimCmiSimFacilityLockReqFunc_1,P_WARNING,swLogPrintf("Don ' t support FDN / MEP , so send cnf with error code of CME_OPERATION_NOT_SUPPORT! ");
610304,1249910783,0,0,PS1,CAM_SIM,CamSimCmiSimSetExtCfgReqFunc_1,P_WARNING,swLogPrintf("CAM SIM , no valid CFG set in AT+ECSIMCFG ");
610304,1249912831,0,0,PS1,CAM_SIM,CamSimCmiSimSetExtCfgReqFunc_2,P_WARNING,swLogPrintf("CAM SIM , not allowed set SIM slot or softsim in AT+ECSIMCFG as non-cfun0 state ");
610304,1249914879,0,0,PS1,CAM_SIM,CamSimCmiSimOperPinCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_OPERATE_PIN_REQ ' pending , when process the CCM_SIM_OPERATE_PIN_CNF from CCM SIM. ");
610304,1249916927,0,0,PS1,CAM_SIM,CamSimCmiSimLockFacilityCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_LOCK_FACILITY_REQ ' pending , when process the CCM_SIM_LOCK_FACILITY_CNF from CCM SIM. ");
610304,1249918975,0,0,PS1,CAM_SIM,CamSimCmiSimGenericAccessCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GENERIC_ACCESS_REQ ' pending , when process the CCM_SIM_GENERIC_ACCESS_CNF from CCM SIM. ");
610304,1249919232,0,0,PS1,CAM_SIM,CacSimCmiSimGenericAccessCnfFunc_2,P_VALUE,swLogPrintf("abnormal len %d data 0x%x ");
610304,1249923071,0,0,PS1,CAM_SIM,CamSimCmiSimRestrictedAccessCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_RESTRICTED_ACCESS_REQ ' pending , when process the CCM_SIM_RESTRICTED_ACCESS_CNF from CCM SIM. ");
610304,1249923328,0,0,PS1,CAM_SIM,CacSimCmiSimRestrictedAccessCnfFunc_2,P_VALUE,swLogPrintf("abnormal len %d data 0x%x ");
610304,1249927167,0,0,PS1,CAM_SIM,CamSimCmiSimOpenLogicalChCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_OPEN_LOGICAL_CHANNEL_REQ ' pending , when process the CMI_SIM_OPEN_LOGICAL_CHANNEL_CNF from CCM SIM. ");
610304,1249929215,0,0,PS1,CAM_SIM,CamSimCmiSimCloseLogicalChCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_CLOSE_LOGICAL_CHANNEL_REQ ' pending , when process the CMI_SIM_CLOSE_LOGICAL_CHANNEL_CNF from CCM SIM. ");
610304,1249931263,0,0,PS1,CAM_SIM,CamSimCmiSimGenLogicalChAccessCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GENERIC_LOGICAL_CHANNEL_ACCESS_REQ ' pending , when process the CMI_SIM_GENERIC_LOGICAL_CHANNEL_ACCESS_CNF from CCM SIM. ");
610304,1249933311,0,0,PS1,CAM_SIM,CCamSimCmiSimSetSimWriteCntCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_SET_SIM_WRITE_COUNTER_REQ ' pending , when process the CMI_SIM_CLOSE_LOGICAL_CHANNEL_CNF from CCM SIM. ");
610304,1249935359,0,0,PS1,CAM_SIM,CamSimCmiSimSetSimRemovalCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_SET_SIM_REMOVAL_REQ ' pending , when process the CMI_SIM_SET_SIM_REMOVAL_CNF from CCM SIM. ");
610304,1249937407,0,0,PS1,CAM_SIM,CamSimCmiSimGetSmsParamsCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GET_SMS_PARAMS_REQ ' pending , when process the CMI_SIM_GET_SMS_PARAMS_CNF from CCM SIM. ");
610304,1249939455,0,0,PS1,CAM_SIM,CamSimCmiSimGetSubscriberNumberCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GET_SUBSCRIBER_NUMBER_REQ ' pending , when process the CMI_SIM_GET_SUBSCRIBER_NUMBER_CNF from CCM SIM. ");
610304,1249941503,0,0,PS1,CAM_SIM,CacSimCmiUsatSetTerminalProfileCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_SET_TERMINAL_PROFILE_REQ ' pending , when process the CMI_SIM_SET_TERMINAL_PROFILE_CNF from CCM SIM. ");
610304,1249943551,0,0,PS1,CAM_SIM,CacSimCmiUsatGetTerminalProfileCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GET_TERMINAL_PROFILE_REQ ' pending , when process the CMI_SIM_GET_TERMINAL_PROFILE_CNF from CCM SIM. ");
610304,1249945599,0,0,PS1,CAM_SIM,CamSimCmiSimSetPreferredPlmnListCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_SET_PREFERRED_PLMN_LIST_REQ ' pending , when process the CMI_SIM_SET_PREFERRED_PLMN_LIST_CNF from CCM SIM. ");
610304,1249947647,0,0,PS1,CAM_SIM,CamSimCmiSimGetPreferredPlmnListCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GET_PREFERRED_PLMN_LIST_REQ ' pending , when process the CMI_SIM_GET_PREFERRED_PLMN_LIST_CNF from CCM SIM. ");
611328,1252001792,0,0,PS1,CAM_SMS,CamSmsCmiSmsSendMsgReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support pdu length: %d ");
611328,1252003840,0,0,PS1,CAM_SMS,CamSmsCmiSmsSendStoredMsgReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support pdu length: %d ");
611328,1252005888,0,0,PS1,CAM_SMS,CamSmsCmiSmsSendCommandReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support pdu length: %d ");
611328,1252007936,0,0,PS1,CAM_SMS,CamSmsCmiSetSmspReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support SMSC Addr setting parms length: %d ");
611328,1252009984,0,0,PS1,CAM_SMS,CamSmsCmiSetSmsServiceReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support sms service setting: %d ");
611328,1252012032,0,0,PS1,CAM_SMS,CamSmsCmiGetSmsMsgRecordReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support the read commad: %d ");
611328,1252014080,0,0,PS1,CAM_SMS,CamSmsCmiSetSmsMsgRecordReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support the write commad: %d ");
611328,1252018175,0,0,PS1,CAM_SMS,CamSmsCmiSetSmsMsgRecordReqFunc_2,P_WARNING,swLogPrintf("CAM SMS , CcmMsgConvertSmsAddrToBcdNum return FALSE. ");
611328,1252018176,0,0,PS1,CAM_SMS,CamSmsCmiSetSmsMsgRecordReqFunc_3,P_WARNING,swLogPrintf("CAM SMS , input TPDU length:%d is incorrect. ");
611328,1252020480,0,0,PS1,CAM_SMS,CamSmsCmiDelSmsMsgRecordReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , input delFlag is invalid , index: %d , delFlag: %d. ");
611328,1252022272,0,0,PS1,CAM_SMS,CamSmsCmiListSmsMsgRecordReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , input invalid status , request status: %d. ");
611328,1252024320,0,0,PS1,CAM_SMS,CamSmsCmiGetStorageStatusReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , input invalid parameter , operatmode %d. ");
611328,1252028415,0,0,PS1,CAM_SMS,CamSmsCmiSmsSendMessageCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no ' CMI_SMS_SEND_MESSAGE_REQ ' pending , when process the cmgs CNF from CCM SMS ");
611328,1252030463,0,0,PS1,CAM_SMS,CamSmsCmiSmsSendStoredMessageCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no ' CMI_SMS_SEND_STORED_MSG_REQ ' pending , when process the cmgs CNF from CCM SMS ");
611328,1252032511,0,0,PS1,CAM_SMS,CamSmsCmiSmsSendCommandCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no ' CMI_SMS_SEND_COMMAND_REQ ' pending , when process the cmgc CNF from CCM SMS ");
611328,1252034559,0,0,PS1,CAM_SMS,CamSmsGetSmsServiceCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_GET_CURRENT_SMS_SERVICE_REQ pending , when process CMI_SMS_GET_CURRENT_SMS_SERVICE_CNF ");
611328,1252034560,0,0,PS1,CAM_SMS,CamSmsGetSmsServiceCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , can ' t get SMS service info: %d ");
611328,1252038655,0,0,PS1,CAM_SMS,CcmSmsSetSmsServiceCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_SELECT_MESSAGE_SERVICE_REQ pending , when process CMI_SMS_SELECT_MESSAGE_SERVICE_CNF ");
611328,1252038656,0,0,PS1,CAM_SMS,CcmSmsSetSmsServiceCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , set SMS service command error: %d ");
611328,1252042751,0,0,PS1,CAM_SMS,CcmSmsSetSmspCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_SET_SMSP_REQ pending , when process CMI_SMS_SET_SMSP_CNF ");
611328,1252044799,0,0,PS1,CAM_SMS,CcmSmsGetSmscAddrCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_GET_SMSC_ADDR_REQ pending , when process CMI_SMS_GET_SMSC_ADDR_CNF ");
611328,1252044800,0,0,PS1,CAM_SMS,CcmSmsGetSmscAddrCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , can ' t get smsc address info: %d ");
611328,1252046848,0,0,PS1,CAM_SMS,CamSmsCmiSetMoreMsgModeReqFunc_1,P_WARNING,swLogPrintf("CAM SMS , not support sms more message mode setting: %d ");
611328,1252050943,0,0,PS1,CAM_SMS,CcmSmsSetMoreMessageModeCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_SET_MORE_MESSAGE_MODE_REQ pending , when process CMI_SMS_SET_MORE_MESSAGE_MODE_CNF ");
611328,1252052991,0,0,PS1,CAM_SMS,CamSmsGetMoreMessageModeCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_GET_MORE_MESSAGE_MODE_REQ pending , when process CMI_SMS_GET_MORE_MESSAGE_MODE_CNF ");
611328,1252052992,0,0,PS1,CAM_SMS,CamSmsGetMoreMessageModeCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , can ' t get SMS more message mode: %d ");
611328,1252057087,0,0,PS1,CAM_SMS,CamSmsCmiGetSmsMsgRecordCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_GET_SMS_MSG_RECORD_REQ pending , when process CMI_SMS_GET_SMS_MSG_RECORD_CNF ");
611328,1252057088,0,0,PS1,CAM_SMS,CamSmsCmiGetSmsMsgRecordCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , can ' t get SMS Record from SIM: error cause %d ");
611328,1252061183,0,0,PS1,CAM_SMS,CamSmsCmiSetSmsMsgRecordCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_SET_SMS_MSG_RECORD_REQ pending , when process CMI_SMS_SET_SMS_MSG_RECORD_CNF ");
611328,1252061184,0,0,PS1,CAM_SMS,CamSmsCmiSetSmsMsgRecordCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , can ' t save SMS Record to SIM: error cause %d ");
611328,1252065279,0,0,PS1,CAM_SMS,CamSmsCmiDeltSmsMsgRecordCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_DEL_SMS_MSG_RECORD_REQ pending , when process CMI_SMS_DEL_SMS_MSG_RECORD_CNF ");
611328,1252065280,0,0,PS1,CAM_SMS,CamSmsCmiDelSmsMsgRecordCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , can ' t Delete SMS Record to SIM: error cause %d ");
611328,1252069375,0,0,PS1,CAM_SMS,CamSmsCmiListSmsMsgRecordCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_LIST_SMS_MSG_RECORD_REQ pending , when process CMI_SMS_LIST_SMS_MSG_RECORD_CNF ");
611328,1252069376,0,0,PS1,CAM_SMS,CamSmsCmiListSmsMsgRecordCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , get Invalid SMS Record from SIM: error cause %d ");
611328,1252073471,0,0,PS1,CAM_SMS,CamSmsCmiGetStorageStatusCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_GET_SMS_STORAGE_STATUS_REQ pending , when process CMI_SMS_GET_SMS_STORAGE_STATUS_CNF ");
611328,1252073472,0,0,PS1,CAM_SMS,CamSmsCmiGetStorageStatusCnfFunc_2,P_WARNING,swLogPrintf("CAM SMS , can ' t Get SMS Storage status from SIM: error cause %d ");
611328,1252077567,0,0,PS1,CAM_SMS,CamSmsCmiSmsSendSMMACnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no ' CMI_SMS_SEND_SMMA_REQ ' pending , when process the cmgs CNF from CCM SMS ");
611328,1252079615,0,0,PS1,CAM_SMS,CamSmsSetMemCapCnfFunc_1,P_WARNING,swLogPrintf("CAM SMS , no CMI_SMS_SET_MEM_CAP_REQ pending , when process CMI_SMS_SET_MEM_CAP_CNF ");
<end>
Enums
ACIPC0MSGID,AC_IPC_MSG_EMPTY,0
ACIPC0MSGID,PAGING_IMAGE_IPC_MSG_TYPE_PAGING_RCV_REQ,256
ACIPC0MSGID,PAGING_IMAGE_IPC_MSG_TYPE_MEAS_REQ,257
ACIPC0MSGID,PAGING_IMAGE_IPC_MSG_TYPE_BTUPT_REQ,263
ACIPC0MSGID,PAGING_IMAGE_IPC_MSG_TYPE_PAGING_RCV_CNF_POS,264
ACIPC0MSGID,PAGING_IMAGE_IPC_MSG_TYPE_MEAS_CNF_POS,265
ACIPC0MSGID,PAGING_IMAGE_IPC_MSG_TYPE_PAGING_RCV_CNF_NEG,268
ACIPC0MSGID,PAGING_IMAGE_IPC_MSG_TYPE_MEAS_CNF_NEG,269
ACIPC0MSGID,PAGING_IMAGE_IPC_MSG_TYPE_MAX,271
ACIPC0MSGID,A2C_AP_DUMP_MSG_ID_BASE,512
ACIPC0MSGID,A2C_AP_HARDFAULT_FULLIMG,512
ACIPC0MSGID,A2C_AP_HARDFAULT_PAGINGIMG,513
ACIPC0MSGID,A2C_AP_ASSERT_FULLIMG,514
ACIPC0MSGID,A2C_AP_ASSERT_PAGINGIMG,515
ACIPC0MSGID,A2C_AP_WDT_FULLIMG,516
ACIPC0MSGID,A2C_AP_WDT_PAGINGIMG,517
ACIPC0MSGID,A2C_AP_DUMP_MSG_ID_END,519
ACIPC0MSGID,C2A_CP_DUMP_MSG_ID_BASE,520
ACIPC0MSGID,C2A_CP_HARDFAULT_FULLIMG,520
ACIPC0MSGID,C2A_CP_HARDFAULT_PAGINGIMG,521
ACIPC0MSGID,C2A_CP_ASSERT_FULLIMG,522
ACIPC0MSGID,C2A_CP_ASSERT_PAGINGIMG,523
ACIPC0MSGID,C2A_CP_WDT_FULLIMG,524
ACIPC0MSGID,C2A_CP_WDT_PAGINGIMG,525
ACIPC0MSGID,C2A_CP_DUMP_MSG_ID_END,527
APBootFlag_e,AP_BOOT_FROM_POWER_ON,0
APBootFlag_e,AP_BOOT_FROM_UNDEF,1
APBootFlag_e,AP_BOOT_FROM_AS1,2
APBootFlag_e,AP_BOOT_FROM_AS2,3
APBootFlag_e,AP_BOOT_FROM_AH,4
APBootFlag_e,AP_BOOT_FROM_AO,5
APSleepState,AP_STATE_ACTIVE,0
APSleepState,AP_STATE_IDLE,1
APSleepState,AP_STATE_SLEEP1,2
APSleepState,AP_STATE_SLEEP2,3
APSleepState,AP_STATE_HIBERNATE,4
APSleepState,AP_STATE_OFF,5
APSleepState,NUM_AP_LP_MODE,6
AccessResult,ACCESS_SUCCESS,0
AccessResult,ACCESS_ERROR,1
ActStatus,ACT_NO_SERVICE,0
ActStatus,ACT_SUCCESS,1
ActStatus,ACT_EMERGENCY,2
ActStatus,ACT_EMERGENCY_NO_SERVICE,3
ActStatus,ACT_FORBIDDEN_TA_FOR_REGIONAL_SERVICE,4
ActStatus,ACT_FORBIDDEN_TA_FOR_ROAMING,5
AsReleaseType,AsRelease_13,13
AsReleaseType,AsRelease_14,14
AsReleaseType,AsRelease_15,15
CEstablishStatus,CESTABLISH_SUCCESS,0
CEstablishStatus,CESTABLISH_FAIL_TAC_HAS_CHANGED,1
CEstablishStatus,CESTABLISH_FAIL_OTHERS,2
CEstablishStatus,CESTABLISH_FAIL_WRONG_STATE,3
CEstablishStatus,CESTABLISH_FAIL_T300_EXPIRY,4
CEstablishStatus,CESTABLISH_FAIL_REJECTED_ACCESS_BARRED,5
CEstablishStatus,CESTABLISH_FAIL_ACCESS_BARRED_FOR_SIGNALLING,6
CEstablishStatus,CESTABLISH_FAIL_ACCESS_BARRED_FOR_CALL,7
CEstablishStatus,CESTABLISH_FAIL_REL_BY_MM,8
CEstablishStatus,CESTABLISH_FAIL_RESELECTION,9
CEstablishStatus,CESTABLISH_FAIL_ACCESS_BARRED_EAB,10
CEstablishStatus,CESTABLISH_FAIL_ACCESS_BARRED_ACDC,11
CEstablishmentCause,CEstablishmentCause_MT_Access,0
CEstablishmentCause,CEstablishmentCause_MO_Signalling,1
CEstablishmentCause,CEstablishmentCause_MO_Data,2
CEstablishmentCause,CEstablishmentCause_MO_ExceptionData,3
CEstablishmentCause,CEstablishmentCause_Delay_Tolerant,4
CEstablishmentCause,CEstablishmentCause_Emergency,5
CEstablishmentCause,CEstablishmentCause_HighPriorityAccess,6
CEstablishmentCause,CEstablishmentCause_spare1,7
CPSleepState,CP_STATE_ACTIVE,0
CPSleepState,CP_STATE_IDLE,1
CPSleepState,CP_STATE_CS0,2
CPSleepState,CP_STATE_CS1,3
CPSleepState,CP_STATE_CS2,4
CPSleepState,CP_STATE_CH,5
CPSleepState,CP_STATE_CO,6
CPSleepState,CP_STATE_MAX,7
CResumeStatus,CRESUME_SUCCESS,0
CResumeStatus,CRESUME_SUCCESS_RRCSETUP_SUCCESS,1
CResumeStatus,CRESUME_FAIL_TAC_HAS_CHANGED,2
CResumeStatus,CRESUME_FAIL_OTHERS,3
CResumeStatus,CRESUME_FAIL_WRONG_STATE,4
CResumeStatus,CRESUME_FAIL_T300_EXPIRY,5
CResumeStatus,CRESUME_FAIL_REJECTED_ACCESS_BARRED,6
CResumeStatus,CRESUME_FAIL_ACCESS_BARRED_FOR_SIGNALLING,7
CResumeStatus,CRESUME_FAIL_ACCESS_BARRED_FOR_CALL,8
CResumeStatus,CRESUME_FAIL_REL_BY_MM,9
CResumeStatus,CRESUME_FAIL_RESELECTION,10
CResumeStatus,CRESUME_FAIL_ACCESS_BARRED_EAB,11
CResumeStatus,CRESUME_FAIL_ACCESS_BARRED_ACDC,12
CResumeStatus,CRESUME_FAIL_INTEGRITY_CHECK_FAIL,13
CallType,CALL_TYPE_ORIGINATING_SIGNALLING,0
CallType,CALL_TYPE_ORIGINATING_CALLS,1
CallType,CALL_TYPE_ORIGINATING_SMS,2
CallType,CALL_TYPE_TERMINATING_CALLS,3
CallType,CALL_TYPE_EMERGENCY_CALLS,4
CallType,CALL_TYPE_ORIGINATING_MMTEL_VOICE,5
CallType,CALL_TYPE_ORIGINATING_MMTEL_VEDIO,6
CallType,CALL_TYPE_ORIGINATING_SMSoIP,7
CallType,CALL_TYPE_ORIGINATING_CSFB,8
CatPhyMacResetReason,CAT_PHY_MAC_RESET_REEST,0
CatPhyMacResetReason,CAT_PHY_MAC_RESET_GO_IDLE,1
CatPhyMacResetReason,CAT_PHY_MAC_RESET_GO_IDLE_WITH_SUSPEND,2
CatPhyMacResetReason,CAT_PHY_MAC_HANDOVER,3
CcmEventStatisReqType,CCM_DEV_EVENT_START_STATIS,0
CcmEventStatisReqType,CCM_DEV_EVENT_STOP_STATIS,1
CcmEventStatisReqType,CCM_DEV_EVENT_GET_STATIS,2
CcmEventStatisReqType,CCM_DEV_EVENT_CLEAR_STATIS,3
CcmPsProcEnum,CCM_NONE_PS_PROC,0
CcmPsProcEnum,CCM_PS_ATTACH_PROC,1
CcmPsProcEnum,CCM_PS_DETACH_PROC,2
CcmPsProcEnum,CCM_PS_ACT_BEARER_PROC,3
CcmPsProcEnum,CCM_PS_DEACT_BEARER_PROC,4
CcmPsProcEnum,CCM_PS_MOD_BEARER_PROC,5
CellLockMode,CELL_LOCK_NONE,0
CellLockMode,CELL_LOCK_FREQ_ONLY,1
CellLockMode,CELL_LOCK_FREQ_CELL,2
CerrcAccessBarReason,ACCESS_ALLOWED,0
CerrcAccessBarReason,ACCESS_BARRED_FOR_SIGNALLING,1
CerrcAccessBarReason,ACCESS_BARRED_FOR_CALL,2
CerrcAccessBarReason,ACCESS_BARRED_EAB,3
CerrcAccessBarReason,ACCESS_BARRED_ACDC,4
CerrcActStatus,CERRC_ACT_NO_SERVICE,0
CerrcActStatus,CERRC_ACT_SUCCESS,1
CerrcActStatus,CERRC_ACT_INVALID,2147483647
CerrcCampOnState,CERRC_CAMP_INITIAL,0
CerrcCampOnState,CERRC_CAMP_NORMALLY,1
CerrcCampOnState,CERRC_CAMP_ANY_CELL,2
CerrcCampOnState,CERRC_CAMP_INVALID,2147483647
CerrcCellBarredCause,CELL_NOT_BARRED,0
CerrcCellBarredCause,CELL_BARRED_RA_FAIL,1
CerrcCellBarredCause,CELL_BARRED_T300_EXPIRED,2
CerrcCellBarredCause,CELL_BARRED_BCH_CRC_ERROR,3
CerrcCellBarredCause,CELL_BARRED_ACCESS_BARRED,4
CerrcCellBarredCause,CELL_BARRED_AUTH_FAIL,5
CerrcCellBarredCause,CELL_BARRED_PHY_ESCAPE,6
CerrcCellBarredCause,CELL_BARRED_ACCESS_REJECTED,7
CerrcCellSearchType,CERRC_ICS_TYPE_NULL,0
CerrcCellSearchType,CERRC_ICS_TYPE_FG_PLMN,1
CerrcCellSearchType,CERRC_ICS_TYPE_ACT_REQ,2
CerrcCellSearchType,CERRC_ICS_TYPE_REEST,3
CerrcCellSearchType,CERRC_ICS_TYPE_LEAVE_CONN,4
CerrcCellSearchType,CERRC_ICS_TYPE_LAST_SERVING_CELL,5
CerrcCellSearchType,CERRC_ICS_TYPE_STORED_CELL,6
CerrcCellStatus,CELL_STATUS_SIB1_INVALID,0
CerrcCellStatus,CELL_STATUS_SUITABLE,1
CerrcCellStatus,CELL_STATUS_BARRED,2
CerrcCellStatus,CELL_STATUS_PLMN_FORBIDDEN,3
CerrcCellStatus,CELL_STATUS_TA_FORBIDDEN,4
CerrcCoverageType,CERRC_NORMAL_COVERAGE,0
CerrcCoverageType,CERRC_ENHANCED_COVERAGE,1
CerrcCsrState,CSR_IDLE,0
CerrcCsrState,CSR_PLMN_SEARCH,1
CerrcCsrState,CSR_CELL_SELECTION,2
CerrcCsrState,CSR_CELL_SELECTION_CAMPING,3
CerrcCsrState,CSR_CELL_RESELECTION_CAMPING,4
CerrcCsrState,CSR_INVALID,2147483647
CerrcDeactReason,CERRC_DEACT_REASON_POWER_OFF,0
CerrcDeactReason,CERRC_DEACT_REASON_ACTIVATE_PSM,1
CerrcDerivedAsKeyType,CERRC_NAS_ENC_ALG,0
CerrcDerivedAsKeyType,CERRC_NAS_INT_ALG,1
CerrcDerivedAsKeyType,CERRC_RRC_ENC_ALG,2
CerrcDerivedAsKeyType,CERRC_RRC_INT_ALG,3
CerrcDerivedAsKeyType,CERRC_UP_ENC_ALG,4
CerrcOtdoaMeasState,OTDOA_NOT_START,0
CerrcOtdoaMeasState,OTDOA_START_MEAS,1
CerrcOtdoaMeasState,OTDOA_STOP_MEAS,2
CerrcPlmnSearchType,CERRC_PLMN_SEARCH_NORMAL,0
CerrcPlmnSearchType,CERRC_PLMN_SEARCH_PERIOD_HIGH_PLMN,1
CerrcPlmnSearchType,CERRC_PLMN_SEARCH_MANUAL,2
CerrcPlmnSearchType,CERRC_PLMN_SEARCH_BCINFO,3
CerrcRccState,RCC_IDLE,0
CerrcRccState,RCC_CONN_EST,1
CerrcRccState,RCC_CONN_REL,2
CerrcRccState,RCC_CONN_RE_EST,3
CerrcRccState,RCC_CONN_NORMAL,4
CerrcRccState,RCC_WAIT_REL_ACK_CNF,5
CerrcRccState,RCC_HANDOVER,6
CerrcRccState,RCC_INVALID,2147483647
CerrcRceType,RCE_ESTABLISH,0
CerrcRceType,RCE_RESUME,1
CerrcRceType,RCE_RESUME_TO_ESTABLISH,2
CerrcReleaseCause,REL_CAUSE_LOAD_BALANCING_TAU_REQUIRED,0
CerrcReleaseCause,REL_CAUSE_CONNECTION_FAILURE,1
CerrcReleaseCause,REL_CAUSE_SUSPEND,2
CerrcReleaseCause,REL_CAUSE_OTHERS,3
CerrcRlfCause,RLF_CAUSE_T310_EXPIRY,0
CerrcRlfCause,RLF_CAUSE_RA_PROBLEM,1
CerrcRlfCause,RLF_CAUSE_RLC_MAX_RETRY,2
CerrcRlfCause,RLF_CAUSE_T312_EXPIRY,3
CerrcState,CERRC_DEACTIVATED,0
CerrcState,CERRC_IDLE,1
CerrcState,CERRC_CONNECTED,2
CerrcState,CERRC_INVALID_STATE,2147483647
CerrcTimerId,CERRC_T300,1
CerrcTimerId,CERRC_T301,2
CerrcTimerId,CERRC_T310,3
CerrcTimerId,CERRC_T311,4
CerrcTimerId,CERRC_T322,5
CerrcTimerId,CERRC_T_CELL_SEARCH_GUARD,6
CerrcTimerId,CERRC_T_CAMPING_GUARD,7
CerrcTimerId,CERRC_T_DRX_CELL_SEARCH_GUARD,8
CerrcTimerId,CERRC_T_PLMN_SEARCH_BCH_GUARD,9
CerrcTimerId,CERRC_T_DEACT_CNF_GUARD,10
CerrcTimerId,CERRC_T_MAC_RESET_CNF_GUARD,11
CerrcTimerId,CERRC_T_RECEIVING_SIB14_GUARD,12
CerrcTimerId,CERRC_T_LOC_MEAS_CNF_GUARD,13
CerrcTimerId,CERRC_T_SI_UPDATE_GUARD,14
CerrcTimerId,CERRC_T_MIB_UPDATE_GUARD,15
CerrcTimerId,CERRC_T_CONN_NCELL_SIB1_GUARD,16
CerrcTimerId,CERRC_T_WIFISCAN_ROUND_GUARD,17
CerrcTimerId,CERRC_T302,21
CerrcTimerId,CERRC_T303,22
CerrcTimerId,CERRC_T304,23
CerrcTimerId,CERRC_T305,24
CerrcTimerId,CERRC_T308,26
CerrcTimerId,CERRC_T312,27
CerrcTimerId,CERRC_T321,29
CerrcTimerId,CERRC_T_ETWS_CMAS_GUARD,33
CerrcTimerId,CERRC_T_MEAS_ID_START,101
CerrcTimerId,CERRC_T_MEAS_ID_END,164
CesmBearerContextState,CESM_BR_CTX_INVALD,0
CesmBearerContextState,CESM_BR_CTX_DEFINED,1
CesmBearerContextState,CESM_BR_CTX_INACTIVE,1
CesmBearerContextState,CESM_BR_CTX_ACTIVE,2
CesmBearerContextState,CESM_BR_CTX_MO_ACT_PENDING,3
CesmBearerContextState,CESM_BR_CTX_ATTACH_ACT_PENDING,4
CesmBearerContextState,CESM_BR_CTX_MT_ACT_PENDING,5
CesmBearerContextState,CESM_BR_CTX_MO_MODIFY_PENDING,6
CesmBearerContextState,CESM_BR_CTX_MT_MODIFY_PENDING,7
CesmBearerContextState,CESM_BR_CTX_MO_DEACT_PENDING,8
CesmBearerContextState,CESM_BR_CTX_STATE_MAX,15
CnDomain,CN_DOMAIN_PS,0
CnDomain,CN_DOMAIN_CS,1
CnDomain,CN_DOMAIN_INVALID,2
CpPagingImgEventId,CP_PAGING_IMG_NO_EVENT,0
CpPagingImgEventId,CP_UE_PAGING_EVENT,1
CpPagingImgEventId,CP_MEAS_EVENT,2
CpPagingImgEventId,CP_RE_SELECT_EVENT,3
CpPagingImgEventRet,BOOT_RET_NO_WAKEUP,0
CpPagingImgEventRet,BOOT_RET_AP_CP_WAKEUP,1
CpPagingImgEventRet,BOOT_RET_AP_WAKEUP,2
CurrentTaiType,NORMAL_TA,0
CurrentTaiType,FORBIDDEN_TA_FOR_REGIONAL_PROVISION_OF_SERVICE,1
CurrentTaiType,FORBIDDEN_TA_FOR_ROAMING,2
CurrentTaiType,BLOCKED_TA,3
DeactiveCause,RRC_PHY_POWER_OFF_DEACTIVE,0
DeactiveCause,RRC_PHY_PSM_DEACTIVE,1
DeactiveCause,RRC_PHY_NORMAL_DEACTIVE,9
EsmMessageType,ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST,193
EsmMessageType,ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_ACCEPT,194
EsmMessageType,ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REJECT,195
EsmMessageType,ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REQUEST,197
EsmMessageType,ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_ACCEPT,198
EsmMessageType,ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REJECT,199
EsmMessageType,MODIFY_EPS_BEARER_CONTEXT_REQUEST,201
EsmMessageType,MODIFY_EPS_BEARER_CONTEXT_ACCEPT,202
EsmMessageType,MODIFY_EPS_BEARER_CONTEXT_REJECT,203
EsmMessageType,DEACTIVATE_EPS_BEARER_CONTEXT_REQUEST,205
EsmMessageType,DEACTIVATE_EPS_BEARER_CONTEXT_ACCEPT,206
EsmMessageType,PDN_CONNECTIVITY_REQUEST,208
EsmMessageType,PDN_CONNECTIVITY_REJECT,209
EsmMessageType,PDN_DISCONNECT_REQUEST,210
EsmMessageType,PDN_DISCONNECT_REJECT,211
EsmMessageType,BEARER_RESOURCE_ALLOCATION_REQUEST,212
EsmMessageType,BEARER_RESOURCE_ALLOCATION_REJECT,213
EsmMessageType,BEARER_RESOURCE_MODIFICATION_REQUEST,214
EsmMessageType,BEARER_RESOURCE_MODIFICATION_REJECT,215
EsmMessageType,ESM_INFORMATION_REQUEST,217
EsmMessageType,ESM_INFORMATION_RESPONSE,218
EsmMessageType,ESM_NOTIFICATION,219
EsmMessageType,ESM_DUMMY_MESSAGE,220
EsmMessageType,ESM_STATUS,232
EsmMessageType,REMOTE_UE_REPORT,233
EsmMessageType,REMOTE_UE_REPORT_RESPONSE,234
EsmMessageType,ESM_DATA_TRANSPORT,235
EsmMessageType,MESSAGE_TYPE_UNDEFINDED,236
IntegrityAlgorithm,EIA0,0
IntegrityAlgorithm,EIA1,1
IntegrityAlgorithm,EIA2,2
IntegrityAlgorithm,EIA3,3
LocationType_r10,LocationInfo_r10_ellipsoid_Point_r10,0
LocationType_r10,LocationInfo_r10_ellipsoidPointWithAltitude_r10,1
LocationType_r10,LocationInfo_r10_ellipsoidPointWithUncertaintyCircle_r11,2
LocationType_r10,LocationInfo_r10_ellipsoidPointWithUncertaintyEllipse_r11,3
LocationType_r10,LocationInfo_r10_ellipsoidPointWithAltitudeAndUncertaintyEllipsoid_r11,4
LocationType_r10,LocationInfo_r10_ellipsoidArc_r11,5
LocationType_r10,LocationInfo_r10_r10_polygon_r11,6
MacResetReason,MAC_REEST,0
MacResetReason,MAC_REEST_RETRY,1
MacResetReason,MAC_EST_RETRY,2
MacResetReason,RETURN_IDLE,3
MacResetReason,RETURN_IDLE_WITH_SUSPEND,4
MacResetReason,MAC_HANDOVER,5
MacResetReason,MAC_HANDOVER_RETRY,6
NmNetIpType,NM_NET_TYPE_INVALID,0
NmNetIpType,NM_NET_TYPE_IPV4,1
NmNetIpType,NM_NET_TYPE_IPV6,2
NmNetIpType,NM_NET_TYPE_IPV4V6,3
NmNetIpType,NM_NET_TYPE_IPV6preparing,4
NmNetIpType,NM_NET_TYPE_IPV4_IPV6preparing,5
NmNetifStatus,NM_NO_NETIF_NOT_DIAL,0
NmNetifStatus,NM_NO_NETIF_OR_DEACTIVATED,1
NmNetifStatus,NM_NETIF_OOS,2
NmNetifStatus,NM_NETIF_ACTIVATED,3
NmNetifStatusChangeCause,NM_STATUS_CHANGE_INVALID,0
NmNetifStatusChangeCause,NM_STATUS_CHANGE_LINK_UP,1
NmNetifStatusChangeCause,NM_STATUS_CHANGE_LINK_UP_IPV4,2
NmNetifStatusChangeCause,NM_STATUS_CHANGE_LINK_UP_IPV6,3
NmNetifStatusChangeCause,NM_STATUS_CHANGE_RA_SUCCESS,4
NmNetifStatusChangeCause,NM_STATUS_CHANGE_RA_TIMEOUT,5
NmNetifStatusChangeCause,NM_STATUS_CHANGE_ENTER_OOS,6
NmNetifStatusChangeCause,NM_STATUS_CHANGE_EXIT_OOS,7
NmNetifStatusChangeCause,NM_STATUS_CHANGE_LINK_DOWN,8
NmNetifStatusChangeCause,NM_STATUS_CHANGE_LINK_DOWN_IPV4,9
NmNetifStatusChangeCause,NM_STATUS_CHANGE_LINK_DOWN_IPV6,10
NmNetifStatusChangeCause,NM_STATUS_CHANGE_OTHERS,11
OsaHibTimerId,OSA_HIB_INVALID_TIMER,0
OsaHibTimerId,PS_HIB_PLMN_PERIOD_OR_OOS_TIMER,1
OsaHibTimerId,PS_HIB_EMM_T3245_TIMER,2
OsaHibTimerId,PS_HIB_EMM_T3247_TIMER,3
OsaHibTimerId,PS_HIB_EMM_T3324_TIMER,4
OsaHibTimerId,PS_HIB_EMM_T3325_TIMER,5
OsaHibTimerId,PS_HIB_EMM_T3346_TIMER,6
OsaHibTimerId,PS_HIB_EMM_T3402_TIMER,7
OsaHibTimerId,PS_HIB_EMM_T3411_TIMER,8
OsaHibTimerId,PS_HIB_EMM_T3412_TIMER,9
OsaHibTimerId,PS_HIB_EMM_T3448_TIMER,10
OsaHibTimerId,PS_HIB_EMM_FORBIDDEN_TA_TIMER_ID,11
OsaHibTimerId,PS_HIB_EMM_BLOCK_PLMN_TIMER_ID,12
OsaHibTimerId,PS_HIB_POWER_ON_DELAY_TIMER,13
OsaHibTimerId,PS_HIB_EMM_EMERGENCY_CAMP_TIMER_ID,14
OsaHibTimerId,PS_HIB_ERRC_T320_TIMER,30
OsaHibTimerId,PS_HIB_ERRC_T325_TIMER,31
OsaHibTimerId,PS_HIB_ERRC_T330_TIMER,32
OsaHibTimerId,PS_HIB_ERRC_BCCH_MOD_TIMER,33
OsaHibTimerId,PS_HIB_ERRC_LOG_INTERVAL_TIMER,34
OsaHibTimerId,PS_HIB_MAX_TIMER,64
OsaHibTimerId,CMS_HIB_POWER_ON_DELAY_TIMER,65
OsaHibTimerId,OSA_HIB_MAX_TIMER,255
PHYCMISIGID,SIG_FAST_PHY_CMI_BASE,2352
PHYCMISIGID,SIG_FAST_PHY_CMI_REQ,2353
PHYCMISIGID,SIG_FAST_PHY_CMI_CNF,2354
PHYCMISIGID,SIG_FAST_PHY_CMI_IND,2355
PHYCMISIGID,SIG_FAST_PHY_CMI_END,2367
PageInfoType,PAGED_BY_STMSI,0
PageInfoType,PAGED_BY_IMSI,1
PhyDci0DebugInfo,DCI0_VALID,0
PhyDci0DebugInfo,DCI0_SPS_REALEASE,1
PhyDci0DebugInfo,DCI0_INVALID_SBFRM,2
PhyDci0DebugInfo,DCI0_INVALID_NOREV,3
PhyDci0DebugInfo,DCI0_INVALID_ULINDEX0,4
PhyDci0DebugInfo,DCI0_INVALID_ULINDEX3,5
PhyDci0DebugInfo,DCI0_INVALID_DAIVALUE,6
PhyDci0DebugInfo,DCI0_INVALID_SPS_NDI0,7
PhyDci0DebugInfo,DCI0_INVALID_LCRBS,8
PhyDci0DebugInfo,DCI0_INVALID_HOPPING,9
PhyDci0DebugInfo,DCI0_INVALID_RETX_MSG3,10
PhyDci0DebugInfo,DCI0_INVALID_MCS,11
PhyDci0DebugInfo,DCI0_INVALID_RETX_BUND,12
PhyDci0DebugInfo,DCI0_INVALID_DATA_UNRDY,13
PhyDci0DebugInfo,DCI0_INVALID_ALLOCTYPE,14
PhyDci0DebugInfo,DCI0_INVALID_PADDING,15
PhyDci0DebugInfo,DCI0_INVALID_PRIORITY,16
PhyDci0DebugInfo,DCI0_INVALID_TBSIZE,17
PhyDci0DebugInfo,DCI0_INVALID_RNTIVALUE,18
PhyDci0DebugInfo,DCI0_INVALID_CSIREQ,19
PhyHwHaltReason,HWHALT_CELLRESEL,0
PhyHwHaltReason,HWHALT_NEXTCELLSEARCH,1
PhyHwHaltReason,HWHALT_STATE_TRANSIT,2
PhyHwHaltReason,HWHALT_RSVD1,3
PhyHwHaltReason,HWHALT_MACRESET,4
PhyHwHaltReason,HWHALT_PHY_ASSERT,5
PhyHwHaltReason,HWHALT_CANCELALL_HWTASK,6
PhyHwHaltReason,HWHALT_RSVD2,7
PhyHwHaltReason,HWHALT_RSVD3,8
PhyHwHaltReason,HWHALT_PHY_RESET,9
PhyHwHaltReason,HWHALT_WIFISTOP,10
PhyHwHaltReason,HWHALT_APIDUMPSTOP,11
PhyHwHaltReason,HWHALT_REASON_TAB_NUM,12
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_POWER_ON,0
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_RSVD,1
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_SLEEP0_WAKEUP,2
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_SLEEP1_WAKEUP,3
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_SLEEP2_WAKEUP,4
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_HIBNT_WAKEUP,5
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_CPOFF_WAKEUP,6
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_CELL_SEARCH,7
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_CELL_RESELECT,8
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_HO_PREPARE,9
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_HO_COMMUPDT,10
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_IDLE_TO_CONN,11
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_MAC_RESET,12
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_CONN_TO_IDLE,13
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_DEACT,14
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_PHYASSERT_RESET,15
PhySchdInitEvent,PHY_SCHD_INIT_EVENT_WIFI_TO_LTE,16
PhyState,PHY_STATE_INIT,1
PhyState,PHY_STATE_IDLE,2
PhyState,PHY_STATE_ICS,3
PhyState,PHY_STATE_CONNECT,4
PlmnType,HPLMN,0
PlmnType,EHPLMN,1
PlmnType,VPLMN,2
PlmnType,UPLMN,3
PlmnType,OPLMN,4
PlmnType,FPLMN,5
PlmnType,APLMN,6
ResetReason_e,RESET_REASON_CLEAR,128
ResetReason_e,RESET_REASON_CPPOR,144
ResetReason_e,RESET_REASON_HARDFAULT,160
ResetReason_e,RESET_REASON_ASSERT,176
ResetReason_e,RESET_REASON_WDT,192
ResetReason_e,RESET_REASON_BAT,208
ResetReason_e,RESET_REASON_TEMP,224
ResetReason_e,RESET_REASON_FOTA,240
RfFemFifoMap,TAB_ACTION_RX_ON,0
RfFemFifoMap,TAB_ACTION_ANTSW_OFF,1
RfFemFifoMap,TAB_ACTION_TX_ON,2
RfFemFifoMap,TAB_ACTION_PA_OFF,3
RfFemFifoMap,TAB_ACTION_PABIAS_0,4
RfFemFifoMap,TAB_ACTION_PABIAS_1,5
RfFemFifoMap,TAB_ACTION_PABIAS_2,6
RfFemFifoMap,TAB_ACTION_PABIAS_3,7
RfFemFifoMap,TAB_ACTION_PABIAS_4,8
RfFemFifoMap,TAB_ACTION_PABIAS_5,9
RfFemFifoMap,TAB_ACTION_PABIAS_6,10
RfFemFifoMap,TAB_ACTION_PABIAS_7,11
SysInfoIndType,SysInfoIndType_normalMIB,0
SysInfoIndType,SysInfoIndType_siUpdtMIB,1
SysInfoIndType,SysInfoIndType_SIB,2
SysInfoIndType,SysInfoIndType_SIB1,3
SysInfoIndType,SysInfoIndType_SIBx,4
UeCategoryType,UeCategory_NB1,1
UeCategoryType,UeCategory_NB2,2
UeCategoryType,UeCategory_M1,17
UeCategoryType,UeCategory_M2,18
UeCategoryType,UeCategory_Cat1Base,32
UeCategoryType,UeCategory_Cat1,33
UeCategoryType,UeCategory_Cat1bis,34
UniLogPhyModuleIdType,UNILOG_PHY_ICS_MODULE,0
UniLogPhyModuleIdType,UNILOG_PHY_ULPATH_MODULE,1
UniLogPhyModuleIdType,UNILOG_PHY_RXDFE_MODULE,2
UniLogPhyModuleIdType,UNILOG_PHY_CE_MODULE,3
UniLogPhyModuleIdType,UNILOG_PHY_CSI_MODULE,4
UniLogPhyModuleIdType,UNILOG_PHY_DEC_MODULE,5
UniLogPhyModuleIdType,UNILOG_PHY_DCH_MODULE,6
UniLogPhyModuleIdType,UNILOG_PHY_CCH_MODULE,7
UniLogPhyModuleIdType,UNILOG_PHY_RSVD_MODULE,8
UniLogPhyModuleIdType,UNILOG_PHY_AXC_MODULE,9
UniLogPhyModuleIdType,UNILOG_PHY_RF_MODULE,10
UniLogPhyModuleIdType,UNILOG_PHY_SCHEDULE_MODULE,11
UniLogPhyModuleIdType,UNILOG_PHY_MAC_MODULE,12
UniLogPhyModuleIdType,UNILOG_PHY_MEAS_MODULE,13
UniLogPhyModuleIdType,UNILOG_PHY_PMU_MODULE,14
UniLogPhyModuleIdType,UNILOG_PHY_PRESYNC_MODULE,15
UniLogPhyModuleIdType,UNILOG_PHY_OTDOA_MODULE,16
UniLogPhyModuleIdType,UNILOG_PHY_TMU_MODULE,17
UniLogPhyModuleIdType,UNILOG_PHY_COMM_MODULE,18
UniLogPhyModuleIdType,UNILOG_PHY_GRAPH_MODULE,19
UniLogPhyModuleIdType,UNILOG_PHY_DCXO_MODULE,20
UniLogPhyModuleIdType,UNILOG_PHY_WIFI_MODULE,21
UpConfigType,UP_CONFIG_INVALID,0
UpConfigType,UP_CONFIG_RELEASE,1
UpConfigType,UP_CONFIG_RELEASE_SUSPEND,2
UpConfigType,UP_CONFIG_NOT_CHANGE,3
UpConfigType,UP_CONFIG_SETUP,4
UpConfigType,UP_CONFIG_SETUP_RESUME,5
UpConfigType,UP_CONFIG_MODIFY,6
WifiScanPriority,WIFISCAN_DATA_PERFERRD,0
WifiScanPriority,WIFISCAN_WIFI_PERFERRD,1
alarmHysteresisRange,THM_HYSTERESIS_10,0
alarmHysteresisRange,THM_HYSTERESIS_20,1
alarmHysteresisRange,THM_HYSTERESIS_30,2
alarmHysteresisRange,THM_HYSTERESIS_40,3
alarmThmThd,THM_THRESHOLD_130,0
alarmThmThd,THM_THRESHOLD_140,1
alarmThmThd,THM_THRESHOLD_150,2
alarmThmThd,THM_THRESHOLD_160,3
alarmVoltThd,VOLT_THRESHOLD_2150,0
alarmVoltThd,VOLT_THRESHOLD_2200,1
alarmVoltThd,VOLT_THRESHOLD_2250,2
alarmVoltThd,VOLT_THRESHOLD_2300,3
alarmVoltThd,VOLT_THRESHOLD_2350,4
alarmVoltThd,VOLT_THRESHOLD_2400,5
alarmVoltThd,VOLT_THRESHOLD_2450,6
alarmVoltThd,VOLT_THRESHOLD_2500,7
alarmVoltThd,VOLT_THRESHOLD_2550,8
alarmVoltThd,VOLT_THRESHOLD_2600,9
alarmVoltThd,VOLT_THRESHOLD_2650,10
alarmVoltThd,VOLT_THRESHOLD_2700,11
alarmVoltThd,VOLT_THRESHOLD_2750,12
alarmVoltThd,VOLT_THRESHOLD_2800,13
alarmVoltThd,VOLT_THRESHOLD_2850,14
alarmVoltThd,VOLT_THRESHOLD_2900,15
alarmVoltThd,VOLT_THRESHOLD_2950,16
alarmVoltThd,VOLT_THRESHOLD_3000,17
alarmVoltThd,VOLT_THRESHOLD_3050,18
alarmVoltThd,VOLT_THRESHOLD_3100,19
alarmVoltThd,VOLT_THRESHOLD_3150,20
alarmVoltThd,VOLT_THRESHOLD_3200,21
alarmVoltThd,VOLT_THRESHOLD_3250,22
alarmVoltThd,VOLT_THRESHOLD_3300,23
rfRxPort,RX_PORT_LNA_LB0,0
rfRxPort,RX_PORT_LNA_LB1,1
rfRxPort,RX_PORT_LNA_LB2,2
rfRxPort,RX_PORT_LNA_LB3,3
rfRxPort,RX_PORT_LNA_LMB,4
rfRxPort,RX_PORT_LNA_MB0,5
rfRxPort,RX_PORT_LNA_MB1,6
rfRxPort,RX_PORT_LNA_MHB0,7
rfRxPort,RX_PORT_LNA_MHB1,8
rfRxPort,RX_PORT_LNA_HB0,9
rfRxPort,RX_PORT_LNA_HB1,10
rfRxPort,RX_PORT_LNA_HB2,11
rfTxPort,TX_PORT_DA_LB0,0
rfTxPort,TX_PORT_DA_LB1,1
rfTxPort,TX_PORT_DA_MHB0,2
rfTxPort,TX_PORT_DA_MHB1,3
slpManWakeSrc_e,WAKEUP_FROM_POR,0
slpManWakeSrc_e,WAKEUP_FROM_RTC,1
slpManWakeSrc_e,WAKEUP_FROM_PAD,2
slpManWakeSrc_e,WAKEUP_FROM_LPUART,3
slpManWakeSrc_e,WAKEUP_FROM_LPUSB,4
slpManWakeSrc_e,WAKEUP_FROM_PWRKEY,5
slpManWakeSrc_e,WAKEUP_FROM_CHARG,6
toFullImageBranch,BRANCH_AP_UNSCHDWAKEUP,1
toFullImageBranch,BRANCH_AP_WAKEUP_PENDING,2
toFullImageBranch,BRANCH_AP_HIBTIME,4
toFullImageBranch,BRANCH_AP_PSWAKEUP,8
toFullImageBranch,BRANCH_AP_HINCNT_WRAP,16
toFullImageBranch,BRANCH_AP_FULLIMG_MSK,31
toFullImageBranch,BRANCH_CP_SLEEPED_AFTER_WFI,32
toFullImageBranch,BRANCH_CP_SLEEPED_BEFORE_WFI,64
toFullImageBranch,BRANCH_MAX_NUM,128
<end>
SigEnums
CAMCMISIGID,SIG_CAM_CMI_BASE,4592
CAMCMISIGID,SIG_CAM_CMI_REQ,4593
CAMCMISIGID,SIG_CAM_CMI_CNF,4594
CAMCMISIGID,SIG_CAM_CMI_IND,4595
CAMCMISIGID,SIG_CAM_CMI_RSP,4596
CAMCMISIGID,SIG_CAM_CMI_SYNC_REQ,4597
CAMCMISIGID,SIG_CAM_CMI_END,4607
OSASIGID,SIG_TIMER_EXPIRY,256
OSASIGID,SIG_HIB_TIMER_EXPIRY,257
OSASIGID,SIG_OSA_FAST_IPC,258
OSASIGID,SIG_CP_PAGING_IMG_EVENT_IND,259
OSASIGID,SIG_OSA_SIG_END,272
OSASIGID,SIG_C2A_FREE_AP_MEMORY_REQ,12546
PSL1SIGID,PS_L1_SIGNAL_BASE,12800
PSL1SIGID,SIG_CERRC_TO_CEPHY_BASE,12800
PSL1SIGID,SIG_CEPHY_INIT_CONFIG_REQ,12801
PSL1SIGID,SIG_CEPHY_CELL_SEARCH_REQ,12802
PSL1SIGID,SIG_CEPHY_NEXT_CELL_SEARCH_REQ,12803
PSL1SIGID,SIG_CEPHY_DRX_CELL_SEARCH_REQ,12804
PSL1SIGID,SIG_CEPHY_DRX_NEXT_CELL_SEARCH_REQ,12805
PSL1SIGID,SIG_CEPHY_SYS_INFO_REQ,12806
PSL1SIGID,SIG_CEPHY_SYS_INFO_STOP_REQ,12807
PSL1SIGID,SIG_CEPHY_NCELL_SYS_INFO_REQ,12808
PSL1SIGID,SIG_CEPHY_NCELL_SYS_INFO_STOP_REQ,12809
PSL1SIGID,SIG_CEPHY_SIB1_CONFIG_REQ,12810
PSL1SIGID,SIG_CEPHY_COMMON_CONFIG_REQ,12811
PSL1SIGID,SIG_CEPHY_PAGING_CONFIG_REQ,12812
PSL1SIGID,SIG_CEPHY_INTRA_FREQ_CONFIG_REQ,12813
PSL1SIGID,SIG_CEPHY_INTER_FREQ_CONFIG_REQ,12814
PSL1SIGID,SIG_CEPHY_CELL_MEAS_REQ,12815
PSL1SIGID,SIG_CEPHY_CELL_MEAS_STOP_REQ,12816
PSL1SIGID,SIG_CEPHY_CELL_RESELECT_REQ,12817
PSL1SIGID,SIG_CEPHY_DEACT_REQ,12818
PSL1SIGID,SIG_CEPHY_DEDICATED_CONFIG_REQ,12819
PSL1SIGID,SIG_CEPHY_LOC_MEAS_REQ,12820
PSL1SIGID,SIG_CEPHY_STOP_LOC_MEAS_REQ,12821
PSL1SIGID,SIG_CEPHY_EARLY_LOC_MEAS_REQ,12822
PSL1SIGID,SIG_CEPHY_GET_STATUS_REQ,12823
PSL1SIGID,SIG_CEPHY_BASIC_CELL_INFO_REQ,12824
PSL1SIGID,SIG_CEPHY_NEXT_BASIC_CELL_INFO_REQ,12825
PSL1SIGID,SIG_CEPHY_BASIC_CELL_INFO_STOP_REQ,12826
PSL1SIGID,SIG_CEPHY_IN_SYNC_CTRL_REQ,12827
PSL1SIGID,SIG_CEPHY_POWER_RECOVER_REQ,12828
PSL1SIGID,SIG_CEPHY_NONANCHOR_NPRACH_FMT2_CONFIG_REQ,12828
PSL1SIGID,SIG_CEPHY_CE_INFO_REQ,12829
PSL1SIGID,SIG_CEPHY_STATIS_OPER_REQ,12830
PSL1SIGID,SIG_CEPHY_SET_MAX_TXPOWER_REQ,12831
PSL1SIGID,SIG_CEPHY_CONN_MEAS_GAP_CONFIG_REQ,12848
PSL1SIGID,SIG_CEPHY_CONN_MEAS_CONFIG_REQ,12849
PSL1SIGID,SIG_CEPHY_HANDOVER_REQ,12850
PSL1SIGID,SIG_CEPHY_HANDOVER_COMMOM_CONFIG_REQ,12851
PSL1SIGID,SIG_CEPHY_CP_WAKEUP_IND,12852
PSL1SIGID,SIG_CEPHY_WIFISCAN_REQ,12853
PSL1SIGID,SIG_CEPHY_STOP_WIFISCAN_REQ,12854
PSL1SIGID,SIG_CEPHY_GPS_DATA_DUMP_REQ,12855
PSL1SIGID,SIG_CERRC_TO_CEPHY_END,13055
PSL1SIGID,SIG_CEPHY_TO_CERRC_BASE,13056
PSL1SIGID,SIG_CEPHY_INIT_CONFIG_CNF,13057
PSL1SIGID,SIG_CEPHY_CELL_SEARCH_CNF,13058
PSL1SIGID,SIG_CEPHY_DRX_CELL_SEARCH_CNF,13059
PSL1SIGID,SIG_CEPHY_SYS_INFO_IND,13060
PSL1SIGID,SIG_CEPHY_NCELL_SYS_INFO_IND,13061
PSL1SIGID,SIG_CEPHY_CELL_MEAS_IND,13062
PSL1SIGID,SIG_CEPHY_DEACT_CNF,13063
PSL1SIGID,SIG_CEPHY_PAGING_IND,13064
PSL1SIGID,SIG_CEPHY_SYNC_STATUS_IND,13065
PSL1SIGID,SIG_CEPHY_CONN_STATIS_INFO_IND,13066
PSL1SIGID,SIG_CEPHY_DATA_INACTIVITY_TIMER_EXPIRY,13067
PSL1SIGID,SIG_CEPHY_RESET_IND,13068
PSL1SIGID,SIG_CEPHY_START_RESELECTION_IND,13069
PSL1SIGID,SIG_CEPHY_LOC_MEAS_CNF,13070
PSL1SIGID,SIG_CEPHY_STOP_LOC_MEAS_CNF,13071
PSL1SIGID,SIG_CEPHY_EARLY_LOC_MEAS_CNF,13072
PSL1SIGID,SIG_CEPHY_GET_STATUS_CNF,13073
PSL1SIGID,SIG_CEPHY_BASIC_CELL_INFO_CNF,13074
PSL1SIGID,SIG_CEPHY_POWER_RECOVER_CNF,13075
PSL1SIGID,SIG_CEPHY_CE_INFO_IND,13076
PSL1SIGID,SIG_CEPHY_STATIS_INFO_IND,13077
PSL1SIGID,SIG_CEPHY_HANDOVER_CNF,13104
PSL1SIGID,SIG_CEPHY_FREE_CFG_MEM_IND,13105
PSL1SIGID,SIG_CEPHY_WAIT_BOUNDARY_IND,13106
PSL1SIGID,SIG_CEPHY_WIFISCAN_CNF,13107
PSL1SIGID,SIG_CEPHY_GPS_DATA_DUMP_CNF,13108
PSL1SIGID,SIG_CEPHY_TO_CERRC_END,13311
PSL1SIGID,SIG_CEUP_TO_CEPHY_BASE,13312
PSL1SIGID,SIG_CEPHY_RANDOM_ACCESS_REQ,13313
PSL1SIGID,SIG_CEPHY_TA_CMD_REQ,13314
PSL1SIGID,SIG_CEPHY_MSG3_DATA_REQ,13315
PSL1SIGID,SIG_CEPHY_CRNTI_CONFIG_REQ,13316
PSL1SIGID,SIG_CEPHY_MAC_RESET_REQ,13317
PSL1SIGID,SIG_CEPHY_DRX_CMD_REQ,13318
PSL1SIGID,SIG_CEPHY_UL_DATA_REQ,13319
PSL1SIGID,SIG_CEPHY_START_TIMER_REQ,13320
PSL1SIGID,SIG_CEPHY_STOP_TIMER_REQ,13321
PSL1SIGID,SIG_CEPHY_SR_REQ,13322
PSL1SIGID,SIG_CEUP_TO_CEPHY_END,13439
PSL1SIGID,SIG_CEPHY_TO_CEUP_BASE,13440
PSL1SIGID,SIG_CEPHY_UL_GRANT_IND,13441
PSL1SIGID,SIG_CEPHY_DL_DATA_IND,13442
PSL1SIGID,SIG_CEPHY_NPDCCH_ORDER_IND,13443
PSL1SIGID,SIG_CEPHY_PDCCH_ORDER_IND,13443
PSL1SIGID,SIG_CEPHY_PREAMBLE_TRANS_MAX_IND,13444
PSL1SIGID,SIG_CEPHY_RECV_RAR_IND,13445
PSL1SIGID,SIG_CEPHY_CRNTI_CR_SUCC_IND,13446
PSL1SIGID,SIG_CEPHY_MAC_RESET_CNF,13447
PSL1SIGID,SIG_CEPHY_TIMER_EXPIRY_IND,13448
PSL1SIGID,SIG_CEPHY_RACH_CANCEL_IND,13449
PSL1SIGID,SIG_CEPHY_SR_TRANS_MAX_IND,13450
PSL1SIGID,SIG_CEPHY_TO_CEUP_END,13567
PSL1SIGID,PS_L1_SIGNAL_END,13823
PSSIGID,PS_SIGNAL_BASE,4096
PSSIGID,SIG_WIN_SIMULATE_INTERNAL_MSG,4097
PSSIGID,SIG_CCM_BASE,4352
PSSIGID,SIG_CCM_CAM_BASE,4608
PSSIGID,SIG_NAS_CAM_SET_PARM_CNF,4609
PSSIGID,SIG_NAS_CAM_GET_PARM_CNF,4610
PSSIGID,SIG_CAM_SIGNAL_QUALITY_IND,4611
PSSIGID,SIG_CAM_LOCAL_TIME_INFO_IND,4612
PSSIGID,SIG_CEMM_TRIGGER_TAU_CNF,4613
PSSIGID,SIG_CEMM_TRIGGER_RRC_RELEASE_CNF,4614
PSSIGID,SIG_CCM_CAM_END,4703
PSSIGID,SIG_CCM_COMM_BASE,4704
PSSIGID,SIG_NAS_CCM_SET_PARM_CNF,4705
PSSIGID,SIG_NAS_CCM_GET_PARM_CNF,4706
PSSIGID,SIG_CERRC_CCM_SET_PARAM_CNF,4707
PSSIGID,SIG_CERRC_CCM_GET_PARAM_CNF,4708
PSSIGID,SIG_CERRC_CCM_EXIT_DEACT_STATE_IND,4709
PSSIGID,SIG_CCM_COMM_END,4735
PSSIGID,SIG_CCM_SIM_BASE,4736
PSSIGID,SIG_CCM_SIM_APP_STARTED_IND,4737
PSSIGID,SIG_CCM_SIM_APP_INIT_CNF,4738
PSSIGID,SIG_CCM_SIM_CARD_REMOVED_IND,4739
PSSIGID,SIG_CCM_SIM_GEN_ACCESS_CNF,4740
PSSIGID,SIG_CCM_SIM_TERMINATE_SESSION_CNF,4741
PSSIGID,SIG_CCM_SIM_READ_DATA_CNF,4742
PSSIGID,SIG_CCM_SIM_UPDATE_DATA_CNF,4743
PSSIGID,SIG_CCM_SIM_PIN_OPERATE_CNF,4744
PSSIGID,SIG_CCM_SIM_OPEN_LOGICAL_CHANNEL_CNF,4745
PSSIGID,SIG_CCM_SIM_CLOSE_LOGICAL_CHANNEL_CNF,4746
PSSIGID,SIG_CCM_SIM_RESTORE_DATA_CNF,4747
PSSIGID,SIG_CCM_SIM_EPS_CONNECTION_MODE_IND,4748
PSSIGID,SIG_CCM_SIM_SET_SIM_WRITE_COUNTER_CNF,4749
PSSIGID,SIG_CCM_SIM_RPM_PARAM_IND,4750
PSSIGID,SIG_CCM_SIM_GEN_LOGICAL_CHANNEL_ACCESS_CNF,4751
PSSIGID,SIG_CCM_SIM_SET_SIM_PRESENCE_DETECT_CNF,4752
PSSIGID,SIG_CCM_SIM_GET_SUBSCRIBER_NUMBER_CNF,4753
PSSIGID,SIG_CCM_SIM_USAT_PROACTIVE_COMMAND_IND,4768
PSSIGID,SIG_CCM_SIM_USAT_TERMINAL_PROFILE_CNF,4769
PSSIGID,SIG_CCM_SIM_USAT_REFRESH_IND,4770
PSSIGID,SIG_CCM_SIM_USAT_SET_UP_EVENT_LIST_IND,4771
PSSIGID,SIG_CCM_SIM_USAT_PROVIDE_LOCAL_INFO_IND,4772
PSSIGID,SIG_CCM_SIM_USAT_OPEN_CHANNEL_IND,4773
PSSIGID,SIG_CCM_SIM_USAT_CLOSE_CHANNEL_IND,4774
PSSIGID,SIG_CCM_SIM_USAT_SEND_DATA_IND,4775
PSSIGID,SIG_CCM_SIM_USAT_RECEIVE_DATA_IND,4776
PSSIGID,SIG_CCM_SIM_USAT_GET_CHANNEL_STATUS_IND,4777
PSSIGID,SIG_CCM_SIM_USAT_PROACTIVE_SESSION_END_IND,4778
PSSIGID,SIG_CCM_SIM_USAT_EVENT_DOWNLOAD_CNF,4779
PSSIGID,SIG_CCM_SIM_USAT_MENU_SELECTION_CNF,4780
PSSIGID,SIG_CCM_SIM_USAT_SMS_PP_DOWNLOAD_CNF,4781
PSSIGID,SIG_CCM_SIM_USAT_MOSM_CONTROL_CNF,4782
PSSIGID,SIG_CCM_SIM_USAT_NETWORK_MEAS_CNF,4784
PSSIGID,SIG_CCM_SIM_USAT_SEND_SM_IND,4785
PSSIGID,SIG_CCM_SIM_USAT_SEND_SM_RSP,4786
PSSIGID,SIG_CCM_SIM_END,4863
PSSIGID,SIG_CCM_REG_BASE,4864
PSSIGID,SIG_CEMMR_REG_CNF,4865
PSSIGID,SIG_CEMMR_DEREG_CNF,4866
PSSIGID,SIG_CEMM_MANUAL_PLMN_SEARCH_CNF,4867
PSSIGID,SIG_CEMM_ABORT_PLMN_SEARCH_CNF,4868
PSSIGID,SIG_CEMMR_REG_IND,4869
PSSIGID,SIG_CEMMR_DEREG_IND,4870
PSSIGID,SIG_CEMMR_NW_SERVICE_STATUS_IND,4871
PSSIGID,SIG_CEMMR_NW_INFO_IND,4872
PSSIGID,SIG_CEMM_PLMN_SET_BAND_FREQ_CNF,4873
PSSIGID,SIG_CEMM_PLMN_GET_BAND_FREQ_CNF,4874
PSSIGID,SIG_CEMMR_POWER_SAVE_CNF,4875
PSSIGID,SIG_CEMMR_POWER_RECOVER_CNF,4876
PSSIGID,SIG_CEMM_OOS_PLMN_SELECT_CNF,4877
PSSIGID,SIG_CEMMR_EMM_TIMER_STATE_IND,4878
PSSIGID,SIG_CEMMR_PSM_CHANGE_IND,4879
PSSIGID,SIG_CEMMR_PLMN_STATE_CHANGE_IND,4880
PSSIGID,SIG_CEMMR_CONN_STATE_CHANGE_IND,4881
PSSIGID,SIG_CEMM_GET_RPLMN_NAME_CNF,4882
PSSIGID,SIG_CEMM_EMER_CAMP_CNF,4883
PSSIGID,SIG_CCM_REG_END,4991
PSSIGID,SIG_CCM_PS_BASE,4992
PSSIGID,SIG_CCM_CESM_SET_EPS_BEARER_CTX_CNF,4993
PSSIGID,SIG_CCM_CESM_GET_EPS_BEARER_CTX_CNF,4994
PSSIGID,SIG_CCM_CESM_ACT_EPS_BEARER_CTX_CNF,4995
PSSIGID,SIG_CCM_CESM_DEL_EPS_BEARER_CTX_CNF,4996
PSSIGID,SIG_CCM_CESM_ACT_EPS_BEARER_CTX_REJ,4997
PSSIGID,SIG_CCM_CESM_DEACT_EPS_BEARER_CTX_CNF,4998
PSSIGID,SIG_CCM_CESM_DEACT_EPS_BEARER_CTX_REJ,4999
PSSIGID,SIG_CCM_CESM_MOD_EPS_BEARER_CTX_CNF,5000
PSSIGID,SIG_CCM_CESM_ACT_DEF_EPS_BEARER_CTX_IND,5001
PSSIGID,SIG_CCM_CESM_ACT_DED_EPS_BEARER_CTX_IND,5002
PSSIGID,SIG_CCM_CESM_MOD_EPS_BEARER_CTX_IND,5003
PSSIGID,SIG_CCM_CESM_DEACT_EPS_BEARER_CTX_IND,5004
PSSIGID,SIG_CCM_CESM_GET_ALL_BEARERS_BASIC_INFO_CNF,5005
PSSIGID,SIG_CCM_CESM_SET_DEFINE_TFT_PARAM_CNF,5006
PSSIGID,SIG_CCM_CESM_DEL_TFT_PARAM_CNF,5007
PSSIGID,SIG_CCM_CESM_SET_DEFINE_EPS_QOS_CNF,5008
PSSIGID,SIG_CCM_CESM_DEL_EPS_QOS_CNF,5009
PSSIGID,SIG_CCM_CESM_ATTACHED_BEARER_CTX_PRESET_CNF,5010
PSSIGID,SIG_CCM_CESM_GET_ATTACHED_BEARER_CTX_CNF,5011
PSSIGID,SIG_CCM_CESM_SET_MT_CP_DATA_REPORT_CFG_CNF,5012
PSSIGID,SIG_CCM_CESM_GET_MT_CP_DATA_REPORT_CFG_CNF,5013
PSSIGID,SIG_CCM_CESM_MT_CP_DATA_IND,5018
PSSIGID,SIG_CCM_CESM_SET_DED_EPS_BEARER_CTX_CNF,5019
PSSIGID,SIG_CCM_CESM_DEL_DED_EPS_BEARER_CTX_CNF,5020
PSSIGID,SIG_CEDR_PS_DATA_PLANE_TRANS_CNF,5021
PSSIGID,SIG_CCM_DL_NON_IP_DATA_IND,5022
PSSIGID,SIG_CCM_CESM_SET_DEFINE_AUTH_CTX_CNF,5023
PSSIGID,SIG_CCM_CESM_SET_PS_DATA_OFF_CNF,5024
PSSIGID,SIG_CCM_CESM_GET_PS_DATA_OFF_CNF,5025
PSSIGID,SIG_CCM_CESM_ABORT_MO_PROC_CNF,5026
PSSIGID,SIG_CCM_L2_DATA_COUNTER_OPTION_CNF,5027
PSSIGID,SIG_L2_CCM_PKG_DATA_TRANS_STATE_IND,5028
PSSIGID,SIG_CCM_L2_GET_TRAFFIC_IDLE_MONITOR_CNF,5029
PSSIGID,SIG_L2_CCM_TRAFFIC_IDLE_MONITOR_IND,5030
PSSIGID,SIG_CCM_PS_END,5119
PSSIGID,SIG_CCM_SMS_BASE,5120
PSSIGID,SIG_CEMM_SMTL_REPORT_IND,5121
PSSIGID,SIG_CEMM_SMTL_DELIVERED_IND,5122
PSSIGID,SIG_CEMM_SMTL_STUS_REPT_IND,5123
PSSIGID,SIG_CEMM_SMTL_SMS_SERVICE_AVAIL_IND,5124
PSSIGID,SIG_CEMM_SMCB_ETWS_CMAS_DATA_IND,5125
PSSIGID,SIG_CCM_SMS_END,5247
PSSIGID,SIG_CCM_DEV_BASE,5248
PSSIGID,SIG_CCM_CESS_LPP_UNIT_DATA_CNF,5249
PSSIGID,SIG_CCM_CESS_LPP_UNIT_DATA_IND,5250
PSSIGID,SIG_CCM_CESS_RESET_POSITION_INFO_IND,5251
PSSIGID,SIG_CCM_CESS_LCS_UNIT_DATA_CNF,5252
PSSIGID,SIG_CCM_CESS_LCS_UNIT_DATA_IND,5253
PSSIGID,SIG_CCM_CESS_GET_CMTLRA_CNF,5254
PSSIGID,SIG_CCM_ERRC_LOC_MEAS_CNF,5255
PSSIGID,SIG_CCM_ERRC_EARLY_LOC_MEAS_CNF,5256
PSSIGID,SIG_CCM_ERRC_LOC_MEAS_IND,5257
PSSIGID,SIG_CCM_ERRC_STOP_LOC_MEAS_CNF,5258
PSSIGID,SIG_CCM_GET_ERRC_PHY_STATUS_CNF,5259
PSSIGID,SIG_CCM_GET_L2_STATUS_CNF,5260
PSSIGID,SIG_CCM_GET_NAS_STATUS_CNF,5261
PSSIGID,SIG_CCM_L2_STATIS_INFO_IND,5262
PSSIGID,SIG_CERRC_CCM_BASIC_CELL_LIST_INFO_CNF,5263
PSSIGID,SIG_CERRC_CCM_ABORT_BASIC_CELL_LIST_INFO_CNF,5264
PSSIGID,SIG_CCM_ERRC_PHY_STATIS_INFO_IND,5265
PSSIGID,SIG_CERRC_CCM_CE_INFO_IND,5266
PSSIGID,SIG_CCM_GET_EMM_EVENT_STATIS_CNF,5267
PSSIGID,SIG_CCM_GET_CERRC_EVENT_STATIS_CNF,5268
PSSIGID,SIG_CERRC_CCM_INIT_CONFIG_CNF,5269
PSSIGID,SIG_CERRC_CCM_UPDATE_CONFIG_IND,5270
PSSIGID,SIG_CEMM_CCM_UPDATE_CONFIG_IND,5271
PSSIGID,SIG_CESM_CCM_UPDATE_CONFIG_IND,5272
PSSIGID,SIG_CEPLMN_CCM_UPDATE_CONFIG_IND,5273
PSSIGID,SIG_CESMS_CCM_UPDATE_CONFIG_IND,5274
PSSIGID,SIG_SIM_CCM_UPDATE_CONFIG_IND,5275
PSSIGID,SIG_CEMM_WIFISCAN_SEARCH_CNF,5276
PSSIGID,SIG_CEMM_WIFISCAN_ABORT_CNF,5277
PSSIGID,SIG_CCM_DEV_END,5375
PSSIGID,SIG_CEMM_BASE,5376
PSSIGID,SIG_CEMMR_REG_REQ,5377
PSSIGID,SIG_CEMMR_DEREG_REQ,5378
PSSIGID,SIG_CEMM_MANUAL_PLMN_SEARCH_REQ,5379
PSSIGID,SIG_CEMM_ABORT_PLMN_SEARCH_REQ,5380
PSSIGID,SIG_CEMM_PLMN_SET_BAND_FREQ_REQ,5381
PSSIGID,SIG_CEMM_PLMN_GET_BAND_FREQ_REQ,5382
PSSIGID,SIG_NAS_CAM_SET_PARM_REQ,5383
PSSIGID,SIG_NAS_CAM_GET_PARM_REQ,5384
PSSIGID,SIG_CEMMR_POWER_SAVE_REQ,5385
PSSIGID,SIG_CEMMR_POWER_RECOVER_REQ,5386
PSSIGID,SIG_NAS_CCM_SET_PARM_REQ,5387
PSSIGID,SIG_NAS_CCM_GET_PARM_REQ,5388
PSSIGID,SIG_CEMM_CCM_DEV_LOC_MEAS_STATE_IND,5389
PSSIGID,SIG_CCM_GET_NAS_STATUS_REQ,5390
PSSIGID,SIG_CEMM_OOS_PLMN_SELECT_REQ,5391
PSSIGID,SIG_CEMM_CCM_SET_OPERATOR_CONFIG,5392
PSSIGID,SIG_CCM_EMM_EVENT_STATIS_REQ,5393
PSSIGID,SIG_NAS_CCM_INIT_CONFIG_REQ,5394
PSSIGID,SIG_CEMM_START_WIFISCAN_REQ,5395
PSSIGID,SIG_CEMM_ABORT_WIFISCAN_REQ,5396
PSSIGID,SIG_CEMM_GET_RPLMN_NAME_REQ,5397
PSSIGID,SIG_CEMM_CAM_TRIGGER_TAU_REQ,5398
PSSIGID,SIG_CEMM_CAM_TRIGGER_RRC_RELEASE_REQ,5399
PSSIGID,SIG_CEMM_EMER_CAMP_REQ,5400
PSSIGID,SIG_CERRC_CONN_CNF,5424
PSSIGID,SIG_CERRC_RESUME_CNF,5425
PSSIGID,SIG_CERRC_RELEASE_CNF,5426
PSSIGID,SIG_CERRC_RELEASE_IND,5427
PSSIGID,SIG_CERRC_NAS_MSG_IND,5428
PSSIGID,SIG_CERRC_PAGE_INFO_IND,5429
PSSIGID,SIG_CERRC_DEACT_CNF,5430
PSSIGID,SIG_CERRC_CELL_LOCK_CNF,5431
PSSIGID,SIG_CERRC_PLMN_SEARCH_CNF,5432
PSSIGID,SIG_CERRC_PLMN_SEARCH_IND,5434
PSSIGID,SIG_CERRC_ABORT_PLMN_SEARCH_CNF,5435
PSSIGID,SIG_CERRC_DRB_INFO_IND,5436
PSSIGID,SIG_CERRC_ACT_CNF,5437
PSSIGID,SIG_CERRC_ACT_IND,5438
PSSIGID,SIG_CERRC_AS_CAPABILITY_IND,5439
PSSIGID,SIG_CERRC_POWER_RECOVER_CNF,5440
PSSIGID,SIG_CERRC_NAS_MSG_TRANS_FAILURE_IND,5441
PSSIGID,SIG_CERRC_NAS_MSG_TRANS_SUCC_IND,5442
PSSIGID,SIG_CERRC_CONN_NAS_UL_MSG_SUSPEND_IND,5443
PSSIGID,SIG_CERRC_CONN_NAS_UL_MSG_RESUME_IND,5444
PSSIGID,SIG_CERRC_BARRING_ALLEVIATION_IND,5445
PSSIGID,SIG_CERRC_SMSCB_ETWS_PRIMARY_DATA_IND,5446
PSSIGID,SIG_CERRC_SMSCB_ETWS_SECOND_DATA_IND,5447
PSSIGID,SIG_CERRC_SMSCB_CMAS_DATA_IND,5448
PSSIGID,SIG_CERRC_ACESS_BAR_DISABLE_IND,5449
PSSIGID,SIG_CERRC_WIFI_SCAN_CNF,5450
PSSIGID,SIG_CERRC_ABORT_WIFI_SCAN_CNF,5451
PSSIGID,SIG_CEMM_SIM_TO_CEMM_BEGIN,5472
PSSIGID,SIG_CEMM_SIM_APP_READY_IND,5473
PSSIGID,SIG_CEMM_SIM_READ_DATA_CNF,5474
PSSIGID,SIG_CEMM_SIM_WRITE_DATA_CNF,5475
PSSIGID,SIG_CEMM_SIM_AUTHENTICATE_CNF,5476
PSSIGID,SIG_CEMM_SIM_REMOVE_IND,5477
PSSIGID,SIG_CEMM_SIM_USAT_REFRESH_IND,5478
PSSIGID,SIG_CEMM_SIM_USAT_IMEI_SV_REQ,5479
PSSIGID,SIG_CEMM_SIM_USAT_REFRESH_FCN_IND,5480
PSSIGID,SIG_CEMM_SIM_TO_CEMM_END,5503
PSSIGID,SIG_CEMM_DR_REESTABLISH_REQ,5504
PSSIGID,SIG_CEMM_END,5631
PSSIGID,SIG_CESM_BASE,5632
PSSIGID,SIG_CCM_CESM_SET_EPS_BEARER_CTX_REQ,5633
PSSIGID,SIG_CCM_CESM_GET_EPS_BEARER_CTX_REQ,5634
PSSIGID,SIG_CCM_CESM_DEL_EPS_BEARER_CTX_REQ,5635
PSSIGID,SIG_CCM_CESM_ACT_EPS_BEARER_CTX_REQ,5636
PSSIGID,SIG_CCM_CESM_DEACT_EPS_BEARER_CTX_REQ,5637
PSSIGID,SIG_CCM_CESM_MOD_EPS_BEARER_CTX_REQ,5638
PSSIGID,SIG_CCM_CESM_GET_ALL_BEARERS_BASIC_INFO_REQ,5639
PSSIGID,SIG_CCM_CESM_SET_DED_EPS_BEARER_CTX_REQ,5640
PSSIGID,SIG_CCM_CESM_DEL_DED_EPS_BEARER_CTX_REQ,5641
PSSIGID,SIG_CCM_CESM_SET_DEFINE_TFT_PARAM_REQ,5642
PSSIGID,SIG_CCM_CESM_DELETE_TFT_PARAM_REQ,5643
PSSIGID,SIG_CCM_CESM_SET_DEFINE_EPS_QOS_REQ,5644
PSSIGID,SIG_CCM_CESM_DELETE_EPS_QOS_REQ,5645
PSSIGID,SIG_CCM_CESM_ATTACHED_BEARER_CTX_PRESET_REQ,5646
PSSIGID,SIG_CCM_CESM_GET_ATTACH_BEARER_CTX_REQ,5647
PSSIGID,SIG_CCM_CESM_SET_MT_CP_DATA_REPORT_CFG_REQ,5648
PSSIGID,SIG_CCM_CESM_GET_MT_CP_DATA_REPORT_CFG_REQ,5649
PSSIGID,SIG_CCM_CESM_SET_DEFINE_AUTH_CTX_REQ,5650
PSSIGID,SIG_CCM_CESM_SET_PS_DATA_OFF_REQ,5651
PSSIGID,SIG_CCM_CESM_GET_PS_DATA_OFF_REQ,5652
PSSIGID,SIG_CCM_CESM_SET_PS_RDS_REQ,5653
PSSIGID,SIG_CCM_CESM_GET_PS_RDS_REQ,5654
PSSIGID,SIG_CCM_CESM_SET_PS_APNCTRL_REQ,5655
PSSIGID,SIG_CCM_CESM_GET_PS_APNCTRL_REQ,5656
PSSIGID,SIG_CCM_CESM_SET_PS_ADD_APNCTRL_REQ,5657
PSSIGID,SIG_CCM_CESM_GET_PS_ADD_APNCTRL_REQ,5658
PSSIGID,SIG_CCM_CESM_ABORT_MO_PROC_REQ,5659
PSSIGID,SIG_CESM_UL_DATA_TRANS_REQ,5792
PSSIGID,SIG_CESM_END,5887
PSSIGID,SIG_CESMS_BASE,5888
PSSIGID,SIG_CEMM_SMS_SEND_MESSAGE_REQ,5889
PSSIGID,SIG_CEMM_SMS_SEND_COMMAND_REQ,5890
PSSIGID,SIG_CEMM_SMS_CONFIG_REQ,5891
PSSIGID,SIG_CEMM_SMS_DELIVER_REPORT_REQ,5892
PSSIGID,SIG_CEMM_SMS_SEND_RP_REPORT_REQ,5893
PSSIGID,SIG_CEMM_SMS_SEND_SMMA_REQ,5894
PSSIGID,SIG_CEDR_SMS_TEST_LOOP_UL_DATA_TRANS_REQ,5895
PSSIGID,SIG_CESMS_END,5968
PSSIGID,SIG_CESS_BASE,5969
PSSIGID,SIG_CCM_CESS_LPP_UNIT_DATA_REQ,5970
PSSIGID,SIG_CCM_CESS_LCS_UNIT_DATA_REQ,5971
PSSIGID,SIG_CCM_CESS_GET_CMTLRA_REQ,5972
PSSIGID,SIG_CESS_END,6143
PSSIGID,SIG_CERRC_BASE,6144
PSSIGID,SIG_CERRC_UE_CONFIG_REQ,6145
PSSIGID,SIG_CERRC_POWER_RECOVER_REQ,6146
PSSIGID,SIG_CERRC_DEACT_REQ,6147
PSSIGID,SIG_CERRC_CELL_LOCK_REQ,6148
PSSIGID,SIG_CERRC_PLMN_SEARCH_REQ,6149
PSSIGID,SIG_CERRC_NEXT_PLMN_SEARCH_REQ,6150
PSSIGID,SIG_CERRC_ABORT_PLMN_SEARCH_REQ,6151
PSSIGID,SIG_CERRC_ACT_REQ,6152
PSSIGID,SIG_CERRC_CONN_REQ,6153
PSSIGID,SIG_CERRC_NAS_MSG_REQ,6154
PSSIGID,SIG_CERRC_RESUME_REQ,6155
PSSIGID,SIG_CERRC_RELEASE_REQ,6156
PSSIGID,SIG_CERRC_NAS_SECURITY_KEY_CNF,6157
PSSIGID,SIG_CERRC_NAS_INFO_UPDATE_REQ,6158
PSSIGID,SIG_CERRC_AUTH_FAIL_IND,6159
PSSIGID,SIG_CERRC_SELECTED_PLMN_IND,6160
PSSIGID,SIG_CERRC_WIFI_SCAN_REQ,6161
PSSIGID,SIG_CERRC_ABORT_WIFI_SCAN_REQ,6162
PSSIGID,SIG_CERRC_LOC_MEAS_REQ,6272
PSSIGID,SIG_CERRC_STOP_LOC_MEAS_REQ,6273
PSSIGID,SIG_CERRC_EARLY_LOC_MEAS_REQ,6274
PSSIGID,SIG_CERRC_CCM_SET_PARAM_REQ,6275
PSSIGID,SIG_CERRC_CCM_GET_PARAM_REQ,6276
PSSIGID,SIG_CCM_GET_ERRC_PHY_STATUS_REQ,6277
PSSIGID,SIG_CERRC_CCM_BASIC_CELL_LIST_INFO_REQ,6278
PSSIGID,SIG_CERRC_CCM_ABORT_BASIC_CELL_LIST_INFO_REQ,6279
PSSIGID,SIG_CCM_ERRC_PHY_STATIS_OPER_REQ,6280
PSSIGID,SIG_CERRC_CCM_SET_CE_INFO_REQ,6281
PSSIGID,SIG_CERRC_CCM_GET_CE_INFO_REQ,6282
PSSIGID,SIG_CERRC_CCM_SET_OPERATOR_CONFIG,6283
PSSIGID,SIG_CCM_ERRC_EVENT_STATIS_REQ,6284
PSSIGID,SIG_CERRC_CCM_INIT_CONFIG_REQ,6285
PSSIGID,SIG_CECP_DATA_IND,6304
PSSIGID,SIG_CECP_DATA_CNF,6305
PSSIGID,SIG_CEPDCP_INTEGRITY_CALC_CNF,6306
PSSIGID,SIG_CEPDCP_INTEGRITY_CHECK_FAIL_IND,6307
PSSIGID,SIG_CERLC_RETRANS_MAX_FAIL_IND,6308
PSSIGID,SIG_CERLC_CONNECT_RELEASE_ACK_CNF,6309
PSSIGID,SIG_CEMAC_RESET_CNF,6310
PSSIGID,SIG_CEMAC_RA_IND,6311
PSSIGID,SIG_CEMAC_CCCH_DATA_IND,6312
PSSIGID,SIG_CEMAC_TA_TIMER_EXPIRY_IND,6313
PSSIGID,SIG_CPDCP_COUNTERCHECK_CNF,6314
PSSIGID,SIG_CEUP_ABORT_IND,6315
PSSIGID,SIG_CEMAC_SR_TRANS_MAX_IND,6316
PSSIGID,SIG_CEMAC_EDT_FALLBACK_IND,6317
PSSIGID,SIG_CEUP_BASE,6400
PSSIGID,SIG_CEDR_BASE,6400
PSSIGID,SIG_CEMAC_CCCH_DATA_REQ,6401
PSSIGID,SIG_CEMAC_RESET_REQ,6402
PSSIGID,SIG_CEMAC_SCHEDULE_REQ_RELEASE_IND,6403
PSSIGID,SIG_CECP_DATA_REQ,6404
PSSIGID,SIG_CEUP_CONFIG_REQ,6405
PSSIGID,SIG_CEUP_REESTABLISH_REQ,6406
PSSIGID,SIG_CEUP_RESUME_REQ,6407
PSSIGID,SIG_CEUP_SUSPEND_REQ,6408
PSSIGID,SIG_CEPDCP_CIPHER_INTEGRITY_CONFIG_REQ,6409
PSSIGID,SIG_CERLC_CONNECT_RELEASE_ACK_REQ,6410
PSSIGID,SIG_CEMAC_MAIN_CONFIG_REQ,6411
PSSIGID,SIG_CEUP_DATA_REQ,6412
PSSIGID,SIG_CEPDCP_COUNTERCHECK_REQ,6413
PSSIGID,SIG_CEPDCP_DL_PKG_CONTINUE_REQ,6414
PSSIGID,SIG_CCM_GET_L2_STATUS_REQ,6415
PSSIGID,SIG_CCM_L2_STATIS_OPER_REQ,6416
PSSIGID,SIG_CCM_L2_NO_MORE_PS_DATA_REQ,6417
PSSIGID,SIG_CCM_L2_DATA_COUNTER_OPTION_REQ,6418
PSSIGID,SIG_CCM_L2_INIT_CONFIG_REQ,6419
PSSIGID,SIG_CCM_L2_SET_TRAFFIC_IDLE_MONITOR_REQ,6420
PSSIGID,SIG_CCM_L2_GET_TRAFFIC_IDLE_MONITOR_REQ,6421
PSSIGID,SIG_CEDR_POWER_RECOVER_DRB_INFO_IND,6464
PSSIGID,SIG_CEDR_FEATURE_SUPPORT_IND,6465
PSSIGID,SIG_CEDR_BEARER_ACTIVATE_IND,6466
PSSIGID,SIG_CEDR_BEARER_MODIFY_IND,6467
PSSIGID,SIG_CEDR_BEARER_DEACTIVATE_IND,6468
PSSIGID,SIG_CEDR_BEARER_SUSPEND_IND,6469
PSSIGID,SIG_CEDR_BEARER_RESUME_IND,6470
PSSIGID,SIG_CEMM_DR_REESTABLISH_RSP,6471
PSSIGID,SIG_CEMM_DR_SERVICE_AVAILABLE_IND,6472
PSSIGID,SIG_CEDR_ACT_TEST_MODE_IND,6473
PSSIGID,SIG_CEDR_DEACT_TEST_MODE_IND,6474
PSSIGID,SIG_CEDR_OPEN_TEST_MODE_IND,6475
PSSIGID,SIG_CEDR_CLOSE_TEST_MODE_IND,6476
PSSIGID,SIG_CEDR_NAS_TEST_LOOP_DATA_REQ,6477
PSSIGID,SIG_CEDR_UL_DATA_REQ,6478
PSSIGID,SIG_CEDR_PDCP_TEST_LOOP_DATA_REQ_ISR,6479
PSSIGID,SIG_CEDR_SMS_TEST_LOOP_DATA_REQ,6480
PSSIGID,SIG_CEDR_PS_DATA_PLANE_TRANS_REQ,6481
PSSIGID,SIG_CEDR_PDCP_DL_NON_IP_DATA_IND_ISR,6482
PSSIGID,SIG_CEDR_SET_NETIF_INFO_REQ,6483
PSSIGID,SIG_CUICC_CTRL_BASE,6656
PSSIGID,SIG_CCM_SIM_INITIALISE,6657
PSSIGID,SIG_CCM_SIM_APP_INIT_REQ,6658
PSSIGID,SIG_CCM_SIM_GEN_ACCESS_REQ,6659
PSSIGID,SIG_CCM_SIM_TERMINATE_SESSION_REQ,6660
PSSIGID,SIG_CCM_SIM_READ_DATA_REQ,6661
PSSIGID,SIG_CCM_SIM_UPDATE_DATA_REQ,6662
PSSIGID,SIG_CCM_SIM_PIN_OPERATE_REQ,6663
PSSIGID,SIG_CCM_SIM_OPEN_LOGICAL_CHANNEL_REQ,6664
PSSIGID,SIG_CCM_SIM_CLOSE_LOGICAL_CHANNEL_REQ,6665
PSSIGID,SIG_CCM_SIM_RESTORE_DATA_REQ,6666
PSSIGID,SIG_CCM_SIM_SET_SIM_SLEEP_REQ,6667
PSSIGID,SIG_CCM_SIM_SET_SIM_WRITE_COUNTER_REQ,6668
PSSIGID,SIG_CCM_SIM_RPM_UPDATE_OM_PARAM_REQ,6669
PSSIGID,SIG_CCM_SIM_READ_RPM_PARAM_REQ,6670
PSSIGID,SIG_CCM_SIM_GEN_LOGICAL_CHANNEL_ACCESS_REQ,6671
PSSIGID,SIG_CCM_SIM_GET_SUBSCRIBER_NUMBER_REQ,6672
PSSIGID,SIG_CCM_SIM_INIT_CONFIG_REQ,6673
PSSIGID,SIG_CCM_SIM_SET_SIM_PARAM_REQ,6674
PSSIGID,SIG_CCM_SIM_HOT_SWAP_NOTIFY_REQ,6675
PSSIGID,SIG_CCM_SIM_ABORT_UICC_POWER_ON_OFF_REQ,6676
PSSIGID,SIG_CCM_SIM_USAT_TERMINAL_PROFILE_REQ,6688
PSSIGID,SIG_CCM_SIM_USAT_EVENT_DOWNLOAD_REQ,6689
PSSIGID,SIG_CCM_SIM_USAT_SMS_PP_DOWNLOAD_REQ,6690
PSSIGID,SIG_CCM_SIM_USAT_MOSM_CONTROL_REQ,6691
PSSIGID,SIG_CCM_SIM_USAT_RSP_BEGIN,6704
PSSIGID,SIG_CCM_SIM_USAT_PROACTIVE_COMMAND_RSP,6705
PSSIGID,SIG_CCM_SIM_USAT_REFRESH_RSP,6706
PSSIGID,SIG_CCM_SIM_USAT_PROVIDE_LOCAL_INFO_RSP,6707
PSSIGID,SIG_CCM_SIM_USAT_SET_UP_EVENT_LIST_RSP,6708
PSSIGID,SIG_CCM_SIM_USAT_OPEN_CHANNEL_RSP,6709
PSSIGID,SIG_CCM_SIM_USAT_CLOSE_CHANNEL_RSP,6710
PSSIGID,SIG_CCM_SIM_USAT_SEND_DATA_RSP,6711
PSSIGID,SIG_CCM_SIM_USAT_RECEIVE_DATA_RSP,6712
PSSIGID,SIG_CCM_SIM_USAT_GET_CHANNEL_STATUS_RSP,6713
PSSIGID,SIG_CCM_SIM_USAT_RSP_END,6719
PSSIGID,SIG_CEMM_SIM_TO_UICCCTRL_BEGIN,6720
PSSIGID,SIG_CEMM_SIM_READ_DATA_REQ,6721
PSSIGID,SIG_CEMM_SIM_WRITE_DATA_REQ,6722
PSSIGID,SIG_CEMM_SIM_LOCAL_INFO_RSP,6723
PSSIGID,SIG_CEMM_SIM_AUTHENTICATE_REQ,6724
PSSIGID,SIG_CEMM_SIM_POWER_REDUCE_IND,6725
PSSIGID,SIG_CEMM_SIM_ECM_STATE_IND,6726
PSSIGID,SIG_CEMM_SIM_USAT_REFRESH_RSP,6727
PSSIGID,SIG_CEMM_SIM_USAT_IMEI_SV_CNF,6728
PSSIGID,SIG_CEMM_SIM_TO_UICCCTRL_END,6735
PSSIGID,SIG_UICC_CTRL_DRV_CARD_INSERTED_IND,6736
PSSIGID,SIG_UICC_CTRL_DRV_CMD_RSP,6737
PSSIGID,SIG_UICC_CTRL_DRV_CARD_REMOVED_IND,6738
PSSIGID,SIG_UICC_CTRL_DRV_ERROR_IND,6739
PSSIGID,SIG_UICC_CTRL_DRV_LARGE_APDU_RSP,6740
PSSIGID,SIG_USAT_PROACTIVE_CMD_TO_FETCH_REQ,6741
PSSIGID,SIG_UICC_QUEUE_END_IND,6742
PSSIGID,SIG_CUICC_DRV_BASE,6912
PSSIGID,SIG_UICC_CTRL_DRV_INIT_CARD,6913
PSSIGID,SIG_UICC_CTRL_DRV_RESET_REQ,6914
PSSIGID,SIG_UICC_CTRL_DRV_CMD_REQ,6915
PSSIGID,SIG_UICC_CTRL_DRV_TERMINATE_REQ,6916
PSSIGID,SIG_UICC_CTRL_DRV_CLOCK_STOP_REQ,6917
PSSIGID,SIG_UICC_PMU_DEEP_SLEEP_DEACTIVATE_IND,6918
PSSIGID,SIG_UICC_CTRL_DRV_LARGE_APDU_REQ,6919
PSSIGID,SIG_PS_END,12287
SIMBIPSTKPSPROXYSIGID,SIG_SIM_BIP_PS_STK_SIGNAL_BASE,2344
SIMBIPSTKPSPROXYSIGID,SIG_SIM_BIP_PS_STK_REQ,2345
SIMBIPSTKPSPROXYSIGID,SIG_SIM_BIP_PS_STK_CNF,2346
SIMBIPSTKPSPROXYSIGID,SIG_SIM_BIP_PS_STK_IND,2347
SIMBIPSTKPSPROXYSIGID,SIG_SIM_BIP_PS_STK_RSP,2348
SIMBIPSTKPSPROXYSIGID,SIG_SIM_BIP_PS_STK_SIGNAL_END,2351
cmsSigId,SIG_CMS_BASE,2304
cmsSigId,AT_CMD_SIGNAL_BASE,2304
cmsSigId,SIG_AT_CMD_STR_REQ,2305
cmsSigId,SIG_AT_CMD_CONTINUE_REQ,2306
cmsSigId,SIG_AT_CMD_DATA_MODE_HS_CNF,2307
cmsSigId,AT_CMD_SIGNAL_END,2319
cmsSigId,APP_SIGNAL_BASE,2320
cmsSigId,SIG_CMS_APPL_REQ,2321
cmsSigId,SIG_CMS_APPL_CNF,2322
cmsSigId,SIG_CMS_APPL_IND,2323
cmsSigId,APP_SIGNAL_END,2335
cmsSigId,SIG_CMS_OTHER_BASE,2368
cmsSigId,SIG_CMS_PHY_WAKEUP_READY_IND,2369
cmsSigId,SIG_CMS_SYN_API_REQ,2370
cmsSigId,SIG_CMS_HIGH_PRI_SYN_API_REQ,2371
cmsSigId,SIG_CMS_BLOCK_API_REQ,2372
cmsSigId,SIG_CMS_NON_BLOCK_API_REQ,2373
cmsSigId,SIG_CMS_APMU_SC_CALIBR_REQ,2374
cmsSigId,SIG_CMS_APMU_SC_CALIBR_CANCEL_REQ,2375
cmsSigId,SIG_CMS_DCXO_NVM_UPDT_REQ,2376
cmsSigId,SIG_CMS_AUXADC_REQ,2377
cmsSigId,SIG_CMS_SEND_UART_STR_REQ,2378
cmsSigId,SIG_CMS_UTC_TIME_REQ,2379
cmsSigId,SIG_CMS_CP_BTOFFSET_UPD_REQ,2380
cmsSigId,SIG_CMS_APMU_COMM_TEST_REQ,2381
cmsSigId,SIG_CMS_CP_PAGING_EVENT_IND_ISR,2382
cmsSigId,SIG_CMS_SIM_HOT_SWAP_IND,2383
cmsSigId,SIG_CMS_PMU_PS_MODEM_START_IND,2384
cmsSigId,SIG_CMS_OTHER_END,2400
cmsSigId,CUSTOMER_SIGNAL_BASE,2432
cmsSigId,SIG_CUSTOMER_MSG_CALLBACK,2433
cmsSigId,SIG_CUSTOMER_REQ,2434
cmsSigId,SIG_CUSTOMER_CNF,2435
cmsSigId,SIG_CUSTOMER_IND,2436
cmsSigId,CUSTOMER_SIGNAL_END,2559
<end>
OptionalSegment
optional_sk_01,E48F88EAB41A625EFF0F63CD289C1FCCC126F679108C1DBC203C6A8060D9F867
<end>
